<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Página de Seraph - General</title><link href="https://ecrespo.github.io/" rel="alternate"></link><link href="https://ecrespo.github.io/feeds/general.atom.xml" rel="self"></link><id>https://ecrespo.github.io/</id><updated>2013-10-28T09:00:00-05:30</updated><subtitle>Data Scientist </subtitle><entry><title>Extracción de datos con Scraperwiki y Python</title><link href="https://ecrespo.github.io/extraccion-de-datos-con-scraperwiki-y-python.html" rel="alternate"></link><published>2013-10-28T09:00:00-05:30</published><updated>2013-10-28T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-10-28:/extraccion-de-datos-con-scraperwiki-y-python.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tag/webscraping.html"&gt;webscraping con Python&lt;/a&gt;, le toca el turno a &lt;a href="https://scraperwiki.com/help/code-in-your-browser/"&gt;Scraperwiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n de Scraperwiki la pueden encontrar &lt;a href="https://classic.scraperwiki.com/docs/python/tutorials/"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aparte de una librer&amp;iacute;a para Python, tiene un sitio interactivo donde puede usar ScraperWiki para Ruby, Php y Python, en el siguiente &lt;a href="https://classic.scraperwiki.com/scrapers/new/python"&gt;enlace&lt;/a&gt; pueden ver la interfaz web …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tag/webscraping.html"&gt;webscraping con Python&lt;/a&gt;, le toca el turno a &lt;a href="https://scraperwiki.com/help/code-in-your-browser/"&gt;Scraperwiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n de Scraperwiki la pueden encontrar &lt;a href="https://classic.scraperwiki.com/docs/python/tutorials/"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aparte de una librer&amp;iacute;a para Python, tiene un sitio interactivo donde puede usar ScraperWiki para Ruby, Php y Python, en el siguiente &lt;a href="https://classic.scraperwiki.com/scrapers/new/python"&gt;enlace&lt;/a&gt; pueden ver la interfaz web de &lt;code&gt;ScraperWiki&lt;/code&gt; para Python.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el &lt;a href="https://github.com/scraperwiki/code-scraper-in-browser-tool/wiki/First-scraper-tutorial-%28Python%29"&gt;tutorial oficial de ScraperWiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la p&amp;aacute;gina web de ScraperWiki para Python:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/extracciondedatosconscraperwikiypython-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;La siguiente imagen muestra la informaci&amp;oacute;n de la salida y ocultamiento del Sol en Venezuela del sitio timeanddate:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/extracciondedatosconscraperwikiypython-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se muestra a continuaci&amp;oacute;n una imagen del c&amp;oacute;digo html de la p&amp;aacute;gina de la imagen anterior, sombreando la parte de dicho c&amp;oacute;digo que nos interesa:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/extracciondedatosconscraperwikiypython-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;ScraperWiki&lt;/code&gt; se ejecuta el comando &lt;code&gt;pip&lt;/code&gt;:&lt;br/&gt;
```python&lt;/p&gt;
&lt;h1 id="pip install scraperwiki"&gt;pip install scraperwiki&lt;/h1&gt;
&lt;p&gt;```
El c&amp;oacute;digo para extraer la informaci&amp;oacute;n se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar scraperwiki"&gt;importar scraperwiki&lt;/h1&gt;
&lt;p&gt;import scraperwiki&lt;/p&gt;
&lt;h1 id="importar lxml.html"&gt;importar lxml.html&lt;/h1&gt;
&lt;p&gt;import lxml.html&lt;/p&gt;
&lt;h1 id="url de la pagina timeanddate de la"&gt;Url de la pagina timeanddate de la&lt;/h1&gt;
&lt;h1 id="info de venezuela."&gt;info de Venezuela.&lt;/h1&gt;
&lt;p&gt;url = "http://www.timeanddate.com/worldclock/astronomy.html?n=58"&lt;/p&gt;
&lt;h1 id="se crea la instancia de la clase scrape pasando el"&gt;se crea la instancia de la clase scrape pasando el&lt;/h1&gt;
&lt;h1 id="url del sitio a extraer la informacion."&gt;url del sitio a extraer la informacion.&lt;/h1&gt;
&lt;p&gt;html = scraperwiki.scrape(url)&lt;/p&gt;
&lt;h1 id="se busca en el codigo html de la pagina"&gt;Se busca en el codigo html de la pagina&lt;/h1&gt;
&lt;p&gt;root = lxml.html.fromstring(html)&lt;/p&gt;
&lt;h1 id="se crea una lista que almacenara los diccionarios conteniendo"&gt;Se crea una lista que almacenara los diccionarios conteniendo&lt;/h1&gt;
&lt;h1 id="la informacion que se necesita"&gt;la informacion que se necesita&lt;/h1&gt;
&lt;p&gt;lista = []&lt;/p&gt;
&lt;h1 id="se busca el tag html tbody y tr."&gt;Se busca el tag html tbody y tr.&lt;/h1&gt;
&lt;h1 id="esto genera una lista con el contenido del tbody.esto"&gt;Esto genera una lista con el contenido del tbody.Esto&lt;/h1&gt;
&lt;h1 id="se recorre dicha lista"&gt;se recorre dicha lista&lt;/h1&gt;
&lt;p&gt;for tr in root.cssselect("tbody tr "):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se selecciona la informacion que aparece en


#el tag html td


tds = tr.cssselect("td")


#Se guarda la informacion en un diccionario


datos = {


    'fecha': tds[0].text_content(),


    'amanecer': tds[1].text_content(),


    'atardecer': tds[2].text_content()


}


#Se agrega los datos a la lista


lista.append(datos)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se muestra la lista en pantalla"&gt;Se muestra la lista en pantalla&lt;/h1&gt;
&lt;p&gt;for i in lista:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print i
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado de la ejecuci&amp;oacute;n del script a continuaci&amp;oacute;n:
```&lt;/p&gt;
&lt;p&gt;{'fecha': '26 Oct 2013', 'atardecer': '17:35', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '27 Oct 2013', 'atardecer': '17:35', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '28 Oct 2013', 'atardecer': '17:35', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '29 Oct 2013', 'atardecer': '17:34', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '30 Oct 2013', 'atardecer': '17:34', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '31 Oct 2013', 'atardecer': '17:34', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '1 Nov 2013', 'atardecer': '17:33', 'amanecer': '05:49'}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Puede revisar m&amp;aacute;s tutoriales sobre ScraperWiki en el siguiente &lt;a href="https://classic.scraperwiki.com/docs/python/tutorials/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category></entry><entry><title>Manejo de sesión en el ORM sqlalchemy</title><link href="https://ecrespo.github.io/manejo-de-sesion-en-el-orm-sqlalchemy.html" rel="alternate"></link><published>2013-09-18T09:00:00-05:30</published><updated>2013-09-18T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-09-18:/manejo-de-sesion-en-el-orm-sqlalchemy.html</id><summary type="html">&lt;p&gt;Hace tiempo explique como crear unas tablas para la base de datos &lt;code&gt;sqlite3&lt;/code&gt;, insertar datos, removerlos y consultarlos,el art&amp;iacute;culo se llama &lt;a href="http://blog.crespo.org.ve/2012/04/abstraccion-del-motor-de-base-de-datos.html"&gt;Abstracci&amp;oacute;n del motor de Base de Datos con el ORM Sqlalchemy y python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Antes de comenzar a probar lo que se escribe en este art&amp;iacute;culo es necesario que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hace tiempo explique como crear unas tablas para la base de datos &lt;code&gt;sqlite3&lt;/code&gt;, insertar datos, removerlos y consultarlos,el art&amp;iacute;culo se llama &lt;a href="http://blog.crespo.org.ve/2012/04/abstraccion-del-motor-de-base-de-datos.html"&gt;Abstracci&amp;oacute;n del motor de Base de Datos con el ORM Sqlalchemy y python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Antes de comenzar a probar lo que se escribe en este art&amp;iacute;culo es necesario que realicen pruebas con el art&amp;iacute;culo mencionado anteriormente para que tengan la base de datos con sus datos listas para ser utilizadas en este art&amp;iacute;culo.&lt;/p&gt;
&lt;p&gt;Ahora se explica como usar unas tablas con sus datos ya creada, creando una sesi&amp;oacute;n para la base de datos.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en un &lt;a href="mapfish.org/doc/tutorials/sqlalchemy.html"&gt;tutorial en ingl&amp;eacute;s de sqlalchemy&lt;/a&gt; o el &lt;a href="http://www.rmunn.com/sqlalchemy-tutorial/tutorial.html"&gt;tutorial paso a paso de sqlalchemy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo primero que se har&amp;aacute; es crear un archivo &lt;code&gt;model.py&lt;/code&gt; que contendr&amp;aacute; el modelo de la base de datos.
```python&lt;/p&gt;
&lt;h1 id="se importa el modulo datetime"&gt;Se importa el m&amp;oacute;dulo datetime&lt;/h1&gt;
&lt;p&gt;import datetime&lt;/p&gt;
&lt;h1 id="se importa schema y tupes de sqlalchemy"&gt;Se importa schema y tupes de sqlalchemy&lt;/h1&gt;
&lt;p&gt;from sqlalchemy import schema, types&lt;/p&gt;
&lt;h1 id="se instancia la clase metadata."&gt;Se instancia la clase MetaData.&lt;/h1&gt;
&lt;p&gt;metadata = schema.MetaData()&lt;/p&gt;
&lt;h1 id="se crea la funcion now que devuelve la hora actual."&gt;Se crea la funci&amp;oacute;n now que devuelve la hora actual.&lt;/h1&gt;
&lt;p&gt;def now():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return datetime.datetime.now()
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se crea la instancia table con los campos de la tabla grupos"&gt;Se crea la instancia table con los campos de la tabla grupos&lt;/h1&gt;
&lt;p&gt;grupos_table = schema.Table('grupos',metadata,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    schema.Column('id',types.Integer,primary_key=True),

    schema.Column('grupo',types.String(300),nullable=False),

    schema.Column('descripcion',types.String(500),nullable=False),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h1 id="se crea la instancia table con los campos de la tabla contactos"&gt;Se crea la instancia table con los campos de la tabla contactos&lt;/h1&gt;
&lt;p&gt;contactos_table = schema.Table('contactos',metadata,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    schema.Column('id',types.Integer,primary_key=True),

    schema.Column('nombre',types.String(100),nullable=False),

    schema.Column('telefono',types.String(11),nullable=False),

    schema.Column('grupo_id',types.Integer,nullable=False),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h1 id="se crea la clase contactos y grupos que heredan de object y solo tienen pass."&gt;Se crea la clase Contactos y Grupos que heredan de object y s&amp;oacute;lo tienen pass.&lt;/h1&gt;
&lt;p&gt;class Contactos(object): pass&lt;/p&gt;
&lt;p&gt;class Grupos(object): pass&lt;/p&gt;
&lt;h1 id="se mapea la clase contactos con la tabla contactos_table"&gt;Se mapea la Clase Contactos con la tabla contactos_table&lt;/h1&gt;
&lt;p&gt;orm.mapper(Contactos, contactos_table)&lt;/p&gt;
&lt;h1 id="se mapea la clase grupos con la tabla grupos_table"&gt;Se mapea la Clase Grupos con la tabla grupos_table&lt;/h1&gt;
&lt;p&gt;orm.mapper(Grupos,grupos_table)
```&lt;/p&gt;
&lt;p&gt;Ya con este c&amp;oacute;digo se logra el mapeo de las tablas existentes con sus campos.&lt;/p&gt;
&lt;p&gt;Ahora se crea un archivo llamado &lt;code&gt;prueba-db.py&lt;/code&gt; que va a realizar la sesi&amp;oacute;n a la base de datos por medio del m&amp;oacute;dulo &lt;code&gt;model.py&lt;/code&gt;  donde se realizar&amp;aacute; unas consultas, inserciones y remociones de datos.
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import model&lt;/p&gt;
&lt;p&gt;from sqlalchemy import orm&lt;/p&gt;
&lt;p&gt;from sqlalchemy import create_engine&lt;/p&gt;
&lt;h1 id="crear un engine y crear todas las tablas necesarias"&gt;Crear un engine y crear todas las tablas necesarias&lt;/h1&gt;
&lt;p&gt;engine = create_engine('sqlite:///tutorial.db', echo=False)&lt;/p&gt;
&lt;p&gt;model.metadata.bind = engine&lt;/p&gt;
&lt;p&gt;model.metadata.create_all()&lt;/p&gt;
&lt;h1 id="configurar la sesion"&gt;Configurar la sesion&lt;/h1&gt;
&lt;p&gt;sm = orm.sessionmaker(bind=engine, autoflush=True, autocommit=False,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;        expire_on_commit=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;session = orm.scoped_session(sm)&lt;/p&gt;
&lt;h1 id="se realiza una consulta a la tabla grupos"&gt;Se realiza una consulta a la tabla grupos&lt;/h1&gt;
&lt;p&gt;print "Consulta inicial de la tabla contactos"&lt;/p&gt;
&lt;p&gt;consulta = session.query(model.Contactos).all()&lt;/p&gt;
&lt;p&gt;for lista in consulta:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print lista.nombre,lista.telefono
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print "--------------------------------"&lt;/p&gt;
&lt;h1 id="agregar un contacto"&gt;Agregar un contacto&lt;/h1&gt;
&lt;p&gt;contacto = model.Contactos()&lt;/p&gt;
&lt;p&gt;contacto.nombre = u"Luisa Gonzalez"&lt;/p&gt;
&lt;p&gt;contacto.telefono = u"04155555555"&lt;/p&gt;
&lt;p&gt;contacto.grupo_id = 2&lt;/p&gt;
&lt;p&gt;session.add(contacto)&lt;/p&gt;
&lt;p&gt;session.flush()&lt;/p&gt;
&lt;p&gt;session.commit()&lt;/p&gt;
&lt;h1 id="se realiza una consulta a la tabla grupos_1"&gt;Se realiza una consulta a la tabla grupos&lt;/h1&gt;
&lt;p&gt;print "Consulta la tabla contactos con el dato incorporado"&lt;/p&gt;
&lt;p&gt;consulta = session.query(model.Contactos).all()&lt;/p&gt;
&lt;p&gt;for lista in consulta:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print lista.nombre,lista.telefono
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print "--------------------------------"&lt;/p&gt;
&lt;h1 id="borrar un contacto"&gt;Borrar un contacto&lt;/h1&gt;
&lt;p&gt;session.delete(contacto)&lt;/p&gt;
&lt;p&gt;session.flush()&lt;/p&gt;
&lt;p&gt;session.commit()&lt;/p&gt;
&lt;h1 id="se realiza una consulta a la tabla grupos_2"&gt;Se realiza una consulta a la tabla grupos&lt;/h1&gt;
&lt;p&gt;print "Consulta la tabla contactos luego de borrar el dato"&lt;/p&gt;
&lt;p&gt;consulta = session.query(model.Contactos).all()&lt;/p&gt;
&lt;p&gt;for lista in consulta:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print lista.nombre,lista.telefono
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print "--------------------------------"
```&lt;/p&gt;
&lt;p&gt;El resultado de ejecutar el script &lt;code&gt;pruebas-db.py&lt;/code&gt; se muestra a continuaci&amp;oacute;n:
```
Consulta inicial de la tabla contactos&lt;/p&gt;
&lt;p&gt;Ernesto Crespo 04155673029&lt;/p&gt;
&lt;p&gt;Pedro Perez 0295212223&lt;/p&gt;
&lt;p&gt;Jhon Doe 04184488484&lt;/p&gt;
&lt;p&gt;Jane Doe 04184488482&lt;/p&gt;
&lt;p&gt;Pepito de los palotes 04184588484&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Consulta la tabla contactos con el dato incorporado&lt;/p&gt;
&lt;p&gt;Ernesto Crespo 04155673029&lt;/p&gt;
&lt;p&gt;Pedro Perez 0295212223&lt;/p&gt;
&lt;p&gt;Jhon Doe 04184488484&lt;/p&gt;
&lt;p&gt;Jane Doe 04184488482&lt;/p&gt;
&lt;p&gt;Pepito de los palotes 04184588484&lt;/p&gt;
&lt;p&gt;Luisa Gonzalez 04155555555&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Consulta la tabla contactos luego de borrar el dato&lt;/p&gt;
&lt;p&gt;Ernesto Crespo 04155673029&lt;/p&gt;
&lt;p&gt;Pedro Perez 0295212223&lt;/p&gt;
&lt;p&gt;Jhon Doe 04184488484&lt;/p&gt;
&lt;p&gt;Jane Doe 04184488482&lt;/p&gt;
&lt;p&gt;Pepito de los palotes 04184588484&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;De esta forma se puede realizar consultas, remociones e inserciones por medio de &lt;code&gt;sqlalchemy&lt;/code&gt; con sesiones.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Python"></category></entry><entry><title>Bajar vídeos de youtube desde Python con Pafy.</title><link href="https://ecrespo.github.io/bajar-videos-de-youtube-desde-python-con-pafy.html" rel="alternate"></link><published>2013-09-01T09:00:00-05:30</published><updated>2013-09-01T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-09-01:/bajar-videos-de-youtube-desde-python-con-pafy.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Pafy&lt;/code&gt; permite realizar busquedas de v&amp;iacute;deos de youtube y descargarlos.&lt;/p&gt;
&lt;p&gt;El sitio de &lt;code&gt;Pafy&lt;/code&gt; se encuentra en &lt;a href="http://np1.github.io/pafy/"&gt;github&lt;/a&gt;, en ese sitio se puede bajar la librer&amp;iacute;a en formato zip, tar.gz o visitar el repositorio git del proyecto.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;Pafy&lt;/code&gt; desde Linux se puede hacer con &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Pafy&lt;/code&gt; permite realizar busquedas de v&amp;iacute;deos de youtube y descargarlos.&lt;/p&gt;
&lt;p&gt;El sitio de &lt;code&gt;Pafy&lt;/code&gt; se encuentra en &lt;a href="http://np1.github.io/pafy/"&gt;github&lt;/a&gt;, en ese sitio se puede bajar la librer&amp;iacute;a en formato zip, tar.gz o visitar el repositorio git del proyecto.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;Pafy&lt;/code&gt; desde Linux se puede hacer con &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;pip install Pafy&lt;/code&gt;
Se ejecuta python:
```python
ernesto@grievous:~$ python&lt;/p&gt;
&lt;p&gt;Python 2.7.3 (default, Jan  2 2013, 13:56:14) &lt;/p&gt;
&lt;p&gt;[GCC 4.7.2] on linux2&lt;/p&gt;
&lt;p&gt;Type "help", "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se importa Pafy:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from pafy import Pafy
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se crea la variable donde se encuentra el url del v&amp;iacute;deo:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;url="http://www.youtube.com/watch?v=YOZjaqHioro"
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se crea la instancia del v&amp;iacute;deo:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;video = Pafy(url)
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se obtiene el t&amp;iacute;tulo del v&amp;iacute;deo:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;video.title&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'Jimmy Fallon, Robin Thicke &amp;amp; The Roots Sing "Blurred Lines" (w/ Classroom Instruments)'
```
El rating y longitud del v&amp;iacute;deo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;video.rating&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;4.9188302785&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;video.length&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;214&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se muestra los metadatos del v&amp;iacute;deo:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;print video&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Title: Jimmy Fallon, Robin Thicke &amp;amp; The Roots Sing "Blurred Lines" (w/ Classroom Instruments)&lt;/p&gt;
&lt;p&gt;Author: latenight&lt;/p&gt;
&lt;p&gt;ID: YOZjaqHioro&lt;/p&gt;
&lt;p&gt;Duration: 00:03:34&lt;/p&gt;
&lt;p&gt;Rating: 4.9188302785&lt;/p&gt;
&lt;p&gt;Views: 10459846&lt;/p&gt;
&lt;p&gt;Thumbnail: https://i1.ytimg.com/vi/YOZjaqHioro/default.jpg&lt;/p&gt;
&lt;p&gt;Keywords: Jimmy Fallon, Late Night With Jimmy Fallon, Late Night, NBC, NBC TV, Television, Funny, Talk Show, comedic, humor, stand-up, snl, Fallon Stand-up, Fallon monologue, latenight, jokes, funny video, interview, variety, comedy sketches, talent, celebrities, music, musical performance, The Roots, video, clip, highlight, talking, youtube, jimmy fallon &amp;amp; robin thicke, robin thicke, blurred lines, classroom instruments, late night music room
```&lt;/p&gt;
&lt;p&gt;Se muestra el t&amp;iacute;tulo del v&amp;iacute;deo, el autor, el ID del v&amp;iacute;deo, la duraci&amp;oacute;n, el rating, la cantidad de veces que se ha visto, entre otra informaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Se muestra todos los formatos del v&amp;iacute;deo y su resoluci&amp;oacute;n:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;streams = video.streams&lt;/p&gt;
&lt;p&gt;for s in streams: print s.resolution, s.extension&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;p&gt;1080x1920 webm&lt;/p&gt;
&lt;p&gt;1080x1920 mp4&lt;/p&gt;
&lt;p&gt;720x1280 webm&lt;/p&gt;
&lt;p&gt;720x1280 mp4&lt;/p&gt;
&lt;p&gt;480x854 webm&lt;/p&gt;
&lt;p&gt;480x854 flv&lt;/p&gt;
&lt;p&gt;360x640 webm&lt;/p&gt;
&lt;p&gt;360x640 flv&lt;/p&gt;
&lt;p&gt;360x640 mp4&lt;/p&gt;
&lt;p&gt;240x400 flv&lt;/p&gt;
&lt;p&gt;320x240 3gp&lt;/p&gt;
&lt;p&gt;144x176 3gp&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se muestran todos los formatos, su resoluci&amp;oacute;n y el url para descargarlo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for s in streams: print s.resolution, s.extension, s.url&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;p&gt;1080x1920 webm http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;1080x1920 mp4 http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;720x1280 webm http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;720x1280 mp4 http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;480x854 webm http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;480x854 flv http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;360x640 webm http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;360x640 flv http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;360x640 mp4 http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;240x400 flv http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;320x240 3gp http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;144x176 3gp http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Obtener la mejor resoluci&amp;oacute;n y su extensi&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;best = video.getbest()&lt;/p&gt;
&lt;p&gt;best.resolution, best.extension&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;('1080x1920', 'webm')&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Mejor resoluci&amp;oacute;n para un formato en espec&amp;iacute;fico:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;best = video.getbest(preftype="mp4")&lt;/p&gt;
&lt;p&gt;best.resolution, best.extension&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;('1080x1920', 'mp4')&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Obtener el url para descargar el v&amp;iacute;deo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;best.url&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;'http://r14---sn-ab5e6nll.c.youtube.com/videoplayback...'&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se descarga el v&amp;iacute;deo con un nombre y en una ruta predefinida:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;myfilename = "/home/ernesto/videos/" + "JimmtFallon" + "." + best.extension&lt;/p&gt;
&lt;p&gt;best.download(progress=False, filepath=myfilename)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;-Downloading 'Jimmy Fallon, Robin Thicke &amp;amp; The Roots Sing "Blurred Lines" (w/ Classroom Instruments).webm' [157,236,345 Bytes]&lt;/p&gt;
&lt;p&gt;Done
```&lt;/p&gt;
&lt;p&gt;Se sale de python:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;exit()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se verifica que el archivo bajo:&lt;/p&gt;
&lt;p&gt;```
ernesto@grievous:~/videos$ ls -l&lt;/p&gt;
&lt;p&gt;total 153556&lt;/p&gt;
&lt;p&gt;-rw-r--r-- 1 ernesto ernesto 157236345 sep  1 11:03 JimmtFallon.webm&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora puede ejecutar su reproductor de v&amp;iacute;deo preferido para ver el v&amp;iacute;deo.  &lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la captura de pantalla del escritorio al momento de reproducir el v&amp;iacute;deo con VLC:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/bajarvideosdeyoutubedesdepythonconpafy-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Si desean ver el v&amp;iacute;deo a continuaci&amp;oacute;n les dejo el enlace de youtube para verlo:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/YOZjaqHioro"&gt;https://youtu.be/YOZjaqHioro&lt;/a&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category></entry><entry><title>Feliz Bicentenario Venezuela!!!</title><link href="https://ecrespo.github.io/feliz-bicentenario-venezuela.html" rel="alternate"></link><published>2011-07-05T09:00:00-05:30</published><updated>2011-07-05T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-05:/feliz-bicentenario-venezuela.html</id><summary type="html">&lt;p&gt;Hoy celebramos 200 a&amp;ntilde;os de la Independencia de Venezuela.&lt;/p&gt;
&lt;p&gt;Google coloca por ese motivo un Doodle aleg&amp;oacute;rico a nuestra Fecha de Independencia:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bicentenario - Google" src="./images/bicentenario1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Cenditel como Homenaje a nuestro Bicentenario ha publicado un protector de pantalla  con fondos aleg&amp;oacute;rico de nuestra Independencia:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bicentenario - Protector de pantalla" src="./images/bicentenario2.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cenditel.gob.ve/node/1173"&gt;Cenditel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Estos fondos de pantalla se podr&amp;aacute;n instalar en Debian …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hoy celebramos 200 a&amp;ntilde;os de la Independencia de Venezuela.&lt;/p&gt;
&lt;p&gt;Google coloca por ese motivo un Doodle aleg&amp;oacute;rico a nuestra Fecha de Independencia:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bicentenario - Google" src="./images/bicentenario1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Cenditel como Homenaje a nuestro Bicentenario ha publicado un protector de pantalla  con fondos aleg&amp;oacute;rico de nuestra Independencia:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bicentenario - Protector de pantalla" src="./images/bicentenario2.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cenditel.gob.ve/node/1173"&gt;Cenditel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Estos fondos de pantalla se podr&amp;aacute;n instalar en Debian, Ubuntu y Canaima.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category></entry><entry><title>Iniciando el blog</title><link href="https://ecrespo.github.io/iniciando-el-blog.html" rel="alternate"></link><published>2008-02-26T07:20:00-05:30</published><updated>2008-02-26T07:20:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-02-26:/iniciando-el-blog.html</id><summary type="html">&lt;p&gt;Saludos a todos. El d&amp;iacute;a de hoy inicio el blog desde blogger.com mientras resuelva el problema del servidor que maneja mi dominio.&lt;/p&gt;
&lt;p&gt;Tengo mucha informaci&amp;oacute;n que subir sobre todo lo que he trabajo ultimamente, solo espero tener el tiempo para ir subiendo al blog la informaci&amp;oacute;n.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Saludos a todos. El d&amp;iacute;a de hoy inicio el blog desde blogger.com mientras resuelva el problema del servidor que maneja mi dominio.&lt;/p&gt;
&lt;p&gt;Tengo mucha informaci&amp;oacute;n que subir sobre todo lo que he trabajo ultimamente, solo espero tener el tiempo para ir subiendo al blog la informaci&amp;oacute;n.&lt;/p&gt;</content></entry></feed>