<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Página de Seraph - Tutorial de Docker</title><link href="https://ecrespo.github.io/" rel="alternate"></link><link href="https://ecrespo.github.io/feeds/tutorial-de-docker.atom.xml" rel="self"></link><id>https://ecrespo.github.io/</id><updated>2016-02-25T09:00:00-05:30</updated><subtitle>Data Scientist </subtitle><entry><title>Crear un registro de imágenes Docker privado.</title><link href="https://ecrespo.github.io/crear-un-registro-de-imagenes-docker-privado.html" rel="alternate"></link><published>2016-02-25T09:00:00-05:30</published><updated>2016-02-25T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-02-25:/crear-un-registro-de-imagenes-docker-privado.html</id><summary type="html">&lt;p&gt;Por ahí he leído toda la infraestructura que es necesaria instalar para tener un sistema de registro privado de imágenes de Docker.&lt;/p&gt;
&lt;p&gt;Pero no, usemos Docker!!!&lt;/p&gt;
&lt;p&gt;Con esta idea se puede bajar una imagen del registro de Docker del siguiente &lt;a href="https://hub.docker.com/_/registry/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Antes de continuar les dejaré la lista de artículos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Por ahí he leído toda la infraestructura que es necesaria instalar para tener un sistema de registro privado de imágenes de Docker.&lt;/p&gt;
&lt;p&gt;Pero no, usemos Docker!!!&lt;/p&gt;
&lt;p&gt;Con esta idea se puede bajar una imagen del registro de Docker del siguiente &lt;a href="https://hub.docker.com/_/registry/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Antes de continuar les dejaré la lista de artículos sobre Docker que he tocado en el blog:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/compartir-imagenes-docker-por-medio-de-archivos-tar.html#compartir-imagenes-docker-por-medio-de-archivos-tar"&gt;Compartir imagenes Docker por medio de archivos tar&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Lo primero que se hará es bajar la imagen Docker del registro, se tiene la versión oficial que es la 2 o la última.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker pull registry:2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ó&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker pull registry
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se inicia el contenedor en el puerto 5000:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker run -d -p &lt;span class="m"&gt;5000&lt;/span&gt;:5000 registry:2 
3c0719746d75f46220328c08209b3e716c8e883ad6f3df7bbae0d70e50656a45
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para verificar que el registro está corriendo se prueba con curl conectarse a localhost al puerto 5000 a v2/:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -i http://localhost:5000/v2/
HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
Content-Length: &lt;span class="m"&gt;2&lt;/span&gt;
Content-Type: application/json&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;utf-8
Docker-Distribution-Api-Version: registry/2.0
X-Content-Type-Options: nosniff
Date: Thu, &lt;span class="m"&gt;25&lt;/span&gt; Feb &lt;span class="m"&gt;2016&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:40:25 GMT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora se puede probar subir una imagen al sistema privado de registro, se prueba con &lt;code&gt;busybox&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Se crea un tag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker tag busybox localhost:5000/busy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se sube la imagen:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker push localhost:5000/busy
The push refers to a repository &lt;span class="o"&gt;[&lt;/span&gt;localhost:5000/busy&lt;span class="o"&gt;]&lt;/span&gt;
5f70bf18a086: Pushed 
9508eff2c687: Pushed 
latest: digest: sha256:b58c00d636b25f40fc7605b1b807af81c1a79a7bbb2179b4753b9dc7e0d1dcd7 size: &lt;span class="m"&gt;711&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para poder acceder de manera insegura al registro privado se tiene que modificar el archivo &lt;code&gt;/etc/default/docker&lt;/code&gt; y agregar la siguiente línea (tomar en cuenta que el contenedor está corriendo en localhost):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DOCKER_OPTS=&amp;quot;--insecure-registry localhost:5000&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se reinicia el servicio de docker:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# service docker restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para más información de las opciones del registro de Docker pueden revisar el siguiente &lt;a href="https://github.com/docker/distribution"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para revisar las imagenes almacenadas en el sistema de registro privado se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://localhost:5000/v2/_catalog
{&amp;quot;repositories&amp;quot;:[&amp;quot;busy&amp;quot;]}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="./images/crearunregistrodeimagenesdockerprivado-1.png"&gt;&lt;/p&gt;
&lt;p&gt;El catalogo muestra que se tiene la imagen busy.&lt;/p&gt;
&lt;p&gt;Se puede crear otra tag de &lt;code&gt;busybox&lt;/code&gt; con nombre &lt;code&gt;busy1&lt;/code&gt; y se sube al servidor:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker tag busybox localhost:5000/busy1

$ docker push localhost:5000/busy1
The push refers to a repository [localhost:5000/busy1]
5f70bf18a086: Mounted from busy 
9508eff2c687: Mounted from busy 
latest: digest: sha256:b58c00d636b25f40fc7605b1b807af81c1a79a7bbb2179b4753b9dc7e0d1dcd7 size: 711
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al volver a consultar el catalogo se tienen dos imagenes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$curl http://localhost:5000/v2/_catalog
{&amp;quot;repositories&amp;quot;:[&amp;quot;busy&amp;quot;,&amp;quot;busy1&amp;quot;]}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cada imagen tiene un manifiesto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$curl http://localhost:5000/v2/busy1/manifests/latest

$ curl http://localhost:5000/v2/busy1/manifests/latest
{
   &amp;quot;schemaVersion&amp;quot;: 1,
   &amp;quot;name&amp;quot;: &amp;quot;busy1&amp;quot;,
   &amp;quot;tag&amp;quot;: &amp;quot;latest&amp;quot;,
   &amp;quot;architecture&amp;quot;: &amp;quot;amd64&amp;quot;,
   &amp;quot;fsLayers&amp;quot;: [
      {
         &amp;quot;blobSum&amp;quot;: &amp;quot;sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4&amp;quot;
      },
      {
         &amp;quot;blobSum&amp;quot;: &amp;quot;sha256:d7e8ec85c5abc60edf74bd4b8d68049350127e4102a084f22060f7321eac3586&amp;quot;
      }
   ],
   &amp;quot;history&amp;quot;: [
      {
         &amp;quot;v1Compatibility&amp;quot;: &amp;quot;{\&amp;quot;architecture\&amp;quot;:\&amp;quot;amd64\&amp;quot;,\&amp;quot;config\&amp;quot;:{\&amp;quot;Hostname\&amp;quot;:\&amp;quot;ea7fe68f39fd\&amp;quot;,\&amp;quot;Domainname\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;User\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;Memory\&amp;quot;:0,\&amp;quot;MemorySwap\&amp;quot;:0,\&amp;quot;CpuShares\&amp;quot;:0,\&amp;quot;Cpuset\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;AttachStdin\&amp;quot;:false,\&amp;quot;AttachStdout\&amp;quot;:false,\&amp;quot;AttachStderr\&amp;quot;:false,\&amp;quot;PortSpecs\&amp;quot;:null,\&amp;quot;ExposedPorts\&amp;quot;:null,\&amp;quot;Tty\&amp;quot;:false,\&amp;quot;OpenStdin\&amp;quot;:false,\&amp;quot;StdinOnce\&amp;quot;:false,\&amp;quot;Env\&amp;quot;:null,\&amp;quot;Cmd\&amp;quot;:[\&amp;quot;sh\&amp;quot;],\&amp;quot;Image\&amp;quot;:\&amp;quot;5c5fb281b01ee091a0fffa5b4a4c7fb7d358e7fb7c49c263d6d7a4e35d199fd0\&amp;quot;,\&amp;quot;Volumes\&amp;quot;:null,\&amp;quot;WorkingDir\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;Entrypoint\&amp;quot;:null,\&amp;quot;NetworkDisabled\&amp;quot;:false,\&amp;quot;MacAddress\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;OnBuild\&amp;quot;:null,\&amp;quot;Labels\&amp;quot;:null},\&amp;quot;container\&amp;quot;:\&amp;quot;f63d86f7f85b3207532327b6e484bf09d8a0d1a0979cf7bdce1bd5268666fdd3\&amp;quot;,\&amp;quot;container_config\&amp;quot;:{\&amp;quot;Hostname\&amp;quot;:\&amp;quot;ea7fe68f39fd\&amp;quot;,\&amp;quot;Domainname\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;User\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;Memory\&amp;quot;:0,\&amp;quot;MemorySwap\&amp;quot;:0,\&amp;quot;CpuShares\&amp;quot;:0,\&amp;quot;Cpuset\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;AttachStdin\&amp;quot;:false,\&amp;quot;AttachStdout\&amp;quot;:false,\&amp;quot;AttachStderr\&amp;quot;:false,\&amp;quot;PortSpecs\&amp;quot;:null,\&amp;quot;ExposedPorts\&amp;quot;:null,\&amp;quot;Tty\&amp;quot;:false,\&amp;quot;OpenStdin\&amp;quot;:false,\&amp;quot;StdinOnce\&amp;quot;:false,\&amp;quot;Env\&amp;quot;:null,\&amp;quot;Cmd\&amp;quot;:[\&amp;quot;/bin/sh\&amp;quot;,\&amp;quot;-c\&amp;quot;,\&amp;quot;#(nop) CMD [\\\&amp;quot;sh\\\&amp;quot;]\&amp;quot;],\&amp;quot;Image\&amp;quot;:\&amp;quot;5c5fb281b01ee091a0fffa5b4a4c7fb7d358e7fb7c49c263d6d7a4e35d199fd0\&amp;quot;,\&amp;quot;Volumes\&amp;quot;:null,\&amp;quot;WorkingDir\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;Entrypoint\&amp;quot;:null,\&amp;quot;NetworkDisabled\&amp;quot;:false,\&amp;quot;MacAddress\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;OnBuild\&amp;quot;:null,\&amp;quot;Labels\&amp;quot;:null},\&amp;quot;created\&amp;quot;:\&amp;quot;2015-12-08T18:31:51.481948133Z\&amp;quot;,\&amp;quot;docker_version\&amp;quot;:\&amp;quot;1.8.3\&amp;quot;,\&amp;quot;id\&amp;quot;:\&amp;quot;a997905216262e309de0dccc4c8ed39ee475a9d0e6b3f3c3a40b4ccf28af9b15\&amp;quot;,\&amp;quot;os\&amp;quot;:\&amp;quot;linux\&amp;quot;,\&amp;quot;parent\&amp;quot;:\&amp;quot;3d030bd4e34f5ed0b05de21a56503d80881fb1464afdde1c06a2b39c59260a22\&amp;quot;}&amp;quot;
      },
      {
         &amp;quot;v1Compatibility&amp;quot;: &amp;quot;{\&amp;quot;id\&amp;quot;:\&amp;quot;3d030bd4e34f5ed0b05de21a56503d80881fb1464afdde1c06a2b39c59260a22\&amp;quot;,\&amp;quot;created\&amp;quot;:\&amp;quot;2015-12-08T18:31:50.979824705Z\&amp;quot;,\&amp;quot;container_config\&amp;quot;:{\&amp;quot;Cmd\&amp;quot;:[\&amp;quot;/bin/sh -c #(nop) ADD file:c295b0748bf05d4527f500b62ff269bfd0037f7515f1375d2ee474b830bad382 in /\&amp;quot;]}}&amp;quot;
      }
   ],
   &amp;quot;signatures&amp;quot;: [
      {
         &amp;quot;header&amp;quot;: {
            &amp;quot;jwk&amp;quot;: {
               &amp;quot;crv&amp;quot;: &amp;quot;P-256&amp;quot;,
               &amp;quot;kid&amp;quot;: &amp;quot;FO3A:MIWL:JVJW:5O62:N7RK:GZXL:ACGC:WRUQ:PM4P:FVDL:PBAQ:X3IG&amp;quot;,
               &amp;quot;kty&amp;quot;: &amp;quot;EC&amp;quot;,
               &amp;quot;x&amp;quot;: &amp;quot;8eTT88WGU5NVLCrp5qGa4cO_nCo00e1L-eNLKF_0eeE&amp;quot;,
               &amp;quot;y&amp;quot;: &amp;quot;QwgEYEkJDxz4vihT3Mc6OitZ9uraF_TwbfpvZm72dJ8&amp;quot;
            },
            &amp;quot;alg&amp;quot;: &amp;quot;ES256&amp;quot;
         },
         &amp;quot;signature&amp;quot;: &amp;quot;LkmuupCii3CgtJKkKbasvkKc1jo7V0rZP9k4EFXuVMQL08-7n8s8TWzNB_Wx8oTv4qMb-Bpqhv3A2jdemu6eSA&amp;quot;,
         &amp;quot;protected&amp;quot;: &amp;quot;eyJmb3JtYXRMZW5ndGgiOjIyMTQsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxNi0wMi0yNVQxOToxNjoxNFoifQ&amp;quot;
      }
   ]
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para listar todos los tags de una imagen se tiene:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:5000/v2/busy1/tags/list
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;busy1&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]}&lt;/span&gt;
$ curl http://localhost:5000/v2/busy/tags/list
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;busy&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se puede hacer un pull del sistema de registro local para verificar que la imagen está actualizada:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker pull localhost:5000/busy1
Using default tag: latest
latest: Pulling from busy1
Digest: sha256:b58c00d636b25f40fc7605b1b807af81c1a79a7bbb2179b4753b9dc7e0d1dcd7
Status: Image is up to date &lt;span class="k"&gt;for&lt;/span&gt; localhost:5000/busy1:latest
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para más información del despliegue del sistema de registro pueden revisar el siguiente &lt;a href="https://docs.docker.com/registry/deploying/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Docker"></category></entry><entry><title>Compartir imágenes Docker por medio de archivos tar</title><link href="https://ecrespo.github.io/compartir-imagenes-docker-por-medio-de-archivos-tar.html" rel="alternate"></link><published>2016-02-24T10:00:00-05:30</published><updated>2016-02-24T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-02-24:/compartir-imagenes-docker-por-medio-de-archivos-tar.html</id><summary type="html">&lt;p&gt;Uno de los puntos más importantes a la hora de trabajar con Docker es el compartir imágenes Docker aparte de usar Docker Hub.&lt;/p&gt;
&lt;p&gt;Se tiene la exportación e importación de imágenes como opción almacenando y extrayendo a partir de archivos &lt;code&gt;tar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se tienen los artículos anteriores sobre Docker:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker …&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Uno de los puntos más importantes a la hora de trabajar con Docker es el compartir imágenes Docker aparte de usar Docker Hub.&lt;/p&gt;
&lt;p&gt;Se tiene la exportación e importación de imágenes como opción almacenando y extrayendo a partir de archivos &lt;code&gt;tar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se tienen los artículos anteriores sobre Docker:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Lo primero es ver que contenedores se tienen ejecutándose en el equipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker ps 
CONTAINER ID        IMAGE                     COMMAND                  CREATED             STATUS              PORTS                                                                    NAMES
b0c1163d1668        gitlab/gitlab-ce:latest   &amp;quot;/assets/wrapper&amp;quot;        4 weeks ago         Up 4 hours          0.0.0.0:80-&amp;gt;80/tcp, 0.0.0.0:443-&amp;gt;443/tcp, 0.0.0.0:8022-&amp;gt;22/tcp           gitlab
b4d3c96f6dc9        jenkins                   &amp;quot;/bin/tini -- /usr/lo&amp;quot;   4 weeks ago         Up 4 hours          0.0.0.0:8080-&amp;gt;8080/tcp, 0.0.0.0:50000-&amp;gt;50000/tcp, 0.0.0.0:8122-&amp;gt;22/tcp   jenkins
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se tienen dos contenedores ejecutándose, uno de gitlab y otro de jenkins.&lt;/p&gt;
&lt;p&gt;Se realizará respaldo del contenedor con gitlab usando el comando &lt;code&gt;docker export&lt;/code&gt;, pasando el id del contenedor de gitlab que es b0c1163d1668:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker export b0c1163d1668 &amp;gt; gitlab.tar
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al ejecutar &lt;code&gt;ls&lt;/code&gt; se tiene el archivo &lt;code&gt;gitlab.tar&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l
total 2201820
-rw-r--r-- 1 ernesto ernesto 1409662976 feb 24 16:15 gitlab.tar
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para usar la imagen a partir del archivo &lt;code&gt;tar&lt;/code&gt; se importa la imagen: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gitlab2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;gitlab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;
&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;020&lt;/span&gt;&lt;span class="n"&gt;ea830b267080ce092f42b1b0f1a2d520b21b8a3393696f5271f42e4bd8d79&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El nombre de la imagen es gitlab2, ahora se listan las imágenes que se tienen en el equipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker images &lt;span class="p"&gt;|&lt;/span&gt; grep gitlab
gitlab2                        latest              020ea830b267        About a minute ago   &lt;span class="m"&gt;1&lt;/span&gt;.344 GB
gitlab/gitlab-ce               latest              db1c29be1030        &lt;span class="m"&gt;6&lt;/span&gt; weeks ago          &lt;span class="m"&gt;1&lt;/span&gt;.326 GB
sameersbn/gitlab               latest              47d53c4a820a        &lt;span class="m"&gt;10&lt;/span&gt; weeks ago         &lt;span class="m"&gt;675&lt;/span&gt;.7 MB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si se quiere compartir la imagen con alguien, se puede subir el archivo &lt;code&gt;tar&lt;/code&gt; a un servidor web y de ahí se puede bajar.  &lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Docker"></category></entry><entry><title>Importar un contenedor Docker en Python.</title><link href="https://ecrespo.github.io/importar-un-contenedor-docker-en-python.html" rel="alternate"></link><published>2016-02-24T09:00:00-05:30</published><updated>2016-02-24T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-02-24:/importar-un-contenedor-docker-en-python.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="./images/importaruncontenedordockerenpython-1.png"&gt;&lt;/p&gt;
&lt;p&gt;En los artículos anteriores sobre Docker se ha tocado el manejo de imágenes, ahora se explicará como importar un contenedor desde Python, este artículo se basa en el &lt;a href="https://blog.deepgram.com/import-a-docker-container-in-python/"&gt;siguiente artículo en inglés&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian …&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="./images/importaruncontenedordockerenpython-1.png"&gt;&lt;/p&gt;
&lt;p&gt;En los artículos anteriores sobre Docker se ha tocado el manejo de imágenes, ahora se explicará como importar un contenedor desde Python, este artículo se basa en el &lt;a href="https://blog.deepgram.com/import-a-docker-container-in-python/"&gt;siguiente artículo en inglés&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se tiene el módulo &lt;a href="https://github.com/deepgram/sidomo"&gt;Sidomo&lt;/a&gt; que permite manejar contenedores.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;sidomo&lt;/code&gt; se ejecuta el comando &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install -e git+https://github.com/deepgram/sidomo.git#egg=sidomo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se baja la imagen Docker de Ubuntu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull ubuntu
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El código de ejemplo del sitio de &lt;code&gt;sidomo&lt;/code&gt; se encuentra en el siguiente &lt;a href="https://github.com/deepgram/sidomo/blob/master/examples/hello_world.py"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La modificación del código es el siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sidomo&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;


    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Just say it.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;


    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;


        &lt;span class="s1"&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


        &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;


    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;


        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;


            &lt;span class="s1"&gt;&amp;#39;echo Hola Mundo  &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;


        &lt;span class="p"&gt;):&lt;/span&gt;


            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;



&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;


    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;desde un contenedor Docker&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;


        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al ejecutar el código se tiene:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;ejemplo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; 
&lt;span class="n"&gt;Hola&lt;/span&gt; &lt;span class="n"&gt;Mundo&lt;/span&gt; &lt;span class="n"&gt;desde&lt;/span&gt; &lt;span class="n"&gt;un&lt;/span&gt; &lt;span class="n"&gt;contenedor&lt;/span&gt; &lt;span class="n"&gt;Docker&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="Docker"></category></entry><entry><title>Docker en Docker (DinD)</title><link href="https://ecrespo.github.io/docker-en-docker-dind.html" rel="alternate"></link><published>2016-01-27T09:00:00-05:30</published><updated>2016-01-27T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-01-27:/docker-en-docker-dind.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="./images/dockerendockerdind-1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Docker en Docker es simplemente correr un Docker dentro de un contenedor Docker.&lt;/p&gt;
&lt;p&gt;El sitio de  DinD lo pueden visitar en el siguiente &lt;a href="https://github.com/jpetazzo/dind"&gt;enlace&lt;/a&gt;, la imagen docker oficial de DinD la pueden ver en el siguiente &lt;a href="https://hub.docker.com/_/docker/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo primero que hay que hacer es correr docker con unas opciones:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="./images/dockerendockerdind-1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Docker en Docker es simplemente correr un Docker dentro de un contenedor Docker.&lt;/p&gt;
&lt;p&gt;El sitio de  DinD lo pueden visitar en el siguiente &lt;a href="https://github.com/jpetazzo/dind"&gt;enlace&lt;/a&gt;, la imagen docker oficial de DinD la pueden ver en el siguiente &lt;a href="https://hub.docker.com/_/docker/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo primero que hay que hacer es correr docker con unas opciones:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --rm --privileged -t -i -e LOG=file jpetazzo/dind
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El modo &lt;code&gt;privileged&lt;/code&gt;  permite negociar algunas características del sistema de archivo.&lt;/p&gt;
&lt;p&gt;Luego de iniciar el contenedor se ejecuta  otro contenedor esta vez de &lt;code&gt;busyox&lt;/code&gt; que devuelve "Hello new World!".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run busybox echo &amp;quot;Hello New World!&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A continuación se muestra una figura del resultado de la ejecución.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/dockerendockerdind-2.png"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Docker"></category></entry><entry><title>Ejecutando micros servicios con docker usando docker-compose</title><link href="https://ecrespo.github.io/ejecutando-micros-servicios-con-docker-usando-docker-compose.html" rel="alternate"></link><published>2016-01-26T09:00:00-05:30</published><updated>2016-01-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-01-26:/ejecutando-micros-servicios-con-docker-usando-docker-compose.html</id><summary type="html">&lt;p&gt;Continuando con los artículos de docker, en este caso se hablará de iniciar dos contenedores donde uno le da servicio al otro, un contenedor tendrá el servicio de redis y el otro será una aplicación web sencilla hecha en flask.&lt;/p&gt;
&lt;p&gt;Para poder lograr el manejo de varios contenedores existe docker-compose …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los artículos de docker, en este caso se hablará de iniciar dos contenedores donde uno le da servicio al otro, un contenedor tendrá el servicio de redis y el otro será una aplicación web sencilla hecha en flask.&lt;/p&gt;
&lt;p&gt;Para poder lograr el manejo de varios contenedores existe docker-compose, para el caso de este artículo el &lt;a href="https://docs.docker.com/compose/gettingstarted/"&gt;enlace&lt;/a&gt; sobre docker-compose en flask lo pueden revisar en el siguiente enlace.&lt;/p&gt;
&lt;p&gt;Los artículos anteriores que tratan el tema de docker son:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html#instalar-docker-en-debian-jessie"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html#uso-de-docker-en-debian-jessie-parte-2"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html#crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile"&gt;Crear una imagen Docker con un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html#iniciando-django-usando-docker"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html#instalar-gitlab-por-medio-de-docker"&gt;Iniciando Gitlab por medio de Docker&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Primero se crea el directorio de trabajo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir flask
cd flask 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se crea el archivo &lt;code&gt;app.py&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Se importa flask y redis&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;redis&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Redis&lt;/span&gt;

&lt;span class="c1"&gt;#Se crea la instancia de flask &lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Se crea la instancia de redis&lt;/span&gt;
&lt;span class="n"&gt;redis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Redis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;redis&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;#Se crea la función hello definiendo la ruta del decorador.&lt;/span&gt;
&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;#Se incrementa el valor de la variable hits de redis&lt;/span&gt;
    &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;#Se retorna un mensaje con el valor actual de la variable en redis&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello is me &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;#Se ejecuta la aplicación en modo debug&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se crea el archivo &lt;code&gt;requerimientos.txt&lt;/code&gt;, donde se define que se requiere instalar flask y redis:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;flask
redis
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se crea el archivo &lt;code&gt;Dockerfile&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM python:2.7
WORKDIR /code
ADD requerimientos.txt /code/
RUN pip install -r requerimientos.txt
ADD . /code
CMD python app.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se construye la imagen web:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker build -t web .
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se definen los servicios por medio del archivo &lt;code&gt;docker-compose.yml&lt;/code&gt; que contiene lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5000:5000&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;.:/&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;
  &lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;
&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Descripción del archivo &lt;code&gt;docker-compose.yml&lt;/code&gt;:
web: Define la imagen llamada web para ser construída, maneja los puertos 5000 local y externo será 5000 también, además se define el directorio volume llamado code, al final para web se define links que hace llamado a la imagen redis.
redis: Se define la imagen redis.
Construir y correr la aplicación con compose:&lt;/p&gt;
&lt;p&gt;Desde el directorio donde se encuentran los archivos ejecutar :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose up
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En la siguiente figura se muestra que está corriendo la aplicación:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/ejecutandomicrosservicioscondockerusandodockercompose-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Al abrir el navegador en en localhost:5000 se tiene lo que muestra la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/ejecutandomicrosservicioscondockerusandodockercompose-2.png"&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar &lt;code&gt;docker ps&lt;/code&gt; se tienen los contenedores que se están ejecutando:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/ejecutandomicrosservicioscondockerusandodockercompose-3.png"&gt;&lt;/p&gt;
&lt;p&gt;También se tiene para &lt;code&gt;docker-compose&lt;/code&gt; el comando &lt;code&gt;ps&lt;/code&gt; y se obtiene lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/ejecutandomicrosservicioscondockerusandodockercompose-4.png"&gt;&lt;/p&gt;
&lt;p&gt;El resultado es simplificado con respecto a &lt;code&gt;docker ps&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para detener los procesos o la ejecución del servicio se usa el comando stop de docker-compose:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-componse stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con docker compose se puede ejecutar multiples imagenes y usarlas en una aplicación principal, esto logra el concepto de microservicios.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Docker"></category></entry><entry><title>Instalar Gitlab por medio de Docker</title><link href="https://ecrespo.github.io/instalar-gitlab-por-medio-de-docker.html" rel="alternate"></link><published>2016-01-20T09:00:00-05:30</published><updated>2016-01-20T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-01-20:/instalar-gitlab-por-medio-de-docker.html</id><summary type="html">&lt;p&gt;Lo artículos anteriores de docker son los siguientes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html#instalar-docker-en-debian-jessie"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html#uso-de-docker-en-debian-jessie-parte-2"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html#crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile"&gt;Crear una imagen Docker con un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html#iniciando-django-usando-docker"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el &lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;primer artículo de uso de Docker en …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lo artículos anteriores de docker son los siguientes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html#instalar-docker-en-debian-jessie"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html#uso-de-docker-en-debian-jessie-parte-2"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html#crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile"&gt;Crear una imagen Docker con un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html#iniciando-django-usando-docker"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el &lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;primer artículo de uso de Docker en Debian Jessie&lt;/a&gt; se muestra al final como usar SonarQube por medio de Docker con dos instancias de la misma imagen.&lt;/p&gt;
&lt;p&gt;En esté artículo se bajará la imagen Docker de Gitlab edición comunitaria. El sitio donde se aloja está en el siguiente &lt;a href="https://hub.docker.com/r/gitlab/gitlab-ce/"&gt;enlace&lt;/a&gt; y la documentación  en inglés a la cual se basa esté artículo está en el siguiente enlace.&lt;/p&gt;
&lt;p&gt;Se ejecutará el &lt;code&gt;gitlab-ce&lt;/code&gt; que se bajará del sitio de dockerhub. El comando es el siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --detach  --hostname pruebasgitlab --publish 443:443 --publish 80:80 --publish 22:22  --name gitlab   --restart always --volume /srv/gitlab/config:/etc/gitlab --volume /srv/gitlab/logs:/var/log/gitlab --volume /srv/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:latest
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;hostname: El nombre del host es pruebasgitlab.  &lt;/li&gt;
&lt;li&gt;publish: publica el puerto 443, 80 y 22 de la instancia del contenedor.  &lt;/li&gt;
&lt;li&gt;name: El nombre de la imagen es gitlab.  &lt;/li&gt;
&lt;li&gt;restart always: Siempre levanta la instancia.  &lt;/li&gt;
&lt;li&gt;volume: Se define unos volumenes (son directorios del host anfitrion que se montan en los contenedores), en este caso son 3 directorios.  &lt;/li&gt;
&lt;li&gt;gitlab/gitlab-ce:latest: Se trae la última versión de la imagen de gitlab-ce.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El contenedor de Gitlab usa volumenes montados para datos persistentes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/srv/gitlab/data&lt;/code&gt; se monta en &lt;code&gt;/var/opt/gitlab&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/srv/gitlab/logs&lt;/code&gt; se monta en &lt;code&gt;/var/log/gitlab&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/srv/gitlab/config&lt;/code&gt; se monta en &lt;code&gt;/etc/gitlab&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para configurar el Gitlab se tiene un archivo que se tiene en el equipo &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para acceder a la configuración se puede iniciar bash en el contenedor que está corriendo, esto permite navegar en la estructura de directorio y ejecutar cualquier programa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker exec -it gitlab /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora se puede editar el archivo &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;También se puede editar con el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker exec -it gitlab vi /etc/gitlab/gitla.rb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para habilitar configuraciones de https se puede revisar el siguiente &lt;a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#enable-https"&gt;enlace&lt;/a&gt;, o las configuraciones de smtp en este &lt;a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/smtp.md"&gt;otro&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para reiniciar el gitlab luego del cambio de configuraciones se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;doker restart gitlab
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A continuación se muestra una captura de pantalla del gitlab en funcionamiento desde Docker:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalargitlabpormediodedocker-1.png"&gt;&lt;/p&gt;
&lt;p&gt;En este artículo se muestra como acceder a varios puertos como el 80,443 y el 22 el cual permite conectarse a dicho contenedor de manera remota.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Ubuntu"></category><category term="Linux"></category><category term="Gitlab"></category><category term="Docker"></category></entry></feed>