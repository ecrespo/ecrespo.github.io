<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Página de Seraph - Tutorial de Docker</title><link href="https://ecrespo.github.io/" rel="alternate"></link><link href="https://ecrespo.github.io/feeds/tutorial-de-docker.atom.xml" rel="self"></link><id>https://ecrespo.github.io/</id><updated>2016-05-24T09:00:00-04:00</updated><subtitle>Data Scientist </subtitle><entry><title>Crear un contenedor Docker como entorno de desarrollo para sails.js</title><link href="https://ecrespo.github.io/crear-un-contenedor-docker-como-entorno-de-desarrollo-para-sailsjs.html" rel="alternate"></link><published>2016-05-24T09:00:00-04:00</published><updated>2016-05-24T09:00:00-04:00</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-05-24:/crear-un-contenedor-docker-como-entorno-de-desarrollo-para-sailsjs.html</id><summary type="html">&lt;p&gt;Este artículo toca el tema de usar un contenedor Docker como entorno de Desarrollo.&lt;/p&gt;
&lt;p&gt;La idea es tener las dependencias del proyecto en el contenedor y poder desarrollar la aplicación fuera del contenedor por medio de persistencia como un volumen.&lt;/p&gt;
&lt;p&gt;Este artículo se basa en la info del siguiente repositorio …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este artículo toca el tema de usar un contenedor Docker como entorno de Desarrollo.&lt;/p&gt;
&lt;p&gt;La idea es tener las dependencias del proyecto en el contenedor y poder desarrollar la aplicación fuera del contenedor por medio de persistencia como un volumen.&lt;/p&gt;
&lt;p&gt;Este artículo se basa en la info del siguiente repositorio en &lt;a href="https://github.com/mwhahaha/docker-sails-test"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En este artículo se usa el framework sails.js, pero  no en profundidad, simplemente crear el proyecto y ejecutarlo. Para más información pueden revisar el siguiente &lt;a href="https://code.tutsplus.com/tutorials/introduction-to-sailsjs--net-35390"&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Los artículos anteriores sobre Docker son: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/compartir-imagenes-docker-por-medio-de-archivos-tar.html#compartir-imagenes-docker-por-medio-de-archivos-tar"&gt;Compartir imagenes Docker por medio de archivos tar&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-registro-de-imagenes-docker-privado.html#crear-un-registro-de-imagenes-docker-privado"&gt;Crear un registro de imagenes Docker privado.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-anaconda-desde-un-contenedor-docker.html#usar-anaconda-desde-un-contenedor-docker"&gt;Usar Anaconda desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs.html#crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs"&gt;Crear un entorno de Integración y Despligue continue con Docker para node.js.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-jupyter-notebook-desde-un-contenedor-de-docker.html#usar-jupyter-notebook-desde-un-contenedor-de-docker"&gt;Usar Jupyter Notebook desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-doctest-con-un-contenedor-docker.html#ejecutar-una-prueba-de-doctest-con-un-contenedor-docker"&gt;Ejecutar una prueba de doctest con un contenedor Docker&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker.html#ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker"&gt;Ejecutar una prueba de unittest en Python con un contenedor Docker.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/montar-una-plataforma-como-servicio-paas-con-dokku-docker.html#montar-una-plataforma-como-servicio-paas-con-dokku-docker"&gt;Montar una Plataforma como servicio (PaaS) con Dokku (docker)&lt;/a&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-machine.html#uso-de-docker-machine"&gt;Uso de docker-machine.  &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/proveer-un-cluster-con-docker-swarm-y-docker-machine.html#proveer-un-cluster-con-docker-swarm-y-docker-machine"&gt;Proveer un cluster con docker swarm y docker-machine.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-jenkins-por-medio-de-docker-y-crear-una-imagen-docker-de-jenkins.html#instalar-jenkins-por-medio-de-docker-y-crear-una-imagen-docker-de-jenkins"&gt;Instalar Jenkins por medio de Docker y crear una imagen Docker de Jenkins&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/automatizar-la-construccion-de-imagenes-docker-con-github.html#automatizar-la-construccion-de-imagenes-docker-con-github"&gt;Automatizar la construcción de imágenes Docker con github.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-para-mongodb-3.html#crear-una-imagen-docker-para-mongodb-3"&gt;Crear una imagen Docker para MongoDB3.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se tiene un directorio &lt;code&gt;ProyectoNuevo&lt;/code&gt; el cual es el proyecto &lt;code&gt;sails.js&lt;/code&gt; creado con el comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sails new ProyectoNuevo

ProyectoNuevo
├── api
│   ├── controllers
│   ├── models
│   ├── policies
│   │   └── sessionAuth.js
│   ├── responses
│   │   ├── badRequest.js
│   │   ├── created.js
│   │   ├── forbidden.js
│   │   ├── notFound.js
│   │   ├── ok.js
│   │   └── serverError.js
│   └── services
├── app.js
├── assets
│   ├── favicon.ico
│   ├── images
│   ├── js
│   │   └── dependencies
│   │       └── sails.io.js
│   ├── robots.txt
│   ├── styles
│   │   └── importer.less
│   └── templates
├── config
│   ├── blueprints.js
│   ├── bootstrap.js
│   ├── connections.js
│   ├── cors.js
│   ├── csrf.js
│   ├── env
│   │   ├── development.js
│   │   └── production.js
│   ├── globals.js
│   ├── http.js
│   ├── i18n.js
│   ├── locales
│   │   ├── de.json
│   │   ├── en.json
│   │   ├── es.json
│   │   ├── fr.json
│   │   └── _README.md
│   ├── local.js
│   ├── log.js
│   ├── models.js
│   ├── policies.js
│   ├── routes.js
│   ├── session.js
│   ├── sockets.js
│   └── views.js
├── Gruntfile.js
├── package.json
├── README.md
├── tasks
│   ├── config
│   │   ├── clean.js
│   │   ├── coffee.js
│   │   ├── concat.js
│   │   ├── copy.js
│   │   ├── cssmin.js
│   │   ├── jst.js
│   │   ├── less.js
│   │   ├── sails-linker.js
│   │   ├── sync.js
│   │   ├── uglify.js
│   │   └── watch.js
│   ├── pipeline.js
│   ├── README.md
│   └── register
│       ├── build.js
│       ├── buildProd.js
│       ├── compileAssets.js
│       ├── default.js
│       ├── linkAssetsBuild.js
│       ├── linkAssetsBuildProd.js
│       ├── linkAssets.js
│       ├── prod.js
│       └── syncAssets.js
└── views
    ├── 403.ejs
    ├── 404.ejs
    ├── 500.ejs
    ├── homepage.ejs
    └── layout.ejs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El directorio donde se encuentra el proyecto se llama &lt;code&gt;sailsjs&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sailsjs
├── Dockerfile
├── ProyectoNuevo
└── run.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El contenido de ProyectoNuevo se mostró arriba.&lt;/p&gt;
&lt;p&gt;El archivo run.sh contiene un script para levantar sails por medio de sails lift:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; /app/ProyectoNuevo
sails lift
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;El archivo Dockerfile contiene lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#Se usa la imagen de nodejs de google
FROM google/nodejs
#El mantenedor de la imagen
MAINTAINER Ernesto Crespo &amp;lt;ecrespo@gmail.com&amp;gt;
#El usuario del contenedor
USER root
#Se define el directorio de trabajo
WORKDIR /app
#Se copia el ProyectoNuevo a /app/
ADD ProyectoNuevo /app/
#Se instala sails en el contenedor
RUN npm -g install sails
#Se copia el script run.sh al directorio de trabajo
ADD run.sh /app/run.sh
#Se coloca el script con permiso de ejecución
RUN chmod a+x /app/run.sh

#Se expone el puerto 8080
EXPOSE 8080
#Se ejecuta el script
CMD [&amp;quot;/app/run.sh&amp;quot;] 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para construir la imagen se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker build -t sails-prueba . 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para correr la imagen se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -p 8080:8080 -v $PWD:/app  -ti sails-prueba
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A continuación se muestra una imagen luego de la ejecución del comando:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/crearuncontenedordockercomoentornodedesarrolloparasailsjs-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Se listan los contenedores:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/crearuncontenedordockercomoentornodedesarrolloparasailsjs-2.png"&gt;&lt;/p&gt;
&lt;p&gt;Se está ejecutando el contenedor de sails junto al de mongodb ya explicado en el capítulo &lt;a href="http://blog.crespo.org.ve/2016/05/crear-una-imagen-docker-para-mongodb-3.html"&gt;anterior&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ahora se abre el navegador en localhost al puerto 8080:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/crearuncontenedordockercomoentornodedesarrolloparasailsjs-3.png"&gt;&lt;/p&gt;
&lt;p&gt;La idea al colocar el directorio persistente es que se pueda ir modificando el directorio del proyecto, levantar el contenedor sin necesidad de reconstruir la imagen del mismo. &lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Docker"></category><category term="Sails.js"></category></entry><entry><title>Crear una imagen Docker para MongoDB 3</title><link href="https://ecrespo.github.io/crear-una-imagen-docker-para-mongodb-3.html" rel="alternate"></link><published>2016-05-22T09:00:00-04:00</published><updated>2016-05-22T09:00:00-04:00</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-05-22:/crear-una-imagen-docker-para-mongodb-3.html</id><summary type="html">&lt;p&gt;En Docker hub, la gente de MongoDB tiene una imagen oficial para varias versiones de &lt;a href="https://hub.docker.com/_/mongo/"&gt;mongo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pero para los que quieren crear y probar imágenes les dejo &lt;a href="https://hub.docker.com/r/ecrespo/mongo3-custom/"&gt;una imagen creada a partir de Debian&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Los artículos anteriores sobre Docker son:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian …&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;En Docker hub, la gente de MongoDB tiene una imagen oficial para varias versiones de &lt;a href="https://hub.docker.com/_/mongo/"&gt;mongo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pero para los que quieren crear y probar imágenes les dejo &lt;a href="https://hub.docker.com/r/ecrespo/mongo3-custom/"&gt;una imagen creada a partir de Debian&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Los artículos anteriores sobre Docker son:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/compartir-imagenes-docker-por-medio-de-archivos-tar.html#compartir-imagenes-docker-por-medio-de-archivos-tar"&gt;Compartir imagenes Docker por medio de archivos tar&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-registro-de-imagenes-docker-privado.html#crear-un-registro-de-imagenes-docker-privado"&gt;Crear un registro de imagenes Docker privado.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-anaconda-desde-un-contenedor-docker.html#usar-anaconda-desde-un-contenedor-docker"&gt;Usar Anaconda desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs.html#crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs"&gt;Crear un entorno de Integración y Despligue continue con Docker para node.js.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-jupyter-notebook-desde-un-contenedor-de-docker.html#usar-jupyter-notebook-desde-un-contenedor-de-docker"&gt;Usar Jupyter Notebook desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-doctest-con-un-contenedor-docker.html#ejecutar-una-prueba-de-doctest-con-un-contenedor-docker"&gt;Ejecutar una prueba de doctest con un contenedor Docker&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker.html#ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker"&gt;Ejecutar una prueba de unittest en Python con un contenedor Docker.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/montar-una-plataforma-como-servicio-paas-con-dokku-docker.html#montar-una-plataforma-como-servicio-paas-con-dokku-docker"&gt;Montar una Plataforma como servicio (PaaS) con Dokku (docker)&lt;/a&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-machine.html#uso-de-docker-machine"&gt;Uso de docker-machine.  &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/proveer-un-cluster-con-docker-swarm-y-docker-machine.html#proveer-un-cluster-con-docker-swarm-y-docker-machine"&gt;Proveer un cluster con docker swarm y docker-machine.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-jenkins-por-medio-de-docker-y-crear-una-imagen-docker-de-jenkins.html#instalar-jenkins-por-medio-de-docker-y-crear-una-imagen-docker-de-jenkins"&gt;Instalar Jenkins por medio de Docker y crear una imagen Docker de Jenkins&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/automatizar-la-construccion-de-imagenes-docker-con-github.html#automatizar-la-construccion-de-imagenes-docker-con-github"&gt;Automatizar la construcción de imágenes Docker con github.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;El archivo Dockerfile se encuentra en github en el siguiente &lt;a href="https://github.com/ecrespo/mongodb3"&gt;enlace&lt;/a&gt;. Su contenido es el siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM debian
MAINTAINER Ernesto Crespo &amp;lt;ecrespo@gmail.com&amp;gt; 
USER root
WORKDIR /code
RUN echo &amp;quot;deb http://ftp.debian.org/debian jessie main contrib non-free&amp;quot; &amp;gt; /etc/apt/sources.list
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
RUN echo &amp;quot;deb http://repo.mongodb.org/apt/debian wheezy/mongodb-org/3.0 main&amp;quot; |  tee /etc/apt/sources.list.d/mongodb-org-3.0.list
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y mongodb-org
RUN apt-get install -y sudo vim less mc locate
RUN apt-get clean
RUN mkdir -p /data/db
RUN echo &amp;quot;mongodb ALL=NOPASSWD: ALL&amp;quot; &amp;gt;&amp;gt; /etc/sudoers

EXPOSE 27017
ENTRYPOINT [&amp;quot;/usr/bin/mongod&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para construir la imagen se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker build -t &amp;lt;nombreImagen&amp;gt; .
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En este caso fue:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker build -t mongo3-custom .
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para quien quiera bajar la imagen ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull ecrespo/mongo3-custom
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para correr un contenedor usando persistencia de datos en &lt;code&gt;/srv/data/db&lt;/code&gt; se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -p 27017:27017 -v /srv/data/db:/data/db:rw --name mongo_instance_001 -d mongo-custom3 --smallfiles
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para ver el log del contenedor se ejecuta &lt;code&gt;docker logs &amp;lt;idcontenedor|nombrecontenedor&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/crearunaimagendockerparamongodb3-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Para ver el contenedor corriendo se ejecuta &lt;code&gt;docker ps&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/crearunaimagendockerparamongodb3-2.png"&gt;&lt;/p&gt;
&lt;p&gt;Para acceder a mongo se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mongo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="./images/crearunaimagendockerparamongodb3-3.png"&gt;&lt;/p&gt;
&lt;p&gt;Para ver la información del contenedor se ejecuta el comando &lt;code&gt;docker inspect&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker inspect mongo_instance_001
[
    {
        &amp;quot;Id&amp;quot;: &amp;quot;d981736358770a23b5123ca1e6490c35bacf40ecf571b265bf98296420b97131&amp;quot;,
        &amp;quot;Created&amp;quot;: &amp;quot;2016-05-22T00:01:48.049849422Z&amp;quot;,
        &amp;quot;Path&amp;quot;: &amp;quot;/usr/bin/mongod&amp;quot;,
        &amp;quot;Args&amp;quot;: [
            &amp;quot;--smallfiles&amp;quot;
        ],
        &amp;quot;State&amp;quot;: {
            &amp;quot;Status&amp;quot;: &amp;quot;running&amp;quot;,
            &amp;quot;Running&amp;quot;: true,
            &amp;quot;Paused&amp;quot;: false,
            &amp;quot;Restarting&amp;quot;: false,
            &amp;quot;OOMKilled&amp;quot;: false,
            &amp;quot;Dead&amp;quot;: false,
            &amp;quot;Pid&amp;quot;: 3984,
            &amp;quot;ExitCode&amp;quot;: 0,
            &amp;quot;Error&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;StartedAt&amp;quot;: &amp;quot;2016-05-22T17:47:36.658752846Z&amp;quot;,
            &amp;quot;FinishedAt&amp;quot;: &amp;quot;2016-05-22T16:53:45.66317329Z&amp;quot;
        },
        &amp;quot;Image&amp;quot;: &amp;quot;sha256:a17c12c4f560fbc39e8e30bf561c76d86947e2926112bc87d12744e63be7eaa7&amp;quot;,
        &amp;quot;ResolvConfPath&amp;quot;: &amp;quot;/var/lib/docker/containers/d981736358770a23b5123ca1e6490c35bacf40ecf571b265bf98296420b97131/resolv.conf&amp;quot;,
        &amp;quot;HostnamePath&amp;quot;: &amp;quot;/var/lib/docker/containers/d981736358770a23b5123ca1e6490c35bacf40ecf571b265bf98296420b97131/hostname&amp;quot;,
        &amp;quot;HostsPath&amp;quot;: &amp;quot;/var/lib/docker/containers/d981736358770a23b5123ca1e6490c35bacf40ecf571b265bf98296420b97131/hosts&amp;quot;,
        &amp;quot;LogPath&amp;quot;: &amp;quot;/var/lib/docker/containers/d981736358770a23b5123ca1e6490c35bacf40ecf571b265bf98296420b97131/d981736358770a23b5123ca1e6490c35bacf40ecf571b265bf98296420b97131-json.log&amp;quot;,
        &amp;quot;Name&amp;quot;: &amp;quot;/mongo_instance_001&amp;quot;,
        &amp;quot;RestartCount&amp;quot;: 0,
        &amp;quot;Driver&amp;quot;: &amp;quot;aufs&amp;quot;,
        &amp;quot;MountLabel&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;ProcessLabel&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;AppArmorProfile&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;ExecIDs&amp;quot;: null,
        &amp;quot;HostConfig&amp;quot;: {
            &amp;quot;Binds&amp;quot;: [
                &amp;quot;/srv/data/db:/data/db:rw&amp;quot;
            ],
            &amp;quot;ContainerIDFile&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;LogConfig&amp;quot;: {
                &amp;quot;Type&amp;quot;: &amp;quot;json-file&amp;quot;,
                &amp;quot;Config&amp;quot;: {}
            },
            &amp;quot;NetworkMode&amp;quot;: &amp;quot;default&amp;quot;,
            &amp;quot;PortBindings&amp;quot;: {
                &amp;quot;27017/tcp&amp;quot;: [
                    {
                        &amp;quot;HostIp&amp;quot;: &amp;quot;&amp;quot;,
                        &amp;quot;HostPort&amp;quot;: &amp;quot;27017&amp;quot;
                    }
                ]
            },
            &amp;quot;RestartPolicy&amp;quot;: {
                &amp;quot;Name&amp;quot;: &amp;quot;no&amp;quot;,
                &amp;quot;MaximumRetryCount&amp;quot;: 0
            },
            &amp;quot;AutoRemove&amp;quot;: false,
            &amp;quot;VolumeDriver&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;VolumesFrom&amp;quot;: null,
            &amp;quot;CapAdd&amp;quot;: null,
            &amp;quot;CapDrop&amp;quot;: null,
            &amp;quot;Dns&amp;quot;: [],
            &amp;quot;DnsOptions&amp;quot;: [],
            &amp;quot;DnsSearch&amp;quot;: [],
            &amp;quot;ExtraHosts&amp;quot;: null,
            &amp;quot;GroupAdd&amp;quot;: null,
            &amp;quot;IpcMode&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;Cgroup&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;Links&amp;quot;: null,
            &amp;quot;OomScoreAdj&amp;quot;: 0,
            &amp;quot;PidMode&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;Privileged&amp;quot;: false,
            &amp;quot;PublishAllPorts&amp;quot;: false,
            &amp;quot;ReadonlyRootfs&amp;quot;: false,
            &amp;quot;SecurityOpt&amp;quot;: null,
            &amp;quot;StorageOpt&amp;quot;: null,
            &amp;quot;UTSMode&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;UsernsMode&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;ShmSize&amp;quot;: 67108864,
            &amp;quot;ConsoleSize&amp;quot;: [
                0,
                0
            ],
            &amp;quot;Isolation&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;CpuShares&amp;quot;: 0,
            &amp;quot;Memory&amp;quot;: 0,
            &amp;quot;CgroupParent&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;BlkioWeight&amp;quot;: 0,
            &amp;quot;BlkioWeightDevice&amp;quot;: null,
            &amp;quot;BlkioDeviceReadBps&amp;quot;: null,
            &amp;quot;BlkioDeviceWriteBps&amp;quot;: null,
            &amp;quot;BlkioDeviceReadIOps&amp;quot;: null,
            &amp;quot;BlkioDeviceWriteIOps&amp;quot;: null,
            &amp;quot;CpuPeriod&amp;quot;: 0,
            &amp;quot;CpuQuota&amp;quot;: 0,
            &amp;quot;CpusetCpus&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;CpusetMems&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;Devices&amp;quot;: [],
            &amp;quot;DiskQuota&amp;quot;: 0,
            &amp;quot;KernelMemory&amp;quot;: 0,
            &amp;quot;MemoryReservation&amp;quot;: 0,
            &amp;quot;MemorySwap&amp;quot;: 0,
            &amp;quot;MemorySwappiness&amp;quot;: -1,
            &amp;quot;OomKillDisable&amp;quot;: false,
            &amp;quot;PidsLimit&amp;quot;: 0,
            &amp;quot;Ulimits&amp;quot;: null,
            &amp;quot;CpuCount&amp;quot;: 0,
            &amp;quot;CpuPercent&amp;quot;: 0,
            &amp;quot;BlkioIOps&amp;quot;: 0,
            &amp;quot;BlkioBps&amp;quot;: 0,
            &amp;quot;SandboxSize&amp;quot;: 0
        },
        &amp;quot;GraphDriver&amp;quot;: {
            &amp;quot;Name&amp;quot;: &amp;quot;aufs&amp;quot;,
            &amp;quot;Data&amp;quot;: null
        },
        &amp;quot;Mounts&amp;quot;: [
            {
                &amp;quot;Source&amp;quot;: &amp;quot;/srv/data/db&amp;quot;,
                &amp;quot;Destination&amp;quot;: &amp;quot;/data/db&amp;quot;,
                &amp;quot;Mode&amp;quot;: &amp;quot;rw&amp;quot;,
                &amp;quot;RW&amp;quot;: true,
                &amp;quot;Propagation&amp;quot;: &amp;quot;rprivate&amp;quot;
            }
        ],
        &amp;quot;Config&amp;quot;: {
            &amp;quot;Hostname&amp;quot;: &amp;quot;d98173635877&amp;quot;,
            &amp;quot;Domainname&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;User&amp;quot;: &amp;quot;root&amp;quot;,
            &amp;quot;AttachStdin&amp;quot;: false,
            &amp;quot;AttachStdout&amp;quot;: false,
            &amp;quot;AttachStderr&amp;quot;: false,
            &amp;quot;ExposedPorts&amp;quot;: {
                &amp;quot;27017/tcp&amp;quot;: {}
            },
            &amp;quot;Tty&amp;quot;: false,
            &amp;quot;OpenStdin&amp;quot;: false,
            &amp;quot;StdinOnce&amp;quot;: false,
            &amp;quot;Env&amp;quot;: [
                &amp;quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&amp;quot;
            ],
            &amp;quot;Cmd&amp;quot;: [
                &amp;quot;--smallfiles&amp;quot;
            ],
            &amp;quot;Image&amp;quot;: &amp;quot;mongo-custom3&amp;quot;,
            &amp;quot;Volumes&amp;quot;: null,
            &amp;quot;WorkingDir&amp;quot;: &amp;quot;/code&amp;quot;,
            &amp;quot;Entrypoint&amp;quot;: [
                &amp;quot;/usr/bin/mongod&amp;quot;
            ],
            &amp;quot;OnBuild&amp;quot;: null,
            &amp;quot;Labels&amp;quot;: {}
        },
        &amp;quot;NetworkSettings&amp;quot;: {
            &amp;quot;Bridge&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;SandboxID&amp;quot;: &amp;quot;9aff46c57baeb071a5762c2fcdac37ab5612901c15d78f61f5188185757699bd&amp;quot;,
            &amp;quot;HairpinMode&amp;quot;: false,
            &amp;quot;LinkLocalIPv6Address&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;LinkLocalIPv6PrefixLen&amp;quot;: 0,
            &amp;quot;Ports&amp;quot;: {
                &amp;quot;27017/tcp&amp;quot;: [
                    {
                        &amp;quot;HostIp&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
                        &amp;quot;HostPort&amp;quot;: &amp;quot;27017&amp;quot;
                    }
                ]
            },
            &amp;quot;SandboxKey&amp;quot;: &amp;quot;/var/run/docker/netns/9aff46c57bae&amp;quot;,
            &amp;quot;SecondaryIPAddresses&amp;quot;: null,
            &amp;quot;SecondaryIPv6Addresses&amp;quot;: null,
            &amp;quot;EndpointID&amp;quot;: &amp;quot;f548e847fd8d031f26ebe687c24c709332efa10a2d5752679e6458cf1fbad356&amp;quot;,
            &amp;quot;Gateway&amp;quot;: &amp;quot;172.17.0.1&amp;quot;,
            &amp;quot;GlobalIPv6Address&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;GlobalIPv6PrefixLen&amp;quot;: 0,
            &amp;quot;IPAddress&amp;quot;: &amp;quot;172.17.0.2&amp;quot;,
            &amp;quot;IPPrefixLen&amp;quot;: 16,
            &amp;quot;IPv6Gateway&amp;quot;: &amp;quot;&amp;quot;,
            &amp;quot;MacAddress&amp;quot;: &amp;quot;02:42:ac:11:00:02&amp;quot;,
            &amp;quot;Networks&amp;quot;: {
                &amp;quot;bridge&amp;quot;: {
                    &amp;quot;IPAMConfig&amp;quot;: null,
                    &amp;quot;Links&amp;quot;: null,
                    &amp;quot;Aliases&amp;quot;: null,
                    &amp;quot;NetworkID&amp;quot;: &amp;quot;b0796b4ed424447971b67d367f762d83141a38e0aacb0a8bc37e70a965d36ac0&amp;quot;,
                    &amp;quot;EndpointID&amp;quot;: &amp;quot;f548e847fd8d031f26ebe687c24c709332efa10a2d5752679e6458cf1fbad356&amp;quot;,
                    &amp;quot;Gateway&amp;quot;: &amp;quot;172.17.0.1&amp;quot;,
                    &amp;quot;IPAddress&amp;quot;: &amp;quot;172.17.0.2&amp;quot;,
                    &amp;quot;IPPrefixLen&amp;quot;: 16,
                    &amp;quot;IPv6Gateway&amp;quot;: &amp;quot;&amp;quot;,
                    &amp;quot;GlobalIPv6Address&amp;quot;: &amp;quot;&amp;quot;,
                    &amp;quot;GlobalIPv6PrefixLen&amp;quot;: 0,
                    &amp;quot;MacAddress&amp;quot;: &amp;quot;02:42:ac:11:00:02&amp;quot;
                }
            }
        }
    }
]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se muestra la información del nombre del contenedor, el puerto que se tiene para acceder al mismo, su IP, su dirección mac entre otras cosas.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Docker"></category><category term="MongoDB"></category></entry><entry><title>Instalar Jenkins por medio de Docker y crear una imagen Docker de Jenkins.</title><link href="https://ecrespo.github.io/instalar-jenkins-por-medio-de-docker-y-crear-una-imagen-docker-de-jenkins.html" rel="alternate"></link><published>2016-05-10T09:00:00-04:00</published><updated>2016-05-10T09:00:00-04:00</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-05-10:/instalar-jenkins-por-medio-de-docker-y-crear-una-imagen-docker-de-jenkins.html</id><summary type="html">&lt;p&gt;Tal como se hizo en el artículo de gitlab ahora se procede a explicar la instalación de Jenkins, la diferencia es que aparte del procedimiento vía una imagen de Docker, se creará una imagen propia de Jenkins.&lt;/p&gt;
&lt;p&gt;Los artículos anteriores sobre Docker son:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de …&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Tal como se hizo en el artículo de gitlab ahora se procede a explicar la instalación de Jenkins, la diferencia es que aparte del procedimiento vía una imagen de Docker, se creará una imagen propia de Jenkins.&lt;/p&gt;
&lt;p&gt;Los artículos anteriores sobre Docker son:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/compartir-imagenes-docker-por-medio-de-archivos-tar.html#compartir-imagenes-docker-por-medio-de-archivos-tar"&gt;Compartir imagenes Docker por medio de archivos tar&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-registro-de-imagenes-docker-privado.html#crear-un-registro-de-imagenes-docker-privado"&gt;Crear un registro de imagenes Docker privado.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-anaconda-desde-un-contenedor-docker.html#usar-anaconda-desde-un-contenedor-docker"&gt;Usar Anaconda desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs.html#crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs"&gt;Crear un entorno de Integración y Despligue continue con Docker para node.js.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-jupyter-notebook-desde-un-contenedor-de-docker.html#usar-jupyter-notebook-desde-un-contenedor-de-docker"&gt;Usar Jupyter Notebook desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-doctest-con-un-contenedor-docker.html#ejecutar-una-prueba-de-doctest-con-un-contenedor-docker"&gt;Ejecutar una prueba de doctest con un contenedor Docker&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker.html#ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker"&gt;Ejecutar una prueba de unittest en Python con un contenedor Docker.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/montar-una-plataforma-como-servicio-paas-con-dokku-docker.html#montar-una-plataforma-como-servicio-paas-con-dokku-docker"&gt;Montar una Plataforma como servicio (PaaS) con Dokku (docker)&lt;/a&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-machine.html#uso-de-docker-machine"&gt;Uso de docker-machine.  &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/proveer-un-cluster-con-docker-swarm-y-docker-machine.html#proveer-un-cluster-con-docker-swarm-y-docker-machine"&gt;Proveer un cluster con docker swarm y docker-machine.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Este artículo se basa en una parte en el procedimiento del &lt;a href="https://hub.docker.com/search/?isAutomated=0&amp;amp;isOfficial=0&amp;amp;page=1&amp;amp;pullCount=0&amp;amp;q=jenkins&amp;amp;starCount=0"&gt;repositorio oficial de Jenkins en Docker Hub&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Basicamente para instalar jenkins de la imagen Docker oficial se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -p 8080:8080 -p 50000:50000 jenkins
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pero en este caso se va a usar un archivo &lt;code&gt;Dockerfile&lt;/code&gt; donde se instalará maven2, openjdk, docker, ant y jenkins. A fin de tener un soporte suficiente para los plugins que trae jenkins.&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;Dockerfile&lt;/code&gt; es el siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM debian
MAINTAINER Ernesto Crespo &amp;lt;ecrespo@gmail.com&amp;gt;
RUN apt-get update
RUN apt-get install -y apt-transport-https
RUN apt-get install -y git
RUN apt-get install -y openssh-server openssh-client
RUN apt-get install -y openjdk-7-jdk maven2 ant 
RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys  58118E89F3A912897C070ADBF76221572C52609D
RUN sh -c &amp;#39;echo &amp;quot;deb https://apt.dockerproject.org/repo debian-jessie main&amp;quot; &amp;gt; /etc/apt/sources.list.d/docker.list&amp;#39;
RUN apt-get install -y wget 
RUN wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -
RUN sh -c &amp;#39;echo deb http://pkg.jenkins-ci.org/debian binary/ &amp;gt; /etc/apt/sources.list.d/jenkins.list&amp;#39;
RUN apt-get update
RUN apt-get install -y docker-engine
RUN apt-get install -y jenkins 
RUN apt-get install -y vim less locate
RUN sh -c &amp;#39;service docker start&amp;#39;
RUN sh -c &amp;#39;service jenkins start&amp;#39;
RUN apt-get clean
EXPOSE 8080 50000 22
ENTRYPOINT [&amp;quot;java&amp;quot;,&amp;quot;-jar&amp;quot;,&amp;quot;/usr/share/jenkins/jenkins.war&amp;quot;]
CMD [&amp;quot;&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como se ve, se está usando una imagen Debian y se le instala lo necesario para tener jenkins con algunas herramientas adicionales como Docker, maven2, ant y jenkins. &lt;/p&gt;
&lt;p&gt;Para construir la imagen se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker build -t docker-jenkins . 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esto genera la imagen como se ve a continuación:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker images
REPOSITORY             TAG                 IMAGE ID            CREATED             SIZE
docker-jenkins         latest              844985a7b6ad        54 minutes ago      855.3 MB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para crear el contenedor se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -p 8080:8080 -p 50000:50000 -p 8022:22 -P  -d docker-jenkins
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esto genera la siguiente figura abriendo el navegador en localhost:8080:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalarjenkinspormediodedockerycrearunaimagendockerdejenkins-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Acá se ejecuta docker exec a fin de ver el contenido del archivo que contiene la llave para autenticar el jenkins:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker exec -ti naughty_darwin /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se busca el archivo dentro del contenedor:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /root/.jenkins/secrets/
cat initialAdminPassword 
4280c91df94a43308a731c008c6abb3d
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ya con eso se pregunta si se quiere seleccionar los plugins o si se instalan los recomendados:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalarjenkinspormediodedockerycrearunaimagendockerdejenkins-2.png"&gt;&lt;/p&gt;
&lt;p&gt;Luego se muestra la ventana del proceso de instalación de plugins:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalarjenkinspormediodedockerycrearunaimagendockerdejenkins-3.png"&gt;&lt;/p&gt;
&lt;p&gt;Al terminar este proceso se pide crear un usuario administrador:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalarjenkinspormediodedockerycrearunaimagendockerdejenkins-4.png"&gt;&lt;/p&gt;
&lt;p&gt;Luego de esto ya se muestra la página de que se terminó el proceso de configuración:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalarjenkinspormediodedockerycrearunaimagendockerdejenkins-5.png"&gt;&lt;/p&gt;
&lt;p&gt;A continuación se muestra la página inicial de Jenkins:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalarjenkinspormediodedockerycrearunaimagendockerdejenkins-6.png"&gt;&lt;/p&gt;
&lt;p&gt;Para terminar se instalarán unos plugins adicionales necesarios para próximo artículo (git, gitlab y docker):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalarjenkinspormediodedockerycrearunaimagendockerdejenkins-7.png"&gt;&lt;/p&gt;
&lt;p&gt;El archivo Dockerfile utilizado para el artículo se encuentra en github en el siguiente &lt;a href="https://github.com/ecrespo/docker-jenkins"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para terminar se suben los cambios a docker hub:&lt;/p&gt;
&lt;p&gt;Primero se hace login en docker hub:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker login 
Login with your Docker ID to push and pull images from Docker Hub. If you don&amp;#39;t have a Docker ID, head over to https://hub.docker.com to create one.
Username: ecrespo
Password: 
Login Succeeded
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Luego se hace commit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker commit 91594bea7711 ecrespo/docker-jenkins
sha256:561e411227e6c0d5e74ef85f6d533c44cb1e66b68ef2da6eec66d228de173fc2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se hace push:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker push ecrespo/docker-jenkins
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A continuación se muestra una imagen del sitio ecrespo/jenkins de docker hub:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalarjenkinspormediodedockerycrearunaimagendockerdejenkins-8.png"&gt;&lt;/p&gt;
&lt;p&gt;La configuración del Jenkins con Gitlab se tocará en el siguiente artículo. &lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Docker"></category><category term="Jenkins"></category><category term="CI/CD"></category><category term="DevOps"></category></entry><entry><title>Proveer un cluster con docker swarm y docker-machine.</title><link href="https://ecrespo.github.io/proveer-un-cluster-con-docker-swarm-y-docker-machine.html" rel="alternate"></link><published>2016-05-09T09:00:00-04:00</published><updated>2016-05-09T09:00:00-04:00</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-05-09:/proveer-un-cluster-con-docker-swarm-y-docker-machine.html</id><summary type="html">&lt;p&gt;Se puede usar docker-machine para proveer un cluster con docker swarm.&lt;/p&gt;
&lt;p&gt;Este artículo se basa de los siguientes artículos en inglés:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/swarm/provision-with-machine/"&gt;Provision a Swarm cluster with Docker Machine.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linux.com/learn/how-use-docker-machine-create-swarm-cluster"&gt;How to Use Docker Machine to Create a Swarm Cluster.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Los artículos anteriores sobre Docker son:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso …&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Se puede usar docker-machine para proveer un cluster con docker swarm.&lt;/p&gt;
&lt;p&gt;Este artículo se basa de los siguientes artículos en inglés:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/swarm/provision-with-machine/"&gt;Provision a Swarm cluster with Docker Machine.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linux.com/learn/how-use-docker-machine-create-swarm-cluster"&gt;How to Use Docker Machine to Create a Swarm Cluster.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Los artículos anteriores sobre Docker son:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/compartir-imagenes-docker-por-medio-de-archivos-tar.html#compartir-imagenes-docker-por-medio-de-archivos-tar"&gt;Compartir imagenes Docker por medio de archivos tar&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-registro-de-imagenes-docker-privado.html#crear-un-registro-de-imagenes-docker-privado"&gt;Crear un registro de imagenes Docker privado.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-anaconda-desde-un-contenedor-docker.html#usar-anaconda-desde-un-contenedor-docker"&gt;Usar Anaconda desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs.html#crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs"&gt;Crear un entorno de Integración y Despligue continue con Docker para node.js.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-jupyter-notebook-desde-un-contenedor-de-docker.html#usar-jupyter-notebook-desde-un-contenedor-de-docker"&gt;Usar Jupyter Notebook desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-doctest-con-un-contenedor-docker.html#ejecutar-una-prueba-de-doctest-con-un-contenedor-docker"&gt;Ejecutar una prueba de doctest con un contenedor Docker&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker.html#ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker"&gt;Ejecutar una prueba de unittest en Python con un contenedor Docker.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/montar-una-plataforma-como-servicio-paas-con-dokku-docker.html#montar-una-plataforma-como-servicio-paas-con-dokku-docker"&gt;Montar una Plataforma como servicio (PaaS) con Dokku (docker)&lt;/a&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-machine.html#uso-de-docker-machine"&gt;Uso de docker-machine.  &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Este artículo usará comandos ya explicados en el artículo sobre "&lt;a href="https://www.seraph.to/uso-de-docker-machine.html#uso-de-docker-machine"&gt;Uso de docker-machine&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;En el artículo anterior se usó virtualbox, se seguirá usando, pero también se pueden usar servicios en la nube o un host local (&lt;a href="https://docs.docker.com/machine/drivers/"&gt;los drivers soportados&lt;/a&gt;): amazon web services, Microsoft Azure, Digital Ocean, Exoscale, Google Compute Engine, Genérico, OpenStack entre otros. &lt;/p&gt;
&lt;p&gt;Se crea un host (virtualbox) para generar el token de &lt;code&gt;swarm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine create -d virtualbox local
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para configurar el shell que acceda a local se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;eval &amp;quot;$(docker-machine env local)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cada host &lt;code&gt;swarm&lt;/code&gt; tiene un token instalado dentro de la configuración del motor. Para crear el token se crea la imagen de &lt;code&gt;swarm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run swarm create
Unable to find image &amp;#39;swarm:latest&amp;#39; locally
latest: Pulling from library/swarm

eada7ab697d2: Pull complete 
afaf40cb2366: Pull complete 
7495da266907: Pull complete 
a3ed95caeb02: Pull complete 
Digest: sha256:12e3f7bdb86682733adf5351543487f581e1ccede5d85e1d5e0a7a62dcc88116
Status: Downloaded newer image for swarm:latest
99cd781ad7e0f3682747d94edff87f49
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El token es la salida que se muestra subrayada.&lt;/p&gt;
&lt;p&gt;Creando los nodos del cluster:&lt;/p&gt;
&lt;p&gt;Todos los nodos de un cluster deben tener el engine instalado, con el token del cluster se puede proveer un host con engine y configurarlo como un nodo &lt;code&gt;swarm&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para crear un manejador de nodo swarm se ejecuta el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine create -d virtualbox --swarm --swarm-master --swarm-discovery token://99cd781ad7e0f3682747d94edff87f49 swarm-manager
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para ver las variables y luego configurar el shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine env swarm-manager
export DOCKER_TLS_VERIFY=&amp;quot;1&amp;quot;
export DOCKER_HOST=&amp;quot;tcp://192.168.99.101:2376&amp;quot;
export DOCKER_CERT_PATH=&amp;quot;/home/ernesto/.docker/machine/machines/swarm-manager&amp;quot;
export DOCKER_MACHINE_NAME=&amp;quot;swarm-manager&amp;quot;
# Run this command to configure your shell: 
# eval &amp;quot;$(docker-machine env swarm-manager)&amp;quot;


eval &amp;quot;$(docker-machine env swarm-manager)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora se crea el primer nodo, el nodo-01, se le pasa también el token:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine create -d virtualbox --swarm --swarm-discovery token://99cd781ad7e0f3682747d94edff87f49 nodo-01
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y un nodo-02:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine create -d virtualbox --swarm --swarm-discovery token://99cd781ad7e0f3682747d94edff87f49 nodo-02
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Conectar los nodos con la máquina:&lt;/p&gt;
&lt;p&gt;Para conectar el ambiente del host con la máquina se usa el comando eval con la opción a docker-machine de env, algo así: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;eval &amp;quot;$(docker-machine env local)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En este caso docker-machine provee una opción &lt;code&gt;--swarm&lt;/code&gt; para conectar los nodos &lt;code&gt;swarm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine env --swarm swarm-manager
export DOCKER_TLS_VERIFY=&amp;quot;1&amp;quot;
export DOCKER_HOST=&amp;quot;tcp://192.168.99.101:3376&amp;quot;
export DOCKER_CERT_PATH=&amp;quot;/home/ernesto/.docker/machine/machines/swarm-manager&amp;quot;
export DOCKER_MACHINE_NAME=&amp;quot;swarm-manager&amp;quot;
# Run this command to configure your shell: 
# eval &amp;quot;$(docker-machine env swarm-manager)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para conectarse el nodo &lt;code&gt;swarm&lt;/code&gt; llamado &lt;code&gt;swarm-manager&lt;/code&gt; se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;eval &amp;quot;$(docker-machine env swarm-manager)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora se puede ejecutar &lt;code&gt;docker info&lt;/code&gt; para interacturar con los nodos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;docker&lt;/span&gt; &lt;span class="nt"&gt;info&lt;/span&gt; 
&lt;span class="nt"&gt;Containers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;
 &lt;span class="nt"&gt;Running&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;
 &lt;span class="nt"&gt;Paused&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;
 &lt;span class="nt"&gt;Stopped&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;
&lt;span class="nt"&gt;Images&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;
&lt;span class="nt"&gt;Server&lt;/span&gt; &lt;span class="nt"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;11&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;1-rc1&lt;/span&gt;
&lt;span class="nt"&gt;Storage&lt;/span&gt; &lt;span class="nt"&gt;Driver&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;aufs&lt;/span&gt;
 &lt;span class="nt"&gt;Root&lt;/span&gt; &lt;span class="nt"&gt;Dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;mnt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;sda1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;aufs&lt;/span&gt;
 &lt;span class="nt"&gt;Backing&lt;/span&gt; &lt;span class="nt"&gt;Filesystem&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;extfs&lt;/span&gt;
 &lt;span class="nt"&gt;Dirs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;
 &lt;span class="nt"&gt;Dirperm1&lt;/span&gt; &lt;span class="nt"&gt;Supported&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;true&lt;/span&gt;
&lt;span class="nt"&gt;Logging&lt;/span&gt; &lt;span class="nt"&gt;Driver&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;json-file&lt;/span&gt;
&lt;span class="nt"&gt;Cgroup&lt;/span&gt; &lt;span class="nt"&gt;Driver&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;cgroupfs&lt;/span&gt;
&lt;span class="nt"&gt;Plugins&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
 &lt;span class="nt"&gt;Volume&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;local&lt;/span&gt;
 &lt;span class="nt"&gt;Network&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;host&lt;/span&gt; &lt;span class="nt"&gt;bridge&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;
&lt;span class="nt"&gt;Kernel&lt;/span&gt; &lt;span class="nt"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;8-boot2docker&lt;/span&gt;
&lt;span class="nt"&gt;Operating&lt;/span&gt; &lt;span class="nt"&gt;System&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Boot2Docker&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;11&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;1-rc1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;TCL&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="nt"&gt;HEAD&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;903a352&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;Tue&lt;/span&gt; &lt;span class="nt"&gt;Apr&lt;/span&gt; &lt;span class="nt"&gt;26&lt;/span&gt; &lt;span class="nt"&gt;14&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;18&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt; &lt;span class="nt"&gt;UTC&lt;/span&gt; &lt;span class="nt"&gt;2016&lt;/span&gt;
&lt;span class="nt"&gt;OSType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;linux&lt;/span&gt;
&lt;span class="nt"&gt;Architecture&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;x86_64&lt;/span&gt;
&lt;span class="nt"&gt;CPUs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;
&lt;span class="nt"&gt;Total&lt;/span&gt; &lt;span class="nt"&gt;Memory&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;995&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;9&lt;/span&gt; &lt;span class="nt"&gt;MiB&lt;/span&gt;
&lt;span class="nt"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;swarm-manager&lt;/span&gt;
&lt;span class="nt"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6LXP&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;RTPR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;4MRE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;OGLK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;EDED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;EQBP&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;JQRH&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;RHLW&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;5YUG&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;SELK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;MUDN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;YVSA&lt;/span&gt;
&lt;span class="nt"&gt;Docker&lt;/span&gt; &lt;span class="nt"&gt;Root&lt;/span&gt; &lt;span class="nt"&gt;Dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;mnt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;sda1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;docker&lt;/span&gt;
&lt;span class="nt"&gt;Debug&lt;/span&gt; &lt;span class="nt"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;client&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt; &lt;span class="nt"&gt;false&lt;/span&gt;
&lt;span class="nt"&gt;Debug&lt;/span&gt; &lt;span class="nt"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;server&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt; &lt;span class="nt"&gt;true&lt;/span&gt;
 &lt;span class="nt"&gt;File&lt;/span&gt; &lt;span class="nt"&gt;Descriptors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;
 &lt;span class="nt"&gt;Goroutines&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;45&lt;/span&gt;
 &lt;span class="nt"&gt;System&lt;/span&gt; &lt;span class="nt"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2016-05-09T20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;36&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;18&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;825810618Z&lt;/span&gt;
 &lt;span class="nt"&gt;EventsListeners&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;
&lt;span class="nt"&gt;Username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;ecrespo&lt;/span&gt;
&lt;span class="nt"&gt;Registry&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;docker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;io&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;v1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="nt"&gt;Labels&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
 &lt;span class="nt"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;virtualbox&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O listar las máquinas con &lt;code&gt;docker-machine ls&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine ls
NAME            ACTIVE   DRIVER       STATE     URL                         SWARM
local                    virtualbox   Running   tcp://192.168.99.100:2376   
nodo-01                  virtualbox   Running   tcp://192.168.99.102:2376   swarm-manager
nodo-02                  virtualbox   Running   tcp://192.168.99.103:2376   swarm-manager
swarm-manager   *        virtualbox   Running   tcp://192.168.99.101:2376   swarm-manager (master)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como pueden notar los nodos nodo-01 y nodo-02 están asociados a swarm-manager y este es el master.&lt;/p&gt;
&lt;p&gt;A continuación dejo captura de pantalla de swarm-manager, nodo-01 y nodo-02:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/proveerunclustercondockerswarmydockermachine-1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/proveerunclustercondockerswarmydockermachine-2.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/proveerunclustercondockerswarmydockermachine-3.png"&gt;&lt;/p&gt;
&lt;p&gt;A continuación les dejo unos enlaces de referencia:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/machine/get-started-cloud/"&gt;Use Docker Machine to provision hosts on cloud providers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/installation/cloud/cloud-ex-machine-ocean/"&gt;Example: Use Docker Machine to provision cloud hosts.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Docker"></category><category term="docker-swarm"></category><category term="docker-machine"></category></entry><entry><title>Uso de docker-machine.</title><link href="https://ecrespo.github.io/uso-de-docker-machine.html" rel="alternate"></link><published>2016-05-06T09:00:00-04:00</published><updated>2016-05-06T09:00:00-04:00</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-05-06:/uso-de-docker-machine.html</id><summary type="html">&lt;p&gt;Docker-machine se usa para equipos con Windows o MACOSX, o para equipos que no se le puede instalar docker (engine). Se usa como un cliente para un servidor docker.&lt;/p&gt;
&lt;p&gt;Este artículo se basa en la documentación oficial en inglés que se encuentra en el siguiente &lt;a href="https://docs.docker.com/machine/get-started/"&gt;enlace&lt;/a&gt;, y en el siguiente …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Docker-machine se usa para equipos con Windows o MACOSX, o para equipos que no se le puede instalar docker (engine). Se usa como un cliente para un servidor docker.&lt;/p&gt;
&lt;p&gt;Este artículo se basa en la documentación oficial en inglés que se encuentra en el siguiente &lt;a href="https://docs.docker.com/machine/get-started/"&gt;enlace&lt;/a&gt;, y en el siguiente &lt;a href="https://devopscube.com/docker-machine-tutorial-getting-started-guide/"&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Los artículos anteriores sobre docker son:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/compartir-imagenes-docker-por-medio-de-archivos-tar.html#compartir-imagenes-docker-por-medio-de-archivos-tar"&gt;Compartir imagenes Docker por medio de archivos tar&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-registro-de-imagenes-docker-privado.html#crear-un-registro-de-imagenes-docker-privado"&gt;Crear un registro de imagenes Docker privado.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-anaconda-desde-un-contenedor-docker.html#usar-anaconda-desde-un-contenedor-docker"&gt;Usar Anaconda desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs.html#crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs"&gt;Crear un entorno de Integración y Despligue continue con Docker para node.js.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-jupyter-notebook-desde-un-contenedor-de-docker.html#usar-jupyter-notebook-desde-un-contenedor-de-docker"&gt;Usar Jupyter Notebook desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-doctest-con-un-contenedor-docker.html#ejecutar-una-prueba-de-doctest-con-un-contenedor-docker"&gt;Ejecutar una prueba de doctest con un contenedor Docker&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker.html#ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker"&gt;Ejecutar una prueba de unittest en Python con un contenedor Docker.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/montar-una-plataforma-como-servicio-paas-con-dokku-docker.html#montar-una-plataforma-como-servicio-paas-con-dokku-docker"&gt;Montar una Plataforma como servicio (PaaS) con Dokku (docker)&lt;/a&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Para probar el uso de &lt;code&gt;docker-machine&lt;/code&gt;, se tiene una máquina virtual con IP 192.168.1.102 donde se tiene unas imagenes de docker, y un equipo donde se instalará el &lt;code&gt;docker-machine&lt;/code&gt; (qué será mí equipo local).&lt;/p&gt;
&lt;p&gt;En el equipo se instalará &lt;code&gt;docker-machine&lt;/code&gt; de la siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#curl -L https://github.com/docker/machine/releases/download/v0.4.0/docker-machine_linux-amd64 &amp;gt; /usr/local/bin/docker-machine

#chmod a+x  /usr/local/bin/docker-machine
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para probar que funciona se ejecuta la versión de &lt;code&gt;docker-machine&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#docker-machine -v
docker-machine version 0.4.0 (9d0dc7a)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Crear un &lt;code&gt;docker-machine&lt;/code&gt; en virtualbox:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker-machine create --driver virtualbox &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En este caso se crea un contenedor docker que se conecta a virtualbox llamado test.&lt;/p&gt;
&lt;p&gt;A continuación se muestra la salida del comando anterior:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/usodedockermachine-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Como lo muestra la imagen, se crea el docker test, se baja una imagen iso llamada boot2docker.&lt;/p&gt;
&lt;p&gt;En la siguiente imagen se muestra a virtualbox con la máquina virtual test:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/usodedockermachine-2.png"&gt;&lt;/p&gt;
&lt;p&gt;Al acceder a la máquina virtual desde virtualbox se tiene lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/usodedockermachine-3.png"&gt;&lt;/p&gt;
&lt;p&gt;Para ver como se conecta a la máquina se ejecuta el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker-machine env test
export DOCKER_TLS_VERIFY=&amp;quot;1&amp;quot;
export DOCKER_HOST=&amp;quot;tcp://192.168.99.100:2376&amp;quot;
export DOCKER_CERT_PATH=&amp;quot;/home/ernesto/.docker/machine/machines/test&amp;quot;
export DOCKER_MACHINE_NAME=&amp;quot;test&amp;quot;
## Run this command to configure your shell: 
## eval &amp;quot;$(docker-machine env test)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para configurar el shell se ejecuta el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;eval &amp;quot;$(docker-machine env test)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para listar las máquinas se ejecuta el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine ls
NAME   ACTIVE   DRIVER       STATE     URL                         SWARM
test   *        virtualbox   Running   tcp://192.168.99.100:2376
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para ver la IP que está usando test se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker-machine ip &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;span class="m"&gt;192&lt;/span&gt;.168.99.100
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Correr un servidor nginx en el puerto 8000 en un contenedor:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -d -p 8000:80 nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para ver el servidor se ejecuta el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl $(docker-machine ip test):8000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y el resultado es:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/usodedockermachine-4.png"&gt;&lt;/p&gt;
&lt;p&gt;Para terminar se detiene el &lt;code&gt;docker-machine&lt;/code&gt; y se elimina:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker-machine stop test
$ernesto@jewel:~$ docker-machine rm test
Successfully removed test
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Docker"></category><category term="Docker-machine"></category></entry><entry><title>Montar una Plataforma como servicio (PaaS) con Dokku (docker).</title><link href="https://ecrespo.github.io/montar-una-plataforma-como-servicio-paas-con-dokku-docker.html" rel="alternate"></link><published>2016-05-05T09:00:00-04:00</published><updated>2016-05-05T09:00:00-04:00</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-05-05:/montar-una-plataforma-como-servicio-paas-con-dokku-docker.html</id><summary type="html">&lt;p&gt;Continuando con los artículos sobre Docker.&lt;/p&gt;
&lt;p&gt;En este caso se explicará como montar y usar &lt;a href="https://github.com/dokku/dokku"&gt;Dokku&lt;/a&gt; el cual es una herramienta que facilita montar una Plataforma como Servicio (&lt;a href="https://es.wikipedia.org/wiki/Computaci%C3%B3n_en_la_nube#Plataforma_como_servicio"&gt;PaaS&lt;/a&gt;) al estilo &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt; en Linux (en este caso Debian Jessie).&lt;/p&gt;
&lt;p&gt;Para este caso no se tiene un servidor de DNS y …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los artículos sobre Docker.&lt;/p&gt;
&lt;p&gt;En este caso se explicará como montar y usar &lt;a href="https://github.com/dokku/dokku"&gt;Dokku&lt;/a&gt; el cual es una herramienta que facilita montar una Plataforma como Servicio (&lt;a href="https://es.wikipedia.org/wiki/Computaci%C3%B3n_en_la_nube#Plataforma_como_servicio"&gt;PaaS&lt;/a&gt;) al estilo &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt; en Linux (en este caso Debian Jessie).&lt;/p&gt;
&lt;p&gt;Para este caso no se tiene un servidor de DNS y un nombre al equipo, se usará la IP 192.168.1.102.&lt;/p&gt;
&lt;p&gt;Los artículos anteriores sobre docker son:&lt;br&gt;
1. &lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/compartir-imagenes-docker-por-medio-de-archivos-tar.html#compartir-imagenes-docker-por-medio-de-archivos-tar"&gt;Compartir imagenes Docker por medio de archivos tar&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-registro-de-imagenes-docker-privado.html#crear-un-registro-de-imagenes-docker-privado"&gt;Crear un registro de imagenes Docker privado.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-anaconda-desde-un-contenedor-docker.html#usar-anaconda-desde-un-contenedor-docker"&gt;Usar Anaconda desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs.html#crear-un-entorno-de-integracion-y-despligue-continue-con-docker-para-nodejs"&gt;Crear un entorno de Integración y Despligue continue con Docker para node.js.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/usar-jupyter-notebook-desde-un-contenedor-de-docker.html#usar-jupyter-notebook-desde-un-contenedor-de-docker"&gt;Usar Jupyter Notebook desde un contenedor Docker.&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-doctest-con-un-contenedor-docker.html#ejecutar-una-prueba-de-doctest-con-un-contenedor-docker"&gt;Ejecutar una prueba de doctest con un contenedor Docker&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker.html#ejecutar-una-prueba-de-unittest-en-python-con-un-contenedor-docker"&gt;Ejecutar una prueba de unittest en Python con un contenedor Docker.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Para instalar y usar &lt;code&gt;Dokku&lt;/code&gt; estaré trabajando con una máquina virtual (para no usar directamente mí equipo), para ello se instalo en dicha máquina virtual docker (&lt;a href="http://blog.crespo.org.ve/2015/12/instalar-docker-en-debian-jessie.html"&gt;ver artículo 1&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;El procedimiento de instalación de &lt;code&gt;Dokku&lt;/code&gt; lo pueden encontrar en su proyecto en &lt;a href="https://github.com/dokku/dokku"&gt;github&lt;/a&gt; o en el siguiente &lt;a href="http://dokku.viewdocs.io/dokku/getting-started/advanced-installation/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Instalación (para este procedimiento se instala &lt;code&gt;docker-engine&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://raw.githubusercontent.com/dokku/dokku/v0.5.6/bootstrap.sh
chmod a+x bootstrap.sh
sudo DOKKU_TAG=v0.5.6 bash bootstrap.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Otra opción para instalar es bajarse el repositorio de &lt;code&gt;dokku&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/progrium/dokku.git
cd dokku
sudo make install ; #es necesario tener make instalado; sudo apt-get install make
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para ver que versión se tiene:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dokku version
v0.5.6-7-g851ca59
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configurar la llave ssh:&lt;br&gt;
1. Ir a la máquina local, ir al directorio &lt;code&gt;.ssh&lt;/code&gt;, si no se tiene una llave RSA generada, se genera una:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd .ssh
ssh-keygen -t rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Ver la llave pública:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat id_rsa.pub
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Se copia el contenido de la llave.  &lt;/li&gt;
&lt;li&gt;En el servidor, como un usuario se ejecuta lo siguiente:  &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo &amp;quot;ssh-rsa ..... ernesto@crespo.org.ve&amp;quot;| sudo sshcommand acl-add dokku ernesto
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Subir una aplicación de &lt;code&gt;node.js&lt;/code&gt; y &lt;code&gt;express.js&lt;/code&gt;:
Para ello se tiene un repositorio github con una aplicación en node.js y express.js que tiene una página con un hola mundo.&lt;/p&gt;
&lt;p&gt;Se clonan el repo (desde el equipo local):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/ecrespo/prueba-nodeexpress.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;La estructura de archivos y directorios son:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;prueba-nodeexpress/
├── app.json
├── index.js
├── LICENSE
└── package.json
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En el siguiente &lt;a href="https://github.com/ecrespo/prueba-nodeexpress"&gt;enlace&lt;/a&gt; se tiene el repositorio de github.&lt;/p&gt;
&lt;p&gt;Se agrega el repo remoto de &lt;code&gt;dokku&lt;/code&gt; (192.168.1.102):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;remote&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;dokku&lt;/span&gt; &lt;span class="n"&gt;dokku&lt;/span&gt;&lt;span class="mf"&gt;@192.168.1.102&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;prueba&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nodeexpress&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se modifica el archivo &lt;code&gt;index.html&lt;/code&gt;, y se sube al repositorio de &lt;code&gt;dokku&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add public/index.html 
git commit -m&amp;quot;Agregado texto&amp;quot; 
git push dokku master 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al hacer push se tiene la siguiente salida:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;....&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Discovering&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;
       &lt;span class="n"&gt;Default&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;  &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Releasing&lt;/span&gt; &lt;span class="n"&gt;prueba&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nodeexpress&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dokku&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prueba&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;nodeexpress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;)...&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Deploying&lt;/span&gt; &lt;span class="n"&gt;prueba&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nodeexpress&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dokku&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prueba&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;nodeexpress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;)...&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Attempting&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dokku&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predeploy&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt; &lt;span class="n"&gt;Procfile&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dokku&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prueba&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nodeexpress&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;DOKKU_PROCFILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;DOKKU_SCALE&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Generating&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;based&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;Procfile&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;New&lt;/span&gt; &lt;span class="n"&gt;DOKKU_SCALE&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;generated&lt;/span&gt;
&lt;span class="o"&gt;=====&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;flight&lt;/span&gt; &lt;span class="n"&gt;checks&lt;/span&gt;
       &lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;efficient&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="n"&gt;downtime&lt;/span&gt; &lt;span class="n"&gt;deployments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;CHECKS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
       &lt;span class="n"&gt;See&lt;/span&gt; &lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//dokku.viewdocs.io/dokku/checks-examples.md for examples&lt;/span&gt;
       &lt;span class="n"&gt;CHECKS&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nl"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;simple&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Waiting&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Default&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;successful&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Attempting&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dokku&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;postdeploy&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=====&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;renaming&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;dacd928c2bb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;clever_tesla&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;prueba&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nodeexpress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;
&lt;span class="o"&gt;=====&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;VHOST&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;disabling&lt;/span&gt; &lt;span class="n"&gt;vhost&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Setting&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;vars&lt;/span&gt;
       &lt;span class="nl"&gt;NO_VHOST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;setting&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="n"&gt;high&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Setting&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;vars&lt;/span&gt;
       &lt;span class="nl"&gt;DOKKU_NGINX_PORT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;53541&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Creating&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;
       &lt;span class="n"&gt;Reloading&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
&lt;span class="o"&gt;-----&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Setting&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;vars&lt;/span&gt;
       &lt;span class="nl"&gt;DOKKU_APP_RESTORE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;=====&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Application&lt;/span&gt; &lt;span class="nl"&gt;deployed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//192.168.1.102:53541 (nginx)&lt;/span&gt;

&lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="n"&gt;dokku&lt;/span&gt;&lt;span class="mf"&gt;@192.168.1.102&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;prueba&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nodeexpress&lt;/span&gt;
 &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;branch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;      &lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al abrir el navegador en http://192.168.1.102:53541 se tiene lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/montarunaplataformacomoserviciopaascondokkudocker-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Para la instalación de plugins se puede revisar el siguiente &lt;a href="http://dokku.viewdocs.io/dokku/community/plugins/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Existen otras herramientas parecidas a &lt;code&gt;dokku&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://flynn.io/"&gt;flynn.io&lt;/a&gt;.  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/services/kubernetes-service/"&gt;deis.io&lt;/a&gt;.  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dokku-alt/dokku-alt"&gt;dokku-alt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;De esta forma se hace una pequeña demostración de como tener un entorno de despliegue parecido a Heroku.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Docker"></category><category term="Dokku"></category><category term="PaaS"></category><category term="DevOps"></category></entry><entry><title>Crear un registro de imágenes Docker privado.</title><link href="https://ecrespo.github.io/crear-un-registro-de-imagenes-docker-privado.html" rel="alternate"></link><published>2016-02-25T09:00:00-05:30</published><updated>2016-02-25T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-02-25:/crear-un-registro-de-imagenes-docker-privado.html</id><summary type="html">&lt;p&gt;Por ahí he leído toda la infraestructura que es necesaria instalar para tener un sistema de registro privado de imágenes de Docker.&lt;/p&gt;
&lt;p&gt;Pero no, usemos Docker!!!&lt;/p&gt;
&lt;p&gt;Con esta idea se puede bajar una imagen del registro de Docker del siguiente &lt;a href="https://hub.docker.com/_/registry/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Antes de continuar les dejaré la lista de artículos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Por ahí he leído toda la infraestructura que es necesaria instalar para tener un sistema de registro privado de imágenes de Docker.&lt;/p&gt;
&lt;p&gt;Pero no, usemos Docker!!!&lt;/p&gt;
&lt;p&gt;Con esta idea se puede bajar una imagen del registro de Docker del siguiente &lt;a href="https://hub.docker.com/_/registry/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Antes de continuar les dejaré la lista de artículos sobre Docker que he tocado en el blog:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/compartir-imagenes-docker-por-medio-de-archivos-tar.html#compartir-imagenes-docker-por-medio-de-archivos-tar"&gt;Compartir imagenes Docker por medio de archivos tar&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Lo primero que se hará es bajar la imagen Docker del registro, se tiene la versión oficial que es la 2 o la última.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker pull registry:2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ó&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker pull registry
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se inicia el contenedor en el puerto 5000:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker run -d -p &lt;span class="m"&gt;5000&lt;/span&gt;:5000 registry:2 
3c0719746d75f46220328c08209b3e716c8e883ad6f3df7bbae0d70e50656a45
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para verificar que el registro está corriendo se prueba con curl conectarse a localhost al puerto 5000 a v2/:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -i http://localhost:5000/v2/
HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
Content-Length: &lt;span class="m"&gt;2&lt;/span&gt;
Content-Type: application/json&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;utf-8
Docker-Distribution-Api-Version: registry/2.0
X-Content-Type-Options: nosniff
Date: Thu, &lt;span class="m"&gt;25&lt;/span&gt; Feb &lt;span class="m"&gt;2016&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:40:25 GMT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora se puede probar subir una imagen al sistema privado de registro, se prueba con &lt;code&gt;busybox&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Se crea un tag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker tag busybox localhost:5000/busy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se sube la imagen:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker push localhost:5000/busy
The push refers to a repository &lt;span class="o"&gt;[&lt;/span&gt;localhost:5000/busy&lt;span class="o"&gt;]&lt;/span&gt;
5f70bf18a086: Pushed 
9508eff2c687: Pushed 
latest: digest: sha256:b58c00d636b25f40fc7605b1b807af81c1a79a7bbb2179b4753b9dc7e0d1dcd7 size: &lt;span class="m"&gt;711&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para poder acceder de manera insegura al registro privado se tiene que modificar el archivo &lt;code&gt;/etc/default/docker&lt;/code&gt; y agregar la siguiente línea (tomar en cuenta que el contenedor está corriendo en localhost):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DOCKER_OPTS=&amp;quot;--insecure-registry localhost:5000&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se reinicia el servicio de docker:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# service docker restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para más información de las opciones del registro de Docker pueden revisar el siguiente &lt;a href="https://github.com/docker/distribution"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para revisar las imagenes almacenadas en el sistema de registro privado se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://localhost:5000/v2/_catalog
{&amp;quot;repositories&amp;quot;:[&amp;quot;busy&amp;quot;]}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="./images/crearunregistrodeimagenesdockerprivado-1.png"&gt;&lt;/p&gt;
&lt;p&gt;El catalogo muestra que se tiene la imagen busy.&lt;/p&gt;
&lt;p&gt;Se puede crear otra tag de &lt;code&gt;busybox&lt;/code&gt; con nombre &lt;code&gt;busy1&lt;/code&gt; y se sube al servidor:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker tag busybox localhost:5000/busy1

$ docker push localhost:5000/busy1
The push refers to a repository [localhost:5000/busy1]
5f70bf18a086: Mounted from busy 
9508eff2c687: Mounted from busy 
latest: digest: sha256:b58c00d636b25f40fc7605b1b807af81c1a79a7bbb2179b4753b9dc7e0d1dcd7 size: 711
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al volver a consultar el catalogo se tienen dos imagenes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$curl http://localhost:5000/v2/_catalog
{&amp;quot;repositories&amp;quot;:[&amp;quot;busy&amp;quot;,&amp;quot;busy1&amp;quot;]}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cada imagen tiene un manifiesto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$curl http://localhost:5000/v2/busy1/manifests/latest

$ curl http://localhost:5000/v2/busy1/manifests/latest
{
   &amp;quot;schemaVersion&amp;quot;: 1,
   &amp;quot;name&amp;quot;: &amp;quot;busy1&amp;quot;,
   &amp;quot;tag&amp;quot;: &amp;quot;latest&amp;quot;,
   &amp;quot;architecture&amp;quot;: &amp;quot;amd64&amp;quot;,
   &amp;quot;fsLayers&amp;quot;: [
      {
         &amp;quot;blobSum&amp;quot;: &amp;quot;sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4&amp;quot;
      },
      {
         &amp;quot;blobSum&amp;quot;: &amp;quot;sha256:d7e8ec85c5abc60edf74bd4b8d68049350127e4102a084f22060f7321eac3586&amp;quot;
      }
   ],
   &amp;quot;history&amp;quot;: [
      {
         &amp;quot;v1Compatibility&amp;quot;: &amp;quot;{\&amp;quot;architecture\&amp;quot;:\&amp;quot;amd64\&amp;quot;,\&amp;quot;config\&amp;quot;:{\&amp;quot;Hostname\&amp;quot;:\&amp;quot;ea7fe68f39fd\&amp;quot;,\&amp;quot;Domainname\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;User\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;Memory\&amp;quot;:0,\&amp;quot;MemorySwap\&amp;quot;:0,\&amp;quot;CpuShares\&amp;quot;:0,\&amp;quot;Cpuset\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;AttachStdin\&amp;quot;:false,\&amp;quot;AttachStdout\&amp;quot;:false,\&amp;quot;AttachStderr\&amp;quot;:false,\&amp;quot;PortSpecs\&amp;quot;:null,\&amp;quot;ExposedPorts\&amp;quot;:null,\&amp;quot;Tty\&amp;quot;:false,\&amp;quot;OpenStdin\&amp;quot;:false,\&amp;quot;StdinOnce\&amp;quot;:false,\&amp;quot;Env\&amp;quot;:null,\&amp;quot;Cmd\&amp;quot;:[\&amp;quot;sh\&amp;quot;],\&amp;quot;Image\&amp;quot;:\&amp;quot;5c5fb281b01ee091a0fffa5b4a4c7fb7d358e7fb7c49c263d6d7a4e35d199fd0\&amp;quot;,\&amp;quot;Volumes\&amp;quot;:null,\&amp;quot;WorkingDir\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;Entrypoint\&amp;quot;:null,\&amp;quot;NetworkDisabled\&amp;quot;:false,\&amp;quot;MacAddress\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;OnBuild\&amp;quot;:null,\&amp;quot;Labels\&amp;quot;:null},\&amp;quot;container\&amp;quot;:\&amp;quot;f63d86f7f85b3207532327b6e484bf09d8a0d1a0979cf7bdce1bd5268666fdd3\&amp;quot;,\&amp;quot;container_config\&amp;quot;:{\&amp;quot;Hostname\&amp;quot;:\&amp;quot;ea7fe68f39fd\&amp;quot;,\&amp;quot;Domainname\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;User\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;Memory\&amp;quot;:0,\&amp;quot;MemorySwap\&amp;quot;:0,\&amp;quot;CpuShares\&amp;quot;:0,\&amp;quot;Cpuset\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;AttachStdin\&amp;quot;:false,\&amp;quot;AttachStdout\&amp;quot;:false,\&amp;quot;AttachStderr\&amp;quot;:false,\&amp;quot;PortSpecs\&amp;quot;:null,\&amp;quot;ExposedPorts\&amp;quot;:null,\&amp;quot;Tty\&amp;quot;:false,\&amp;quot;OpenStdin\&amp;quot;:false,\&amp;quot;StdinOnce\&amp;quot;:false,\&amp;quot;Env\&amp;quot;:null,\&amp;quot;Cmd\&amp;quot;:[\&amp;quot;/bin/sh\&amp;quot;,\&amp;quot;-c\&amp;quot;,\&amp;quot;#(nop) CMD [\\\&amp;quot;sh\\\&amp;quot;]\&amp;quot;],\&amp;quot;Image\&amp;quot;:\&amp;quot;5c5fb281b01ee091a0fffa5b4a4c7fb7d358e7fb7c49c263d6d7a4e35d199fd0\&amp;quot;,\&amp;quot;Volumes\&amp;quot;:null,\&amp;quot;WorkingDir\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;Entrypoint\&amp;quot;:null,\&amp;quot;NetworkDisabled\&amp;quot;:false,\&amp;quot;MacAddress\&amp;quot;:\&amp;quot;\&amp;quot;,\&amp;quot;OnBuild\&amp;quot;:null,\&amp;quot;Labels\&amp;quot;:null},\&amp;quot;created\&amp;quot;:\&amp;quot;2015-12-08T18:31:51.481948133Z\&amp;quot;,\&amp;quot;docker_version\&amp;quot;:\&amp;quot;1.8.3\&amp;quot;,\&amp;quot;id\&amp;quot;:\&amp;quot;a997905216262e309de0dccc4c8ed39ee475a9d0e6b3f3c3a40b4ccf28af9b15\&amp;quot;,\&amp;quot;os\&amp;quot;:\&amp;quot;linux\&amp;quot;,\&amp;quot;parent\&amp;quot;:\&amp;quot;3d030bd4e34f5ed0b05de21a56503d80881fb1464afdde1c06a2b39c59260a22\&amp;quot;}&amp;quot;
      },
      {
         &amp;quot;v1Compatibility&amp;quot;: &amp;quot;{\&amp;quot;id\&amp;quot;:\&amp;quot;3d030bd4e34f5ed0b05de21a56503d80881fb1464afdde1c06a2b39c59260a22\&amp;quot;,\&amp;quot;created\&amp;quot;:\&amp;quot;2015-12-08T18:31:50.979824705Z\&amp;quot;,\&amp;quot;container_config\&amp;quot;:{\&amp;quot;Cmd\&amp;quot;:[\&amp;quot;/bin/sh -c #(nop) ADD file:c295b0748bf05d4527f500b62ff269bfd0037f7515f1375d2ee474b830bad382 in /\&amp;quot;]}}&amp;quot;
      }
   ],
   &amp;quot;signatures&amp;quot;: [
      {
         &amp;quot;header&amp;quot;: {
            &amp;quot;jwk&amp;quot;: {
               &amp;quot;crv&amp;quot;: &amp;quot;P-256&amp;quot;,
               &amp;quot;kid&amp;quot;: &amp;quot;FO3A:MIWL:JVJW:5O62:N7RK:GZXL:ACGC:WRUQ:PM4P:FVDL:PBAQ:X3IG&amp;quot;,
               &amp;quot;kty&amp;quot;: &amp;quot;EC&amp;quot;,
               &amp;quot;x&amp;quot;: &amp;quot;8eTT88WGU5NVLCrp5qGa4cO_nCo00e1L-eNLKF_0eeE&amp;quot;,
               &amp;quot;y&amp;quot;: &amp;quot;QwgEYEkJDxz4vihT3Mc6OitZ9uraF_TwbfpvZm72dJ8&amp;quot;
            },
            &amp;quot;alg&amp;quot;: &amp;quot;ES256&amp;quot;
         },
         &amp;quot;signature&amp;quot;: &amp;quot;LkmuupCii3CgtJKkKbasvkKc1jo7V0rZP9k4EFXuVMQL08-7n8s8TWzNB_Wx8oTv4qMb-Bpqhv3A2jdemu6eSA&amp;quot;,
         &amp;quot;protected&amp;quot;: &amp;quot;eyJmb3JtYXRMZW5ndGgiOjIyMTQsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxNi0wMi0yNVQxOToxNjoxNFoifQ&amp;quot;
      }
   ]
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para listar todos los tags de una imagen se tiene:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://localhost:5000/v2/busy1/tags/list
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;busy1&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]}&lt;/span&gt;
$ curl http://localhost:5000/v2/busy/tags/list
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;busy&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;latest&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se puede hacer un pull del sistema de registro local para verificar que la imagen está actualizada:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker pull localhost:5000/busy1
Using default tag: latest
latest: Pulling from busy1
Digest: sha256:b58c00d636b25f40fc7605b1b807af81c1a79a7bbb2179b4753b9dc7e0d1dcd7
Status: Image is up to date &lt;span class="k"&gt;for&lt;/span&gt; localhost:5000/busy1:latest
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para más información del despliegue del sistema de registro pueden revisar el siguiente &lt;a href="https://docs.docker.com/registry/deploying/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Docker"></category></entry><entry><title>Compartir imágenes Docker por medio de archivos tar</title><link href="https://ecrespo.github.io/compartir-imagenes-docker-por-medio-de-archivos-tar.html" rel="alternate"></link><published>2016-02-24T10:00:00-05:30</published><updated>2016-02-24T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-02-24:/compartir-imagenes-docker-por-medio-de-archivos-tar.html</id><summary type="html">&lt;p&gt;Uno de los puntos más importantes a la hora de trabajar con Docker es el compartir imágenes Docker aparte de usar Docker Hub.&lt;/p&gt;
&lt;p&gt;Se tiene la exportación e importación de imágenes como opción almacenando y extrayendo a partir de archivos &lt;code&gt;tar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se tienen los artículos anteriores sobre Docker:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker …&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Uno de los puntos más importantes a la hora de trabajar con Docker es el compartir imágenes Docker aparte de usar Docker Hub.&lt;/p&gt;
&lt;p&gt;Se tiene la exportación e importación de imágenes como opción almacenando y extrayendo a partir de archivos &lt;code&gt;tar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se tienen los artículos anteriores sobre Docker:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/importar-un-contenedor-docker-en-python.html#importar-un-contenedor-docker-en-python"&gt;Importar un contenedor Docker en Python.&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Lo primero es ver que contenedores se tienen ejecutándose en el equipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker ps 
CONTAINER ID        IMAGE                     COMMAND                  CREATED             STATUS              PORTS                                                                    NAMES
b0c1163d1668        gitlab/gitlab-ce:latest   &amp;quot;/assets/wrapper&amp;quot;        4 weeks ago         Up 4 hours          0.0.0.0:80-&amp;gt;80/tcp, 0.0.0.0:443-&amp;gt;443/tcp, 0.0.0.0:8022-&amp;gt;22/tcp           gitlab
b4d3c96f6dc9        jenkins                   &amp;quot;/bin/tini -- /usr/lo&amp;quot;   4 weeks ago         Up 4 hours          0.0.0.0:8080-&amp;gt;8080/tcp, 0.0.0.0:50000-&amp;gt;50000/tcp, 0.0.0.0:8122-&amp;gt;22/tcp   jenkins
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se tienen dos contenedores ejecutándose, uno de gitlab y otro de jenkins.&lt;/p&gt;
&lt;p&gt;Se realizará respaldo del contenedor con gitlab usando el comando &lt;code&gt;docker export&lt;/code&gt;, pasando el id del contenedor de gitlab que es b0c1163d1668:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$docker export b0c1163d1668 &amp;gt; gitlab.tar
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al ejecutar &lt;code&gt;ls&lt;/code&gt; se tiene el archivo &lt;code&gt;gitlab.tar&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l
total 2201820
-rw-r--r-- 1 ernesto ernesto 1409662976 feb 24 16:15 gitlab.tar
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para usar la imagen a partir del archivo &lt;code&gt;tar&lt;/code&gt; se importa la imagen: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gitlab2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;gitlab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;
&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;020&lt;/span&gt;&lt;span class="n"&gt;ea830b267080ce092f42b1b0f1a2d520b21b8a3393696f5271f42e4bd8d79&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El nombre de la imagen es gitlab2, ahora se listan las imágenes que se tienen en el equipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker images &lt;span class="p"&gt;|&lt;/span&gt; grep gitlab
gitlab2                        latest              020ea830b267        About a minute ago   &lt;span class="m"&gt;1&lt;/span&gt;.344 GB
gitlab/gitlab-ce               latest              db1c29be1030        &lt;span class="m"&gt;6&lt;/span&gt; weeks ago          &lt;span class="m"&gt;1&lt;/span&gt;.326 GB
sameersbn/gitlab               latest              47d53c4a820a        &lt;span class="m"&gt;10&lt;/span&gt; weeks ago         &lt;span class="m"&gt;675&lt;/span&gt;.7 MB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si se quiere compartir la imagen con alguien, se puede subir el archivo &lt;code&gt;tar&lt;/code&gt; a un servidor web y de ahí se puede bajar.  &lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Docker"></category></entry><entry><title>Importar un contenedor Docker en Python.</title><link href="https://ecrespo.github.io/importar-un-contenedor-docker-en-python.html" rel="alternate"></link><published>2016-02-24T09:00:00-05:30</published><updated>2016-02-24T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-02-24:/importar-un-contenedor-docker-en-python.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="./images/importaruncontenedordockerenpython-1.png"&gt;&lt;/p&gt;
&lt;p&gt;En los artículos anteriores sobre Docker se ha tocado el manejo de imágenes, ahora se explicará como importar un contenedor desde Python, este artículo se basa en el &lt;a href="https://blog.deepgram.com/import-a-docker-container-in-python/"&gt;siguiente artículo en inglés&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian …&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="./images/importaruncontenedordockerenpython-1.png"&gt;&lt;/p&gt;
&lt;p&gt;En los artículos anteriores sobre Docker se ha tocado el manejo de imágenes, ahora se explicará como importar un contenedor desde Python, este artículo se basa en el &lt;a href="https://blog.deepgram.com/import-a-docker-container-in-python/"&gt;siguiente artículo en inglés&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html"&gt;Crear una imagen Docker a partir de un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html"&gt;Instalar Gitlab por medio de Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/ejecutando-micros-servicios-con-docker-usando-docker-compose.html"&gt;Ejecutando microservicios con docker usando docker-compose&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/docker-en-docker-dind.html"&gt;Docker en Docker (DinD)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-con-docker-usando-docker-compose-con-postgresql-como-microservicio.html"&gt;Iniciando Django con docker usando docker-compose con postgresql como microservicio.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se tiene el módulo &lt;a href="https://github.com/deepgram/sidomo"&gt;Sidomo&lt;/a&gt; que permite manejar contenedores.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;sidomo&lt;/code&gt; se ejecuta el comando &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install -e git+https://github.com/deepgram/sidomo.git#egg=sidomo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se baja la imagen Docker de Ubuntu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull ubuntu
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El código de ejemplo del sitio de &lt;code&gt;sidomo&lt;/code&gt; se encuentra en el siguiente &lt;a href="https://github.com/deepgram/sidomo/blob/master/examples/hello_world.py"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La modificación del código es el siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sidomo&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;


    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Just say it.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;


    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;


        &lt;span class="s1"&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


        &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;


    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;


        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;


            &lt;span class="s1"&gt;&amp;#39;echo Hola Mundo  &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;


        &lt;span class="p"&gt;):&lt;/span&gt;


            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;



&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;


    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;desde un contenedor Docker&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;


        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al ejecutar el código se tiene:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;ejemplo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; 
&lt;span class="n"&gt;Hola&lt;/span&gt; &lt;span class="n"&gt;Mundo&lt;/span&gt; &lt;span class="n"&gt;desde&lt;/span&gt; &lt;span class="n"&gt;un&lt;/span&gt; &lt;span class="n"&gt;contenedor&lt;/span&gt; &lt;span class="n"&gt;Docker&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="Docker"></category></entry><entry><title>Docker en Docker (DinD)</title><link href="https://ecrespo.github.io/docker-en-docker-dind.html" rel="alternate"></link><published>2016-01-27T09:00:00-05:30</published><updated>2016-01-27T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-01-27:/docker-en-docker-dind.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="./images/dockerendockerdind-1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Docker en Docker es simplemente correr un Docker dentro de un contenedor Docker.&lt;/p&gt;
&lt;p&gt;El sitio de  DinD lo pueden visitar en el siguiente &lt;a href="https://github.com/jpetazzo/dind"&gt;enlace&lt;/a&gt;, la imagen docker oficial de DinD la pueden ver en el siguiente &lt;a href="https://hub.docker.com/_/docker/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo primero que hay que hacer es correr docker con unas opciones:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="./images/dockerendockerdind-1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Docker en Docker es simplemente correr un Docker dentro de un contenedor Docker.&lt;/p&gt;
&lt;p&gt;El sitio de  DinD lo pueden visitar en el siguiente &lt;a href="https://github.com/jpetazzo/dind"&gt;enlace&lt;/a&gt;, la imagen docker oficial de DinD la pueden ver en el siguiente &lt;a href="https://hub.docker.com/_/docker/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo primero que hay que hacer es correr docker con unas opciones:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --rm --privileged -t -i -e LOG=file jpetazzo/dind
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El modo &lt;code&gt;privileged&lt;/code&gt;  permite negociar algunas características del sistema de archivo.&lt;/p&gt;
&lt;p&gt;Luego de iniciar el contenedor se ejecuta  otro contenedor esta vez de &lt;code&gt;busyox&lt;/code&gt; que devuelve "Hello new World!".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run busybox echo &amp;quot;Hello New World!&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A continuación se muestra una figura del resultado de la ejecución.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/dockerendockerdind-2.png"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Docker"></category></entry><entry><title>Ejecutando micros servicios con docker usando docker-compose</title><link href="https://ecrespo.github.io/ejecutando-micros-servicios-con-docker-usando-docker-compose.html" rel="alternate"></link><published>2016-01-26T09:00:00-05:30</published><updated>2016-01-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-01-26:/ejecutando-micros-servicios-con-docker-usando-docker-compose.html</id><summary type="html">&lt;p&gt;Continuando con los artículos de docker, en este caso se hablará de iniciar dos contenedores donde uno le da servicio al otro, un contenedor tendrá el servicio de redis y el otro será una aplicación web sencilla hecha en flask.&lt;/p&gt;
&lt;p&gt;Para poder lograr el manejo de varios contenedores existe docker-compose …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los artículos de docker, en este caso se hablará de iniciar dos contenedores donde uno le da servicio al otro, un contenedor tendrá el servicio de redis y el otro será una aplicación web sencilla hecha en flask.&lt;/p&gt;
&lt;p&gt;Para poder lograr el manejo de varios contenedores existe docker-compose, para el caso de este artículo el &lt;a href="https://docs.docker.com/compose/gettingstarted/"&gt;enlace&lt;/a&gt; sobre docker-compose en flask lo pueden revisar en el siguiente enlace.&lt;/p&gt;
&lt;p&gt;Los artículos anteriores que tratan el tema de docker son:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html#instalar-docker-en-debian-jessie"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html#uso-de-docker-en-debian-jessie-parte-2"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html#crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile"&gt;Crear una imagen Docker con un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html#iniciando-django-usando-docker"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-gitlab-por-medio-de-docker.html#instalar-gitlab-por-medio-de-docker"&gt;Iniciando Gitlab por medio de Docker&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Primero se crea el directorio de trabajo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir flask
cd flask 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se crea el archivo &lt;code&gt;app.py&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Se importa flask y redis&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;redis&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Redis&lt;/span&gt;

&lt;span class="c1"&gt;#Se crea la instancia de flask &lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Se crea la instancia de redis&lt;/span&gt;
&lt;span class="n"&gt;redis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Redis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;redis&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;#Se crea la función hello definiendo la ruta del decorador.&lt;/span&gt;
&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;#Se incrementa el valor de la variable hits de redis&lt;/span&gt;
    &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;#Se retorna un mensaje con el valor actual de la variable en redis&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello is me &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;#Se ejecuta la aplicación en modo debug&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se crea el archivo &lt;code&gt;requerimientos.txt&lt;/code&gt;, donde se define que se requiere instalar flask y redis:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;flask
redis
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se crea el archivo &lt;code&gt;Dockerfile&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM python:2.7
WORKDIR /code
ADD requerimientos.txt /code/
RUN pip install -r requerimientos.txt
ADD . /code
CMD python app.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se construye la imagen web:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker build -t web .
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se definen los servicios por medio del archivo &lt;code&gt;docker-compose.yml&lt;/code&gt; que contiene lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5000:5000&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;.:/&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;
  &lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;
&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Descripción del archivo &lt;code&gt;docker-compose.yml&lt;/code&gt;:
web: Define la imagen llamada web para ser construída, maneja los puertos 5000 local y externo será 5000 también, además se define el directorio volume llamado code, al final para web se define links que hace llamado a la imagen redis.
redis: Se define la imagen redis.
Construir y correr la aplicación con compose:&lt;/p&gt;
&lt;p&gt;Desde el directorio donde se encuentran los archivos ejecutar :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose up
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En la siguiente figura se muestra que está corriendo la aplicación:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/ejecutandomicrosservicioscondockerusandodockercompose-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Al abrir el navegador en en localhost:5000 se tiene lo que muestra la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/ejecutandomicrosservicioscondockerusandodockercompose-2.png"&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar &lt;code&gt;docker ps&lt;/code&gt; se tienen los contenedores que se están ejecutando:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/ejecutandomicrosservicioscondockerusandodockercompose-3.png"&gt;&lt;/p&gt;
&lt;p&gt;También se tiene para &lt;code&gt;docker-compose&lt;/code&gt; el comando &lt;code&gt;ps&lt;/code&gt; y se obtiene lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/ejecutandomicrosservicioscondockerusandodockercompose-4.png"&gt;&lt;/p&gt;
&lt;p&gt;El resultado es simplificado con respecto a &lt;code&gt;docker ps&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para detener los procesos o la ejecución del servicio se usa el comando stop de docker-compose:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-componse stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con docker compose se puede ejecutar multiples imagenes y usarlas en una aplicación principal, esto logra el concepto de microservicios.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Docker"></category></entry><entry><title>Instalar Gitlab por medio de Docker</title><link href="https://ecrespo.github.io/instalar-gitlab-por-medio-de-docker.html" rel="alternate"></link><published>2016-01-20T09:00:00-05:30</published><updated>2016-01-20T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2016-01-20:/instalar-gitlab-por-medio-de-docker.html</id><summary type="html">&lt;p&gt;Lo artículos anteriores de docker son los siguientes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html#instalar-docker-en-debian-jessie"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html#uso-de-docker-en-debian-jessie-parte-2"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html#crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile"&gt;Crear una imagen Docker con un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html#iniciando-django-usando-docker"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el &lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;primer artículo de uso de Docker en …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lo artículos anteriores de docker son los siguientes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/instalar-docker-en-debian-jessie.html#instalar-docker-en-debian-jessie"&gt;Instalar Docker en Debian Jessie&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;Uso de Docker en Debian Jessie (parte 1)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-2.html#uso-de-docker-en-debian-jessie-parte-2"&gt;Uso de Docker en Debian Jessie (parte 2)&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile.html#crear-una-imagen-docker-a-partir-de-un-archivo-dockerfile"&gt;Crear una imagen Docker con un archivo Dockerfile&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seraph.to/iniciando-django-usando-docker.html#iniciando-django-usando-docker"&gt;Iniciando Django usando Docker&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el &lt;a href="https://www.seraph.to/uso-de-docker-en-debian-jessie-parte-1.html#uso-de-docker-en-debian-jessie-parte-1"&gt;primer artículo de uso de Docker en Debian Jessie&lt;/a&gt; se muestra al final como usar SonarQube por medio de Docker con dos instancias de la misma imagen.&lt;/p&gt;
&lt;p&gt;En esté artículo se bajará la imagen Docker de Gitlab edición comunitaria. El sitio donde se aloja está en el siguiente &lt;a href="https://hub.docker.com/r/gitlab/gitlab-ce/"&gt;enlace&lt;/a&gt; y la documentación  en inglés a la cual se basa esté artículo está en el siguiente enlace.&lt;/p&gt;
&lt;p&gt;Se ejecutará el &lt;code&gt;gitlab-ce&lt;/code&gt; que se bajará del sitio de dockerhub. El comando es el siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --detach  --hostname pruebasgitlab --publish 443:443 --publish 80:80 --publish 22:22  --name gitlab   --restart always --volume /srv/gitlab/config:/etc/gitlab --volume /srv/gitlab/logs:/var/log/gitlab --volume /srv/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:latest
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;hostname: El nombre del host es pruebasgitlab.  &lt;/li&gt;
&lt;li&gt;publish: publica el puerto 443, 80 y 22 de la instancia del contenedor.  &lt;/li&gt;
&lt;li&gt;name: El nombre de la imagen es gitlab.  &lt;/li&gt;
&lt;li&gt;restart always: Siempre levanta la instancia.  &lt;/li&gt;
&lt;li&gt;volume: Se define unos volumenes (son directorios del host anfitrion que se montan en los contenedores), en este caso son 3 directorios.  &lt;/li&gt;
&lt;li&gt;gitlab/gitlab-ce:latest: Se trae la última versión de la imagen de gitlab-ce.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El contenedor de Gitlab usa volumenes montados para datos persistentes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/srv/gitlab/data&lt;/code&gt; se monta en &lt;code&gt;/var/opt/gitlab&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/srv/gitlab/logs&lt;/code&gt; se monta en &lt;code&gt;/var/log/gitlab&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/srv/gitlab/config&lt;/code&gt; se monta en &lt;code&gt;/etc/gitlab&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para configurar el Gitlab se tiene un archivo que se tiene en el equipo &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para acceder a la configuración se puede iniciar bash en el contenedor que está corriendo, esto permite navegar en la estructura de directorio y ejecutar cualquier programa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker exec -it gitlab /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora se puede editar el archivo &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;También se puede editar con el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker exec -it gitlab vi /etc/gitlab/gitla.rb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para habilitar configuraciones de https se puede revisar el siguiente &lt;a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#enable-https"&gt;enlace&lt;/a&gt;, o las configuraciones de smtp en este &lt;a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/smtp.md"&gt;otro&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para reiniciar el gitlab luego del cambio de configuraciones se ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;doker restart gitlab
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A continuación se muestra una captura de pantalla del gitlab en funcionamiento desde Docker:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalargitlabpormediodedocker-1.png"&gt;&lt;/p&gt;
&lt;p&gt;En este artículo se muestra como acceder a varios puertos como el 80,443 y el 22 el cual permite conectarse a dicho contenedor de manera remota.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Ubuntu"></category><category term="Linux"></category><category term="Gitlab"></category><category term="Docker"></category></entry></feed>