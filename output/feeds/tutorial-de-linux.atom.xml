<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Página de Seraph - Tutorial de Linux</title><link href="https://ecrespo.github.io/" rel="alternate"></link><link href="https://ecrespo.github.io/feeds/tutorial-de-linux.atom.xml" rel="self"></link><id>https://ecrespo.github.io/</id><updated>2011-07-26T09:00:00-05:30</updated><subtitle>Data Science</subtitle><entry><title>Iniciar sesión de usuario autenticando vía pendrive</title><link href="https://ecrespo.github.io/iniciar-sesion-de-usuario-autenticando-via-pendrive.html" rel="alternate"></link><published>2011-07-26T09:00:00-05:30</published><updated>2011-07-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-26:/iniciar-sesion-de-usuario-autenticando-via-pendrive.html</id><summary type="html">&lt;p&gt;Cuando no se pasa uno a modo paranoico se le ocurren ideas de como validar usuarios al ingresar en una sesión de escritorio vía GDM.&lt;/p&gt;
&lt;p&gt;En Debian/Ubuntu/Canaima existe los paquetes libpam-usb y pamusb-tools, estos permiten crear una llave, dicha llave se guarda en el pendrive. Luego se configura …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cuando no se pasa uno a modo paranoico se le ocurren ideas de como validar usuarios al ingresar en una sesión de escritorio vía GDM.&lt;/p&gt;
&lt;p&gt;En Debian/Ubuntu/Canaima existe los paquetes libpam-usb y pamusb-tools, estos permiten crear una llave, dicha llave se guarda en el pendrive. Luego se configura pam para que se pida la llave al momento de ingresar usuario y clave en el GDM del equipo; si no se conecta el pendrive el GDM colocará un mensaje que clave invalida.&lt;/p&gt;
&lt;p&gt;Para instalar estos paquetes se ejecuta aptitude:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;aptitude install libpam-usb pamusb-tools
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Luego se conecta el pendrive en el equipo y se agrega el dispositivo en /etc/pamusb.conf con el comando pamusb-conf:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pamusb-conf --add-device /media/F060-785C/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Donde /media/F060-785C/ es la ruta del pendrive.&lt;/p&gt;
&lt;p&gt;Se agrega el usuario en /etc/pamusb.conf el cual iniciará sesión en el equipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pamusb-conf --add-user ecrespo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se verifica la configuración de pamusb con el usuario agregado:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pamusb-check ecrespo
* Authentication request for user &amp;quot;ecrespo&amp;quot; (pamusb-check)
* Device &amp;quot;/media/F060-785C/&amp;quot; is connected (good).
* Performing one time pad verification...
* Regenerating new pads...
* Unable to update pads.
* Access granted.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al devolver el programa acceso garantizado ya se tiene todo listo para usar el pendrive en el momento de inicio de sesión, sólo falta modificar pam para que permita la autenticación con el pendrive.&lt;/p&gt;
&lt;p&gt;Se edita el archivo /etc/pam.d/common-aut y se agrega la siguiente línea:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;auth sufficient pam_usb.so
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esta línea el GDM verifica el token de la llave, si se quiere que pida tanto la contraseña como el token se cambia sufficient a required.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;auth required pam_usb.so
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A partir de ahora al iniciar sesión se necesita la contraseña y el token.&lt;/p&gt;
&lt;p&gt;A continuación se muestra el mensaje que envía la consola al ejecutar sudo -s :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[sudo] password for ecrespo: 
* pam_usb v0.4.2
* Authentication request for user &amp;quot;ecrespo&amp;quot; (sudo)
* Device &amp;quot;/media/F060-785C/&amp;quot; is connected (good).
* Performing one time pad verification...
* Regenerating new pads...
* Unable to update pads.
* Access granted.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Ubuntu"></category><category term="Canaima"></category><category term="libpam"></category><category term="gnome"></category><category term="usb"></category></entry><entry><title>Crear un paquete python de un programa</title><link href="https://ecrespo.github.io/crear-un-paquete-python-de-un-programa.html" rel="alternate"></link><published>2010-08-08T11:00:00-05:30</published><updated>2010-08-08T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-08-08:/crear-un-paquete-python-de-un-programa.html</id><summary type="html">&lt;p&gt;Este artículo explicará el proceso de creación de un tar.gz o tar.bz2 del programa de configuración de los accesos rápidos de teclado por medio de gconf con python.
La siguiente imagen muestra el repositorio del proyecto en google code.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Repositorio  de Python-config-accesskey-gnome - Google Code" src="./images/googlecode.png"&gt;&lt;/p&gt;
&lt;p&gt;Como muestra la figura se tiene una serie de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este artículo explicará el proceso de creación de un tar.gz o tar.bz2 del programa de configuración de los accesos rápidos de teclado por medio de gconf con python.
La siguiente imagen muestra el repositorio del proyecto en google code.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Repositorio  de Python-config-accesskey-gnome - Google Code" src="./images/googlecode.png"&gt;&lt;/p&gt;
&lt;p&gt;Como muestra la figura se tiene una serie de archivos en el repositorio, a continuación se explicará cada uno de ellos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;COPYING: Contiene la Licencia del proyecto.&lt;/li&gt;
&lt;li&gt;MANIFEST.in: Es una plantilla que contiene la lista de archivos que se incluirán en el paquete del programa.&lt;/li&gt;
&lt;li&gt;README: Contiene información del programa, una descripción de uso y requerimientos.&lt;/li&gt;
&lt;li&gt;TODO: Lista de cosas por hacer para las siguientes versiones del programa.&lt;/li&gt;
&lt;li&gt;Archivos *.py: Son los programas desarrollados.&lt;/li&gt;
&lt;li&gt;pyconfig-accessgnome-ui.desktop: Archivo que define la información de la aplicación en el menú del escritorio.&lt;/li&gt;
&lt;li&gt;pyconfig-accessgnome.glade : Archivo xml glade que contiene la interfaz gráfica.&lt;/li&gt;
&lt;li&gt;setup.py: Archivo de configuración del proceso de instalación y creación de paquetes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para fines prácticos se explicará MANIFEST.in y setup.py.&lt;/p&gt;
&lt;p&gt;MANIFEST.in es un archivo plantilla de entra que define que archivos se van a colocar en el archivo MANIFEST, este archivo final le dira a setup.py cuales serán los archivos que se incluirán en el paquete .tar.gz o .tar.bz2.
El archivo tiene una directiva include donde se le dirá los archivos que se quieren incluir.
Por ejemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;include COPYING pyconfig-accessgnome.glade pyconfig-accessgnome-ui.desktop README TODO
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El archivo setup.py contiene lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="c1"&gt;#importar setup de distutils&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;distutils.core&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;  
&lt;span class="c1"&gt;#Crear la variable data_files que contiene las rutas de donde se van a colocar los archivos.&lt;/span&gt;
&lt;span class="n"&gt;data_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;share/applications&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pyconfig-accessgnome-ui.desktop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;share/python-config-accesskey-gnome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;COPYING&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;configGconf.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pyconfig-accessgnome.glade&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pyconfig-accessgnome-ui.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;README&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;TODO&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])]&lt;/span&gt;


&lt;span class="c1"&gt;#se define el nombre del programa, la versión, una descripción corta, el autor y su correo, &lt;/span&gt;
&lt;span class="c1"&gt;#el url del proyecto, la licencia, los scripts principales del programa, los archivos de datos adicionales,&lt;/span&gt;
&lt;span class="c1"&gt;#La plataforma soportadas,los módulos que se requieren para el funcionamiento del programa.&lt;/span&gt;
&lt;span class="c1"&gt;#Y el módulo que se desarrollo y necesita el programa principal.&lt;/span&gt;


&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;python-gconf-keybinding&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Allow config keyboard access application with gconf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Ernesto Nadir Crespo Avila&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="n"&gt;author_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ecrespo@gmail.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://code.google.com/p/python-config-accesskey-gnome/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;license&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GPL v3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;scripts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pyconfig-accessgnome-ui.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;configGconf.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="n"&gt;data_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data_files&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;platforms&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;i386&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AMD64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="n"&gt;requires&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gtk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gconf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pygtk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gtk.glade&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="n"&gt;py_modules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;configGconf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al tener los archivos necesarios para instalar el programa y para crear los paquetes sólo queda ejecutar los comandos:
Listar los archivos existentes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l
total 92
-rwxr-xr-x 1 ernesto ernesto  8036 ago  7 17:49 configGconf.py
-rw-r--r-- 1 ernesto ernesto 33353 jul 27 20:41 COPYING
-rw-r--r-- 1 ernesto ernesto    88 ago  8 18:15 MANIFEST.in
-rw-r--r-- 1 ernesto ernesto 14729 jul 27 20:45 pyconfig-accessgnome.glade
-rwxr-xr-x 1 ernesto ernesto   315 jul 27 20:41 pyconfig-accessgnome-ui.desktop
-rwxr-xr-x 1 ernesto ernesto  8420 ago  8 17:06 pyconfig-accessgnome-ui.py
-rw-r--r-- 1 ernesto ernesto  4260 jul 27 20:41 README
-rwxr-xr-x 1 ernesto ernesto  1021 ago  8 18:12 setup.py
-rw-r--r-- 1 ernesto ernesto     0 jul 27 20:41 TODO
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Probar la instalación del programa:
Se ejecuta el install para el setup.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo python setup.py install
running install
running build
running build_py
creating build
creating build/lib.linux-i686-2.6
copying configGconf.py -&amp;gt; build/lib.linux-i686-2.6
running build_scripts
creating build/scripts-2.6
copying and adjusting pyconfig-accessgnome-ui.py -&amp;gt; build/scripts-2.6
copying and adjusting configGconf.py -&amp;gt; build/scripts-2.6
changing mode of build/scripts-2.6/pyconfig-accessgnome-ui.py from 644 to 755
changing mode of build/scripts-2.6/configGconf.py from 644 to 755
running install_lib
running install_scripts
copying build/scripts-2.6/pyconfig-accessgnome-ui.py -&amp;gt; /usr/local/bin
copying build/scripts-2.6/configGconf.py -&amp;gt; /usr/local/bin
changing mode of /usr/local/bin/pyconfig-accessgnome-ui.py to 755
changing mode of /usr/local/bin/configGconf.py to 755
running install_data
running install_egg_info
Removing /usr/local/lib/python2.6/dist-packages/python_gconf_keybinding-0.4.egg-info
Writing /usr/local/lib/python2.6/dist-packages/python_gconf_keybinding-0.4.egg-info
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esto crea un directorio build que contiene los scripts y la librerías, luego los copia en /usr/local/  tanto en bin como en share. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls share/python-config-accesskey-gnome/
configGconf.py  COPYING  pyconfig-accessgnome.glade  pyconfig-accessgnome-ui.py  README  TODO

ls bin/
configGconf.py  pyconfig-accessgnome-ui.py  pyloro.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ya en este momento se puede ejecutar el programa tanto de forma gráfica como desde la línea de comandos.&lt;/p&gt;
&lt;p&gt;A continuación viene el proceso de construcción del tar.gz y tar.bz:
El comando para el setup.py es sdist el cual crea el paquete para ser distribuído, adicionalmente se le pasa el formato con la opción --formats=bztar, gztar. Los argumentos bztar y gztar es para crear un tar.bz2 y un tar.gz respectivamente.&lt;/p&gt;
&lt;p&gt;El comando es el siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python setup.py sdist --formats=bztar,gztar
running sdist
reading manifest template &amp;#39;MANIFEST.in&amp;#39;
writing manifest file &amp;#39;MANIFEST&amp;#39;
creating python-gconf-keybinding-0.4
making hard links in python-gconf-keybinding-0.4...
hard linking COPYING -&amp;gt; python-gconf-keybinding-0.4
hard linking README -&amp;gt; python-gconf-keybinding-0.4
hard linking TODO -&amp;gt; python-gconf-keybinding-0.4
hard linking configGconf.py -&amp;gt; python-gconf-keybinding-0.4
hard linking pyconfig-accessgnome-ui.desktop -&amp;gt; python-gconf-keybinding-0.4
hard linking pyconfig-accessgnome-ui.py -&amp;gt; python-gconf-keybinding-0.4
hard linking pyconfig-accessgnome.glade -&amp;gt; python-gconf-keybinding-0.4
hard linking setup.py -&amp;gt; python-gconf-keybinding-0.4
creating dist
tar -cf dist/python-gconf-keybinding-0.4.tar python-gconf-keybinding-0.4
bzip2 -f9 dist/python-gconf-keybinding-0.4.tar
tar -cf dist/python-gconf-keybinding-0.4.tar python-gconf-keybinding-0.4
gzip -f9 dist/python-gconf-keybinding-0.4.tar
removing &amp;#39;python-gconf-keybinding-0.4&amp;#39; (and everything under it)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ya se tiene un directorio dist con los 2 paquetes creados:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l dist/
total 40
-rw-r--r-- 1 ernesto ernesto 16539 ago  8 19:12 python-gconf-keybinding-0.4.tar.bz2
-rw-r--r-- 1 ernesto ernesto 18331 ago  8 19:12 python-gconf-keybinding-0.4.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El contenido de un paquete es el siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar -tvzf dist/python-gconf-keybinding-0.4.tar.gz 
drwxr-xr-x ernesto/ernesto   0 2010-08-08 19:12 python-gconf-keybinding-0.4/
-rwxr-xr-x ernesto/ernesto 8420 2010-08-08 17:06 python-gconf-keybinding-0.4/pyconfig-accessgnome-ui.py
-rw-r--r-- ernesto/ernesto 33353 2010-07-27 20:41 python-gconf-keybinding-0.4/COPYING
-rwxr-xr-x ernesto/ernesto  8036 2010-08-07 17:49 python-gconf-keybinding-0.4/configGconf.py
-rw-r--r-- ernesto/ernesto     0 2010-07-27 20:41 python-gconf-keybinding-0.4/TODO
-rwxr-xr-x ernesto/ernesto   315 2010-07-27 20:41 python-gconf-keybinding-0.4/pyconfig-accessgnome-ui.desktop
-rwxr-xr-x ernesto/ernesto  1021 2010-08-08 18:12 python-gconf-keybinding-0.4/setup.py
-rw-r--r-- ernesto/ernesto 14729 2010-07-27 20:45 python-gconf-keybinding-0.4/pyconfig-accessgnome.glade
-rw-r--r-- ernesto/ernesto  4260 2010-07-27 20:41 python-gconf-keybinding-0.4/README
-rw-r--r-- ernesto/ernesto   394 2010-08-08 19:12 python-gconf-keybinding-0.4/PKG-INFO
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sólo queda probar la instalación del paquete, primero se descomprime y luego se ejecuta el setup.py con la opción install:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar -xvzf python-gconf-keybinding-0.4.tar.gz 
python-gconf-keybinding-0.4/
python-gconf-keybinding-0.4/pyconfig-accessgnome-ui.py
python-gconf-keybinding-0.4/COPYING
python-gconf-keybinding-0.4/configGconf.py
python-gconf-keybinding-0.4/TODO
python-gconf-keybinding-0.4/pyconfig-accessgnome-ui.desktop
python-gconf-keybinding-0.4/setup.py
python-gconf-keybinding-0.4/pyconfig-accessgnome.glade
python-gconf-keybinding-0.4/README
python-gconf-keybinding-0.4/PKG-INFO
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se cambia al directorio python-gconf-keybinding-0.4.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd python-gconf-keybinding-0.4/ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instalación del paquete:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo python setup.py install 
running install
running build
running build_py
creating build
creating build/lib.linux-i686-2.6
copying configGconf.py -&amp;gt; build/lib.linux-i686-2.6
running build_scripts
creating build/scripts-2.6
copying and adjusting pyconfig-accessgnome-ui.py -&amp;gt; build/scripts-2.6
copying and adjusting configGconf.py -&amp;gt; build/scripts-2.6
changing mode of build/scripts-2.6/pyconfig-accessgnome-ui.py from 644 to 755
changing mode of build/scripts-2.6/configGconf.py from 644 to 755
running install_lib
running install_scripts
copying build/scripts-2.6/pyconfig-accessgnome-ui.py -&amp;gt; /usr/local/bin
copying build/scripts-2.6/configGconf.py -&amp;gt; /usr/local/bin
changing mode of /usr/local/bin/pyconfig-accessgnome-ui.py to 755
changing mode of /usr/local/bin/configGconf.py to 755
running install_data
running install_egg_info
Removing /usr/local/lib/python2.6/dist-packages/python_gconf_keybinding-0.4.egg-info
Writing /usr/local/lib/python2.6/dist-packages/python_gconf_keybinding-0.4.egg-info
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como ya se explico antes el programa se instala en /usr/local .&lt;/p&gt;
&lt;p&gt;El próximo artículo explicará como crear un paquete Debian a partir del tar.gz.&lt;/p&gt;
&lt;p&gt;Para más información pueden visitar los siguientes enlaces:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.python.org/distutils/"&gt;http://docs.python.org/distutils/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mundogeek.net/archivos/2008/09/23/distribuir-aplicaciones-python/"&gt;http://mundogeek.net/archivos/2008/09/23/distribuir-aplicaciones-python/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;¡Haz tu donativo!
Si te gustó el artículo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
dirección: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el código QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Empaquetado"></category><category term="Gnome"></category><category term="Linux"></category><category term="Python"></category></entry></feed>