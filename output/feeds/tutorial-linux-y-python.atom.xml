<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Página de Seraph - Tutorial Linux y Python</title><link href="https://ecrespo.github.io/" rel="alternate"></link><link href="https://ecrespo.github.io/feeds/tutorial-linux-y-python.atom.xml" rel="self"></link><id>https://ecrespo.github.io/</id><updated>2011-02-09T09:00:00-05:30</updated><subtitle>Data Scientist </subtitle><entry><title>Ejecutar comandos de forma remota y transferencia de archivos con python</title><link href="https://ecrespo.github.io/ejecutar-comandos-de-forma-remota-y-transferencia-de-archivos-con-python.html" rel="alternate"></link><published>2011-02-09T09:00:00-05:30</published><updated>2011-02-09T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-02-09:/ejecutar-comandos-de-forma-remota-y-transferencia-de-archivos-con-python.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como realizar conexiones ssh de forma autom&amp;aacute;tica  y realizar transferencias de archivos por medio de python.&lt;/p&gt;
&lt;p&gt;Lo primero que se tiene que hacer es crear la clave p&amp;uacute;blica y privada para ssh y as&amp;iacute; poder ejecutar comandos remotos sin necesidad de clave, una gu&amp;iacute;a de como hacerlo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como realizar conexiones ssh de forma autom&amp;aacute;tica  y realizar transferencias de archivos por medio de python.&lt;/p&gt;
&lt;p&gt;Lo primero que se tiene que hacer es crear la clave p&amp;uacute;blica y privada para ssh y as&amp;iacute; poder ejecutar comandos remotos sin necesidad de clave, una gu&amp;iacute;a de como hacerlo la tiene &lt;a href="http://rafael.bonifaz.ec/blog/2011/01/ssh-con-claves-publicas-y-privadas/"&gt;Rafael Bonifaz en su blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El primer ejemplo permite establecer una conexi&amp;oacute;n remota ssh y ejecutar un comando en el equipo remoto.&lt;/p&gt;
&lt;p&gt;```python
!/usr/bin/env python&lt;/p&gt;
&lt;h1 id="programa que ejecuta un comando de forma remota"&gt;Programa que ejecuta un comando de forma remota&lt;/h1&gt;
&lt;h1 id="se importa el modulo paramiko"&gt;Se importa el m&amp;oacute;dulo paramiko&lt;/h1&gt;
&lt;p&gt;import paramiko&lt;/p&gt;
&lt;h1 id="se crea la funcion ssh donde se le pasa el usuario, la ip del equipo remoto, el comando a ejecutar, la clave"&gt;Se crea la funci&amp;oacute;n ssh donde se le pasa el usuario, la IP del equipo remoto, el comando a ejecutar, la clave&lt;/h1&gt;
&lt;h1 id="del usuario en el equipo remoto (en este caso se autentica por llaves), puerto de la conexion ssh y se guarda"&gt;del usuario en el equipo remoto (en este caso se autentica por llaves), puerto de la conexi&amp;oacute;n ssh y se guarda&lt;/h1&gt;
&lt;h1 id="un log de la conexion."&gt;un log de la conexi&amp;oacute;n.&lt;/h1&gt;
&lt;p&gt;def ssh(usuario,hostname,comando,puerto=22,log="paramiko.log"):
        #Se guarda el log
        paramiko.util.log_to_file(log)
        #Se define la ruta donde se encuentra la llave RSA
        llave = "/home/ernesto/.ssh/id_rsa"
        #Se carga la llave RSA
        key = paramiko.RSAKey.from_private_key_file(llave)
        #Se crea la instancia del cliente ssh
        conexion = paramiko.SSHClient()
        #Se carga las llaves del host para validar la autenticaci&amp;oacute;n por llaves.
        conexion.load_system_host_keys()
        #Se establece la conexi&amp;oacute;n pasando la IP, puerto del equipo, el usuario y su clave.
        conexion.connect(hostname,puerto,usuario,pkey=key)
        #Se crea una tupla con la entrada est&amp;aacute;ndar, salida est&amp;aacute;ndar y los mensajes de error al ejecutar el comando.
        stdin,stdout,stderr = conexion.exec_command(comando)
        #Se lee la salida est&amp;aacute;ndar y se presenta la informaci&amp;oacute;n en pantalla.
        print stdout.read()
        #Se cierra la conexi&amp;oacute;n ssh.
        conexion.close()&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
        #Se ejecuta la funci&amp;oacute;n
        ssh("admin","80.13.11.25","ls -l")&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado del comando es el siguiente:&lt;/p&gt;
&lt;p&gt;```
total 93960&lt;/p&gt;
&lt;p&gt;drwxr-xr-x  2 admin admin     4096 feb  3 01:00 prueba
drwxr-xr-x  2 admin admin     4096 may  4  2010 public_html
-rw-r--r--  1 admin admin  3180604 ene 30 16:17 web2py-manual.pdf
```&lt;/p&gt;
&lt;p&gt;Para la transferencia de archivos se usar&amp;aacute; las claves RSA para que no se tenga que pasar la clave del usuario por el script en python. La idea es conectarse al equipo remoto y transferir los archivos que se encuentran en un directorio.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo del programa:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="programa que permite transferir archivos de un equipo remoto al local"&gt;Programa que permite transferir archivos de un equipo remoto al local&lt;/h1&gt;
&lt;h1 id="se importa los modulos paramiko y os."&gt;Se importa los m&amp;oacute;dulos paramiko y os.&lt;/h1&gt;
&lt;p&gt;import paramiko,os&lt;/p&gt;
&lt;h1 id="se crea la funcion recuperar archivo con los argumentos equipo, puerto, usuario y ruta del directorio donde"&gt;Se crea la funci&amp;oacute;n recuperar archivo con los argumentos equipo, puerto, usuario y ruta del directorio donde&lt;/h1&gt;
&lt;h1 id="se encuentran los archivos."&gt;se encuentran los archivos.&lt;/h1&gt;
&lt;p&gt;def recuperar_archivos(equipo,puerto,usuario,dir_path):
    #Se define la ruta donde se encuentra la llave RSA
    llave = "/home/ernesto/.ssh/id_rsa"
    #Se carga las llaves en la variable key
    key = paramiko.RSAKey.from_private_key_file(llave)
    #Se le pasa el equipo y puerto como par&amp;aacute;metro de transporte
    c = paramiko.Transport((equipo,puerto))
    #Se crea la conexi&amp;oacute;n pasando el usuario y la llave RSA.
    c.connect(username=usuario,pkey=key)
    #Se crea la conexi&amp;oacute;n sftp donde se le pasa la conexi&amp;oacute;n definida anteriormente.
    sftp = paramiko.SFTPClient.from_transport(c)
    #Se captura la lista de archivos de la ruta que se le pasa a la funci&amp;oacute;n.
    archivos = sftp.listdir(dir_path)
    #Se presenta un mensaje de recibiendo los archivos y se realiza la transferencia.
    for f in archivos:
        print "Recibiendo ",f
        sftp.get(os.path.join(dir_path,f),f)
    #Al finalizar se cierra la conexi&amp;oacute;n.
    c.close()&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Se ejecuta la funci&amp;oacute;n donde se le pasa la IP del equipo remoto con el puerto, luego el usuario y la ruta de
    #los archivos a transferir.
    recuperar_archivos("80.13.11.25",22,"admin","/home/admin/prueba/")&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Recibiendo  control-python.pdf
Recibiendo  web2py-manual.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Paramiko"></category><category term="Python"></category><category term="ssh"></category></entry><entry><title>Mejorando la velocidad de consultas de DNS con dnsmasq y probar pruebas de diagnostico</title><link href="https://ecrespo.github.io/mejorando-la-velocidad-de-consultas-de-dns-con-dnsmasq-y-probar-pruebas-de-diagnostico.html" rel="alternate"></link><published>2011-02-03T09:00:00-05:30</published><updated>2011-02-03T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-02-03:/mejorando-la-velocidad-de-consultas-de-dns-con-dnsmasq-y-probar-pruebas-de-diagnostico.html</id><summary type="html">&lt;p&gt;En el art&amp;iacute;culo de hoy se probar&amp;aacute; que al usar dnsmasq como dnscache mejorar&amp;aacute; la conexi&amp;oacute;n a internet en especial cuando se navega por el celular o se tiene una conexi&amp;oacute;n a internet algo lenta. Adicionalmente se mencionar&amp;aacute;n varias herramientas de diagnostico de consultas de DNS como lo son dnstracer …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el art&amp;iacute;culo de hoy se probar&amp;aacute; que al usar dnsmasq como dnscache mejorar&amp;aacute; la conexi&amp;oacute;n a internet en especial cuando se navega por el celular o se tiene una conexi&amp;oacute;n a internet algo lenta. Adicionalmente se mencionar&amp;aacute;n varias herramientas de diagnostico de consultas de DNS como lo son dnstracer, dnswalk, dig, host. Adicionalmente se mostrar&amp;aacute; u par de scripts en python para consultas de DNS.&lt;/p&gt;
&lt;p&gt;Revisar los DNS que usa nuestro equipo:
Los DNS que se est&amp;aacute; usando en el equipo son los DNS de CANTV, esto se puede ver al ejecutar un cat a /etc/resolv.conf&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)"&gt;Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)&lt;/h1&gt;
&lt;h1 id="do not edit this file by hand -- your changes will be overwritten"&gt;DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN&lt;/h1&gt;
&lt;p&gt;nameserver 200.44.32.12
nameserver 200.11.248.12
```&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; informaci&amp;oacute;n es la que maneja los servidores de DHCP de donde se encuentra conectado el equipo.&lt;/p&gt;
&lt;p&gt;Ahora se ejecuta el comando dig el cual una de las informaciones que trae es el tiempo de la consulta.
La consulta se realizo con www.velug.org.ve:&lt;/p&gt;
&lt;p&gt;```
dig www.velug.org.ve&lt;/p&gt;
&lt;p&gt;; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.7.2-P3 &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.velug.org.ve
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 14680
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
&lt;p&gt;;; QUESTION SECTION:
;www.velug.org.ve.  IN A&lt;/p&gt;
&lt;p&gt;;; ANSWER SECTION:
www.velug.org.ve. 3600 IN CNAME libertad.velug.org.ve.
libertad.velug.org.ve. 3600 IN A 150.188.8.196&lt;/p&gt;
&lt;p&gt;;; Query time: 320 msec
;; SERVER: 200.44.32.12#53(200.44.32.12)
;; WHEN: Thu Feb  3 20:59:08 2011
;; MSG SIZE  rcvd: 73
```&lt;/p&gt;
&lt;p&gt;Da como resultado 320 mili segundos.&lt;/p&gt;
&lt;p&gt;Ahora con la herramienta dnstracer se verifica como se resuelven la resoluci&amp;oacute;n de nombres desde el DNS de CANTV saltando por los distintos servidores de nombres.
dnstracer -c -s 200.11.248.12  www.velug.org.ve
La opci&amp;oacute;n -c deshabilita la cache local, -s se le dice cual es el servidor de nombres y luego se le pasa el sitio a consultar.
El resultado es el siguiente:&lt;/p&gt;
&lt;p&gt;```
dnstracer -c -s 200.11.248.12  www.velug.org.ve
Tracing to www.velug.org.ve[a] via 200.11.248.12, maximum of 3 retries
200.11.248.12 (200.11.248.12) Got answer [received type is cname]&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se logro la consulta y se ve que el sitio de velug est&amp;aacute; dentro del entorno de CANTV o nic.ve.&lt;/p&gt;
&lt;p&gt;La siguiente prueba es con la herramienta dnswalk la cual devuelve un resultado de la consulta de DNS.&lt;/p&gt;
&lt;p&gt;```
dnswalk velug.org.ve.&lt;/p&gt;
&lt;p&gt;Checking velug.org.ve.
Getting zone transfer of velug.org.ve. from turpial.velug.org.ve...failed
FAIL: Zone transfer of velug.org.ve. from turpial.velug.org.ve failed: Response code from server: REFUSED
Getting zone transfer of velug.org.ve. from libertad.velug.org.ve...failed
FAIL: Zone transfer of velug.org.ve. from libertad.velug.org.ve failed: connection failed
BAD: All zone transfer attempts of velug.org.ve. failed!
2 failures, 0 warnings, 1 errors.
```&lt;/p&gt;
&lt;p&gt;El resultado es que no acepta transferir la zona de velug.org.ve.&lt;/p&gt;
&lt;p&gt;Ahora a instalar dnsmasq como dnscache.
Para instalarlo se ejecuta aptitude.&lt;/p&gt;
&lt;p&gt;```
aptitude install dnsmasq&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora al revisar el archivo resolv.conf aparece como nameserver el 127.0.0.1.
Al revisar el directorio /etc/resolvconf/resolv.conf.d/ aparece el archivo original que contiene los servidores de nombre de CANTV:&lt;/p&gt;
&lt;p&gt;```
cat original&lt;/p&gt;
&lt;p&gt;domain cantv.net
search cantv.net
nameserver 200.44.32.12
nameserver 200.11.248.12
```
Ahora se vuelve a ejecutar dig al sitio a www.velug.org.ve&lt;/p&gt;
&lt;p&gt;```
dig www.velug.org.ve&lt;/p&gt;
&lt;p&gt;; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.7.2-P3 &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.velug.org.ve
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 40987
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
&lt;p&gt;;; QUESTION SECTION:
;www.velug.org.ve.  IN A&lt;/p&gt;
&lt;p&gt;;; ANSWER SECTION:
www.velug.org.ve. 1250 IN CNAME libertad.velug.org.ve.
libertad.velug.org.ve. 76 IN A 150.188.8.196&lt;/p&gt;
&lt;p&gt;;; Query time: 92 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Thu Feb  3 21:06:08 2011
;; MSG SIZE  rcvd: 73
```&lt;/p&gt;
&lt;p&gt;Ahora devuelve un tiempo de la consulta de 92 milisegundos.&lt;/p&gt;
&lt;p&gt;Se vuelve a ejecutar dnstracer colocando como servidor el servidor dnsmasq con el siguiente resultado:&lt;/p&gt;
&lt;p&gt;```
dnstracer -c -s 127.0.0.1 www.velug.org.ve&lt;/p&gt;
&lt;p&gt;Tracing to www.velug.org.ve[a] via 127.0.0.1, maximum of 3 retries
127.0.0.1 (127.0.0.1) Got answer [received type is cname]
 |_&lt;strong&gt; libertad.velug.org.ve [velug.org.ve] (No IP address)
  _&lt;/strong&gt; turpial.velug.org.ve [velug.org.ve] (150.188.92.2) Got authoritative answer [received type is cname]&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se nota que consulta con el servidor de nombres local y luego devuelve el resultado de la consulta.&lt;/p&gt;
&lt;p&gt;Ahora el siguiente cambio que se realizar&amp;aacute; es usar los DNS p&amp;uacute;blicos de google y los de opendns.com. Esos DNS se agregan en el archivo original antes mencionado.&lt;/p&gt;
&lt;p&gt;Ahora el archivo contiene primero los DNS de google, luego los de opendns y al final los de cantv.&lt;/p&gt;
&lt;p&gt;```
nameserver 8.8.8.8
nameserver 8.8.4.4
nameserver 208.67.222.222
nameserver 208.67.220.220&lt;/p&gt;
&lt;p&gt;domain cantv.net
search cantv.net
nameserver 200.44.32.12
nameserver 200.11.248.12
```&lt;/p&gt;
&lt;p&gt;Se vuelve a realizar una consulta dig pero antes se reinicia el servicio de dnsmasq para evitar que ya se encuentra en cache el sitio de velug.&lt;/p&gt;
&lt;p&gt;```
dig www.velug.org.ve&lt;/p&gt;
&lt;p&gt;; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.7.2-P3 &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.velug.org.ve
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 26497
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
&lt;p&gt;;; QUESTION SECTION:
;www.velug.org.ve.  IN A&lt;/p&gt;
&lt;p&gt;;; ANSWER SECTION:
www.velug.org.ve. 3600 IN CNAME libertad.velug.org.ve.
libertad.velug.org.ve. 2907 IN A 150.188.8.196&lt;/p&gt;
&lt;p&gt;;; Query time: 158 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Thu Feb  3 21:14:27 2011
;; MSG SIZE  rcvd: 73
```&lt;/p&gt;
&lt;p&gt;Subio un poco pero al volver a hacer una consulta baja a 0 mili segundos.&lt;/p&gt;
&lt;p&gt;La siguiente herramienta mostrar&amp;aacute; el tr&amp;aacute;fico generado por las consultas de DNS, esa herramienta se llama dnstop.&lt;/p&gt;
&lt;p&gt;```
dnstop -l 4    wlan0&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El comando define niveles de tablas con la opci&amp;oacute;n -l luego se le pasa la interfaz por donde va a escuchar el tr&amp;aacute;fico de DNS.
Las siguiente figura muestra la pantalla que despliega la aplicaci&amp;oacute;n con la opci&amp;oacute;n s que muestra la fuente de la consulta.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop" src="./images/dnsmasq1-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Muestra la IP del servidor local.&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra los DNS de CANTV con la cantidad de consultas realizadas a cada servidor. Esa informaci&amp;oacute;n se ve al presionar la tecla d.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop 2" src="./images/dnsmasq1-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luego se puede ver la cantidad de tablas por niveles de profundidad que se le dio al comando, al presionar el 2 se muestra lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop 3" src="./images/dnsmasq1-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Aqui aparecen los dominios consultados con la cantidad de veces que se usaron.&lt;/p&gt;
&lt;p&gt;Luego al presionar 3 aparecer&amp;aacute; m&amp;aacute;s informaci&amp;oacute;n de dichos sitios:&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop 4" src="./images/dnsmasq1-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente muestra la tabla del nivel 4.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop 5" src="./images/dnsmasq1-5.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para terminar se mostrar&amp;aacute; el uso del m&amp;oacute;dulo python-dns, se crear&amp;aacute; un script en python para consultar los las IPs de varios sitios en internet.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;"""
Nombre: consulta-dns.py
Descripcion: Programa que permite realizar consultas de IPs a sitios en internet
Autor: Ernesto Crespo
Correo: ecrespo@gmail.com
Version:0.1
Licencia: GPLv3.
"""&lt;/p&gt;
&lt;h1 id="se importa el modulo dns para resolver nombres"&gt;Se importa el modulo dns para resolver nombres&lt;/h1&gt;
&lt;p&gt;import dns.resolver&lt;/p&gt;
&lt;h1 id="se crea la lista de sitios a consultar"&gt;Se crea la lista de sitios a consultar&lt;/h1&gt;
&lt;p&gt;sitios  = ["python.org","debian.org","debian.org.ve","velug.org.ve"]&lt;/p&gt;
&lt;h1 id="se crea la funcion consulta que se le pasa la lista de sitios."&gt;Se crea la funcion consulta que se le pasa la lista de sitios.&lt;/h1&gt;
&lt;h1 id="se crea la funcion consulta que se le pasa la lista de sitios._1"&gt;Se crea la funcion consulta que se le pasa la lista de sitios.&lt;/h1&gt;
&lt;p&gt;def consulta(lista=sitios):
    #Se crea un diccionario donde se almacena los resultados
    resultado = {}
    #Se crea un ciclo de los sitios de internet para averiguar las IPs de cada uno
    for equipo in lista:
        #Se crea una lista para las IPs
        ips = []
        #Se consulta la IP del equipo.
        ip = dns.resolver.query(equipo,"A")
        #Si tiene varias IPs se almacena en la lista de IPs
        for i in ip:
            ips.append(str(i))
        #Se guarda las IPs del equipo en el diccionario
        resultado[equipo] = ips
    #Se retorna el diccionario con el resultado
    return resultado&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Se llama a la funcion consulta
    respuesta = consulta()
    #Se toma la lista de equipos de la funcion keys del diccionario donde se recorre en un ciclo.
    for lista in respuesta.keys():
        #Se presenta en pantalla cada sitio con sus IPs
        print lista, respuesta[lista]
```&lt;/p&gt;
&lt;p&gt;El resultado del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debian.org ['206.12.19.7', '128.31.0.51']
python.org ['82.94.164.162']
velug.org.ve ['150.188.92.2']
debian.org.ve ['75.119.207.96']&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="DNS"></category><category term="Debian"></category><category term="dnsmasq"></category><category term="python-dns"></category><category term="Redes"></category></entry></feed>