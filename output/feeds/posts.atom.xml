<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Página de Seraph - posts</title><link href="https://ecrespo.github.io/" rel="alternate"></link><link href="https://ecrespo.github.io/feeds/posts.atom.xml" rel="self"></link><id>https://ecrespo.github.io/</id><updated>2013-02-02T10:00:00-05:30</updated><subtitle>Data Scientist </subtitle><entry><title>Monitorear el uso de memoria de un programa Python con memory_profiler</title><link href="https://ecrespo.github.io/monitorear-el-uso-de-memoria-de-un-programa-python-con-memory_profiler.html" rel="alternate"></link><published>2013-02-02T10:00:00-05:30</published><updated>2013-02-02T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-02:/monitorear-el-uso-de-memoria-de-un-programa-python-con-memory_profiler.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Memory_profiler&lt;/code&gt; es un m&amp;oacute;dulo Python desarrollado para monitorear el consumo de memoria de un programa Python l&amp;iacute;nea por l&amp;iacute;nea de cada instrucci&amp;oacute;n del programa.&lt;/p&gt;
&lt;p&gt;Para instalar el m&amp;oacute;dulo se usa &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;easy_install -U memory_profiler&lt;/code&gt;
&lt;code&gt;pip install -U memory_profiler&lt;/code&gt;
Se muestra el c&amp;oacute;digo del art&amp;iacute;culo sobre profiling publicado &lt;a href="http://blog.crespo.org.ve/2012/12/profiling-de-un-script-python-con.html"&gt;antes …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Memory_profiler&lt;/code&gt; es un m&amp;oacute;dulo Python desarrollado para monitorear el consumo de memoria de un programa Python l&amp;iacute;nea por l&amp;iacute;nea de cada instrucci&amp;oacute;n del programa.&lt;/p&gt;
&lt;p&gt;Para instalar el m&amp;oacute;dulo se usa &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;easy_install -U memory_profiler&lt;/code&gt;
&lt;code&gt;pip install -U memory_profiler&lt;/code&gt;
Se muestra el c&amp;oacute;digo del art&amp;iacute;culo sobre profiling publicado &lt;a href="http://blog.crespo.org.ve/2012/12/profiling-de-un-script-python-con.html"&gt;antes&lt;/a&gt;:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se define el uso del decorador profile. en la funcion que genera matrices inversas."&gt;Se define el uso del decorador profile. En la funcion que genera matrices inversas.&lt;/h1&gt;
&lt;p&gt;@profile
def Inversa(n):
    a = np.matrix(np.random.rand(n, n))
    return a.I&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    #Se define una lista de  tama&amp;ntilde;os de la matriz
    tamagno = 2 ** np.arange(0, 12)
    #Se recorre la lista  y se invierte cada matriz con la
    #funcion Inversa
    for n in tamagno:
        Inversa(n)
&lt;code&gt;Para iniciar el monitoreo se ejecuta el siguiente comando:&lt;/code&gt;python
python -m memory_profiler matrizinversa.py
```&lt;/p&gt;
&lt;p&gt;El resultado se muestra a continuaci&amp;oacute;n:
```python
Filename: matrizinversa.py&lt;/p&gt;
&lt;h1 id="line # mem usage increment line contents"&gt;Line #    Mem usage    Increment   Line Contents&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt; 8                             @profile
 9     11.89 MB      0.00 MB   def Inversa(n):
10     11.91 MB      0.02 MB       a = np.matrix(np.random.rand(n, n))
11     12.10 MB      0.19 MB       return a.I
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.11 MB      0.00 MB   def Inversa(n):
    10     12.11 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.16 MB      0.05 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.16 MB      0.00 MB   def Inversa(n):
    10     12.16 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.16 MB      0.00 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.16 MB      0.00 MB   def Inversa(n):
    10     12.16 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.16 MB      0.00 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.16 MB      0.00 MB   def Inversa(n):
    10     12.16 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.16 MB      0.00 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.16 MB      0.00 MB   def Inversa(n):
    10     12.16 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.17 MB      0.00 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.17 MB      0.00 MB   def Inversa(n):
    10     12.22 MB      0.05 MB       a = np.matrix(np.random.rand(n, n))
    11     12.35 MB      0.13 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.35 MB      0.00 MB   def Inversa(n):
    10     12.45 MB      0.09 MB       a = np.matrix(np.random.rand(n, n))
    11     12.95 MB      0.50 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.45 MB      0.00 MB   def Inversa(n):
    10     12.95 MB      0.50 MB       a = np.matrix(np.random.rand(n, n))
    11     13.54 MB      0.59 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.53 MB      0.00 MB   def Inversa(n):
    10     14.54 MB      2.00 MB       a = np.matrix(np.random.rand(n, n))
    11     16.79 MB      2.26 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.79 MB      0.00 MB   def Inversa(n):
    10     20.79 MB      8.00 MB       a = np.matrix(np.random.rand(n, n))
    11     28.88 MB      8.09 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.87 MB      0.00 MB   def Inversa(n):
    10     44.87 MB     32.00 MB       a = np.matrix(np.random.rand(n, n))
    11     77.38 MB     32.50 MB       return a.I
```&lt;/p&gt;
&lt;p&gt;Se muestran los ciclos de ejecuci&amp;oacute;n de la generaci&amp;oacute;n de la matriz inversa del archivo &lt;code&gt;matrizinversa.py&lt;/code&gt;, se representa en columna la informaci&amp;oacute;n de la l&amp;iacute;nea que se est&amp;aacute; ejecutando del programa, la cantidad de memoria utilizada, el incremento de memoria y el c&amp;oacute;digo que se est&amp;aacute; ejecutando.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Separar código de pruebas de la documentación (doctest, 2da parte)</title><link href="https://ecrespo.github.io/separar-codigo-de-pruebas-de-la-documentacion-doctest-2da-parte.html" rel="alternate"></link><published>2012-12-14T09:00:00-05:30</published><updated>2012-12-14T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-14:/separar-codigo-de-pruebas-de-la-documentacion-doctest-2da-parte.html</id><summary type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/probar-codigo-con-doctest.html#probar-codigo-con-doctest"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explic&amp;oacute; como utilizar &lt;code&gt;doctest&lt;/code&gt; dentro de un c&amp;oacute;digo para realizar pruebas sobre la documentaci&amp;oacute;n de cada funci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Ahora se explicar&amp;aacute; como realizar dichas pruebas de la documentaci&amp;oacute;n en un archivo aparte del c&amp;oacute;digo del programa. Se usar&amp;aacute; el mismo ejemplo del art&amp;iacute;culo anterior pero adaptandolo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/probar-codigo-con-doctest.html#probar-codigo-con-doctest"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explic&amp;oacute; como utilizar &lt;code&gt;doctest&lt;/code&gt; dentro de un c&amp;oacute;digo para realizar pruebas sobre la documentaci&amp;oacute;n de cada funci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Ahora se explicar&amp;aacute; como realizar dichas pruebas de la documentaci&amp;oacute;n en un archivo aparte del c&amp;oacute;digo del programa. Se usar&amp;aacute; el mismo ejemplo del art&amp;iacute;culo anterior pero adaptandolo a tener la documentaci&amp;oacute;n aparte en un archivo de texto.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo math para calcular la raiz cuadrada."&gt;Se importa el m&amp;oacute;dulo math para calcular la raiz cuadrada.&lt;/h1&gt;
&lt;p&gt;import math&lt;/p&gt;
&lt;h1 id="funcion raiz cuadrada."&gt;Funci&amp;oacute;n raiz cuadrada.&lt;/h1&gt;
&lt;p&gt;def Raiz(a):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Si a es mayor o igual a cero se calcula la raiz cuadrada

if a &amp;gt;= 0:

    return math.sqrt(a)

#Si es menor a cero se genera una excepci&amp;oacute;n donde se informa que a debe ser mayor o igual a cero.

else:

    raise ValueError("a debe ser &amp;gt;= 0")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se importa el m&amp;oacute;dulo doctest

import doctest

#Se realiza la prueba al archivo raizcuadra.txt

doctest.testfile("raizcuadrada.txt")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Como se ve se realiza la prueba al archivo raizcuadrada.txt. El archivo contiene lo siguiente:&lt;/p&gt;
&lt;p&gt;```python
Modulo raiz cuadrada&lt;/p&gt;
&lt;p&gt;=====================&lt;/p&gt;
&lt;p&gt;Usando  'raizcuadrada'&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Primero se importa la funci&amp;oacute;n:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from raizcuadrada import Raiz
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ejemplos de calculo de raiz cuadrada:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(4)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(9)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(25)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;5.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(0)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;0.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(-1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Traceback (most recent call last):&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;ValueError: a debe ser &amp;gt;= 0
&lt;code&gt;Ahora lo que viene es ejecutar el comando que devuelve el resultado de las pruebas:&lt;/code&gt;
python -m doctest -v raizcuadrada.txt&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from raizcuadrada import Raiz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting nothing&lt;/p&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(9)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(25)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;5.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(-1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Traceback (most recent call last):

...

ValueError: a debe ser &amp;gt;= 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;1 items passed all tests:&lt;/p&gt;
&lt;p&gt;6 tests in raizcuadrada.txt&lt;/p&gt;
&lt;p&gt;6 tests in 1 items.&lt;/p&gt;
&lt;p&gt;6 passed and 0 failed.&lt;/p&gt;
&lt;p&gt;Test passed.
```&lt;/p&gt;
&lt;p&gt;Como se puede observar en este caso se realiza la importaci&amp;oacute;n del programa y luego se empieza las pruebas.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Captura de imágen desde la webcam con el framework SimpleCV. Parte 1.</title><link href="https://ecrespo.github.io/captura-de-imagen-desde-la-webcam-con-el-framework-simplecv-parte-1.html" rel="alternate"></link><published>2012-07-08T09:00:00-05:30</published><updated>2012-07-08T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-08:/captura-de-imagen-desde-la-webcam-con-el-framework-simplecv-parte-1.html</id><summary type="html">&lt;p&gt;&lt;code&gt;SimpleCV&lt;/code&gt; es una framework para la construcci&amp;oacute;n de aplicaciones de Visi&amp;oacute;n por el computador "Computer Vision", es un conjunto de librerias que permiten capturar im&amp;aacute;genes por medio de camaras (webcam) o camaras IP para obtener informaci&amp;oacute;n a partir de dichas im&amp;aacute;genes.&lt;/p&gt;
&lt;p&gt;La p&amp;aacute;gina del proyecto SimpleCV se puede visitar desde …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;SimpleCV&lt;/code&gt; es una framework para la construcci&amp;oacute;n de aplicaciones de Visi&amp;oacute;n por el computador "Computer Vision", es un conjunto de librerias que permiten capturar im&amp;aacute;genes por medio de camaras (webcam) o camaras IP para obtener informaci&amp;oacute;n a partir de dichas im&amp;aacute;genes.&lt;/p&gt;
&lt;p&gt;La p&amp;aacute;gina del proyecto SimpleCV se puede visitar desde este &lt;a href="http://www.simplecv.org/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;SimpleCV&lt;/code&gt; se usar&amp;aacute; las herramientas de instalaci&amp;oacute;n de python &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;.
&lt;code&gt;pip install simplecv&lt;/code&gt;
El ejemplo que se desarrollar&amp;aacute; es una simple aplicaci&amp;oacute;n que capture la im&amp;aacute;gen de la webcam, la presente en pantalla por unos segundos y la salve en un archivo con formato png.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar los modulos camera, display e image."&gt;Importar los modulos Camera, Display e Image.&lt;/h1&gt;
&lt;p&gt;from SimpleCV import Camera, Display, Image&lt;/p&gt;
&lt;h1 id="se importa sleep para darle unos segundos a la"&gt;Se importa sleep para darle unos segundos a la&lt;/h1&gt;
&lt;h1 id="aplicacion a que muestra la captura en pantalla."&gt;aplicacion a que muestra la captura en pantalla.&lt;/h1&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="se crea una instancia de camera."&gt;Se crea una instancia de Camera.&lt;/h1&gt;
&lt;h1 id="se inicializa la camara"&gt;Se inicializa la camara&lt;/h1&gt;
&lt;p&gt;camara = Camera()&lt;/p&gt;
&lt;h1 id="se crea una instancia de display"&gt;Se crea una instancia de Display&lt;/h1&gt;
&lt;h1 id="se inicializa display"&gt;se inicializa display&lt;/h1&gt;
&lt;p&gt;pantalla = Display()&lt;/p&gt;
&lt;h1 id="se captura una imagen usando la camara"&gt;Se captura una imagen usando la camara&lt;/h1&gt;
&lt;p&gt;imagen = camara.getImage()&lt;/p&gt;
&lt;h1 id="muestra la imagen en pantalla"&gt;Muestra la imagen en pantalla&lt;/h1&gt;
&lt;p&gt;imagen.save(pantalla)&lt;/p&gt;
&lt;h1 id="se salva la imagen en un archivo"&gt;Se salva la imagen en un archivo&lt;/h1&gt;
&lt;p&gt;imagen.save("captura.png")&lt;/p&gt;
&lt;p&gt;sleep(2)
```
Al ejecutar el programa se muestra una pantalla con la captura que hace la webcam y la guarda en un archivo.  &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la im&amp;aacute;gen capturada:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/capturadeimagendesdelawebcamconelframeworksimplecv1-1.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="SimpleCV"></category></entry></feed>