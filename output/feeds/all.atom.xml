<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Página de Seraph</title><link href="https://ecrespo.github.io/" rel="alternate"></link><link href="https://ecrespo.github.io/feeds/all.atom.xml" rel="self"></link><id>https://ecrespo.github.io/</id><updated>2019-06-08T19:33:00-04:00</updated><subtitle>Data Scientist </subtitle><entry><title>Validando un API rest asíncrono con Cerberus</title><link href="https://ecrespo.github.io/apirest-aiohttp-cerberus-2019.html" rel="alternate"></link><published>2019-06-08T19:33:00-04:00</published><updated>2019-06-08T19:33:00-04:00</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2019-06-08:/apirest-aiohttp-cerberus-2019.html</id><summary type="html">&lt;p&gt;Se creará un API rest asíncrono (usando aiohttp), donde se valida la entrada con cerberus&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se mostrar&amp;aacute; como crear un API rest asincrono usando aiohttp, se usar&amp;aacute; un script para acceder a la base de datos NoSQL RethinkDB de manera as&amp;iacute;ncrona,
y 2 formas de validar la entrada de datos del API, la primera evaluando cada variable, la segunda se usar&amp;aacute; cerberus donde se tiene un esquema de la entrada de datos y
por &amp;uacute;ltimo la tercera, usar&amp;aacute; cerberus pero el esquema estar&amp;aacute; guardado en rethinkdb.&lt;/p&gt;
&lt;p&gt;El repositorio del c&amp;oacute;digo completo de este tutorial se encuentra en &lt;a href="https://gitlab.com/ecrespo/async-api-rest-example/tree/master"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo &lt;a href="https://www.ecalamia.com/blog/data-validation-robust-apis/"&gt;Using Data Validation for Robust APIs&lt;/a&gt; y en el
art&amp;iacute;culo &lt;a href="https://blog.apcelent.com/create-rest-api-using-aiohttp.html"&gt;How to create REST API using aiohttp&lt;/a&gt;, donde se explica como hacer un API rest sincr&amp;oacute;nico con aiohttp.&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n de cerberus la pueden ver en el siguiente &lt;a href="https://cerberus-sanhe.readthedocs.io/usage.html"&gt;cerberus&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se tiene la siguiente estructura de directorios y archivos del API rest:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;async-api-rest-example
├── app.py
├── README.md
├── resources
│&amp;nbsp;&amp;nbsp; ├── api_resources.py
│&amp;nbsp;&amp;nbsp; ├── home.py
│&amp;nbsp;&amp;nbsp; ├── __init__.py
│&amp;nbsp;&amp;nbsp; └── rethink_async.py
└── run.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Descripci&amp;oacute;n de los archivos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;app.py: Se definen las rutas de los endpoint del API rest.&lt;/li&gt;
&lt;li&gt;run.py: Script que permite correr el API rest.&lt;/li&gt;
&lt;li&gt;resources/rethin_async.py: M&amp;oacute;dulo que permite acceder de manera as&amp;iacute;ncrona a rethinkdb.&lt;/li&gt;
&lt;li&gt;resources/home.py: P&amp;aacute;gina de inicio del API rest.&lt;/li&gt;
&lt;li&gt;resources/api_resources.py: Donde se define los m&amp;eacute;todos HTTP del API rest.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="script run.py"&gt;Script run.py&lt;/h3&gt;
&lt;p&gt;Este script permite iniciar el API rest, a continuaci&amp;oacute;n el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python3_1"&gt;!/usr/bin/env python3&lt;/h1&gt;
&lt;h1 id="se importa aiohttp"&gt;Se importa aiohttp&lt;/h1&gt;
&lt;p&gt;from aiohttp import web&lt;/p&gt;
&lt;h1 id="se importa las rutas de los endpoint"&gt;Se importa las rutas de los endpoint&lt;/h1&gt;
&lt;p&gt;from app import setup_routes&lt;/p&gt;
&lt;p&gt;async def init_app():
    #Se instancia la aplicaci&amp;oacute;n
    app = web.Application()
    #A la aplicaci&amp;oacute;n se le pasa las rutas
    setup_routes(app)
    #Se retorna la aplicaci&amp;oacute;n
    return app&lt;/p&gt;
&lt;p&gt;def main():
    #Se define la direcci&amp;oacute;n del host, el puerto y se corre la Ap en dicha IP y puerto
    host = '0.0.0.0'
    port = 5000
    app = init_app()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;web.run_app(app,host=host, port=port)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    main()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h3 id="script app.py"&gt;Script app.py&lt;/h3&gt;
&lt;p&gt;Este script define las rutas y URLs de los endpoint del API rest. A continuaci&amp;oacute;n el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="se importa los recursos del api rest y el home ._1"&gt;Se importa los recursos del api rest y el home .&lt;/h1&gt;
&lt;p&gt;from resources.api_resources import Student
from resources.home import getIndex&lt;/p&gt;
&lt;p&gt;def setup_routes(app):
    student = Student()
    #Se tiene 3 endpoints, el primero validaci&amp;oacute;n cl&amp;aacute;sica,
    # el segundo validando con cerberus, y el 3ero con cerberus
    #pero guardando el esquema de validaci&amp;oacute;n en una base de datos
    app.router.add_post('/api/v1/student1',student.getData1)
    app.router.add_post('/api/v1/student2',student.getData2)
    app.router.add_post('/api/v1/student3',student.getData3)
    #Por seguridad no se permite ingresar a la raiz del API rest
    app.router.add_get('/api/v1/', getIndex)
    app.router.add_get('/', getIndex)&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h3 id="script rethink_async.py"&gt;Script rethink_async.py&lt;/h3&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python3_3"&gt;!/usr/bin/env python3&lt;/h1&gt;
&lt;p&gt;import rethinkdb as r
import asyncio
from datetime import datetime&lt;/p&gt;
&lt;p&gt;r.set_loop_type("asyncio")&lt;/p&gt;
&lt;p&gt;async def createDB(server,port,database):
    """
    Create DB to database server.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Parameters
----------
server: IP server to connect
port: Port server to connect
database: Database name to create

"""
conn = await r.connect(server, port)
if database not in await r.db_list().run(conn):
    return await r.db_create(database).run(conn)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;async def createTable(server,port,database,table):
    """
    Create Table in database.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Parameters
----------
server: IP server to connect
port: Port server to connect
database: Database name to connect
"""
conn = await r.connect(server, port)
return await r.db(database).table_create(table).run(conn)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;async def listdb(server,port):
    """
    List all database in database server.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Parameters
----------
server: IP server to connect
port: Port server to connect
"""
conn = await r.connect(server, port)
return await r.db_list(conn)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;async def listtables(server,port,database):
    """
    Lista tables from database.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Parameters
----------
server: IP server to connect
port: Port server to connect
database: Database name to list tables
"""
conn = await r.connect(server, port)
return await r.db(database).table_list().run(conn)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;async def insert(server,port,database,table,data):
    """
    Insert dictionary  in table.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Parameters
----------
server: IP server to connect
port: Port server to connect
database: Database name to connect
table: table to insert Dictionary
data: Dictionary data to insert
"""
conn = await r.connect(server, port)
result = await r.db(database).table(table).insert(data).run(conn)
await conn.close()
return result
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;async def getAll(server,port,database,table,pattern=None):
    """
    Get All documents from pattern search&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Parameters
----------
server: IP server to connect
port: Port server to connect
database: Database name to connect
table: table name to search
pattern: Dictionary with pattern search
"""
conn = await r.connect(server, port)
if pattern == None:
    cursor = await r.db(database).table(table).run(conn)
else:
    cursor = await r.db(database).table(table).filter(pattern).run(conn)
elements = list()

while (await cursor.fetch_next()):
    item = await cursor.next()
    elements.append(item)

await conn.close()

return elements
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;async def getFirst(server, port, database, table, pattern = None):
    """
    Get first document from pattern search&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Parameters
----------
server: IP server to connect
port: Port server to connect
database: Database name to connect
table: table name to search
pattern: Dictionary with pattern search
"""
conn = await r.connect(server, port)
if pattern == None:
    cursor = await r.db(database).table(table).run(conn)
else:
    cursor = await  r.db(database).table(table).filter(pattern).run(conn)
elements = list()

while (await  cursor.fetch_next()):
    item = await cursor.next()
    elements.append(item)
    break
await conn.close()
return elements
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;async def delete(server,port,database,table,pattern):
    """
    Delete a  document from pattern search&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Parameters
----------
server: IP server to connect
port: Port server to connect
database: Database name to connect
table: table name to search
pattern: Dictionary with pattern search
"""
conn = await r.connect(server, port)
result =  await r.db(database).table(table).filter(pattern).delete().run(conn)
await conn.close()
return result
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;async def update(server,port,database,table,data,pattern=None):
    """
    Update a document from pattern search&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Parameters
----------
server: IP server to connect
port: Port server to connect
database: Database name to connect
table: table name to search
pattern: Dictionary with pattern search
"""
conn = await r.connect(server, port)
if (type(data) == type(dict())):
    if pattern == None :
        result = await r.db(database).table(table).update(data).run(conn)
        await conn.close()
        return result
    else:
        result =  await r.db(database).table(table).filter(pattern).update(data).run(conn)
        await conn.close()
        return result
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h3 id="script api_resouces.py"&gt;Script api_resouces.py&lt;/h3&gt;
&lt;p&gt;En el script se tienen 3 m&amp;eacute;todos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;getData1: Este m&amp;eacute;todo v&amp;aacute;lida cada una de las entrada de datos.&lt;/li&gt;
&lt;li&gt;getData2: Este m&amp;eacute;todo v&amp;aacute;lida la entrada de datos con un esquema validando con cerberus.&lt;/li&gt;
&lt;li&gt;getData3: Este m&amp;eacute;todo vuelve a usar cerberus pero ahora tomando el esquema a validar usando rethinkdb.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;p&gt;import json
from aiohttp import web
from cerberus import Validator
import rethinkdb as r&lt;/p&gt;
&lt;p&gt;from .rethink_async import *&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;version&lt;/strong&gt; = '0.0.1'&lt;/p&gt;
&lt;p&gt;student_schema = {
    'uid': {
        'required': True,
        'type': 'integer',
    },
    'age': {
        'required': True,
        'type': 'integer',
        'min': 18,
        'max': 35,
    },
    'name': {
        'required': True,
        'type': 'string',
        'maxlength': 50,
    },
    'grade': {
        'required': False,
        'type': 'string',
        'allowed': ['A', 'B', 'C'],
    }
}&lt;/p&gt;
&lt;p&gt;class Student(object):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self):
    pass

async def getData1(self,request):

    #Se convierte el json a un diccionario

    try:
        data = json.loads(await request.text())
    except json.JSONDecodeError:
        response_obj = {'status': 'failed', 'reason': "Ill-formed JSON"}
        return web.Response(text=json.dumps(response_obj), status=205)

    #Se valida los datos de entrada
    try:
        uid = int(data['uid'])
    except (KeyError, ValueError):
        response_obj = {'status': 'failed', 'reason': "Expecting uid:int"}
        return web.Response(text=json.dumps(response_obj), status=205)

    try:
        age = int(data['age'])
        if not 18 &amp;lt; age &amp;lt; 35:
            raise ValueError('Bad age')
    except (KeyError, ValueError):
        response_obj = {'status': 'failed', 'reason': "Expecting age:int within the range [18:35]"}
        return web.Response(text=json.dumps(response_obj), status=205)

    try:
        name = str(data['name'])
        if len(name) &amp;gt; 50:
            raise ValueError('Max limit 50')
    except (KeyError, ValueError):
        response_obj = {'status': 'failed', 'reason': "Expecting name:str within the range [0:50]"}
        return web.Response(text=json.dumps(response_obj), status=205)

    try:
        grade = data.get('grade')
        if grade is None:
            grade = 'A'
        if grade not in ('A', 'B', 'C'):
            response_obj = {'status': 'failed', 'reason': "A, B or C expected"}
            return web.Response(text=json.dumps(response_obj), status=205)
    except (KeyError, ValueError):
        response_obj = {'status': 'failed', 'reason': "Expecting grade:str A, B or C expected"}
        return web.Response(text=json.dumps(response_obj), status=205)

    #Luego de validar se construye el diccionario de salida de datos como json

    data_output = dict()
    data_output['uid'] = data['uid']
    data_output['age'] = data['age']
    data_output['name'] = data['name']
    data_output['grade'] = data.get('grade', 'A')

    response_obj = {
        'status': 'success',
        'data': data_output
    }
    return web.Response(text=json.dumps(response_obj), status=200, content_type='application/json')



async def getData2(self,request):

    #Se convierte el json del post en un diccionario
    try:
        data = json.loads(await request.text())
    except json.JSONDecodeError:
        response_obj = {'status': 'failed', 'reason': "Ill-formed JSON"}
        return web.Response(text=json.dumps(response_obj), status=205)

    #Con la variable que contiene el esquema se realiza la validaci&amp;oacute;n del json
    student_validator = Validator(student_schema)
    if not student_validator.validate(data):
        msg = student_validator.errors
        response_obj = {'status': 'failed', 'reason': msg}
        return web.Response(text=json.dumps(response_obj), status=205)

    #Se construye el diccionario de la salida de los datos v&amp;iacute;a json
    data_output = dict()
    data_output['uid'] = data['uid']
    data_output['age'] = data['age']
    data_output['name'] = data['name']
    data_output['grade'] = data.get('grade', 'A')

    response_obj = {
        'status': 'success',
        'data': data_output
    }
    return web.Response(text=json.dumps(response_obj), status=200, content_type='application/json')


async def getData3(self,request):

    #Se convierte el json en un diccionario
    try:
        data = json.loads(await request.text())
    except json.JSONDecodeError:
        response_obj = {'status': 'failed', 'reason': "Ill-formed JSON"}
        return web.Response(text=json.dumps(response_obj), status=205)

    #Si yo se, no deber&amp;iacute;a tener  la configuraci&amp;oacute;n de la base de datos ac&amp;aacute;,
    #pero era para no alargar el c&amp;oacute;digo de ejemplo
    #Se definen el servidor, puerto, base de datos, la tabla y el patr&amp;oacute;n de busqueda
    server = "localhost"
    port = 28015
    db = "student"
    table = "student_schema"
    pattern = {"endpoint": "student3"}

    #Se realiza la consulta a rethinkdb de manera asincrona
    student_schemadb = await getFirst(server, port, db, table, pattern)

    #Se quitan del diccionario el id y el endpoint a fin de realizar la evaluaci&amp;oacute;n del esquema
    student_schema = {item: student_schemadb[0][item] for item in list(student_schemadb[0].keys()) if item != 'id'}
    student_schema = {item: student_schema[item] for item in list(student_schema.keys()) if item != 'endpoint'}

    #Se valida el esquema con los datos suministrados v&amp;iacute;a post
    student_validator = Validator(student_schema)
    if not student_validator.validate(data):
        msg = student_validator.errors
        response_obj = {'status': 'failed', 'reason': msg}
        return web.Response(text=json.dumps(response_obj), status=205)

    #Se toman los datos y se colocan en el diccionario para el json de salida
    data_output = dict()
    data_output['uid'] = data['uid']
    data_output['age'] = data['age']
    data_output['name'] = data['name']
    data_output['grade'] = data.get('grade', 'A')

    response_obj = {
        'status': 'success',
        'data': data_output
    }
    return web.Response(text=json.dumps(response_obj), status=200, content_type='application/json')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h3 id="base de datos rethinkdb con el esquema para cerberus"&gt;Base de datos rethinkdb con el esquema para cerberus&lt;/h3&gt;
&lt;p&gt;Para que el m&amp;eacute;todo getData3 funcione es necesario tener almacenado en la base de datos rethinkdb el esquema.&lt;/p&gt;
&lt;p&gt;El proceso de instalaci&amp;oacute;n de rethinkDB v&amp;iacute;a docker, se deja en el siguiente &lt;a href="https://platzi.com/blog/como-instalar-rethinkdb-docker/"&gt;art&amp;iacute;culo de platzi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para insertar los datos se ejecuta en el dashboard de rethinkDB (http://localhost:8080) el siguiente comando:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;r.db("student").table("student_schema").insert({id:1,endpoint: 'student3',uid: {
        'required': true,
        'type': 'integer'},
    age: {
        'required': true,
        'type': 'integer',
        'min': 18,
        'max': 35
    },
    name: {
        'required': true,
        'type': 'string',
        'maxlength': 50
    },
    grade: {
        'required': false,
        'type': 'string',
        'allowed': ['A', 'B', 'C']
  }})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;De esa forma se inserta los datos en la tabla.&lt;/p&gt;
&lt;p&gt;Para consultar la tabla v&amp;iacute;a dashboard se ejecuta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;r.db("student").table("student_schema")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la tabla:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tabla esquema" src="./images/2019-apirest-cerberus-5.png"/&gt;&lt;/p&gt;
&lt;h3 id="iniciar el api rest."&gt;Iniciar el API rest.&lt;/h3&gt;
&lt;p&gt;Para iniciar el API rest se tiene que tener instalado la librer&amp;iacute;a rethinkdb y aiohttp:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install rethinkdb aiohttp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego de instalada se ejecuta el script run.py:&lt;/p&gt;
&lt;p&gt;```
python run.py&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Si se tiene la siguiente salida el API rest est&amp;aacute; corriendo sin problemas:&lt;/p&gt;
&lt;p&gt;```
======== Running on http://0.0.0.0:5000 ========
(Press CTRL+C to quit)&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h3 id="consultas al api rest"&gt;Consultas al API rest&lt;/h3&gt;
&lt;p&gt;Para consultar el API rest se puede usar insomia o postman, ambos son clientes API rest.&lt;/p&gt;
&lt;p&gt;Se tienen 3 endpoint todos v&amp;iacute;a m&amp;eacute;todo post que se le pasar&amp;aacute; un json como el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json
{
  "uid": 42,
  "age": 25,
  "name": "John Doe",
  "grade": "A"
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Los urls son los siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://localhost:5000/api/v1/student1 : Usa el m&amp;eacute;todo getData1.&lt;/li&gt;
&lt;li&gt;http://localhost:5000/api/v1/student2 : Usa el m&amp;eacute;todo getData2.&lt;/li&gt;
&lt;li&gt;http://localhost:5000/api/v1/student3 : Usa el m&amp;eacute;todo getData3.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Primer endpoint:&lt;/p&gt;
&lt;p&gt;Se realiza la consulta con el json mostrado anteriormente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Consulta v&amp;aacute;lida" src="./images/2019-apirest-cerberus-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Ahora se modifica por ejemplo la variable grade a X:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Consulta inv&amp;aacute;lida" src="./images/2019-apirest-cerberus-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;En este caso el valor X para la variable grade no es v&amp;aacute;lido.&lt;/p&gt;
&lt;p&gt;Segundo endpoint:&lt;/p&gt;
&lt;p&gt;En este caso se usa cerberus y la variable que contiene el esquema para validar:&lt;/p&gt;
&lt;p&gt;Se realiza la consulta con el json original:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Consulta v&amp;aacute;lida" src="./images/2019-apirest-cerberus-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Ahora se realiza la consulta modificando la variable grade con el valor de Z:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Consulta inv&amp;aacute;lida" src="./images/2019-apirest-cerberus-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;El mensaje es m&amp;aacute;s gen&amp;eacute;rico no es el que se defini&amp;oacute; en el primer m&amp;eacute;todo.&lt;/p&gt;
&lt;p&gt;Tercer endpoint:&lt;/p&gt;
&lt;p&gt;Ac&amp;aacute; no se ver&amp;aacute;n cambios significativos en la consulta, lo interesante es que, al tener muchos endpoint con distintas entradas de datos,
lo mejor es usar una base de datos donde se tenga almacenada cada esquema por endpoint.&lt;/p&gt;
&lt;p&gt;As&amp;iacute; que el resultado ser&amp;iacute;a el mismo que los del segundo endpoint.&lt;/p&gt;
&lt;h2 id="_2"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Python"></category><category term="aiohttp"></category><category term="Ubuntu"></category><category term="API rest"></category><category term="asincrono"></category><category term="Cerberus"></category></entry><entry><title>Cómo usar el API de wikipedia con Python</title><link href="https://ecrespo.github.io/python-wikipedia-2019.html" rel="alternate"></link><published>2019-06-08T11:33:00-04:00</published><updated>2019-06-08T11:33:00-04:00</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2019-06-08:/python-wikipedia-2019.html</id><summary type="html">&lt;p&gt;Uso de API de Wikipedia con Python&lt;/p&gt;</summary><content type="html">&lt;p&gt;Retomando la escritura de art&amp;iacute;culos, ahora usando pelican y github pages.&lt;/p&gt;
&lt;p&gt;Hoy se tocar&amp;aacute; el tema de como acceder a la Wikipedia v&amp;iacute;a su API desde Python.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa del art&amp;iacute;culo de Stack Abuse &lt;a href="https://stackabuse.com/getting-started-with-pythons-wikipedia-api/"&gt;Getting Started with Python's Wikipedia API&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="instalacion y prueba del api de wikipedia"&gt;Instalaci&amp;oacute;n y prueba del API de Wikipedia&lt;/h3&gt;
&lt;p&gt;Lo primero que se tiene que hacer es realizar la instalaci&amp;oacute;n de la librer&amp;iacute;a de wikipedia para Python:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install wikipedia&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para probar que funciona el API, desde la consola de python se importa wikipedia:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
import wikipedia&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="consultas al api"&gt;Consultas al API&lt;/h3&gt;
&lt;p&gt;Por defecto el API de Wikipedia realiza las busquedas en ingl&amp;eacute;s.&lt;/p&gt;
&lt;p&gt;Para empezar, se puede realizar una busqueda de una palabra, por ejemplo Venezuela:&lt;/p&gt;
&lt;p&gt;```python
print(wikipedia.search("Venezuela"))
['Venezuela', 'Venezuelans', 'Economy of Venezuela', 'Caracas', 'Venezuela national football team', 'President of Venezuela', 'Crisis in Venezuela', 'Mestizos in Venezuela', 'List of Presidents of Venezuela', 'Crime in Venezuela']&lt;/p&gt;
&lt;p&gt;```
Devuelve una lista con una serie de palabras o frases sobre Venezuela.&lt;/p&gt;
&lt;p&gt;Se puede limitar el resultado de la busqueda a por ejemplo 3:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.search("Venezuela", results=3))
['Venezuela', 'Venezuelans', 'Economy of Venezuela']&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se puede buscar sobre Linux:
&lt;code&gt;python
print(wikipedia.search("Linux"))
['Linux', 'Linux kernel', 'Linux distribution', 'List of Linux distributions', 'Kali Linux', 'Astra Linux', 'Linux Mint', 'Red Hat Enterprise Linux', 'Ubuntu', 'Arch Linux']&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Existe el m&amp;eacute;todo suggest que ayuda a la busqueda si colocamos mal la palabra de busqueda, por ejemplo, se puede buscar "Simon Boliva" y m&amp;eacute;todo devolver&amp;aacute; el nombre correcto "Sim&amp;oacute;n Bolivar":&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;print(wikipedia.suggest("Simon Boliva"))
simon bolivar
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id="extraer un resumen de un articulo de wikipedia"&gt;Extraer un resumen de un art&amp;iacute;culo de wikipedia&lt;/h3&gt;
&lt;p&gt;Para extraer un resumen de un art&amp;iacute;culo se usa el m&amp;eacute;todo summary:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.summary("Debian"))  
Debian () is a Unix-like operating system consisting entirely of free software. Ian Murdock founded the Debian Project on August 16, 1993. Debian 0.01 was released on September 15, 1993, and the first stable version, 1.1, was released on June 17, 1996. The Debian Stable branch is the most popular edition for personal computers and network servers, and is used as the basis for many other Linux distributions.
Debian is one of the earliest operating systems based on the Linux kernel. The project is coordinated over the Internet by a team of volunteers guided by the Debian Project Leader and three foundational documents: the Debian Social Contract, the Debian Constitution, and the Debian Free Software Guidelines. New distributions are updated continually, and the next candidate is released after a time-based freeze.
Debian has been developed openly and distributed freely according to the principles of the GNU Project. Because of this, the Free Software Foundation sponsored the project from November 1994 to November 1995. The popular Linux operating system Ubuntu was also released based on Debian. When the sponsorship ended, the Debian Project formed the nonprofit Software in the Public Interest to continue financially supporting development.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se puede delimitar la cantidad de texto que se muestre con la opci&amp;oacute;n sentences, que en este caso lo colocaremos en 3:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.summary("Debian", sentences=3))  
Debian () is a Unix-like operating system consisting entirely of free software. Ian Murdock founded the Debian Project on August 16, 1993. Debian 0.01 was released on September 15, 1993, and the first stable version, 1.1, was released on June 17, 1996.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Noten que el contenido del art&amp;iacute;culo est&amp;aacute; en Ingl&amp;eacute;s, si se quiere traer la informaci&amp;oacute;n en otro idioma se cambia la configuraci&amp;oacute;n del API de la siguiente forma:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
wikipedia.set_lang("es")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se vuelve a realizar la consulta anterior:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.summary("Debian", sentences=3))
Debian o Proyecto Debian,[1]​ (en ingl&amp;eacute;s, Debian Project) [2]​ es una comunidad conformada por desarrolladores y usuarios, que mantiene un sistema operativo GNU basado en software libre. El sistema se encuentra precompilado, empaquetado y en formato deb para m&amp;uacute;ltiples arquitecturas de computador y para varios n&amp;uacute;cleos.
El proyecto Debian fue anunciado inicialmente 1993 por Ian Murdock.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para listar los idiomas que se soporta se ejecuta el m&amp;eacute;todo languages(), este devuelve un diccionario con todos los lenguajes soportados en el API:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.languages())
{'aa': 'Qaf&amp;aacute;r af', 'ab': 'Аҧсшәа', 'abs': 'bahasa ambon', 'ace': 'Ac&amp;egrave;h', 'ady': 'адыгабзэ', 'ady-cyrl': 'адыгабзэ', 'aeb': 'تونسي/T&amp;ucirc;ns&amp;icirc;', 'aeb-arab': 'تونسي', 'aeb-latn': 'T&amp;ucirc;ns&amp;icirc;', 'af': 'Afrikaans', 'ak': 'Akan', 'aln': 'Geg&amp;euml;', 'als': 'Alemannisch', 'am': 'አማርኛ', 'an': 'aragon&amp;eacute;s', 'ang': '&amp;AElig;nglisc', 'anp': 'अङ्गिका', 'ar': 'العربية', 'arc': 'ܐܪܡܝܐ', 'arn': 'mapudungun', 'arq': 'جازايرية', 'ary': 'Maġribi', 'arz': 'مصرى', 'as': 'অসমীয়া', 'ase': 'American sign language', 'ast': 'asturianu', 'atj': 'Atikamekw', 'av': 'авар', 'avk': 'Kotava', 'awa': 'अवधी', 'ay': 'Aymar aru', 'az': 'azərbaycanca', 'azb': 'تۆرکجه', 'ba': 'башҡортса', 'ban': 'Basa Bali', 'bar': 'Boarisch', 'bat-smg': 'žemaitė&amp;scaron;ka', 'bbc': 'Batak Toba', 'bbc-latn': 'Batak Toba', 'bcc': 'جهلسری بلوچی', 'bcl': 'Bikol Central', 'be': 'беларуская', 'be-tarask': 'беларуская (тарашкевіца)\u200e', 'be-x-old': 'беларуская (тарашкевіца)\u200e', 'bg': 'български', 'bgn': 'روچ کپتین بلوچی', 'bh': 'भोजपुरी', 'bho': 'भोजपुरी', 'bi': 'Bislama', 'bjn': 'Bahasa Banjar', 'bm': 'bamanankan', 'bn': 'বাংলা', 'bo': 'བོད་ཡིག', 'bpy': 'বিষ্ণুপ্রিয়া মণিপুরী', 'bqi': 'بختیاری', 'br': 'brezhoneg', 'brh': 'Br&amp;aacute;hu&amp;iacute;', 'bs': 'bosanski', 'btm': 'Batak Mandailing', 'bto': 'Iriga Bicolano', 'bug': 'ᨅᨔ ᨕᨘᨁᨗ', 'bxr': 'буряад', 'ca': 'catal&amp;agrave;', 'cbk-zam': 'Chavacano de Zamboanga', 'cdo': 'M&amp;igrave;ng-dĕ̤ng-ngṳ̄', 'ce': 'нохчийн', 'ceb': 'Cebuano', 'ch': 'Chamoru', 'cho': 'Choctaw', 'chr': 'ᏣᎳᎩ', 'chy': 'Tsets&amp;ecirc;hest&amp;acirc;hese', 'ckb': 'کوردی', 'co': 'corsu', 'cps': 'Capice&amp;ntilde;o', 'cr': 'Nēhiyawēwin / ᓀᐦᐃᔭᐍᐏᐣ', 'crh': 'qırımtatarca', 'crh-cyrl': 'къырымтатарджа (Кирилл)\u200e', 'crh-latn': 'qırımtatarca (Latin)\u200e', 'cs': 'če&amp;scaron;tina', 'csb': 'kasz&amp;euml;bsczi', 'cu': 'словѣньскъ / ⰔⰎⰑⰂⰡⰐⰠⰔⰍⰟ', 'cv': 'Чӑвашла', 'cy': 'Cymraeg', 'da': 'dansk', 'de': 'Deutsch', 'de-at': '&amp;Ouml;sterreichisches Deutsch', 'de-ch': 'Schweizer Hochdeutsch', 'de-formal': 'Deutsch (Sie-Form)\u200e', 'din': 'Thuɔŋj&amp;auml;ŋ', 'diq': 'Zazaki', 'dsb': 'dolnoserbski', 'dtp': 'Dusun Bundu-liwan', 'dty': 'डोटेली', 'dv': 'ދިވެހިބަސް', 'dz': 'ཇོང་ཁ', 'ee': 'eʋegbe', 'egl': 'Emili&amp;agrave;n', 'el': '&amp;Epsilon;&amp;lambda;&amp;lambda;&amp;eta;&amp;nu;&amp;iota;&amp;kappa;ά', 'eml': 'emili&amp;agrave;n e rumagn&amp;ograve;l', 'en': 'English', 'en-ca': 'Canadian English', 'en-gb': 'British English', 'eo': 'Esperanto', 'es': 'espa&amp;ntilde;ol', 'es-419': 'espa&amp;ntilde;ol de Am&amp;eacute;rica Latina', 'es-formal': 'espa&amp;ntilde;ol (formal)\u200e', 'et': 'eesti', 'eu': 'euskara', 'ext': 'estreme&amp;ntilde;u', 'fa': 'فارسی', 'ff': 'Fulfulde', 'fi': 'suomi', 'fit': 'me&amp;auml;nkieli', 'fiu-vro': 'V&amp;otilde;ro', 'fj': 'Na Vosa Vakaviti', 'fo': 'f&amp;oslash;royskt', 'fr': 'fran&amp;ccedil;ais', 'frc': 'fran&amp;ccedil;ais cadien', 'frp': 'arpetan', 'frr': 'Nordfriisk', 'fur': 'furlan', 'fy': 'Frysk', 'ga': 'Gaeilge', 'gag': 'Gagauz', 'gan': '贛語', 'gan-hans': '赣语（简体）\u200e', 'gan-hant': '贛語（繁體）\u200e', 'gcr': 'kriy&amp;ograve;l gwiyannen', 'gd': 'G&amp;agrave;idhlig', 'gl': 'galego', 'glk': 'گیلکی', 'gn': "Ava&amp;ntilde;e'ẽ", 'gom': 'गोंयची कोंकणी / G&amp;otilde;ychi Konknni', 'gom-deva': 'गोंयची कोंकणी', 'gom-latn': 'G&amp;otilde;ychi Konknni', 'gor': 'Bahasa Hulontalo', 'got': '𐌲𐌿𐍄𐌹𐍃𐌺', 'grc': 'Ἀ&amp;rho;&amp;chi;&amp;alpha;ί&amp;alpha; ἑ&amp;lambda;&amp;lambda;&amp;eta;&amp;nu;&amp;iota;&amp;kappa;ὴ', 'gsw': 'Alemannisch', 'gu': 'ગુજરાતી', 'gv': 'Gaelg', 'ha': 'Hausa', 'hak': '客家語/Hak-k&amp;acirc;-ng&amp;icirc;', 'haw': 'Hawaiʻi', 'he': 'עברית', 'hi': 'हिन्दी', 'hif': 'Fiji Hindi', 'hif-latn': 'Fiji Hindi', 'hil': 'Ilonggo', 'ho': 'Hiri Motu', 'hr': 'hrvatski', 'hrx': 'Hunsrik', 'hsb': 'hornjoserbsce', 'ht': 'Krey&amp;ograve;l ayisyen', 'hu': 'magyar', 'hu-formal': 'magyar (formal)\u200e', 'hy': 'հայերեն', 'hyw': 'Արեւմտահայերէն', 'hz': 'Otsiherero', 'ia': 'interlingua', 'id': 'Bahasa Indonesia', 'ie': 'Interlingue', 'ig': 'Igbo', 'ii': 'ꆇꉙ', 'ik': 'I&amp;ntilde;upiak', 'ike-cans': 'ᐃᓄᒃᑎᑐᑦ', 'ike-latn': 'inuktitut', 'ilo': 'Ilokano', 'inh': 'ГӀалгӀай', 'io': 'Ido', 'is': '&amp;iacute;slenska', 'it': 'italiano', 'iu': 'ᐃᓄᒃᑎᑐᑦ/inuktitut', 'ja': '日本語', 'jam': 'Patois', 'jbo': 'la .lojban.', 'jut': 'jysk', 'jv': 'Jawa', 'ka': 'ქართული', 'kaa': 'Qaraqalpaqsha', 'kab': 'Taqbaylit', 'kbd': 'Адыгэбзэ', 'kbd-cyrl': 'Адыгэбзэ', 'kbp': 'Kabɩyɛ', 'kg': 'Kongo', 'khw': 'کھوار', 'ki': 'Gĩkũyũ', 'kiu': 'Kırmancki', 'kj': 'Kwanyama', 'kjp': 'ဖၠုံလိက်', 'kk': 'қазақша', 'kk-arab': 'قازاقشا (تٴوتە)\u200f', 'kk-cn': 'قازاقشا (جۇنگو)\u200f', 'kk-cyrl': 'қазақша (кирил)\u200e', 'kk-kz': 'қазақша (Қазақстан)\u200e', 'kk-latn': 'qazaqşa (latın)\u200e', 'kk-tr': 'qazaqşa (T&amp;uuml;rk&amp;iuml;ya)\u200e', 'kl': 'kalaallisut', 'km': 'ភាសាខ្មែរ', 'kn': 'ಕನ್ನಡ', 'ko': '한국어', 'ko-kp': '조선말', 'koi': 'Перем Коми', 'kr': 'Kanuri', 'krc': 'къарачай-малкъар', 'kri': 'Krio', 'krj': 'Kinaray-a', 'krl': 'karjal', 'ks': 'कॉशुर / کٲشُر', 'ks-arab': 'کٲشُر', 'ks-deva': 'कॉशुर', 'ksh': 'Ripoarisch', 'ku': 'kurd&amp;icirc;', 'ku-arab': 'كوردي (عەرەبی)\u200f', 'ku-latn': 'kurd&amp;icirc; (lat&amp;icirc;n&amp;icirc;)\u200e', 'kum': 'къумукъ', 'kv': 'коми', 'kw': 'kernowek', 'ky': 'Кыргызча', 'la': 'Latina', 'lad': 'Ladino', 'lb': 'L&amp;euml;tzebuergesch', 'lbe': 'лакку', 'lez': 'лезги', 'lfn': 'Lingua Franca Nova', 'lg': 'Luganda', 'li': 'Limburgs', 'lij': 'Ligure', 'liv': 'Līv&amp;otilde; kēļ', 'lki': 'لەکی', 'lmo': 'lumbaart', 'ln': 'ling&amp;aacute;la', 'lo': 'ລາວ', 'loz': 'Silozi', 'lrc': 'لۊری شومالی', 'lt': 'lietuvių', 'ltg': 'latgaļu', 'lus': 'Mizo ţawng', 'luz': 'لئری دوٙمینی', 'lv': 'latvie&amp;scaron;u', 'lzh': '文言', 'lzz': 'Lazuri', 'mai': 'मैथिली', 'map-bms': 'Basa Banyumasan', 'mdf': 'мокшень', 'mg': 'Malagasy', 'mh': 'Ebon', 'mhr': 'олык марий', 'mi': 'Māori', 'min': 'Baso Minangkabau', 'mk': 'македонски', 'ml': 'മലയാളം', 'mn': 'монгол', 'mni': 'মেইতেই লোন্', 'mnw': 'ဘာသာ မန်', 'mo': 'молдовеняскэ', 'mr': 'मराठी', 'mrj': 'кырык мары', 'ms': 'Bahasa Melayu', 'mt': 'Malti', 'mus': 'Mvskoke', 'mwl': 'Mirand&amp;eacute;s', 'my': 'မြန်မာဘာသာ', 'myv': 'эрзянь', 'mzn': 'مازِرونی', 'na': 'Dorerin Naoero', 'nah': 'Nāhuatl', 'nan': 'B&amp;acirc;n-l&amp;acirc;m-g&amp;uacute;', 'nap': 'Napulitano', 'nb': 'norsk bokm&amp;aring;l', 'nds': 'Plattd&amp;uuml;&amp;uuml;tsch', 'nds-nl': 'Nedersaksies', 'ne': 'नेपाली', 'new': 'नेपाल भाषा', 'ng': 'Oshiwambo', 'niu': 'Niuē', 'nl': 'Nederlands', 'nl-informal': 'Nederlands (informeel)\u200e', 'nn': 'norsk nynorsk', 'no': 'norsk', 'nov': 'Novial', 'nqo': 'ߒߞߏ', 'nrm': 'Nouormand', 'nso': 'Sesotho sa Leboa', 'nv': 'Din&amp;eacute; bizaad', 'ny': 'Chi-Chewa', 'nys': 'Nyunga', 'oc': 'occitan', 'olo': 'Livvinkarjala', 'om': 'Oromoo', 'or': 'ଓଡ଼ିଆ', 'os': 'Ирон', 'pa': 'ਪੰਜਾਬੀ', 'pag': 'Pangasinan', 'pam': 'Kapampangan', 'pap': 'Papiamentu', 'pcd': 'Picard', 'pdc': 'Deitsch', 'pdt': 'Plautdietsch', 'pfl': 'P&amp;auml;lzisch', 'pi': 'पालि', 'pih': 'Norfuk / Pitkern', 'pl': 'polski', 'pms': 'Piemont&amp;egrave;is', 'pnb': 'پنجابی', 'pnt': '&amp;Pi;&amp;omicron;&amp;nu;&amp;tau;&amp;iota;&amp;alpha;&amp;kappa;ά', 'prg': 'Prūsiskan', 'ps': 'پښتو', 'pt': 'portugu&amp;ecirc;s', 'pt-br': 'portugu&amp;ecirc;s do Brasil', 'qu': 'Runa Simi', 'qug': 'Runa shimi', 'rgn': 'Rumagn&amp;ocirc;l', 'rif': 'Tarifit', 'rm': 'rumantsch', 'rmy': 'romani čhib', 'rn': 'Kirundi', 'ro': 'rom&amp;acirc;nă', 'roa-rup': 'arm&amp;atilde;neashti', 'roa-tara': 'tarand&amp;iacute;ne', 'ru': 'русский', 'rue': 'русиньскый', 'rup': 'arm&amp;atilde;neashti', 'ruq': 'Vlăheşte', 'ruq-cyrl': 'Влахесте', 'ruq-latn': 'Vlăheşte', 'rw': 'Kinyarwanda', 'sa': 'संस्कृतम्', 'sah': 'саха тыла', 'sat': 'ᱥᱟᱱᱛᱟᱲᱤ', 'sc': 'sardu', 'scn': 'sicilianu', 'sco': 'Scots', 'sd': 'سنڌي', 'sdc': 'Sassaresu', 'sdh': 'کوردی خوارگ', 'se': 'davvis&amp;aacute;megiella', 'sei': 'Cmique Itom', 'ses': 'Koyraboro Senni', 'sg': 'S&amp;auml;ng&amp;ouml;', 'sgs': 'žemaitė&amp;scaron;ka', 'sh': 'srpskohrvatski / српскохрватски', 'shi': 'Ta&amp;scaron;lḥiyt/ⵜⴰⵛⵍⵃⵉⵜ', 'shi-latn': 'Ta&amp;scaron;lḥiyt', 'shi-tfng': 'ⵜⴰⵛⵍⵃⵉⵜ', 'shn': 'ၽႃႇသႃႇတႆး ', 'shy-latn': 'tachawit', 'si': 'සිංහල', 'simple': 'Simple English', 'sk': 'slovenčina', 'skr': 'سرائیکی', 'skr-arab': 'سرائیکی', 'sl': 'sloven&amp;scaron;čina', 'sli': 'Schl&amp;auml;sch', 'sm': 'Gagana Samoa', 'sma': '&amp;Aring;arjelsaemien', 'sn': 'chiShona', 'so': 'Soomaaliga', 'sq': 'shqip', 'sr': 'српски / srpski', 'sr-ec': 'српски (ћирилица)\u200e', 'sr-el': 'srpski (latinica)\u200e', 'srn': 'Sranantongo', 'ss': 'SiSwati', 'st': 'Sesotho', 'stq': 'Seeltersk', 'sty': 'cебертатар', 'su': 'Basa Sunda', 'sv': 'svenska', 'sw': 'Kiswahili', 'szl': 'ślůnski', 'ta': 'தமிழ்', 'tay': 'Tayal', 'tcy': 'ತುಳು', 'te': 'తెలుగు', 'tet': 'tetun', 'tg': 'тоҷикӣ', 'tg-cyrl': 'тоҷикӣ', 'tg-latn': 'tojikī', 'th': 'ไทย', 'ti': 'ትግርኛ', 'tk': 'T&amp;uuml;rkmen&amp;ccedil;e', 'tl': 'Tagalog', 'tly': 'толышә зывон', 'tn': 'Setswana', 'to': 'lea faka-Tonga', 'tpi': 'Tok Pisin', 'tr': 'T&amp;uuml;rk&amp;ccedil;e', 'tru': 'Ṫuroyo', 'ts': 'Xitsonga', 'tt': 'татарча/tatar&amp;ccedil;a', 'tt-cyrl': 'татарча', 'tt-latn': 'tatar&amp;ccedil;a', 'tum': 'chiTumbuka', 'tw': 'Twi', 'ty': 'reo tahiti', 'tyv': 'тыва дыл', 'tzm': 'ⵜⴰⵎⴰⵣⵉⵖⵜ', 'udm': 'удмурт', 'ug': 'ئۇيغۇرچە / Uyghurche', 'ug-arab': 'ئۇيغۇرچە', 'ug-latn': 'Uyghurche', 'uk': 'українська', 'ur': 'اردو', 'uz': 'oʻzbekcha/ўзбекча', 'uz-cyrl': 'ўзбекча', 'uz-latn': 'oʻzbekcha', 've': 'Tshivenda', 'vec': 'v&amp;egrave;neto', 'vep': 'veps&amp;auml;n kel&amp;rsquo;', 'vi': 'Tiếng Việt', 'vls': 'West-Vlams', 'vmf': 'Mainfr&amp;auml;nkisch', 'vo': 'Volap&amp;uuml;k', 'vot': 'Vaďďa', 'vro': 'V&amp;otilde;ro', 'wa': 'walon', 'war': 'Winaray', 'wo': 'Wolof', 'wuu': '吴语', 'xal': 'хальмг', 'xh': 'isiXhosa', 'xmf': 'მარგალური', 'xsy': 'saisiyat', 'yi': 'ייִדיש', 'yo': 'Yor&amp;ugrave;b&amp;aacute;', 'yue': '粵語', 'za': 'Vahcuengh', 'zea': 'Ze&amp;ecirc;uws', 'zgh': 'ⵜⴰⵎⴰⵣⵉⵖⵜ ⵜⴰⵏⴰⵡⴰⵢⵜ', 'zh': '中文', 'zh-classical': '文言', 'zh-cn': '中文（中国大陆）\u200e', 'zh-hans': '中文（简体）\u200e', 'zh-hant': '中文（繁體）\u200e', 'zh-hk': '中文（香港）\u200e', 'zh-min-nan': 'B&amp;acirc;n-l&amp;acirc;m-g&amp;uacute;', 'zh-mo': '中文（澳門）\u200e', 'zh-my': '中文（马来西亚）\u200e', 'zh-sg': '中文（新加坡）\u200e', 'zh-tw': '中文（台灣）\u200e', 'zh-yue': '粵語', 'zu': 'isiZulu'}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se puede tambi&amp;eacute;n consultar por cierta p&amp;aacute;gina de wikipedia:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
wikipedia.page("Debian")  
&amp;lt;WikipediaPage 'Debian'&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Y ver si contenido (se mostrar&amp;aacute; el final del contenido de la wikipedia sobre Debian):&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;p&gt;print(wikipedia.page("Debian").content)&lt;/p&gt;
&lt;p&gt;== Distribuciones derivadas ==
En la actualidad, como Debian es una distro que ha demostrado su estabilidad y utilidad, muchos desarrolladores la han tomado para crear a partir de ella nuevas distribuciones. Se las conoce como distribuciones basadas en Debian.
En septiembre de 2010 existen 121 distribuciones activas basadas en Debian; seg&amp;uacute;n el buscador de DistroWatch, adem&amp;aacute;s Debian posee en su sitio web una lista oficial de sus distribuciones descendientes.[25]​&lt;/p&gt;
&lt;p&gt;== Comunidades ==
Existen muchas y variadas comunidades relacionadas con el Proyecto Debian. Algunas de ellas:&lt;/p&gt;
&lt;p&gt;Brasil,[26]​
Colombia,[27]​
Costa Rica,[28]​
Chile,[29]​
Espa&amp;ntilde;a,[30]​
M&amp;eacute;xico,[31]​
Nicaragua,[32]​
Venezuela[33]​&lt;/p&gt;
&lt;p&gt;== V&amp;eacute;ase tambi&amp;eacute;n ==
 Portal:Software libre. Contenido relacionado con Software libre.
Distribuciones basadas en Debian&lt;/p&gt;
&lt;p&gt;=== Adaptaciones a otros n&amp;uacute;cleos ===
Debian GNU/Linux
Debian GNU/Hurd
Debian GNU/NetBSD
Debian GNU/kFreeBSD&lt;/p&gt;
&lt;p&gt;=== Filosof&amp;iacute;a ===
Manifiesto Debian
Directrices de software libre de Debian
Contrato Social de Debian&lt;/p&gt;
&lt;p&gt;=== Varios ===
Debconf&lt;/p&gt;
&lt;p&gt;== Referencias ==&lt;/p&gt;
&lt;p&gt;== Enlaces externos ==
 Wikimedia Commons alberga una galer&amp;iacute;a multimedia sobre Debian.
 Wikinoticias tiene noticias relacionadas con Debian.
Sitio web oficial de Debian
```&lt;/p&gt;
&lt;p&gt;Se puede tambi&amp;eacute;n consultar por el URL de la p&amp;aacute;gina sobre el tema que se est&amp;aacute; consultando:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;p&gt;print(wikipedia.page("Debian").url)&lt;br/&gt;
https://es.wikipedia.org/wiki/Debian&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;O consultar sus referencias (se trae los urls en una lista):&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;p&gt;print(wikipedia.page("Debian").references)
['http://www.debianchile.cl/', 'http://maslinux.es/debian-8-jessie-ha-alcanzado-el-fin-del-soporte-de-seguridad/', 'http://www.debian.mx/', 'http://www.debian.org.ni/', 'http://web.archive.org/web/20070408162722/http://www.us.debian.org/News/2005/20050606', 'http://web.archive.org/web/20071011203303/http://www.us.debian.org/News/2002/20020719', 'http://web.archive.org/web/20071013115846/http://www.us.debian.org/News/2000/20000815', 'http://web.archive.org/web/20080511183553/http://www.us.debian.org/News/2007/20070408', 'http://web.archive.org/web/20080706192105/http://www.us.debian.org/News/1999/19990309', 'http://web.archive.org/web/20080723214102/http://www.us.debian.org/News/1997/19970602', 'http://web.archive.org/web/20080724051253/http://www.us.debian.org/News/1998/19980724', 'http://lists.debian.org/debian-devel-announce/2008/09/msg00000.html', 'http://lists.debian.org/debian-devel-announce/2013/04/msg00006.html', 'http://www.us.debian.org/News/1997/19970602', 'http://www.us.debian.org/News/1998/19980724', 'http://www.us.debian.org/News/1999/19990309', 'http://www.us.debian.org/News/2000/20000815', 'http://www.us.debian.org/News/2002/20020719', 'http://www.us.debian.org/News/2005/20050606', 'http://www.us.debian.org/News/2007/20070408', 'http://www.debian.org/', 'http://www.debian.org/News/2009/20090214', 'http://www.debian.org/devel/join/newmaint', 'http://www.debian.org/doc/manuals/project-history/ch-intro.en.html', 'http://www.debian.org/donations.es.html#money_donations', 'http://www.debian.org/misc/children-distros.html', 'http://www.debianbrasil.org/', 'http://www.debianchile.org/', 'http://www.esdebian.org/', 'http://www.ibiblio.org/pub/historic-linux/distributions/debian-0.91/ChangeLog', 'https://web.archive.org/web/20070203111437/http://www.debiancolombia.org/', 'https://web.archive.org/web/20070307094321/http://www.debianbrasil.org/', 'https://web.archive.org/web/20070406065849/http://cr.debian.net/', 'https://web.archive.org/web/20070929040145/http://www.debian.org.ve/', 'https://web.archive.org/web/20110816182444/http://www.jus.uio.no/sisu/debian_constitution_v1.2/opendocument.es.odt', 'https://web.archive.org/web/20180621121330/http://maslinux.es/debian-8-jessie-ha-alcanzado-el-fin-del-soporte-de-seguridad/', 'https://web.archive.org/web/20181221235131/https://www.debian.org/intro/about.en.html', 'https://web.archive.org/web/20181221235714/https://www.debian.org/intro/about.es.html', 'https://lists.debian.org/debian-devel-announce/2012/07/msg00004.html', 'https://lists.debian.org/debian-devel-announce/2014/11/msg00003.html', 'https://lists.debian.org/debian-devel-announce/2015/03/msg00016.html', 'https://lists.debian.org/debian-security-announce/2014/msg00082.html', 'https://www.debian.org/', 'https://www.debian.org/News/2014/20140424', 'https://www.debian.org/News/2017/20170617', 'https://www.debian.org/doc/manuals/project-history/ch-releases.en.html', 'https://www.debian.org/intro/about.en.html', 'https://www.debian.org/intro/about.es.html']
```&lt;/p&gt;
&lt;p&gt;Se puede consultar el t&amp;iacute;tulo de la p&amp;aacute;gina:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.page("Debian").title)  
Debian&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n se puede consultar las categor&amp;iacute;as en la que aparece la consulta que se est&amp;aacute; realizando:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.page("Debian").categories)  
['Categor&amp;iacute;a:Debian', 'Categor&amp;iacute;a:Organizaciones de Linux', 'Categor&amp;iacute;a:Proyectos', 'Categor&amp;iacute;a:Sistemas operativos PowerPc', 'Categor&amp;iacute;a:Software de 1993', 'Categor&amp;iacute;a:Wikipedia:Art&amp;iacute;culos sin coordenadas', 'Categor&amp;iacute;a:Wikipedia:P&amp;aacute;ginas que utilizan Timeline']&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se puede consultar los enlaces que tiene la p&amp;aacute;gina:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.page("Debian").links)
['17 de junio', '1993', '1994', '1995', '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003', '2005', '2006', '2007', '2008', '2009', '2010', '2013', '2015', '2016', '2017', '2019', 'Acr&amp;oacute;nimo', 'Advanced Packaging Tool', 'Alemania', 'Anthony Towns', 'Arquitectura de computador', 'Arquitectura de computadores', 'Asociaci&amp;oacute;n voluntaria', 'Australia', 'Austria', 'Bdale Garbee', 'Ben Collins', 'BitTorrent', 'Branden Robinson', 'Bruce Perens', 'Cargador de arranque', 'Chris Lamb', 'Comunidad', 'Contrato Social de Debian', 'Corel Linux', 'C&amp;oacute;digo fuente', 'Deb', 'Debconf', 'Debian GNU/Hurd', 'Debian GNU/Linux', 'Debian GNU/NetBSD', 'Debian GNU/kFreeBSD', 'Desarrollador de software', 'Directrices de software libre de Debian', 'Distribuci&amp;oacute;n GNU/Linux', 'Distribuci&amp;oacute;n Linux', 'DistroWatch', 'Empresa', 'Error de software', 'Estados Unidos', 'Francia', 'FreeBSD', 'Free Software Foundation', 'Freenode', 'GNOME', 'GNU', 'GNU GRUB', 'GNU Hurd', 'Gestor de paquetes', 'Gnome', 'Hurd', 'IRC', 'Ian Jackson', 'Ian Murdock', 'Ibiblio', 'Idioma ingl&amp;eacute;s', 'Inglaterra', 'Internet', 'Italia', 'Jigdo', 'KDE', 'Kfreebsd', 'LXDE', 'Licencia de software', 'Linux', 'Linux (n&amp;uacute;cleo)', 'Lista de correo', 'Lucas Nussbaum', 'Manifiesto Debian', 'Manifiesto de Debian', 'Martin Michlmayr', 'Mehdi Dogguy', 'Movimiento del software libre', 'Mozilla Firefox', 'M&amp;eacute;todo Schulze', 'Neil McGovern', 'NetBSD', 'N&amp;uacute;cleo (inform&amp;aacute;tica)', 'Open Source', 'Organizaci&amp;oacute;n', 'Organizaci&amp;oacute;n sin &amp;aacute;nimo de lucro', 'Paquete de software', 'Paquetes de software', 'Pa&amp;iacute;ses Bajos', 'Plataforma (inform&amp;aacute;tica)', 'SQL', 'Sam Hartman', 'Sam Hocevar', 'Servidor', 'Sistema operativo', 'Software', 'Software in the Public Interest', 'Software libre', 'Software no libre', 'Sources.list', 'Stefano Zacchiroli', 'Steve McIntyre', 'Stormix', 'Systemd', 'Tar', 'Toy Story', 'T&amp;uacute;nez', 'USB en vivo', 'Universidad Purdue', 'Usuario', 'Usuario root', 'Wayback Machine', 'Wichert Akkerman', 'Wikimedia Commons', 'Wikinoticias', 'Xfce']&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se puede averiguar cuantas im&amp;aacute;genes tiene la p&amp;aacute;gina de wikipedia del tema seleccionado:
&lt;code&gt;python
len(wikipedia.page("Debian").images)
15&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Y para ver el URL de la primera im&amp;aacute;gen:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.page("Debian").images[0])
https://upload.wikimedia.org/wikipedia/commons/4/4a/Commons-logo.svg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para terminar se puede obtener el html de la p&amp;aacute;gina del tema consultado:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
print(wikipedia.page("Debian").html())&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Salida:
&lt;code&gt;html
&amp;lt;div class="mw-parser-output"&amp;gt;&amp;lt;div class="rellink noprint"&amp;gt; Para el sistema operativo que usa el n&amp;uacute;cleo &amp;lt;a href="/wiki/Linux_(n%C3%BAcleo)" class="mw-redirect" title="Linux (n&amp;uacute;cleo)"&amp;gt;Linux&amp;lt;/a&amp;gt; y las herramientas &amp;lt;a href="/wiki/GNU" title="GNU"&amp;gt;GNU&amp;lt;/a&amp;gt;, v&amp;eacute;ase &amp;lt;a href="/wiki/Debian_GNU/Linux" title="Debian GNU/Linux"&amp;gt;Debian GNU/Linux&amp;lt;/a&amp;gt;.&amp;lt;/div&amp;gt;
&amp;lt;table class="infobox" style="width:22.7em; line-height: 1.4em; text-align:left; padding:.23em;"&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th colspan="3" class="cabecera organizaci&amp;oacute;n" style="text-align:center;background-color:#DDD;color:black;"&amp;gt;&amp;lt;b&amp;gt;Debian&amp;lt;/b&amp;gt;&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td colspan="3" style="text-align:center;font-size:95%;;"&amp;gt;
&amp;lt;a href="/wiki/Archivo:Debian-OpenLogo.svg" class="image"&amp;gt;&amp;lt;img alt="Debian-OpenLogo.svg" src="//upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Debian-OpenLogo.svg/245px-Debian-OpenLogo.svg.png" decoding="async" importance="high" elementtiming="thumbnail-high" width="245" height="324" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Debian-OpenLogo.svg/368px-Debian-OpenLogo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Debian-OpenLogo.svg/490px-Debian-OpenLogo.svg.png 2x" data-file-width="109" data-file-height="144" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th scope="row" style="text-align:left;font-size:95%;;"&amp;gt;Tipo&amp;lt;/th&amp;gt;&amp;lt;td colspan="2" style="font-size:95%;;"&amp;gt;
&amp;lt;a href="/wiki/Comunidad" title="Comunidad"&amp;gt;comunidad&amp;lt;/a&amp;gt; y &amp;lt;a href="/wiki/Organizaci%C3%B3n" title="Organizaci&amp;oacute;n"&amp;gt;organizaci&amp;oacute;n&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th scope="row" style="text-align:left;font-size:95%;;"&amp;gt;Fundaci&amp;oacute;n&amp;lt;/th&amp;gt;&amp;lt;td colspan="2" style="font-size:95%;;"&amp;gt;
&amp;lt;a href="/wiki/1993" title="1993"&amp;gt;1993&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th scope="row" style="text-align:left;font-size:95%;;"&amp;gt;Fundador(es)&amp;lt;/th&amp;gt;&amp;lt;td colspan="2" style="font-size:95%;;"&amp;gt;
&amp;lt;a href="/wiki/Ian_Murdock" title="Ian Murdock"&amp;gt;Ian Murdock&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th scope="row" style="text-align:left;font-size:95%;;"&amp;gt;Dependiente de&amp;lt;/th&amp;gt;&amp;lt;td colspan="2" style="font-size:95%;;"&amp;gt;
&amp;lt;a href="/wiki/Software_in_the_Public_Interest" title="Software in the Public Interest"&amp;gt;Software in the Public Interest&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th scope="row" style="text-align:left;font-size:95%;;"&amp;gt;Sitio web&amp;lt;/th&amp;gt;&amp;lt;td colspan="2" style="font-size:95%;;"&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El API es muy &amp;uacute;til tanto para bajar contenido del wiki como traerse enlaces, urls de im&amp;aacute;genes o el c&amp;oacute;digo html completo, &amp;uacute;til para webscraping.&lt;/p&gt;
&lt;p&gt;En pr&amp;oacute;ximo art&amp;iacute;culo se volver&amp;aacute; a usar el API de Wikipedia para hacer an&amp;aacute;lisis de lenguaje natural NLP con Python.&lt;/p&gt;
&lt;h2 id="_2"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Python"></category><category term="Wikipedia"></category><category term="Ubuntu"></category></entry><entry><title>Manejo de colas de RabbitMQ en Django con Django-Celery</title><link href="https://ecrespo.github.io/manejo-de-colas-de-rabbitmq-en-django-con-django-celery.html" rel="alternate"></link><published>2014-04-29T09:00:00-05:30</published><updated>2014-04-29T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2014-04-29:/manejo-de-colas-de-rabbitmq-en-django-con-django-celery.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.seraph.to/tag/django.html"&gt;Hace un tiempo escrib&amp;iacute; unos 3 art&amp;iacute;culos sobre Django&lt;/a&gt;, ahora se tocar&amp;aacute; un tema algo m&amp;aacute;s complejo pero &amp;uacute;til cuando se requiere rendimiento en procesos.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n paso a explicar un proceso sencillo de manejo de colas de &lt;code&gt;RabbitMQ&lt;/code&gt; por medio de &lt;code&gt;Django-Celery&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La idea es realizar una instalaci&amp;oacute;n y …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.seraph.to/tag/django.html"&gt;Hace un tiempo escrib&amp;iacute; unos 3 art&amp;iacute;culos sobre Django&lt;/a&gt;, ahora se tocar&amp;aacute; un tema algo m&amp;aacute;s complejo pero &amp;uacute;til cuando se requiere rendimiento en procesos.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n paso a explicar un proceso sencillo de manejo de colas de &lt;code&gt;RabbitMQ&lt;/code&gt; por medio de &lt;code&gt;Django-Celery&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La idea es realizar una instalaci&amp;oacute;n y configuraci&amp;oacute;n b&amp;aacute;sica, nada de tener &lt;code&gt;RabbitMQ&lt;/code&gt; en varias m&amp;aacute;quinas virtuales y que se maneje la autenticaci&amp;oacute;n de las diferentes colas de las diferentes m&amp;aacute;quinas.&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n la pueden encontrar en el siguiente &lt;a href="https://celery.readthedocs.io/en/latest/getting-started/first-steps-with-celery.html"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita es tener &lt;code&gt;rabbitMQ&lt;/code&gt; instalado en Debian Wheezy.
```&lt;/p&gt;
&lt;h1 id="aptitude install rabbitmq-server"&gt;aptitude install rabbitmq-server&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Luego de la instalaci&amp;oacute;n se verifica que se inicie el servicio:&lt;/code&gt;
root@pruebas:~# invoke-rc.d rabbitmq-server status 
Status of node rabbit@pruebas ...
[{pid,3595},
 {running_applications,[{rabbit,"RabbitMQ","2.8.4"},
                        {mnesia,"MNESIA  CXC 138 12","4.7"},
                        {os_mon,"CPO  CXC 138 46","2.2.9"},
                        {sasl,"SASL  CXC 138 11","2.2.1"},
                        {stdlib,"ERTS  CXC 138 10","1.18.1"},
                        {kernel,"ERTS  CXC 138 10","2.15.1"}]},
 {os,{unix,linux}},
 {erlang_version,"Erlang R15B01 (erts-5.9.1) [source] [64-bit] [async-threads:30] [kernel-poll:true]\n"},
 {memory,[{total,26213352},
          {processes,10386936},
          {processes_used,10386922},
          {system,15826416},
          {atom,504409},
          {atom_used,473948},
          {binary,263704},
          {code,11874771},
          {ets,771120}]},
 {vm_memory_high_watermark,0.39999999862767177},
 {vm_memory_limit,233180364},
 {disk_free_limit,1000000000},
 {disk_free,6221991936},
 {file_descriptors,[{total_limit,924},
                    {total_used,8},
                    {sockets_limit,829},
                    {sockets_used,5}]},
 {processes,[{limit,1048576},{used,167}]},
 {run_queue,0},
 {uptime,5808}]
...done.
```&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n se puede verificar desde el comando &lt;code&gt;rabbitctl&lt;/code&gt;:
&lt;code&gt;root@pruebas:~# rabbitmqctl status 
Status of node rabbit@pruebas ...
[{pid,3595},
 {running_applications,[{rabbit,"RabbitMQ","2.8.4"},
                        {mnesia,"MNESIA  CXC 138 12","4.7"},
                        {os_mon,"CPO  CXC 138 46","2.2.9"},
                        {sasl,"SASL  CXC 138 11","2.2.1"},
                        {stdlib,"ERTS  CXC 138 10","1.18.1"},
                        {kernel,"ERTS  CXC 138 10","2.15.1"}]},
 {os,{unix,linux}},
 {erlang_version,"Erlang R15B01 (erts-5.9.1) [source] [64-bit] [async-threads:30] [kernel-poll:true]\n"},
 {memory,[{total,26211600},
          {processes,10386952},
          {processes_used,10386938},
          {system,15824648},
          {atom,504409},
          {atom_used,473972},
          {binary,262176},
          {code,11874771},
          {ets,771120}]},
 {vm_memory_high_watermark,0.39999999862767177},
 {vm_memory_limit,233180364},
 {disk_free_limit,1000000000},
 {disk_free,6221991936},
 {file_descriptors,[{total_limit,924},
                    {total_used,8},
                    {sockets_limit,829},
                    {sockets_used,5}]},
 {processes,[{limit,1048576},{used,167}]},
 {run_queue,0},
 {uptime,5848}]
...done.&lt;/code&gt;
Como la conexi&amp;oacute;n de Django es con una s&amp;oacute;la m&amp;aacute;quina no se requiere autenticaci&amp;oacute;n del &lt;code&gt;rabbitMQ&lt;/code&gt; as&amp;iacute; que ese paso lo pueden ver en el siguiente &lt;a href="https://celery.readthedocs.io/en/latest/getting-started/brokers/rabbitmq.html"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ahora se instalar&amp;aacute; &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;celery&lt;/code&gt; y &lt;code&gt;django-celery&lt;/code&gt;:
``` &lt;/p&gt;
&lt;h1 id="aptitude install python2.7 python2.7-dev python-django python-django-celery python-celery"&gt;aptitude install python2.7 python2.7-dev python-django python-django-celery python-celery&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Al terminar de instalar la aplicaci&amp;oacute;n ahora se va a crear un proyecto django:
Se crea el directorio django en &lt;code&gt;/srv/&lt;/code&gt;
```&lt;/p&gt;
&lt;h1 id="mkdir -p /srv/django"&gt;mkdir -p /srv/django&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Luego se crea el proyecto pasarela con el comando `django-admin`:&lt;/code&gt;
root@pruebas:/srv/django# django-admin startproject pasarela
&lt;code&gt;Dentro del directorio pasarela se encontrar&amp;aacute; la estructura de archivos que maneja django:&lt;/code&gt;
-rwxr-xr-x 1 pasarela pasarela   251 abr 29 15:32 manage.py
drwxr-xr-x 3 pasarela pasarela  4096 abr 29 16:49 pasarela
-rw-rw-rw- 1 pasarela pasarela 69632 abr 29 16:59 pasarela.db
```  &lt;/p&gt;
&lt;p&gt;Luego dentro del directorio pasarela se tiene lo siguiente:
&lt;code&gt;root@pruebas:/srv/django/pasarela/pasarela# ls -l
total 32
-rw-r--r-- 1 pasarela pasarela    0 abr 29 15:32 __init__.py
-rw-r--r-- 1 pasarela pasarela 5464 abr 29 16:46 settings.py
-rw-r--r-- 1 pasarela pasarela  562 abr 29 15:32 urls.py
-rw-r--r-- 1 pasarela pasarela 1138 abr 29 15:32 wsgi.py&lt;/code&gt;
Se crea el directorio &lt;code&gt;apps&lt;/code&gt;:
&lt;code&gt;root@pruebas:/srv/django/pasarela/pasarela#mkdir -p apps&lt;/code&gt;
Dentro del directorio se crea el archivo &lt;code&gt;__init__.py&lt;/code&gt;:
&lt;code&gt;root@pruebas:/srv/django/pasarela/pasarela/apps# touch __init__,py&lt;/code&gt;
Ahora se crea la aplicaci&amp;oacute;n &lt;code&gt;sms&lt;/code&gt;:
&lt;code&gt;root@pruebas:/srv/django/pasarela/pasarela/apps# django-admin startapp sms&lt;/code&gt;
El directorio &lt;code&gt;sms&lt;/code&gt; contiene lo siguiente:
&lt;code&gt;root@pruebas:/srv/django/pasarela/pasarela/apps/sms# ls -l
total 24
-rw-r--r-- 1 pasarela pasarela   0 abr 29 15:46 __init__.py
-rw-r--r-- 1 pasarela pasarela  57 abr 29 15:46 models.py
-rw-r--r-- 1 pasarela pasarela 383 abr 29 15:46 tests.py
-rw-r--r-- 1 pasarela pasarela  26 abr 29 15:46 views.py&lt;/code&gt;
En este directorio se crea el archivo &lt;code&gt;tasks.py&lt;/code&gt; con el siguiente contenido: 
```&lt;/p&gt;
&lt;h1 id="se importa celery"&gt;Se importa Celery&lt;/h1&gt;
&lt;p&gt;from celery import Celery&lt;/p&gt;
&lt;h1 id="se instancia celery importando tasks, se define el broker (quien recibe los procesos en este"&gt;Se instancia Celery importando tasks, se define el broker (quien recibe los procesos en este&lt;/h1&gt;
&lt;h1 id="caso rabbitmq con el protocolo amgp) y se define el backend (quien recibe los resultado"&gt;caso rabbitMQ con el protocolo amgp) y se define el backend (quien recibe los resultado&lt;/h1&gt;
&lt;h1 id="del proceso encolado en este caso con rabbitmq y el protocolo amgp)"&gt;del proceso encolado en este caso con rabbitMQ y el protocolo amgp)&lt;/h1&gt;
&lt;p&gt;app = Celery('tasks', broker='amqp://',backend='amqp')&lt;/p&gt;
&lt;h1 id="se usa el decorador task de app y se define la suma."&gt;Se usa el decorador task de app y se define la suma.&lt;/h1&gt;
&lt;p&gt;@app.task
def add(x, y):
    return x + y
&lt;code&gt;``
Lo que se va a hacer es manejar la suma por medio de la cola de&lt;/code&gt;rabbitMQ`.&lt;/p&gt;
&lt;p&gt;Ahora se revisa el contenido del archivo &lt;code&gt;settings.py&lt;/code&gt; (lo m&amp;aacute;s relevante): &lt;/p&gt;
&lt;p&gt;Se va a trabajar por los momentos con la base de datos &lt;code&gt;sqlite&lt;/code&gt;:
&lt;code&gt;DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'pasarela.db',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}&lt;/code&gt;
Se define el uso horario de la aplicaci&amp;oacute;n: 
&lt;code&gt;TIME_ZONE = 'America/Caracas'&lt;/code&gt;
Se define el idioma:
&lt;code&gt;LANGUAGE_CODE = 'es-ve'&lt;/code&gt;
Se agrega la aplicaci&amp;oacute;n &lt;code&gt;djcelery&lt;/code&gt; y &lt;code&gt;sms&lt;/code&gt;:
&lt;code&gt;INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Uncomment the next line to enable the admin:
    'django.contrib.admin',
    'djcelery',
    'pasarela.apps.sms',
    # Uncomment the next line to enable admin documentation:
    # 'django.contrib.admindocs',
)&lt;/code&gt;
Ahora queda sincronizar la base de datos (ac&amp;aacute; se crea la base de datos para django, lo necesario para django celery y la cuenta del administrador de la aplicaci&amp;oacute;n):
&lt;code&gt;root@pruebas:/srv/django/pasarela# python manage.py syncdb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora lo que queda es iniciar &lt;code&gt;celery&lt;/code&gt;: 
Se inicia &lt;code&gt;manage.py&lt;/code&gt; de django dici&amp;eacute;ndole que va a iniciar celery en nivel de informaci&amp;oacute;n y con dos procesos concurrentes.
```
ernesto@pruebas:/srv/django/pasarela$ python manage.py celeryd -E -l info -c 2
/usr/lib/python2.7/dist-packages/djcelery/loaders.py:108: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warnings.warn("Using settings.DEBUG leads to a memory leak, never "
[2014-04-29 17:22:37,272: WARNING/MainProcess]  &lt;/p&gt;
&lt;p&gt;-------------- celery@pruebas v2.5.3
---- &lt;strong&gt;&lt;em&gt;* -----
--- * &lt;/em&gt;&lt;/strong&gt;  * -- [Configuration]
-- * - &lt;strong&gt;&lt;em&gt;* ---   . broker:      amqp://guest@localhost:5672//
- &lt;/em&gt;* ----------   . loader:      djcelery.loaders.DjangoLoader
- &lt;/strong&gt; ----------   . logfile:     [stderr]@INFO
- &lt;strong&gt; ----------   . concurrency: 2
- &lt;/strong&gt; ----------   . events:      ON
- &lt;strong&gt;&lt;em&gt; --- * ---   . beat:        OFF
-- &lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;* ----
--- &lt;/em&gt;&lt;/strong&gt;** ----- [Queues]
 --------------   . celery:      exchange:celery (direct) binding:celery&lt;/p&gt;
&lt;p&gt;[Tasks]
  . pasarela.apps.sms.tasks.add&lt;/p&gt;
&lt;p&gt;[2014-04-29 17:22:37,293: INFO/PoolWorker-1] child process calling self.run()
[2014-04-29 17:22:37,297: INFO/PoolWorker-2] child process calling self.run()
[2014-04-29 17:22:37,307: WARNING/MainProcess] celery@pruebas has started.
```&lt;/p&gt;
&lt;p&gt;En otra consola se inicia el shell del &lt;code&gt;manage.py&lt;/code&gt; de django: 
Se importa la funci&amp;oacute;n add que se defini&amp;oacute; en el archivo &lt;code&gt;tasks.py&lt;/code&gt;.
```
ernesto@pruebas:/srv/django/pasarela$ python manage.py shell
Python 2.7.3 (default, Mar 13 2014, 11:03:55) 
[GCC 4.7.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from pasarela.apps.sms.tasks import add&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="se realiza la suma de 11+19"&gt;Se realiza la suma de 11+19&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;result = add.delay(11, 19)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="se obtiene el resultado:"&gt;Se obtiene el resultado:&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;result.get()
30&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="se verifica si ya celery esta listo para recibir mas procesos:"&gt;Se verifica si ya celery est&amp;aacute; listo para recibir m&amp;aacute;s procesos:&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;result.ready()
True&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="se verifica si ya el proceso termino."&gt;Se verifica si ya el proceso termino.&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;result.successful()
True
&lt;code&gt;En la salida de celery se tiene lo siguiente:&lt;/code&gt; 
[2014-04-29 17:25:36,200: INFO/MainProcess] Got task from broker: pasarela.apps.sms.tasks.add[64275874-545b-4ab9-bfc8-ea38904d2320]
[2014-04-29 17:25:36,228: INFO/MainProcess] Task pasarela.apps.sms.tasks.add[64275874-545b-4ab9-bfc8-ea38904d2320] succeeded in 0.0155239105225s: 30
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Como se muestra el &lt;code&gt;celery&lt;/code&gt; recibe y devuelve el resultado de la suma con su tiempo de ejecuci&amp;oacute;n, si se tienen varios equipos con &lt;code&gt;rabbitMQ&lt;/code&gt; se puede mejorar significativamente los procesos de ejecuci&amp;oacute;n de funciones en django.&lt;/p&gt;
&lt;p&gt;Pueden revisar la siguiente &lt;a href="https://es.scribd.com/document/57279486/Celery-An-A-Synchronous-Task-Queue-Not-Only-for-Django"&gt;presentaci&amp;oacute;n&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Django"></category><category term="Django-Celery"></category></entry><entry><title>Reproductor de vídeo con python y kivy</title><link href="https://ecrespo.github.io/reproductor-de-video-con-python-y-kivy.html" rel="alternate"></link><published>2014-04-19T10:00:00-05:30</published><updated>2014-04-19T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2014-04-19:/reproductor-de-video-con-python-y-kivy.html</id><summary type="html">&lt;p&gt;De los dos art&amp;iacute;culos anteriores, el &lt;a href="https://www.seraph.to/desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy.html#desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy"&gt;introductorio con manejo de etiquetas&lt;/a&gt;; y 
&lt;a href="https://www.seraph.to/widget-button-y-scatter-widget-de-comportamiento-en-kivy.html#widget-button-y-scatter-widget-de-comportamiento-en-kivy"&gt;el de bot&amp;oacute;n y scatter&lt;/a&gt; ahora explicar&amp;eacute; algo m&amp;aacute;s completo, la reproducci&amp;oacute;n de un v&amp;iacute;deo.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en &lt;a href="http://karanbalkar.com/2012/10/learning-kivy-video-player-and-scatter-widgets/"&gt;ingl&amp;eacute;s sobre un reproductor de v&amp;iacute;deo y scatter con kivy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ahora se mostrar&amp;aacute; como asociar un evento (una …&lt;/p&gt;</summary><content type="html">&lt;p&gt;De los dos art&amp;iacute;culos anteriores, el &lt;a href="https://www.seraph.to/desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy.html#desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy"&gt;introductorio con manejo de etiquetas&lt;/a&gt;; y 
&lt;a href="https://www.seraph.to/widget-button-y-scatter-widget-de-comportamiento-en-kivy.html#widget-button-y-scatter-widget-de-comportamiento-en-kivy"&gt;el de bot&amp;oacute;n y scatter&lt;/a&gt; ahora explicar&amp;eacute; algo m&amp;aacute;s completo, la reproducci&amp;oacute;n de un v&amp;iacute;deo.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en &lt;a href="http://karanbalkar.com/2012/10/learning-kivy-video-player-and-scatter-widgets/"&gt;ingl&amp;eacute;s sobre un reproductor de v&amp;iacute;deo y scatter con kivy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ahora se mostrar&amp;aacute; como asociar un evento (una funci&amp;oacute;n) al bot&amp;oacute;n al darle click.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo del reproductor:
```python&lt;/p&gt;
&lt;h1 id="se importa kivy y se valida que es la version 1.8.0"&gt;Se importa kivy y se valida que es la versi&amp;oacute;n 1.8.0&lt;/h1&gt;
&lt;p&gt;import kivy&lt;/p&gt;
&lt;p&gt;kivy.require('1.8.0')&lt;/p&gt;
&lt;h1 id="se importa la clase app"&gt;Se importa la clase App&lt;/h1&gt;
&lt;p&gt;from kivy.app import App&lt;/p&gt;
&lt;h1 id="se importa button, widget y videoplayer"&gt;Se importa Button, Widget y VideoPlayer&lt;/h1&gt;
&lt;p&gt;from kivy.uix.button import Button&lt;/p&gt;
&lt;p&gt;from kivy.uix.widget import Widget&lt;/p&gt;
&lt;p&gt;from kivy.uix.videoplayer import VideoPlayer&lt;/p&gt;
&lt;h1 id="se instancia widget y button."&gt;Se instancia Widget y Button.&lt;/h1&gt;
&lt;p&gt;parent= Widget()&lt;/p&gt;
&lt;p&gt;button= Button()&lt;/p&gt;
&lt;h1 id="se crea la clase myapp que hereda de app"&gt;Se crea la clase MyApp que hereda de App&lt;/h1&gt;
&lt;p&gt;class MyApp(App):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se define el m&amp;eacute;todo build.

def build(self):

     #Se instancia Button con su texto y tama&amp;ntilde;o del  mismo.

     button = Button(text='Reproductor Video', font_size=14)

     #Se asocia al boton la funci&amp;oacute;n on_button_press al argumento on_press

     button.bind(on_press=on_button_press)

     #Se agrega button a la instancia de parent

     parent.add_widget(button) #agrega el boton

     #Retorna parent

     return parent
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se define la funcion on_button_press"&gt;Se define la funci&amp;oacute;n on_button_press&lt;/h1&gt;
&lt;p&gt;def on_button_press(self):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se crea la instancia de VideoPlayer donde se le pasa como argumento la fuente de v&amp;iacute;deo,

    #el estado y la opci&amp;oacute;n allow_stretch True.

    video= VideoPlayer(source='Tribus-SethGodin.webm', state='play',options={'allow_stretch': True})

    #Se agrega el v&amp;iacute;deo a la instancia parent

    parent.add_widget(video) #add videoplayer

    #Se retorna parent

    return parent
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MyApp().run()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado de reproducir el script se muestra en el siguiente v&amp;iacute;deo:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/todhoMD1jBY" title="https://youtu.be/todhoMD1jBY"&gt;https://youtu.be/todhoMD1jBY&lt;/a&gt;&lt;/p&gt;
&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="270" src="https://www.youtube.com/embed/todhoMD1jBY?feature=oembed" width="480"&gt;&lt;/iframe&gt;
&lt;p&gt;Nota: El v&amp;iacute;deo del reproductor no tiene problemas con el audio, el problema generador de screencast no he logrado hacer que grabe audio :-/ ...&lt;/p&gt;
&lt;p&gt;Si desea conocer m&amp;aacute;s sobre el widget VideoPlayer puede ver el siguiente &lt;a href="https://kivy.org/doc/stable/api-kivy.uix.videoplayer.html#kivy.uix.videoplayer.VideoPlayer.allow_fullscreen"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="gnome"></category><category term="Python"></category><category term="Ubuntu"></category><category term="kivy"></category></entry><entry><title>Widget button y Scatter (widget de comportamiento) en kivy.</title><link href="https://ecrespo.github.io/widget-button-y-scatter-widget-de-comportamiento-en-kivy.html" rel="alternate"></link><published>2014-04-19T08:00:00-05:30</published><updated>2014-04-19T08:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2014-04-19:/widget-button-y-scatter-widget-de-comportamiento-en-kivy.html</id><summary type="html">&lt;p&gt;El &lt;a href="https://www.seraph.to/desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy.html#desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se mostr&amp;oacute; una peque&amp;ntilde;a introducci&amp;oacute;n de kivy y como tener una ventana con una etiqueta.&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n se mostr&amp;oacute; como separar el layaout de la programaci&amp;oacute;n.
A continuaci&amp;oacute;n se mostrar&amp;aacute; dos ejemplos, uno utilizando el widget button y otro con una etiqueta dentro de un Scatter (widget de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El &lt;a href="https://www.seraph.to/desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy.html#desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se mostr&amp;oacute; una peque&amp;ntilde;a introducci&amp;oacute;n de kivy y como tener una ventana con una etiqueta.&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n se mostr&amp;oacute; como separar el layaout de la programaci&amp;oacute;n.
A continuaci&amp;oacute;n se mostrar&amp;aacute; dos ejemplos, uno utilizando el widget button y otro con una etiqueta dentro de un Scatter (widget de comportamiento que permite drag, rotar y escalar un widget).
El art&amp;iacute;culo se basa del &lt;a href="https://www.youtube.com/watch?v=F7UKmK9eQLY"&gt;v&amp;iacute;deo tutorial No.1&lt;/a&gt; del equipo de kivy:&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo python del ejemplo del bot&amp;oacute;n se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa kivy"&gt;Se importa kivy&lt;/h1&gt;
&lt;p&gt;import kivy&lt;/p&gt;
&lt;h1 id="se valida que se tiene la version 1.8.0 de kivy"&gt;Se valida que se tiene la versi&amp;oacute;n 1.8.0 de kivy&lt;/h1&gt;
&lt;p&gt;kivy.require('1.8.0')&lt;/p&gt;
&lt;h1 id="se importa la clase app y el widget button"&gt;Se importa la clase App y el widget Button&lt;/h1&gt;
&lt;p&gt;from kivy.app import App&lt;/p&gt;
&lt;p&gt;from kivy.uix.button import Button&lt;/p&gt;
&lt;h1 id="se crea la clase hola3app que hereda de app"&gt;Se crea la clase Hola3App que hereda de App&lt;/h1&gt;
&lt;p&gt;class Hola3App(App):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se define el m&amp;eacute;todo build que devuelve el widget Button sin argumentos.

def build(self):

    return Button()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se crea la instancia de la clase y se ejecuta.

Hola3App().run()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;El archivo `hola3.kv` con el layout de `hola3.py` se muestra a continuaci&amp;oacute;n:
Se define el texto del bot&amp;oacute;n, el color ser&amp;aacute; azul y su tama&amp;ntilde;o.&lt;/code&gt;python&lt;/p&gt;
&lt;h1 id="file name: hello2.kv"&gt;File name: hello2.kv&lt;/h1&gt;
&lt;h1 id=":kivy 1.8.0"&gt;:kivy 1.8.0&lt;/h1&gt;
&lt;p&gt;&lt;button&gt;: &lt;/button&gt;&lt;/p&gt;
&lt;p&gt;text: 'Hola mundo v3!'&lt;/p&gt;
&lt;p&gt;font_size:100&lt;/p&gt;
&lt;p&gt;background_color:(0,0,1,1)&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El siguiente v&amp;iacute;deo muestra la ejecuci&amp;oacute;n del script:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/gFk4w-p4qhc" title="https://youtu.be/gFk4w-p4qhc"&gt;https://youtu.be/gFk4w-p4qhc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El siguiente ejemplo es del uso del widget de comportamiento Scatter, este widget permite realizar drag, cambiar de escala de lo que contenga el widget y rotar, aparte es un wiget que soporta multitouch.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de &amp;acute;hola4.py&amp;acute; se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa kivy_1"&gt;se importa kivy&lt;/h1&gt;
&lt;p&gt;import kivy&lt;/p&gt;
&lt;h1 id="se valida que la version de kivy sea la 1.8.0"&gt;Se v&amp;aacute;lida que la versi&amp;oacute;n de kivy sea la 1.8.0&lt;/h1&gt;
&lt;p&gt;kivy.require('1.8.0')&lt;/p&gt;
&lt;h1 id="se importa la clase app"&gt;Se importa la clase App&lt;/h1&gt;
&lt;p&gt;from kivy.app import App&lt;/p&gt;
&lt;h1 id="se importa scatter, label y floatlayout"&gt;Se importa Scatter, Label y FloatLayout&lt;/h1&gt;
&lt;p&gt;from kivy.uix.scatter import Scatter&lt;/p&gt;
&lt;p&gt;from kivy.uix.label import Label&lt;/p&gt;
&lt;p&gt;from kivy.uix.floatlayout import FloatLayout&lt;/p&gt;
&lt;h1 id="se crea la clase hola4app que hereda de app"&gt;Se crea la clase Hola4App que hereda de App&lt;/h1&gt;
&lt;p&gt;class Hola4App(App):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se define el m&amp;eacute;todo build

def build(self):

    #Se instancia al objeto FloatLayout

    f = FloatLayout()

    #Se instancia al objeto Scatter

    s = Scatter()

    #Se instancia al objeto Label con el texto y el tama&amp;ntilde;o.

    l = Label(text="Hola v4",font_size=100)

    #Se agrega a FloatLayout la instancia del widget scatter

    f.add_widget(s)

    #Se agrega el widget Label a Scatter

    s.add_widget(l)

    #Se retorna la instancia de FloatLayout

    return f
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se ejecuta run de la instancia del objeto Hola4App

Hola4App().run()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El siguiente v&amp;iacute;deo muestra el resultado de la ejecuci&amp;oacute;n del script:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/_AeT3LkVwkk" title="https://youtu.be/_AeT3LkVwkk"&gt;https://youtu.be/_AeT3LkVwkk&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="gnome"></category><category term="Python"></category><category term="Ubuntu"></category><category term="kivy"></category></entry><entry><title>Desarrollo de aplicaciones multiplataforma con python y kivy</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy.html" rel="alternate"></link><published>2014-04-18T09:00:00-05:30</published><updated>2014-04-18T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2014-04-18:/desarrollo-de-aplicaciones-multiplataforma-con-python-y-kivy.html</id><summary type="html">&lt;p&gt;&lt;a href="https://kivy.org/#home"&gt;Kivy&lt;/a&gt; es una librer&amp;iacute;a que permite usar python para crear aplicaciones para el escritorio y dispositivos m&amp;oacute;viles con soporte multitouch.&lt;/p&gt;
&lt;p&gt;Es multiplataforma:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/desarrollodeaplicacionesmultiplataformaconpythonykivy-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Soporta:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux (Debian, Ubuntu, Fedora, ArchLinux, etc). &lt;/li&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;IOS de Apple&lt;/li&gt;
&lt;li&gt;OSX de Apple&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para descargarlo pueden visitar la p&amp;aacute;gina del &lt;a href="https://kivy.org/#download"&gt;proyecto&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En el caso …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://kivy.org/#home"&gt;Kivy&lt;/a&gt; es una librer&amp;iacute;a que permite usar python para crear aplicaciones para el escritorio y dispositivos m&amp;oacute;viles con soporte multitouch.&lt;/p&gt;
&lt;p&gt;Es multiplataforma:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/desarrollodeaplicacionesmultiplataformaconpythonykivy-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Soporta:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux (Debian, Ubuntu, Fedora, ArchLinux, etc). &lt;/li&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;IOS de Apple&lt;/li&gt;
&lt;li&gt;OSX de Apple&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para descargarlo pueden visitar la p&amp;aacute;gina del &lt;a href="https://kivy.org/#download"&gt;proyecto&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En el caso de Debian en la versi&amp;oacute;n estable (wheezy) toca instalarlo v&amp;iacute;a &lt;code&gt;pip&lt;/code&gt; o bajar la fuente del enlace anterior.
&lt;code&gt;pip install kivy (aplica para cualquier versi&amp;oacute;n de Debian o distro basada en Debian).&lt;/code&gt;
Para el caso de la versi&amp;oacute;n de pruebas (Jessie) ya viene en los repositorios de Debian:
&lt;code&gt;apt-get install python-kivy python3-kivy python-kivy-examples&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para m&amp;aacute;s informaci&amp;oacute;n del proyecto pueden visitar su &lt;a href="https://github.com/kivy/kivy/wiki"&gt;wiki en github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El ejemplo que se explicar&amp;aacute; es el de una ventana con una etiqueta que diga "Hola Mundo!", la primera versi&amp;oacute;n contendr&amp;aacute; todo el c&amp;oacute;digo en un script en python y la siguiente versi&amp;oacute;n se separa el script python de las caracter&amp;iacute;sticas de los widgets.&lt;/p&gt;
&lt;p&gt;C&amp;oacute;digo del hola mundo versi&amp;oacute;n 1:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa kivy"&gt;Se importa kivy&lt;/h1&gt;
&lt;p&gt;import kivy&lt;/p&gt;
&lt;h1 id="se valida que se este usando la version 1.8.0 de kivy"&gt;Se v&amp;aacute;lida que se est&amp;eacute; usando la versi&amp;oacute;n 1.8.0 de kivy&lt;/h1&gt;
&lt;p&gt;kivy.require('1.8.0')&lt;/p&gt;
&lt;h1 id="se importa la clase app y el widget label"&gt;Se importa la clase App y el widget Label&lt;/h1&gt;
&lt;p&gt;from kivy.app import App&lt;/p&gt;
&lt;p&gt;from kivy.uix.label import Label&lt;/p&gt;
&lt;h1 id="se crea la clase holaapp que hereda de app"&gt;Se crea la clase HolaApp que hereda de App&lt;/h1&gt;
&lt;p&gt;class HolaApp(App):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se crea la funci&amp;oacute;n build

def build(self):

    #Se retorna el widget Label con un texto y el tama&amp;ntilde;o del mismo

    return Label(text='Hola Mundo!!!',

                 font_size=100)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se instancia la clase y se ejecuta

HolaApp().run()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El script se llamar&amp;aacute; &lt;code&gt;hola.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la figura del resultado de la ejecuci&amp;oacute;n del script:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/desarrollodeaplicacionesmultiplataformaconpythonykivy-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La versi&amp;oacute;n 2 del hola mundo se diferencia del primero por que ahora se manejar&amp;aacute; dos archivos, &lt;code&gt;hola2.py&lt;/code&gt; y &lt;code&gt;hola2.kv&lt;/code&gt;, su nombre tiene relaci&amp;oacute;n con el nombre de la clase que se crea y es la forma como python y kivy reconocen los archivos que necesitan ejecutar.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo de &lt;code&gt;hola2.py&lt;/code&gt;:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se imposta kivy"&gt;Se imposta kivy&lt;/h1&gt;
&lt;p&gt;import kivy&lt;/p&gt;
&lt;h1 id="se valida que se use la version 1.8.0 de kivy"&gt;Se valida que se use la versi&amp;oacute;n 1.8.0 de kivy&lt;/h1&gt;
&lt;p&gt;kivy.require('1.8.0')&lt;/p&gt;
&lt;h1 id="se importa la case app y el widget label"&gt;Se importa la case App y el widget Label&lt;/h1&gt;
&lt;p&gt;from kivy.app import App&lt;/p&gt;
&lt;p&gt;from kivy.uix.label import Label&lt;/p&gt;
&lt;h1 id="se crea la clase hola2app que hereda de app"&gt;Se crea la Clase Hola2App que hereda de App&lt;/h1&gt;
&lt;p&gt;class Hola2App(App):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se define la funci&amp;oacute;n build que retorna el widget Label

#Esta vez sin ning&amp;uacute;n argumento ya que ser&amp;aacute; manejado por el archivo hola2.kv

def build(self):

    return Label()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se instancia la clase Hola2App y se ejecuta.

Hola2App().run()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;C&amp;oacute;digo del archivo hola2.kv:&lt;/p&gt;
&lt;h1 id="file name: hola2.kv"&gt;File name: hola2.kv&lt;/h1&gt;
&lt;h1 id=":kivy 1.8.0"&gt;:kivy 1.8.0&lt;/h1&gt;
&lt;p&gt;&lt;label&gt;:&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;text: 'Hola mundo v 2!'&lt;/p&gt;
&lt;p&gt;font_size:100&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Este archivo tiene la descripci&amp;oacute;n de la etiqueta, con el par&amp;aacute;metro text y font_size, esto facilita tener ordenada y cambiar los par&amp;aacute;metros de los widgets sin tener que modificar c&amp;oacute;digo.&lt;/p&gt;
&lt;p&gt;El resultado de la ejecuci&amp;oacute;n del script &lt;code&gt;hola2.py&lt;/code&gt; se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/desarrollodeaplicacionesmultiplataformaconpythonykivy-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;En siguientes art&amp;iacute;culos se seguir&amp;aacute; explicando el uso de los widgets y como instalar la librer&amp;iacute;a en Android y crear aplicaciones para Android.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="gnome"></category><category term="python"></category><category term="Ubuntu"></category><category term="kivy"></category></entry><entry><title>Crear un demonio de Linux con Python</title><link href="https://ecrespo.github.io/crear-un-demonio-de-linux-con-python.html" rel="alternate"></link><published>2014-02-02T09:00:00-05:30</published><updated>2014-02-02T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2014-02-02:/crear-un-demonio-de-linux-con-python.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo se basa en el &lt;a href="http://www.gavinj.net/2012/06/building-python-daemon-process.html"&gt;siguiente art&amp;iacute;culo en ingl&amp;eacute;s&lt;/a&gt;.&lt;br/&gt;
La idea es crear un proceso demonio de Linux con Python.&lt;br/&gt;
Para ello se requerir&amp;aacute; los 2 siguientes librer&amp;iacute;as de python:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Python-daemon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Python-lockfile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A lo debian se usa el comando &lt;code&gt;apt-get&lt;/code&gt;:
```&lt;/p&gt;
&lt;h1 id="apt-get install python-daemon python-lockfile"&gt;apt-get install python-daemon python-lockfile&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;A lo python se ejecuta …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo se basa en el &lt;a href="http://www.gavinj.net/2012/06/building-python-daemon-process.html"&gt;siguiente art&amp;iacute;culo en ingl&amp;eacute;s&lt;/a&gt;.&lt;br/&gt;
La idea es crear un proceso demonio de Linux con Python.&lt;br/&gt;
Para ello se requerir&amp;aacute; los 2 siguientes librer&amp;iacute;as de python:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Python-daemon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Python-lockfile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A lo debian se usa el comando &lt;code&gt;apt-get&lt;/code&gt;:
```&lt;/p&gt;
&lt;h1 id="apt-get install python-daemon python-lockfile"&gt;apt-get install python-daemon python-lockfile&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;A lo python se ejecuta el comando pip:&lt;/code&gt;python&lt;/p&gt;
&lt;h1 id="pip install python-daemon lockfile"&gt;pip install python-daemon lockfile&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;``
A continuaci&amp;oacute;n se muestra el archivo&lt;/code&gt;demonioprueba.py&lt;code&gt;que se colocar&amp;aacute; en el directorio&lt;/code&gt;/usr/share/demonioprueba/`.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="libreria estandar loggin y time"&gt;libreria est&amp;aacute;ndar loggin y time&lt;/h1&gt;
&lt;p&gt;import logging&lt;/p&gt;
&lt;p&gt;import time&lt;/p&gt;
&lt;h1 id="de python-daemon import runner"&gt;de python-daemon import runner&lt;/h1&gt;
&lt;p&gt;from daemon import runner&lt;/p&gt;
&lt;p&gt;class App():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self):


    #Se define unos path est&amp;aacute;ndar en linux.


    self.stdin_path = '/dev/null'


    self.stdout_path = '/dev/tty'


    self.stderr_path = '/dev/tty'


    #Se define la ruta del archivo pid del demonio.


    self.pidfile_path =  '/var/run/demonioprueba/demonioprueba.pid'


    self.pidfile_timeout = 5





def run(self):


    i = 0


    while True:


        #El c&amp;oacute;digo principal va ac&amp;aacute;


        i += 1


        #Diferentes niveles de registro de bitacora


        logger.debug("Debug message %s" %i)


        logger.info("Info message %s" %i)


        logger.warn("Warning message %s" %i)


        logger.error("Error message %s" %i)


        time.sleep(1)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se crea la instancia de la clase"&gt;Se crea la instancia de la clase&lt;/h1&gt;
&lt;p&gt;app = App()&lt;/p&gt;
&lt;h1 id="define la instancia de la clase logging para generar la bitacora"&gt;define la instancia de la clase logging para generar la bitacora&lt;/h1&gt;
&lt;p&gt;logger = logging.getLogger("demonioprueba log")&lt;/p&gt;
&lt;p&gt;logger.setLevel(logging.INFO)&lt;/p&gt;
&lt;h1 id="se define el forma del log"&gt;Se define el forma del log&lt;/h1&gt;
&lt;p&gt;formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")&lt;/p&gt;
&lt;p&gt;handler = logging.FileHandler("/var/log/demonioprueba/demoniopruebas.log")&lt;/p&gt;
&lt;p&gt;handler.setFormatter(formatter)&lt;/p&gt;
&lt;p&gt;logger.addHandler(handler)&lt;/p&gt;
&lt;h1 id="se ejecuta el demonio llamando al objeto app"&gt;Se ejecuta el demonio llamando al objeto app&lt;/h1&gt;
&lt;p&gt;daemon_runner = runner.DaemonRunner(app)&lt;/p&gt;
&lt;h1 id="esto evita que el archivo log no se cierre durante la ejecucion del demonio"&gt;Esto evita que el archivo log no se cierre durante la ejecuci&amp;oacute;n del demonio&lt;/h1&gt;
&lt;p&gt;daemon_runner.daemon_context.files_preserve=[handler.stream]&lt;/p&gt;
&lt;h1 id="ejecuta el metodo run del objeto app"&gt;Ejecuta el m&amp;eacute;todo run del objeto app&lt;/h1&gt;
&lt;p&gt;daemon_runner.do_action()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El archivo se salva en la ruta &lt;code&gt;/usr/share/demonioprueba/demonioprueba.py&lt;/code&gt;.
Se crean los directorios &lt;code&gt;/var/log/demonioprueba&lt;/code&gt; y &lt;code&gt;/var/run/demonioprueba/&lt;/code&gt;:
```&lt;/p&gt;
&lt;h1 id="mkdir -p /var/log/demonioprueba"&gt;mkdir -p /var/log/demonioprueba&lt;/h1&gt;
&lt;h1 id="mkdir -p /var/run/demonioprueba"&gt;mkdir -p /var/run/demonioprueba&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Se puede probar el demonio al ejecutar el siguiente comando:&lt;/code&gt;python
python/usr/share/demonioprueba/demonioprueba.py start
root@heimdal:~# started with pid 5915
&lt;code&gt;Se muestra que el demonio se inicio con el pid 5915.
Al ejecutar `ps aux  | grep demonioprueba.py` se ver&amp;aacute; el proceso en ejecuci&amp;oacute;n:&lt;/code&gt;
root@heimdal:~# ps aux | grep demonioprueba.py
root      5915  0.0  0.1  38088  6656 ?        S    17:00   0:00 python /usr/share/demonioprueba/demonioprueba.py start
```
Como se ve el proceso se inicio con el pid 5915. &lt;/p&gt;
&lt;p&gt;Se puede ver la bitacora al ejecutar:
&lt;code&gt;tail -f /var/log/demonioprueba/demonioprueba.log&lt;/code&gt;
A continuaci&amp;oacute;n se muestra una parte del log:
&lt;code&gt;2014-02-02 17:01:25,516 - demonioprueba log - WARNING - Warning message 80
2014-02-02 17:01:25,516 - demonioprueba log - ERROR - Error message 80
2014-02-02 17:01:26,517 - demonioprueba log - INFO - Info message 81
2014-02-02 17:01:26,517 - demonioprueba log - WARNING - Warning message 81
2014-02-02 17:01:26,518 - demonioprueba log - ERROR - Error message 81
2014-02-02 17:01:27,519 - demonioprueba log - INFO - Info message 82
2014-02-02 17:01:27,519 - demonioprueba log - WARNING - Warning message 82
2014-02-02 17:01:27,519 - demonioprueba log - ERROR - Error message 82
2014-02-02 17:01:28,520 - demonioprueba log - INFO - Info message 83
2014-02-02 17:01:28,521 - demonioprueba log - WARNING - Warning message 83
2014-02-02 17:01:28,521 - demonioprueba log - ERROR - Error message 83
2014-02-02 17:01:29,522 - demonioprueba log - INFO - Info message 84
2014-02-02 17:01:29,523 - demonioprueba log - WARNING - Warning message 84
2014-02-02 17:01:29,523 - demonioprueba log - ERROR - Error message 84
2014-02-02 17:01:30,523 - demonioprueba log - INFO - Info message 85
2014-02-02 17:01:30,524 - demonioprueba log - WARNING - Warning message 85
2014-02-02 17:01:30,524 - demonioprueba log - ERROR - Error message 85&lt;/code&gt;
Se puede detener el demonio ejecutando:
&lt;code&gt;root@heimdal:~# python /usr/share/demonioprueba/demonioprueba.py stop
Terminating on signal 15&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se crear&amp;aacute; el archivo init de demonio prueba ( salvar el archivo en &lt;code&gt;/etc/init.d/demonioprueba&lt;/code&gt; ):&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el script bash que se usa de plantilla como demonio init:
```python&lt;/p&gt;
&lt;h1 id="!/bin/bash"&gt;!/bin/bash&lt;/h1&gt;
&lt;h1 id="copyright (c) 1996-2012 my company."&gt;Copyright (c) 1996-2012 My Company.&lt;/h1&gt;
&lt;h1 id="all rights reserved."&gt;All rights reserved.&lt;/h1&gt;
&lt;h1 id="_1"&gt;&lt;/h1&gt;
&lt;h1 id="author: bob bobson, 2012"&gt;Author: Bob Bobson, 2012&lt;/h1&gt;
&lt;h1 id="_2"&gt;&lt;/h1&gt;
&lt;h1 id="please send feedback to bob@bob.com"&gt;Please send feedback to bob@bob.com&lt;/h1&gt;
&lt;h1 id="_3"&gt;&lt;/h1&gt;
&lt;h1 id="/etc/init.d/demonioprueba"&gt;/etc/init.d/demonioprueba&lt;/h1&gt;
&lt;h1 id="_4"&gt;&lt;/h1&gt;
&lt;h3 id="begin init info"&gt;BEGIN INIT INFO&lt;/h3&gt;
&lt;h1 id="provides: demonioprueba_1"&gt;Provides: demonioprueba&lt;/h1&gt;
&lt;h1 id="required-start:"&gt;Required-Start:&lt;/h1&gt;
&lt;h1 id="should-start:"&gt;Should-Start:&lt;/h1&gt;
&lt;h1 id="required-stop:"&gt;Required-Stop:&lt;/h1&gt;
&lt;h1 id="should-stop:"&gt;Should-Stop:&lt;/h1&gt;
&lt;h1 id="default-start: 3 5"&gt;Default-Start:  3 5&lt;/h1&gt;
&lt;h1 id="default-stop: 0 1 2 6"&gt;Default-Stop:   0 1 2 6&lt;/h1&gt;
&lt;h1 id="short-description: test daemon process"&gt;Short-Description: Test daemon process&lt;/h1&gt;
&lt;h1 id="description: runs up the test daemon process"&gt;Description:    Runs up the test daemon process&lt;/h1&gt;
&lt;h3 id="end init info"&gt;END INIT INFO&lt;/h3&gt;
&lt;h1 id="activate the python virtual environment_1"&gt;Activate the python virtual environment&lt;/h1&gt;
&lt;h1 id=". /path_to_virtualenv/activate"&gt;. /path_to_virtualenv/activate&lt;/h1&gt;
&lt;p&gt;case "$1" in&lt;/p&gt;
&lt;p&gt;start)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo "Starting server"

# Start the daemon

python /usr/share/demonioprueba/demonioprueba.py start

;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;stop)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo "Stopping server"

# Stop the daemon

python /usr/share/demonioprueba/demonioprueba.py stop

;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;restart)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo "Restarting server"

python /usr/share/demonioprueba/demonioprueba.py restart

;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Refuse to do other stuff


echo "Usage: /etc/init.d/demonioprueba.sh {start|stop|restart}"


exit 1


;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;esac&lt;/p&gt;
&lt;p&gt;exit 0&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se le cambia el permiso al script:
&lt;code&gt;chmod u+x demonioprueba.sh&lt;/code&gt;
Se habilita el script para la ejecuci&amp;oacute;n autom&amp;aacute;tica:
&lt;code&gt;root@heimdal:/etc/init.d# insserv demonioprueba.sh&lt;/code&gt;
Ac&amp;aacute; les dejo &lt;a href="https://nanvel.name/weblog/python-unix-daemon/"&gt;un ejemplo parecido&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_5"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Fedora"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Python-daemon"></category><category term="Python-lockfile"></category></entry><entry><title>Crear URL recortadas con Python (bit.ly)</title><link href="https://ecrespo.github.io/crear-url-recortadas-con-python-bitly.html" rel="alternate"></link><published>2014-01-25T09:00:00-05:30</published><updated>2014-01-25T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2014-01-25:/crear-url-recortadas-con-python-bitly.html</id><summary type="html">&lt;p&gt;Todos conocemos lo famoso que se han hecho los sitios para recortar URL debido al problema de microblogin a 144 caracteres (donde tenemos que ahorrar en la escritura).&lt;/p&gt;
&lt;p&gt;Los recortadores reducen la cantidad de caracteres que puede llegar a tener una url que queramos compartir.&lt;/p&gt;
&lt;p&gt;Existen varios sitios que facilitan …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Todos conocemos lo famoso que se han hecho los sitios para recortar URL debido al problema de microblogin a 144 caracteres (donde tenemos que ahorrar en la escritura).&lt;/p&gt;
&lt;p&gt;Los recortadores reducen la cantidad de caracteres que puede llegar a tener una url que queramos compartir.&lt;/p&gt;
&lt;p&gt;Existen varios sitios que facilitan el recortar URL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bit.ly&lt;/li&gt;
&lt;li&gt;Goo.gl&lt;/li&gt;
&lt;li&gt;TinyURL  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En este caso se va a probar con &lt;code&gt;bit.ly&lt;/code&gt;, el sitio tiene un API para poder acceder desde un programa, su documentaci&amp;oacute;n se encuentra &lt;a href="https://dev.bitly.com/api.html"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitly.com/a/sign_in?rd=/a/oauth_apps"&gt;Es necesario registrar la aplicaci&amp;oacute;n&lt;/a&gt; y luego buscar el &lt;a href="https://bitly.com/a/your_api_key"&gt;apikey&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El script que se va a hacer tiene de requerimiento los siguientes m&amp;oacute;dulos de python:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;urllib&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;urllib2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;re&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;simplejson&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El script es sencillo, se pasa la serie de m&amp;oacute;dulos a utilizar, se pasa el usuario y el apikey que se obtuvo de ' &lt;code&gt;bit.ly&lt;/code&gt; y se llama a la funci&amp;oacute;n que recorta la url.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/python"&gt;!/usr/bin/python&lt;/h1&gt;
&lt;h1 id="script que convierte un url a un url recortado por medio de bit.ly"&gt;Script que convierte un url a un url recortado por medio de bit.ly&lt;/h1&gt;
&lt;h1 id="requiere urllib, urllib2, re, simplejson"&gt;requiere urllib, urllib2, re, simplejson&lt;/h1&gt;
&lt;h1 id="se intenta importar los modulos que se necesito si no devuelve mensaje de error"&gt;Se intenta importar los modulos que se necesito si no devuelve mensaje de error&lt;/h1&gt;
&lt;h1 id="donde se menciona que se requiere los los modulos."&gt;donde se menciona que se requiere los los modulos.&lt;/h1&gt;
&lt;p&gt;try:&lt;/p&gt;
&lt;p&gt;from re import match&lt;/p&gt;
&lt;p&gt;from urllib2 import urlopen, Request, HTTPError&lt;/p&gt;
&lt;p&gt;from urllib import urlencode&lt;/p&gt;
&lt;p&gt;from simplejson import loads&lt;/p&gt;
&lt;p&gt;except ImportError, e:&lt;/p&gt;
&lt;p&gt;raise Exception('Required module missing: %s' % e.args[0])&lt;/p&gt;
&lt;h1 id="definicion de usuario y clave bit.ly"&gt;Definicion de usuario y clave bit.ly&lt;/h1&gt;
&lt;p&gt;user = "o_5j8ri77vv6aa"&lt;/p&gt;
&lt;p&gt;apikey  = "R_172fe1dcf183470c85ce345aaa784cf9395"&lt;/p&gt;
&lt;h1 id="funcion que recorta el url, se le pasa un url y devuelve el mismo recortado"&gt;Funcion que recorta el url, se le pasa un url y devuelve el mismo recortado&lt;/h1&gt;
&lt;p&gt;def shorten(url):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se maneja la excepcion de error http





try:


    #Se le pasa los parametros url, user, apikey y formato de serializacion en


    #este caso json


    params = urlencode({'longUrl': url, 'login': user, 'apiKey': apikey, 'format': 'json'})


    #Se hace la solicitud al api de bit.ly pasandole los parametros


    req = Request("http://api.bit.ly/v3/shorten?%s" % params)


    #Se abre la respuesta.


    response = urlopen(req)


    #Se lee y se carga


    j = loads(response.read())


    #Si el codigo de estatus de la peticion http es 200


    #se retona el url recortada


    if j['status_code'] == 200:


        return j['data']['url']


    #Si no es 200 se genera una excepcion pasando el mensaje de estatus


    raise Exception('%s'%j['status_txt'])


#Si no se logra la conexion http se devuelve un mensaje de error.


except HTTPError, e:


    raise('HTTP error%s'%e.read())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se importa argv del modulo sys


from sys import argv


#Si no inicia el argumento con http se devuelve un mensaje de error


#solicitando que se coloque el http al url.


if not match('http://',argv[1]):


    raise Exception('Debe iniciar con "http://"')


#Se muestra en la consola el url recortado

print shorten(argv[1])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Al ejecutar el script se tiene lo siguiente:&lt;br/&gt;
```
ernesto@grievous:~/bin/python$ ./acortarurl.py http://blog.crespo.org.ve&lt;/p&gt;
&lt;p&gt;http://bit.ly/LXP0QB&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Con el script ya se puede ir recortando url de por ejemplo el art&amp;iacute;culo anterior donde se &lt;a href="http://blog.crespo.org.ve/2014/01/jugando-con-rss-del-blog-desde-python.html"&gt;obtiene la lista de art&amp;iacute;culos de un blog por medio de rss&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="Ubuntu"></category><category term="bit.ly"></category></entry><entry><title>Obtener información del clima en una ciudad con Python</title><link href="https://ecrespo.github.io/obtener-informacion-del-clima-en-una-ciudad-con-python.html" rel="alternate"></link><published>2014-01-19T09:00:00-05:30</published><updated>2014-01-19T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2014-01-19:/obtener-informacion-del-clima-en-una-ciudad-con-python.html</id><summary type="html">&lt;p&gt;Existe la librer&amp;iacute;a &lt;a href="https://github.com/csparpa/pyowm"&gt;PyOWM&lt;/a&gt; el cual es un wrapper para el API de OpenWeatherMap. 
La documentaci&amp;oacute;n para utilizar la librer&amp;iacute;a se encuentra en el siguiente &lt;a href="https://github.com/csparpa/pyowm/wiki/Usage-examples"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para poder utilizar la librer&amp;iacute;a es necesario crear una cuenta en OpenWeatherMap y en el perfil del usuario buscar el APPID. En el &lt;a href="https://openweathermap.org/appid"&gt;enlace …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Existe la librer&amp;iacute;a &lt;a href="https://github.com/csparpa/pyowm"&gt;PyOWM&lt;/a&gt; el cual es un wrapper para el API de OpenWeatherMap. 
La documentaci&amp;oacute;n para utilizar la librer&amp;iacute;a se encuentra en el siguiente &lt;a href="https://github.com/csparpa/pyowm/wiki/Usage-examples"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para poder utilizar la librer&amp;iacute;a es necesario crear una cuenta en OpenWeatherMap y en el perfil del usuario buscar el APPID. En el &lt;a href="https://openweathermap.org/appid"&gt;enlace&lt;/a&gt; explican el procedimiento.&lt;/p&gt;
&lt;p&gt;Para instalar la librer&amp;iacute;a se ejecuta &lt;code&gt;pip&lt;/code&gt;:
```&lt;/p&gt;
&lt;h1 id="pip install pyowm"&gt;pip install pyowm&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo de un script que muestra el uso de la librer&amp;iacute;a:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import pyowm&lt;/p&gt;
&lt;h1 id="llave del uso del api"&gt;Llave del uso del API&lt;/h1&gt;
&lt;p&gt;apikey = "abcdefghijklimnopqrstuvxyz"&lt;/p&gt;
&lt;h1 id="se crea la instancia owm pasando la llave para el uso del api."&gt;Se crea la instancia OWM pasando la llave para el uso del API.&lt;/h1&gt;
&lt;p&gt;owm = pyowm.OWM(apikey)&lt;/p&gt;
&lt;h1 id="se obtiene la llave de uso del api"&gt;Se obtiene la llave de uso del API&lt;/h1&gt;
&lt;p&gt;print owm.get_API_key()&lt;/p&gt;
&lt;h1 id="se define la ciudad por nombre o se pasa la coordenada."&gt;Se define la ciudad por nombre o se pasa la coordenada.&lt;/h1&gt;
&lt;p&gt;obs = owm.weather_at('Valencia,ve')&lt;/p&gt;
&lt;h1 id="obs = owm.weather_at_coords(-0.107331,51.503614)"&gt;obs = owm.weather_at_coords(-0.107331,51.503614)&lt;/h1&gt;
&lt;p&gt;print "tiempo: ", obs.get_reception_time()&lt;/p&gt;
&lt;p&gt;print "tiempo: ", obs.get_reception_time(timeformat='iso')&lt;/p&gt;
&lt;h1 id="se instancia los datos de la estacion meterologica."&gt;Se Instancia los datos de la estacion meterologica.&lt;/h1&gt;
&lt;p&gt;w = obs.get_weather()&lt;/p&gt;
&lt;p&gt;print "Fecha y hora ",w.get_reference_time(timeformat='iso')&lt;/p&gt;
&lt;p&gt;print "Nubes:", w.get_clouds()&lt;/p&gt;
&lt;p&gt;print  "lluvias:", w.get_rain()&lt;/p&gt;
&lt;p&gt;print "Nieve: ", w.get_snow()&lt;/p&gt;
&lt;p&gt;print "viento", w.get_wind()&lt;/p&gt;
&lt;p&gt;print "humedad:",w.get_humidity()&lt;/p&gt;
&lt;p&gt;print "presion:", w.get_pressure()&lt;/p&gt;
&lt;p&gt;print "Temperatura:",w.get_temperature()&lt;/p&gt;
&lt;p&gt;print "Temperatura:",w.get_temperature(unit='celsius')&lt;/p&gt;
&lt;p&gt;print "Estatus", w.get_status()&lt;/p&gt;
&lt;p&gt;print "Hora de salida del sol",w.get_sunrise_time("iso")&lt;/p&gt;
&lt;p&gt;print "Hora de ocultarse el sol",w.get_sunset_time('iso')&lt;/p&gt;
&lt;p&gt;l = obs.get_location()&lt;/p&gt;
&lt;p&gt;print "nombre:", l.get_name()&lt;/p&gt;
&lt;p&gt;print "Longitud: %s, Latitud: %s"   %(l.get_lon(),l.get_lat())&lt;/p&gt;
&lt;p&gt;print "Identificador", l.get_ID()
```&lt;/p&gt;
&lt;p&gt;Al ejecutar la aplicaci&amp;oacute;n se tiene lo siguiente:&lt;/p&gt;
&lt;p&gt;```python
ernesto@heimdal:~/bin/python$ ./clima.py &lt;/p&gt;
&lt;p&gt;abcdefghijklimnopqrstuvxyz&lt;/p&gt;
&lt;p&gt;tiempo:  1390165372&lt;/p&gt;
&lt;p&gt;tiempo:  2014-01-19 21:02:52+00&lt;/p&gt;
&lt;p&gt;Fecha y hora  2014-01-19 20:00:00+00&lt;/p&gt;
&lt;p&gt;Nubes: 20&lt;/p&gt;
&lt;p&gt;lluvias: {}&lt;/p&gt;
&lt;p&gt;Nieve:  {}&lt;/p&gt;
&lt;p&gt;viento {u'speed': 2.1, u'deg': 110}&lt;/p&gt;
&lt;p&gt;humedad: 41&lt;/p&gt;
&lt;p&gt;presion: {'press': 1012, 'sea_level': None}&lt;/p&gt;
&lt;p&gt;Temperatura: {'temp_kf': None, 'temp_min': 308.15, 'temp': 308.15, 'temp_max': 308.15}&lt;/p&gt;
&lt;p&gt;Temperatura: {'temp_kf': None, 'temp_max': 35.0, 'temp': 35.0, 'temp_min': 35.0}&lt;/p&gt;
&lt;p&gt;Estatus clouds&lt;/p&gt;
&lt;p&gt;Hora de salida del sol 2014-01-19 10:54:19+00&lt;/p&gt;
&lt;p&gt;Hora de ocultarse el sol 2014-01-19 22:31:34+00&lt;/p&gt;
&lt;p&gt;nombre: Valencia&lt;/p&gt;
&lt;p&gt;Longitud: -68.01, Latitud: 10.16&lt;/p&gt;
&lt;p&gt;Identificador 3625549  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Noten que la hora de salida y ocultamiento del sol est&amp;aacute; referente al meridiano 
de greenwich (es necesario ajustar al huso horario correspondiente).&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Python"></category><category term="Ubuntu"></category><category term="PyOWM"></category></entry><entry><title>Jugando con RSS del blog desde Python</title><link href="https://ecrespo.github.io/jugando-con-rss-del-blog-desde-python.html" rel="alternate"></link><published>2014-01-18T09:00:00-05:30</published><updated>2014-01-18T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2014-01-18:/jugando-con-rss-del-blog-desde-python.html</id><summary type="html">&lt;p&gt;Feliz a&amp;ntilde;o a todos.
Ten&amp;iacute;a algo de tiempo sin escribir en el blog. &lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo trata del como usar la librer&amp;iacute;a &lt;code&gt;Feedparser&lt;/code&gt; para extraer informaci&amp;oacute;n del RSS de este blog.&lt;/p&gt;
&lt;p&gt;Al final del blog (blog.crespo.org.ve) aparece la suscripci&amp;oacute;n al Blog por medio de Atom (ver imagen):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/jugandoconrssdelblogdesdepython-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Feliz a&amp;ntilde;o a todos.
Ten&amp;iacute;a algo de tiempo sin escribir en el blog. &lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo trata del como usar la librer&amp;iacute;a &lt;code&gt;Feedparser&lt;/code&gt; para extraer informaci&amp;oacute;n del RSS de este blog.&lt;/p&gt;
&lt;p&gt;Al final del blog (blog.crespo.org.ve) aparece la suscripci&amp;oacute;n al Blog por medio de Atom (ver imagen):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/jugandoconrssdelblogdesdepython-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle clip al enlace aparece lo siguiente (http://feeds.feedburner.com/LaLibertadDeDesarrollarNoTienePrecio):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/jugandoconrssdelblogdesdepython-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;El blog est&amp;aacute; sindicalizado desde FeedBurner.&lt;/p&gt;
&lt;p&gt;La idea es utilizar la librer&amp;iacute;a &lt;code&gt;feedparser&lt;/code&gt; para extraer informaci&amp;oacute;n de la sindicalizaci&amp;oacute;n del blog.&lt;/p&gt;
&lt;p&gt;Se importa la librer&amp;iacute;a &lt;code&gt;feedparser&lt;/code&gt;:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import feedparser
&lt;code&gt;Se instancia la clase `parse` con el url  de la sindicalizaci&amp;oacute;n del blog:&lt;/code&gt;python
d = feedparser.parse('http://feeds.feedburner.com/LaLibertadDeDesarrollarNoTienePrecio')
&lt;code&gt;Se muestra el t&amp;iacute;tulo del blog:&lt;/code&gt;python
d['feed']['title']&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'La libertad de desarrollar no tiene  precio...'
&lt;code&gt;Otra forma de obtener el t&amp;iacute;tulo del blog:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.feed.title&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'La libertad de desarrollar no tiene  precio...'
&lt;code&gt;Enlace del blog:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.feed.link&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'http://blog.crespo.org.ve/'
&lt;code&gt;Descripci&amp;oacute;n del blog:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.feed.description&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'Blog dedicado al Software Libre en especial Linux Debian, Android y FreeBSD, a la programaci\xf3n en python con gtk, qt y en Android.'
&lt;code&gt;Elementos del diccionario:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.keys()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;['feed', 'status', 'updated', 'updated_parsed', 'encoding', 'bozo', 'headers', 'etag', 'href', 'version', 'entries', 'namespaces']
&lt;code&gt;Para obtener el author del blog, se ejecuta author en feed:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.feed.author&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'Ernesto Crespo (noreply@blogger.com)'
&lt;code&gt;La codificaci&amp;oacute;n del texto del blog es UTF-8:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.encoding&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'UTF-8'
&lt;code&gt;Estatus:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.status&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;200
&lt;code&gt;Actualizaci&amp;oacute;n:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.updated&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;'Sun, 19 Jan 2014 00:03:47 GMT'
&lt;code&gt;En este caso devuelve la hora pero la informaci&amp;oacute;n separada:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.updated_parsed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;time.struct_time(tm_year=2014, tm_mon=1, tm_mday=19, tm_hour=0, tm_min=3, tm_sec=47, tm_wday=6, tm_yday=19, tm_isdst=0)
&lt;code&gt;Encabezados del blog:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.headers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;{'alternate-protocol': '80:quic', 'x-xss-protection': '1; mode=block', 'x-content-type-options': 'nosniff', 'expires': 'Sun, 19 Jan 2014 01:01:50 GMT', 'server': 'GSE', 'last-modified': 'Sun, 19 Jan 2014 00:03:47 GMT', 'connection': 'close', 'etag': 'hSh9ZbFEawbSc3BqlNVkqha27os', 'cache-control': 'private, max-age=0', 'date': 'Sun, 19 Jan 2014 01:01:50 GMT', 'content-type': 'text/xml; charset=UTF-8'}
&lt;code&gt;Enlace:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.href&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'http://feeds.feedburner.com/LaLibertadDeDesarrollarNoTienePrecio'
&lt;code&gt;Tipo de RSS (Atom1.0):&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.version&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'atom10'&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Cantidad de entradas:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;len(d.entries)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;25
&lt;code&gt;Si se desea obtener el t&amp;iacute;tulo de la &amp;uacute;ltima entrada en el blog:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.entries[0].title&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'Webscraping con Python Mechanize y BeautifulSoup4'
&lt;code&gt;Si se desea ver el contenido de la &amp;uacute;ltima entrada ( en html) :&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.entries[0]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;.....&lt;/p&gt;
&lt;p&gt;'guidislink': True, 'published': u'2013-10-29T03:30:00.000-04:30', u'thr_total': u'0'}
```
Devuelve un diccionario con dentro c&amp;oacute;digo html  e informaci&amp;oacute;n adicional.&lt;/p&gt;
&lt;p&gt;Para obtener el link del &amp;uacute;ltimo art&amp;iacute;culo:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.entries[0].link&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/A9jUi9ATI2g/webscraping-con-python-mechanize-y.html'
&lt;code&gt;La fecha de publicaci&amp;oacute;n del &amp;uacute;ltimo art&amp;iacute;culo:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.entries[0].published&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'2013-10-29T03:30:00.000-04:30'
&lt;code&gt;El id del &amp;uacute;ltimo art&amp;iacute;culo:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;d.entries[0].id&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'tag:blogger.com,1999:blog-882744969176160062.post-8013337259867824164'
&lt;code&gt;Si se desea listar los &amp;uacute;ltimos 25 art&amp;iacute;culos con su t&amp;iacute;tulo y enlace se ejecuta un ciclo:&lt;/code&gt;python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for post in d.entries:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;...     print post.title + ": " + post.link + "\n"&lt;/p&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;p&gt;Webscraping con Python Mechanize y BeautifulSoup4: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/A9jUi9ATI2g/webscraping-con-python-mechanize-y.html&lt;/p&gt;
&lt;p&gt;Extracci&amp;oacute;n de datos con Scraperwiki y Python: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/UbQD5y9jbr0/extraccion-de-datos-con-scraperwiki-y.html&lt;/p&gt;
&lt;p&gt;Extracci&amp;oacute;n de datos de p&amp;aacute;gina web con pyquery y Python: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/1QbC7CmSqpk/extraccion-de-datos-de-pagina-web-con.html&lt;/p&gt;
&lt;p&gt;Extracci&amp;oacute;n de datos de p&amp;aacute;ginas web con Scrapemark y Python: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/g2iUGraxW0M/extraccion-de-datos-de-paginas-web-con.html&lt;/p&gt;
&lt;p&gt;Extracci&amp;oacute;n de datos en p&amp;aacute;ginas web con Webscraping y Python: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/W9NyMTnRYok/extraccion-de-datos-en-paginas-web-con.html&lt;/p&gt;
&lt;p&gt;Webscraping o extracci&amp;oacute;n de datos de p&amp;aacute;ginas web con BeautifulSoup4 y Python: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/xFr0x9bSo7E/webscraping-o-extraccion-de-datos-de.html&lt;/p&gt;
&lt;p&gt;Un introducci&amp;oacute;n a Beautiful Soup 4 en Python.: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/_7MGtsSCnPg/un-introduccion-beautiful-soup-4-en.html&lt;/p&gt;
&lt;p&gt;Obtener informaci&amp;oacute;n de metadatos EXIF de una imagen con Python: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/8U6SjV9RS-w/obtener-informacion-de-metadatos-exif.html&lt;/p&gt;
&lt;p&gt;Mostrar tweets en tiempo real con twython y el API Stream de Twitter: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/jdMIKN04gDs/mostrar-tweets-en-tiempo-real-con.html&lt;/p&gt;
&lt;p&gt;Descrubiendo Trending Topics de Twitter con twython y python: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/hfKN5Cat5Hw/descrubiendo-trending-topics-de-twitter.html&lt;/p&gt;
&lt;p&gt;Probando la librer&amp;iacute;a twython para twitter: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/qfv-BUMniFA/probando-la-libreria-twython-para.html&lt;/p&gt;
&lt;p&gt;Manejo de sesi&amp;oacute;n en el ORM sqlalchemy: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/OjR1D7SxjGQ/manejo-de-sesion-en-el-orm-sqlalchemy.html&lt;/p&gt;
&lt;p&gt;Bajar v&amp;iacute;deos de youtube desde Python con Pafy.: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/IV42QCqWZA8/bajar-videos-de-youtube-desde-python.html&lt;/p&gt;
&lt;p&gt;D&amp;iacute;a Debian en Barquisimeto: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/fK8Q4DtjW8c/dia-debian-en-barquisimeto.html&lt;/p&gt;
&lt;p&gt;Nodos m&amp;aacute;s influenyes en un grafo con networkx. Parte 4.: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/knGC3Agy03M/nodos-mas-influenyes-en-un-grafo-con.html&lt;/p&gt;
&lt;p&gt;Mejorar la privacidad en celulares y tabletas con Android: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/WHiecOQggP4/mejorar-la-privacidad-en-celulares-y.html&lt;/p&gt;
&lt;p&gt;Graficar la tangente de una curva con python, numpy y pylab.: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/YB9pcnkSjPg/graficar-la-tangente-de-una-curva-con.html&lt;/p&gt;
&lt;p&gt;Utilizando el API de Stream de Twitter con Python y tweetstream. Parte 1.: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/4XndFuAR-wQ/utilizando-el-api-de-stream-de-twitter.html&lt;/p&gt;
&lt;p&gt;M&amp;aacute;quinas virtuales con kvm y qemu: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/hBovEziYwnM/maquinas-virtuales-con-kvm-y-qemu.html&lt;/p&gt;
&lt;p&gt;Descubriendo trending topics de twitter con python-twitter.: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/kAqQ7BRC_4w/descubriendo-trending-topics-de-twitter.html&lt;/p&gt;
&lt;p&gt;Descubrir equipos en una Red Local con Python (ipcalc y scapy).: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/KSulfIHpfaA/descubrir-equipos-en-una-red-local-con.html&lt;/p&gt;
&lt;p&gt;Resoluci&amp;oacute;n de sistemas de ecuaciones lineales por descomposi&amp;oacute;n QR usando Numpy: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/KJ6mmAemwzk/resolucion-de-sistemas-de-ecuaciones.html&lt;/p&gt;
&lt;p&gt;Creaci&amp;oacute;n de gr&amp;aacute;fico de burbujas con matplotlib: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/Lu7ps2Z-zQI/creacion-de-grafico-de-burbujas-con.html&lt;/p&gt;
&lt;p&gt;Manejar informaci&amp;oacute;n de un archivo csv con csvkit: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/6opCWEx9RoU/manejar-informacion-de-un-archivo-csv.html&lt;/p&gt;
&lt;p&gt;Teorema de muestreo explicado con numpy: http://feedproxy.google.com/~r/LaLibertadDeDesarrollarNoTienePrecio/~3/VoY_nZzRtwY/teorema-de-muestreo-explicado-con-numpy.html
```
De est&amp;aacute; forma se puede acceder con python al RSS de blogs.
En pr&amp;oacute;ximo art&amp;iacute;culo se buscar&amp;aacute; recortar los urls desde python.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Webscraping con Python Mechanize y BeautifulSoup4</title><link href="https://ecrespo.github.io/webscraping-con-python-mechanize-y-beautifulsoup4.html" rel="alternate"></link><published>2013-10-29T09:00:00-05:30</published><updated>2013-10-29T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-10-29:/webscraping-con-python-mechanize-y-beautifulsoup4.html</id><summary type="html">&lt;p&gt;Ahora se utilizar&amp;aacute; a &lt;a href="https://www.seraph.to/emulando-la-navegacion-en-python-con-mechanize-parte-1.html"&gt;Python Mechanize&lt;/a&gt;  con &lt;a href="https://www.seraph.to/una-introduccion-a-beautiful-soup-4-en-python.html"&gt;BeautifulSoup4&lt;/a&gt; para extraer la informaci&amp;oacute;n de la salida y ocultamiento del sol en Venezuela con un breve cambio para mostrar el dinamismo que se le puede dar a la extracci&amp;oacute;n de datos de una p&amp;aacute;gina web.&lt;/p&gt;
&lt;p&gt;En este caso se extraer&amp;aacute; informaci&amp;oacute;n del …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ahora se utilizar&amp;aacute; a &lt;a href="https://www.seraph.to/emulando-la-navegacion-en-python-con-mechanize-parte-1.html"&gt;Python Mechanize&lt;/a&gt;  con &lt;a href="https://www.seraph.to/una-introduccion-a-beautiful-soup-4-en-python.html"&gt;BeautifulSoup4&lt;/a&gt; para extraer la informaci&amp;oacute;n de la salida y ocultamiento del sol en Venezuela con un breve cambio para mostrar el dinamismo que se le puede dar a la extracci&amp;oacute;n de datos de una p&amp;aacute;gina web.&lt;/p&gt;
&lt;p&gt;En este caso se extraer&amp;aacute; informaci&amp;oacute;n del mismo sitio &lt;a href="https://www.timeanddate.com/astronomy/venezuela/caracas"&gt;timeanddate&lt;/a&gt;, la diferencia es que en vez de s&amp;oacute;lo pasarle el c&amp;oacute;digo de Venezuela (58), se le pasar&amp;aacute; el mes y el a&amp;ntilde;o.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo muestra la informaci&amp;oacute;n del amanecer y atardecer de todo el mes de Octubre y Noviembre.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa mechanize y cookielib"&gt;Se importa mechanize y cookielib&lt;/h1&gt;
&lt;p&gt;import mechanize&lt;/p&gt;
&lt;p&gt;import cookielib&lt;/p&gt;
&lt;h1 id="se importa beautifulsoup"&gt;Se importa beautifulSoup&lt;/h1&gt;
&lt;p&gt;from BeautifulSoup import BeautifulSoup&lt;/p&gt;
&lt;p&gt;def DefinirUrl(mes,agno):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se pasa el url del sitio timeanddate con la informacion


#de la salida y ocultamiento del sol en Venezuela.


return "http://www.timeanddate.com/worldclock/astronomy.htmln=58&amp;amp;month=%s&amp;amp;year=%s&amp;amp;obj=sun&amp;amp;afl=-11&amp;amp;day=1" %(mes,agno)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;def CapturarInformacion(mes,agno):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se crea una instancia de Browser


br = mechanize.Browser()


#Se crea una instancia para la Cookie


cj = cookielib.LWPCookieJar()


#Se asocia la instancia del cookie con el navegador.


br.set_cookiejar(cj)


#Se deshabilita el manejo de robots.txt


br.set_handle_robots(False)


#Se define el tiempo de refrescamiento


br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)


#Se pasa el url del sitio timeanddate con la informacion


url = DefinirUrl(mes,agno)


#de la salida y ocultamiento del sol en Venezuela.


#Se define las cabeceras del navegador, en este caso se le esta diciendo


# que el navegador es un firefox desde Linux Debian


br.addheaders = [('User-agent',


     'Mozilla/5.0 (X11; U; Linux i686; es-VE; rv:1.9.0.1)Gecko/2008071615 Debian/6.0 Firefox/9')]


#Se abre el url


r = br.open(url)


#Se lee el htmml de la pagina


html = br.response().read()


#Se crea una instancia de BeautifulSoup pasando el html


#a verificar


soup = BeautifulSoup(html)


#Se busca la palabra table, y de ahi class y se


#busca el contenido


#de cada columna de la tabla.


for row in soup('table', {'class': 'spad'})[0].tbody('tr'):


    tds = row('td')


    #Se muestra la fecha y hora de la salida del sol


    print tds[0].string, tds[1].string,tds[2].string
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt;== "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print "Se muestra la informacion del mes de Octubre"


print "--------------------------------------------"


CapturarInformacion(10,2013)


print "Se muestra la informacion del mes de Noviembre"


print "--------------------------------------------"

CapturarInformacion(11,2013)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el resultado del script:&lt;/p&gt;
&lt;p&gt;Se muestra la informacion del mes de Octubre
```&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;1 Oct 2013 05:46 17:48&lt;/p&gt;
&lt;p&gt;2 Oct 2013 05:46 17:47&lt;/p&gt;
&lt;p&gt;3 Oct 2013 05:46 17:47&lt;/p&gt;
&lt;p&gt;4 Oct 2013 05:46 17:46&lt;/p&gt;
&lt;p&gt;5 Oct 2013 05:46 17:45&lt;/p&gt;
&lt;p&gt;6 Oct 2013 05:46 17:45&lt;/p&gt;
&lt;p&gt;7 Oct 2013 05:46 17:44&lt;/p&gt;
&lt;p&gt;8 Oct 2013 05:46 17:44&lt;/p&gt;
&lt;p&gt;9 Oct 2013 05:46 17:43&lt;/p&gt;
&lt;p&gt;10 Oct 2013 05:46 17:43&lt;/p&gt;
&lt;p&gt;11 Oct 2013 05:46 17:42&lt;/p&gt;
&lt;p&gt;12 Oct 2013 05:46 17:42&lt;/p&gt;
&lt;p&gt;13 Oct 2013 05:46 17:41&lt;/p&gt;
&lt;p&gt;14 Oct 2013 05:46 17:41&lt;/p&gt;
&lt;p&gt;15 Oct 2013 05:46 17:40&lt;/p&gt;
&lt;p&gt;16 Oct 2013 05:46 17:40&lt;/p&gt;
&lt;p&gt;17 Oct 2013 05:46 17:39&lt;/p&gt;
&lt;p&gt;18 Oct 2013 05:47 17:39&lt;/p&gt;
&lt;p&gt;19 Oct 2013 05:47 17:38&lt;/p&gt;
&lt;p&gt;20 Oct 2013 05:47 17:38&lt;/p&gt;
&lt;p&gt;21 Oct 2013 05:47 17:37&lt;/p&gt;
&lt;p&gt;22 Oct 2013 05:47 17:37&lt;/p&gt;
&lt;p&gt;23 Oct 2013 05:47 17:36&lt;/p&gt;
&lt;p&gt;24 Oct 2013 05:47 17:36&lt;/p&gt;
&lt;p&gt;25 Oct 2013 05:47 17:36&lt;/p&gt;
&lt;p&gt;26 Oct 2013 05:48 17:35&lt;/p&gt;
&lt;p&gt;27 Oct 2013 05:48 17:35&lt;/p&gt;
&lt;p&gt;28 Oct 2013 05:48 17:35&lt;/p&gt;
&lt;p&gt;29 Oct 2013 05:48 17:34&lt;/p&gt;
&lt;p&gt;30 Oct 2013 05:48 17:34&lt;/p&gt;
&lt;p&gt;31 Oct 2013 05:48 17:34&lt;/p&gt;
&lt;p&gt;Se muestra la informacion del mes de Noviembre&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;1 Nov 2013 05:49 17:33&lt;/p&gt;
&lt;p&gt;2 Nov 2013 05:49 17:33&lt;/p&gt;
&lt;p&gt;3 Nov 2013 05:49 17:33&lt;/p&gt;
&lt;p&gt;4 Nov 2013 05:49 17:33&lt;/p&gt;
&lt;p&gt;5 Nov 2013 05:50 17:33&lt;/p&gt;
&lt;p&gt;6 Nov 2013 05:50 17:32&lt;/p&gt;
&lt;p&gt;7 Nov 2013 05:50 17:32&lt;/p&gt;
&lt;p&gt;8 Nov 2013 05:51 17:32&lt;/p&gt;
&lt;p&gt;9 Nov 2013 05:51 17:32&lt;/p&gt;
&lt;p&gt;10 Nov 2013 05:51 17:32&lt;/p&gt;
&lt;p&gt;11 Nov 2013 05:51 17:32&lt;/p&gt;
&lt;p&gt;12 Nov 2013 05:52 17:32&lt;/p&gt;
&lt;p&gt;13 Nov 2013 05:52 17:32&lt;/p&gt;
&lt;p&gt;14 Nov 2013 05:53 17:31&lt;/p&gt;
&lt;p&gt;15 Nov 2013 05:53 17:31&lt;/p&gt;
&lt;p&gt;16 Nov 2013 05:53 17:31&lt;/p&gt;
&lt;p&gt;17 Nov 2013 05:54 17:31&lt;/p&gt;
&lt;p&gt;18 Nov 2013 05:54 17:31&lt;/p&gt;
&lt;p&gt;19 Nov 2013 05:54 17:32&lt;/p&gt;
&lt;p&gt;20 Nov 2013 05:55 17:32&lt;/p&gt;
&lt;p&gt;21 Nov 2013 05:55 17:32&lt;/p&gt;
&lt;p&gt;22 Nov 2013 05:56 17:32&lt;/p&gt;
&lt;p&gt;23 Nov 2013 05:56 17:32&lt;/p&gt;
&lt;p&gt;24 Nov 2013 05:57 17:32&lt;/p&gt;
&lt;p&gt;25 Nov 2013 05:57 17:32&lt;/p&gt;
&lt;p&gt;26 Nov 2013 05:58 17:32&lt;/p&gt;
&lt;p&gt;27 Nov 2013 05:58 17:32&lt;/p&gt;
&lt;p&gt;28 Nov 2013 05:59 17:33&lt;/p&gt;
&lt;p&gt;29 Nov 2013 05:59 17:33&lt;/p&gt;
&lt;p&gt;30 Nov 2013 06:00 17:33
```&lt;/p&gt;
&lt;p&gt;Como se muestra ya se puede agregar dinamismo a las busquedas que se quiera realizar en una p&amp;aacute;gina web, extrayendo su informaci&amp;oacute;n al pasarle datos al url. Adem&amp;aacute;s se muestra como usar &lt;code&gt;Python Mechanize&lt;/code&gt; para la captura de la p&amp;aacute;gina web y &lt;code&gt;BeautifulSoup4&lt;/code&gt; para capturar la informaci&amp;oacute;n necesaria.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Webscraping"></category><category term="Mechanize"></category><category term="Beautiful Soup"></category></entry><entry><title>Extracción de datos con Scraperwiki y Python</title><link href="https://ecrespo.github.io/extraccion-de-datos-con-scraperwiki-y-python.html" rel="alternate"></link><published>2013-10-28T09:00:00-05:30</published><updated>2013-10-28T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-10-28:/extraccion-de-datos-con-scraperwiki-y-python.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tag/webscraping.html"&gt;webscraping con Python&lt;/a&gt;, le toca el turno a &lt;a href="https://scraperwiki.com/help/code-in-your-browser/"&gt;Scraperwiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n de Scraperwiki la pueden encontrar &lt;a href="https://classic.scraperwiki.com/docs/python/tutorials/"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aparte de una librer&amp;iacute;a para Python, tiene un sitio interactivo donde puede usar ScraperWiki para Ruby, Php y Python, en el siguiente &lt;a href="https://classic.scraperwiki.com/scrapers/new/python"&gt;enlace&lt;/a&gt; pueden ver la interfaz web …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tag/webscraping.html"&gt;webscraping con Python&lt;/a&gt;, le toca el turno a &lt;a href="https://scraperwiki.com/help/code-in-your-browser/"&gt;Scraperwiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n de Scraperwiki la pueden encontrar &lt;a href="https://classic.scraperwiki.com/docs/python/tutorials/"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aparte de una librer&amp;iacute;a para Python, tiene un sitio interactivo donde puede usar ScraperWiki para Ruby, Php y Python, en el siguiente &lt;a href="https://classic.scraperwiki.com/scrapers/new/python"&gt;enlace&lt;/a&gt; pueden ver la interfaz web de &lt;code&gt;ScraperWiki&lt;/code&gt; para Python.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el &lt;a href="https://github.com/scraperwiki/code-scraper-in-browser-tool/wiki/First-scraper-tutorial-%28Python%29"&gt;tutorial oficial de ScraperWiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la p&amp;aacute;gina web de ScraperWiki para Python:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/extracciondedatosconscraperwikiypython-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;La siguiente imagen muestra la informaci&amp;oacute;n de la salida y ocultamiento del Sol en Venezuela del sitio timeanddate:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/extracciondedatosconscraperwikiypython-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se muestra a continuaci&amp;oacute;n una imagen del c&amp;oacute;digo html de la p&amp;aacute;gina de la imagen anterior, sombreando la parte de dicho c&amp;oacute;digo que nos interesa:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/extracciondedatosconscraperwikiypython-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;ScraperWiki&lt;/code&gt; se ejecuta el comando &lt;code&gt;pip&lt;/code&gt;:&lt;br/&gt;
```python&lt;/p&gt;
&lt;h1 id="pip install scraperwiki"&gt;pip install scraperwiki&lt;/h1&gt;
&lt;p&gt;```
El c&amp;oacute;digo para extraer la informaci&amp;oacute;n se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar scraperwiki"&gt;importar scraperwiki&lt;/h1&gt;
&lt;p&gt;import scraperwiki&lt;/p&gt;
&lt;h1 id="importar lxml.html"&gt;importar lxml.html&lt;/h1&gt;
&lt;p&gt;import lxml.html&lt;/p&gt;
&lt;h1 id="url de la pagina timeanddate de la"&gt;Url de la pagina timeanddate de la&lt;/h1&gt;
&lt;h1 id="info de venezuela."&gt;info de Venezuela.&lt;/h1&gt;
&lt;p&gt;url = "http://www.timeanddate.com/worldclock/astronomy.html?n=58"&lt;/p&gt;
&lt;h1 id="se crea la instancia de la clase scrape pasando el"&gt;se crea la instancia de la clase scrape pasando el&lt;/h1&gt;
&lt;h1 id="url del sitio a extraer la informacion."&gt;url del sitio a extraer la informacion.&lt;/h1&gt;
&lt;p&gt;html = scraperwiki.scrape(url)&lt;/p&gt;
&lt;h1 id="se busca en el codigo html de la pagina"&gt;Se busca en el codigo html de la pagina&lt;/h1&gt;
&lt;p&gt;root = lxml.html.fromstring(html)&lt;/p&gt;
&lt;h1 id="se crea una lista que almacenara los diccionarios conteniendo"&gt;Se crea una lista que almacenara los diccionarios conteniendo&lt;/h1&gt;
&lt;h1 id="la informacion que se necesita"&gt;la informacion que se necesita&lt;/h1&gt;
&lt;p&gt;lista = []&lt;/p&gt;
&lt;h1 id="se busca el tag html tbody y tr."&gt;Se busca el tag html tbody y tr.&lt;/h1&gt;
&lt;h1 id="esto genera una lista con el contenido del tbody.esto"&gt;Esto genera una lista con el contenido del tbody.Esto&lt;/h1&gt;
&lt;h1 id="se recorre dicha lista"&gt;se recorre dicha lista&lt;/h1&gt;
&lt;p&gt;for tr in root.cssselect("tbody tr "):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se selecciona la informacion que aparece en


#el tag html td


tds = tr.cssselect("td")


#Se guarda la informacion en un diccionario


datos = {


    'fecha': tds[0].text_content(),


    'amanecer': tds[1].text_content(),


    'atardecer': tds[2].text_content()


}


#Se agrega los datos a la lista


lista.append(datos)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se muestra la lista en pantalla"&gt;Se muestra la lista en pantalla&lt;/h1&gt;
&lt;p&gt;for i in lista:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print i
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado de la ejecuci&amp;oacute;n del script a continuaci&amp;oacute;n:
```&lt;/p&gt;
&lt;p&gt;{'fecha': '26 Oct 2013', 'atardecer': '17:35', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '27 Oct 2013', 'atardecer': '17:35', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '28 Oct 2013', 'atardecer': '17:35', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '29 Oct 2013', 'atardecer': '17:34', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '30 Oct 2013', 'atardecer': '17:34', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '31 Oct 2013', 'atardecer': '17:34', 'amanecer': '05:48'}&lt;/p&gt;
&lt;p&gt;{'fecha': '1 Nov 2013', 'atardecer': '17:33', 'amanecer': '05:49'}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Puede revisar m&amp;aacute;s tutoriales sobre ScraperWiki en el siguiente &lt;a href="https://classic.scraperwiki.com/docs/python/tutorials/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category></entry><entry><title>Extracción de datos de página web con pyquery y Python</title><link href="https://ecrespo.github.io/extraccion-de-datos-de-pagina-web-con-pyquery-y-python.html" rel="alternate"></link><published>2013-10-27T09:00:00-05:30</published><updated>2013-10-27T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-10-27:/extraccion-de-datos-de-pagina-web-con-pyquery-y-python.html</id><summary type="html">&lt;p&gt;Continuando con los &lt;a href="https://www.seraph.to/tag/webscraping.html"&gt;art&amp;iacute;culos de webscraping&lt;/a&gt; ahora toca el turno a &lt;a href="https://pypi.org/project/pyquery/"&gt;pyquery&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ya la explicaci&amp;oacute;n de ubicaci&amp;oacute;n de la informaci&amp;oacute;n que se desea obtener fue explicada en este &lt;a href="http://blog.crespo.org.ve/2013/10/webscraping-o-extraccion-de-datos-de.html"&gt;art&amp;iacute;culo&lt;/a&gt; art&amp;iacute;culo.&lt;/p&gt;
&lt;p&gt;Pyqueary es una librer&amp;iacute;a que permite hacer consultas de jquery y en documentos xml. &lt;/p&gt;
&lt;p&gt;La idea es obtener la informaci&amp;oacute;n …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los &lt;a href="https://www.seraph.to/tag/webscraping.html"&gt;art&amp;iacute;culos de webscraping&lt;/a&gt; ahora toca el turno a &lt;a href="https://pypi.org/project/pyquery/"&gt;pyquery&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ya la explicaci&amp;oacute;n de ubicaci&amp;oacute;n de la informaci&amp;oacute;n que se desea obtener fue explicada en este &lt;a href="http://blog.crespo.org.ve/2013/10/webscraping-o-extraccion-de-datos-de.html"&gt;art&amp;iacute;culo&lt;/a&gt; art&amp;iacute;culo.&lt;/p&gt;
&lt;p&gt;Pyqueary es una librer&amp;iacute;a que permite hacer consultas de jquery y en documentos xml. &lt;/p&gt;
&lt;p&gt;La idea es obtener la informaci&amp;oacute;n de la salida y ocultamiento del sol ya explicado en art&amp;iacute;culos anteriores. &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar pyquery"&gt;importar pyquery&lt;/h1&gt;
&lt;p&gt;from pyquery import *&lt;/p&gt;
&lt;h1 id="se crea la instancia de la clase pyquery pasando el url de"&gt;Se Crea la instancia de la Clase PyQuery pasando el url de&lt;/h1&gt;
&lt;h1 id="timeanddate."&gt;timeanddate.&lt;/h1&gt;
&lt;p&gt;html = PyQuery(url='http://www.timeanddate.com/worldclock/astronomy.html?n=58')&lt;/p&gt;
&lt;h1 id="se busca el tag html de la tabla."&gt;Se busca el tag html de la tabla.&lt;/h1&gt;
&lt;h1 id="recibe todos los elementos de la tabla."&gt;Recibe todos los elementos de la tabla.&lt;/h1&gt;
&lt;p&gt;trs = html('table.spad tbody tr')&lt;/p&gt;
&lt;h1 id="se muestra los elementos de la tabla."&gt;Se muestra los elementos de la tabla.&lt;/h1&gt;
&lt;p&gt;print trs&lt;/p&gt;
&lt;h1 id="se recorre los elementos de la tabla"&gt;Se recorre los elementos de la tabla&lt;/h1&gt;
&lt;p&gt;for tr in trs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tds = tr.getchildren()

print tds[1].text, tds[2].text
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado de la ejecuci&amp;oacute;n del script se muestra a continuaci&amp;oacute;n:
```
05:47 17:36&lt;/p&gt;
&lt;p&gt;05:47 17:36&lt;/p&gt;
&lt;p&gt;05:48 17:35&lt;/p&gt;
&lt;p&gt;05:48 17:35&lt;/p&gt;
&lt;p&gt;05:48 17:35&lt;/p&gt;
&lt;p&gt;05:48 17:34&lt;/p&gt;
&lt;p&gt;05:48 17:34&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Webscraping"></category></entry><entry><title>Extracción de datos de páginas web con Scrapemark y Python</title><link href="https://ecrespo.github.io/extraccion-de-datos-de-paginas-web-con-scrapemark-y-python.html" rel="alternate"></link><published>2013-10-26T10:00:00-05:30</published><updated>2013-10-26T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-10-26:/extraccion-de-datos-de-paginas-web-con-scrapemark-y-python.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tag/webscraping.html"&gt;webscraping&lt;/a&gt;, ahora es el turno de &lt;code&gt;scrapermark&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se sigue usando como p&amp;aacute;gina de ejemplo timeanddate.com. &lt;code&gt;Scrapermark&lt;/code&gt; usa expresiones regulares internamente lo que le da velocidad en la busqueda, utiliza un lenguaje parecido al HTML.&lt;/p&gt;
&lt;p&gt;Para bajar scrapermark se puede bajar el egg o el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tag/webscraping.html"&gt;webscraping&lt;/a&gt;, ahora es el turno de &lt;code&gt;scrapermark&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se sigue usando como p&amp;aacute;gina de ejemplo timeanddate.com. &lt;code&gt;Scrapermark&lt;/code&gt; usa expresiones regulares internamente lo que le da velocidad en la busqueda, utiliza un lenguaje parecido al HTML.&lt;/p&gt;
&lt;p&gt;Para bajar scrapermark se puede bajar el egg o el fuente desde el siguiente &lt;a href="https://arshaw.com/scrapemark/download/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para el caso del &lt;code&gt;egg&lt;/code&gt; se ejecuta:
```python&lt;/p&gt;
&lt;h1 id="easy_install scrapemark-0.9-py2.7.egg"&gt;easy_install scrapemark-0.9-py2.7.egg&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Para el caso del fuente se descomprime el archivo .tar.gz :&lt;/code&gt;&lt;/p&gt;
&lt;h1 id="tar -xvf scrapemark-0.9.tar.gz"&gt;tar -xvf scrapemark-0.9.tar.gz&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Luego se cambia al directorio y se ejecuta la instalaci&amp;oacute;n por medio del `setup.py`:&lt;/code&gt;python&lt;/p&gt;
&lt;h1 id="cd scrapemark-0.9/"&gt;cd scrapemark-0.9/&lt;/h1&gt;
&lt;h1 id="python setup.py install"&gt;python setup.py install&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;En el siguiente &lt;a href="https://arshaw.com/scrapemark/"&gt;enlace&lt;/a&gt; se muestra un ejemplo de como se usa, para m&amp;aacute;s ejemplos puede visitar este &lt;a href="https://arshaw.com/scrapemark/docs/examples/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En este &lt;a href="http://blog.crespo.org.ve/2013/10/webscraping-o-extraccion-de-datos-de.html"&gt;art&amp;iacute;culo&lt;/a&gt; se explica como buscar la informaci&amp;oacute;n que se necesita extraer de la p&amp;aacute;gina antes &lt;a href="www.timeanddate.com/worldclock/astronomy.html?n=58"&gt;mencionada&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La idea es extraer las hora de salida y ocultamiento del sol para Venezuela.
A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa sys para pasar como argumento al programa"&gt;Se importa sys para pasar como argumento al programa&lt;/h1&gt;
&lt;h1 id="el url del sitio timeanddate"&gt;el url del sitio timeanddate&lt;/h1&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;h1 id="se importa pprint para mostrar la informacion en la"&gt;Se importa pprint para mostrar la informacion en la&lt;/h1&gt;
&lt;h1 id="consola"&gt;consola&lt;/h1&gt;
&lt;p&gt;from pprint import pprint&lt;/p&gt;
&lt;h1 id="se importa scrape"&gt;se importa scrape&lt;/h1&gt;
&lt;p&gt;from scrapemark import scrape&lt;/p&gt;
&lt;h1 id="se ejecuta scrape pasando el tag html de la tabla"&gt;se ejecuta scrape pasando el tag  html de la tabla&lt;/h1&gt;
&lt;h1 id="donde se encuentra la fila de la informacion de la salida"&gt;donde se encuentra la fila de la informacion de la salida&lt;/h1&gt;
&lt;h1 id="y ocultamiento del sol."&gt;y ocultamiento del sol.&lt;/h1&gt;
&lt;h1 id="se le pasa como argumento en la linea de comandos"&gt;se le pasa como argumento en la linea de comandos&lt;/h1&gt;
&lt;h1 id="el url de timeanddate."&gt;el url de timeanddate.&lt;/h1&gt;
&lt;p&gt;resultado = scrape("""&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table class="spad"&amp;gt;


 &amp;lt;tbody&amp;gt;


  {*


   &amp;lt;tr&amp;gt;


      &amp;lt;td&amp;gt;{{[].day}}&amp;lt;/td&amp;gt;


      &amp;lt;td&amp;gt;{{[].sunrise}}&amp;lt;/td&amp;gt;


      &amp;lt;td&amp;gt;{{[].sunset}}&amp;lt;/td&amp;gt;


  {# ... #}


 &amp;lt;/tr&amp;gt;


 *}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;""",url=sys.argv[1] )&lt;/p&gt;
&lt;h1 id="se muestra el resultado en pantalla"&gt;Se muestra el resultado en pantalla&lt;/h1&gt;
&lt;p&gt;pprint (resultado)
&lt;code&gt;El resultado de la ejecuci&amp;oacute;n del script es el siguiente:&lt;/code&gt;python
ernesto@grievous:~$ python ej5.py http://www.timeanddate.com/worldclock/astronomy.html?n=58&lt;/p&gt;
&lt;p&gt;fetching http://www.timeanddate.com/worldclock/astronomy.html?n=58 ...&lt;/p&gt;
&lt;p&gt;DONE fetching.&lt;/p&gt;
&lt;p&gt;[{'day': u'24 Oct 2013', 'sunrise': u'05:47', 'sunset': u'17:36'},&lt;/p&gt;
&lt;p&gt;{'day': u'25 Oct 2013', 'sunrise': u'05:47', 'sunset': u'17:36'},&lt;/p&gt;
&lt;p&gt;{'day': u'26 Oct 2013', 'sunrise': u'05:48', 'sunset': u'17:35'},&lt;/p&gt;
&lt;p&gt;{'day': u'27 Oct 2013', 'sunrise': u'05:48', 'sunset': u'17:35'},&lt;/p&gt;
&lt;p&gt;{'day': u'28 Oct 2013', 'sunrise': u'05:48', 'sunset': u'17:35'},&lt;/p&gt;
&lt;p&gt;{'day': u'29 Oct 2013', 'sunrise': u'05:48', 'sunset': u'17:34'},&lt;/p&gt;
&lt;p&gt;{'day': u'30 Oct 2013', 'sunrise': u'05:48', 'sunset': u'17:34'}]
```&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="webscraping"></category><category term="Scrapermark"></category></entry><entry><title>Extracción de datos en páginas web con Webscraping y Python</title><link href="https://ecrespo.github.io/extraccion-de-datos-en-paginas-web-con-webscraping-y-python.html" rel="alternate"></link><published>2013-10-25T09:00:00-05:30</published><updated>2013-10-25T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-10-25:/extraccion-de-datos-en-paginas-web-con-webscraping-y-python.html</id><summary type="html">&lt;p&gt;Continuando con la extracci&amp;oacute;n de datos en la p&amp;aacute;gina timeanddate, la informaci&amp;oacute;n de amanecer y atardecer en Venezuela.
En este caso se usar&amp;aacute; la librer&amp;iacute;a webscraping. Para su instalaci&amp;oacute;n se usa el comando &lt;code&gt;pip&lt;/code&gt;:
```&lt;/p&gt;
&lt;h1 id="pip install webscraping"&gt;pip install webscraping&lt;/h1&gt;
&lt;p&gt;```
En el art&amp;iacute;culo &lt;a href="https://www.seraph.to/webscraping-o-extraccion-de-datos-de-paginas-web-con-beautifulsoup4-y-python.html#webscraping-o-extraccion-de-datos-de-paginas-web-con-beautifulsoup4-y-python"&gt;anterior&lt;/a&gt; se muestra como se ubica la informaci&amp;oacute;n que se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con la extracci&amp;oacute;n de datos en la p&amp;aacute;gina timeanddate, la informaci&amp;oacute;n de amanecer y atardecer en Venezuela.
En este caso se usar&amp;aacute; la librer&amp;iacute;a webscraping. Para su instalaci&amp;oacute;n se usa el comando &lt;code&gt;pip&lt;/code&gt;:
```&lt;/p&gt;
&lt;h1 id="pip install webscraping"&gt;pip install webscraping&lt;/h1&gt;
&lt;p&gt;```
En el art&amp;iacute;culo &lt;a href="https://www.seraph.to/webscraping-o-extraccion-de-datos-de-paginas-web-con-beautifulsoup4-y-python.html#webscraping-o-extraccion-de-datos-de-paginas-web-con-beautifulsoup4-y-python"&gt;anterior&lt;/a&gt; se muestra como se ubica la informaci&amp;oacute;n que se requiere.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="de webscraping se importa download y xpath"&gt;De webscraping se importa download y xpath&lt;/h1&gt;
&lt;p&gt;from webscraping import download, xpath&lt;/p&gt;
&lt;h1 id="se define la instancia download"&gt;Se define la instancia Download&lt;/h1&gt;
&lt;p&gt;D = download.Download()&lt;/p&gt;
&lt;h1 id="se obtiene la informacion de la salida y ocultamiento del"&gt;Se obtiene la informacion de la salida y ocultamiento del&lt;/h1&gt;
&lt;h1 id="sol en venezuela desde la pagina timeanddate."&gt;sol en Venezuela desde la pagina timeanddate.&lt;/h1&gt;
&lt;p&gt;html = D.get('http://www.timeanddate.com/worldclock/astronomy.html?n=58')&lt;/p&gt;
&lt;h1 id="se busca la informacion en la tabla donde se muestra."&gt;Se busca la informacion en la tabla donde se muestra.&lt;/h1&gt;
&lt;p&gt;for row in xpath.search(html, '//table[@class="spad"]/tbody/tr'):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se busca en la fila el tag /td


cols = xpath.search(row, '/td')


#Se muestra la informacion en pantalla


print 'Amanecer: %s, Atardecer: %s' % (cols[1], cols[2])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el resultado de la ejecuci&amp;oacute;n del script:
```
Amanecer: 05:47, Atardecer: 17:36&lt;/p&gt;
&lt;p&gt;Amanecer: 05:47, Atardecer: 17:36&lt;/p&gt;
&lt;p&gt;Amanecer: 05:47, Atardecer: 17:36&lt;/p&gt;
&lt;p&gt;Amanecer: 05:48, Atardecer: 17:35&lt;/p&gt;
&lt;p&gt;Amanecer: 05:48, Atardecer: 17:35&lt;/p&gt;
&lt;p&gt;Amanecer: 05:48, Atardecer: 17:35&lt;/p&gt;
&lt;p&gt;Amanecer: 05:48, Atardecer: 17:34
```&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Webscraping"></category></entry><entry><title>Webscraping o extracción de datos de páginas web con BeautifulSoup4 y Python</title><link href="https://ecrespo.github.io/webscraping-o-extraccion-de-datos-de-paginas-web-con-beautifulsoup4-y-python.html" rel="alternate"></link><published>2013-10-24T09:00:00-05:30</published><updated>2013-10-24T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-10-24:/webscraping-o-extraccion-de-datos-de-paginas-web-con-beautifulsoup4-y-python.html</id><summary type="html">&lt;p&gt;El &lt;code&gt;webscraping&lt;/code&gt; es una t&amp;eacute;cnica utilizada para extraer datos de una p&amp;aacute;gina web por medio de herramientas (m&amp;aacute;s informaci&amp;oacute;n en &lt;a href="https://es.wikipedia.org/wiki/Web_scraping"&gt;wikipedia&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Para Python existen varias herramientas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;urllib&lt;/code&gt; y &lt;code&gt;urlopen&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Beautiful Soup 4&lt;/code&gt; (&lt;a href="https://www.seraph.to/una-introduccion-a-beautiful-soup-4-en-python.html#una-introduccion-a-beautiful-soup-4-en-python"&gt;introducci&amp;oacute;n en art&amp;iacute;culo anterior&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Python Mechanize&lt;/code&gt; (&lt;a href="https://www.seraph.to/emulando-la-navegacion-en-python-con-mechanize-parte-1.html"&gt;un art&amp;iacute;culo inicial&lt;/a&gt; y espero publicar algunos m&amp;aacute;s).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrapy.org/"&gt;Scrapy&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Selenium&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pyquery&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Scrapemark …&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;El &lt;code&gt;webscraping&lt;/code&gt; es una t&amp;eacute;cnica utilizada para extraer datos de una p&amp;aacute;gina web por medio de herramientas (m&amp;aacute;s informaci&amp;oacute;n en &lt;a href="https://es.wikipedia.org/wiki/Web_scraping"&gt;wikipedia&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Para Python existen varias herramientas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;urllib&lt;/code&gt; y &lt;code&gt;urlopen&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Beautiful Soup 4&lt;/code&gt; (&lt;a href="https://www.seraph.to/una-introduccion-a-beautiful-soup-4-en-python.html#una-introduccion-a-beautiful-soup-4-en-python"&gt;introducci&amp;oacute;n en art&amp;iacute;culo anterior&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Python Mechanize&lt;/code&gt; (&lt;a href="https://www.seraph.to/emulando-la-navegacion-en-python-con-mechanize-parte-1.html"&gt;un art&amp;iacute;culo inicial&lt;/a&gt; y espero publicar algunos m&amp;aacute;s).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrapy.org/"&gt;Scrapy&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Selenium&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pyquery&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Scrapemark&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Webscraping&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ScraperWiki&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En otros art&amp;iacute;culos se explicar&amp;aacute; el uso de cada herramienta mencionada. Ahora toca mostrar otro par de ejemplos de &lt;code&gt;BeautifulSoup4&lt;/code&gt;.
El primer ejemplo captura la fecha y hora de la salida del sol para Venezuela del sitio timeanddate.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra una imagen de la p&amp;aacute;gina timeanddate de la salida del sol en Venezuela.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/webscrapingoextracciondedatosdepaginaswebconbeautifulsoup4ypython-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la p&amp;aacute;gina timeanddate donde se va a inspeccionar el elemento de la fila mostrada en la imagen anterior:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/webscrapingoextracciondedatosdepaginaswebconbeautifulsoup4ypython-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Luego se muestra la imagen el c&amp;oacute;digo html de la fila mostrada en la imagen anterior:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/webscrapingoextracciondedatosdepaginaswebconbeautifulsoup4ypython-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar urllib2 y beautifulsoup"&gt;Importar urllib2 y BeautifulSoup&lt;/h1&gt;
&lt;p&gt;import urllib2&lt;/p&gt;
&lt;p&gt;from BeautifulSoup import BeautifulSoup&lt;/p&gt;
&lt;h1 id="se crea la instancia y se abre el url de timeanddate"&gt;Se crea la instancia y se abre el url de timeanddate&lt;/h1&gt;
&lt;h1 id="buscando la informacion de la hora de salir el sol en venezuela"&gt;buscando la informacion de la hora de salir el sol en Venezuela&lt;/h1&gt;
&lt;p&gt;soup = BeautifulSoup(urllib2.urlopen('http://www.timeanddate.com/worldclock/astronomy.html?n=58').read())&lt;/p&gt;
&lt;h1 id="se busca la palabra table, y de ahi class y se busca el contenido"&gt;Se busca la palabra table, y de ahi class y se busca el contenido&lt;/h1&gt;
&lt;h1 id="de cada columna de la tabla."&gt;de cada columna de la tabla.&lt;/h1&gt;
&lt;p&gt;for row in soup('table', {'class': 'spad'})[0].tbody('tr'):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tds = row('td')


#Se muestra la fecha y hora de la salida del sol


print tds[0].string, tds[1].string
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado de la ejecuci&amp;oacute;n es la siguiente:
```
23 Oct 2013 05:47&lt;/p&gt;
&lt;p&gt;24 Oct 2013 05:47&lt;/p&gt;
&lt;p&gt;25 Oct 2013 05:47&lt;/p&gt;
&lt;p&gt;26 Oct 2013 05:48&lt;/p&gt;
&lt;p&gt;27 Oct 2013 05:48&lt;/p&gt;
&lt;p&gt;28 Oct 2013 05:48&lt;/p&gt;
&lt;p&gt;29 Oct 2013 05:48
```&lt;/p&gt;
&lt;p&gt;El otro ejemplo es un c&amp;oacute;digo m&amp;aacute;s ordenado de como extraer los enlaces de una p&amp;aacute;gina web.
En este caso se pedir&amp;aacute; desde la l&amp;iacute;nea de comandos el url del sitio que se desea extraer los urls, en vez de usar &lt;code&gt;urllib2&lt;/code&gt; se usar&amp;aacute; con &lt;code&gt;beautifulsoup4&lt;/code&gt; la librer&amp;iacute;a &lt;code&gt;request&lt;/code&gt;.
A continuaci&amp;oacute;n el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa beautifulsoup"&gt;Se importa BeautifulSoup&lt;/h1&gt;
&lt;p&gt;from bs4 import BeautifulSoup&lt;/p&gt;
&lt;h1 id="se importa requests"&gt;Se importa requests&lt;/h1&gt;
&lt;p&gt;import requests&lt;/p&gt;
&lt;h1 id="se crea la clase extraer"&gt;Se crea la clase Extraer&lt;/h1&gt;
&lt;p&gt;class Extraer:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self,url):

    #Se asocia el url a self.__url

    self.__url = url

#Se crea el m&amp;eacute;todo Enlaces, donde se crea una lista vac&amp;iacute;a

#donde se lee el url con requests.get y se busca el tag a

#luego se agrega a la lista cada link donde aparece el texo href
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#Se retorna la lista&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def Enlaces(self):

    self.__enlaces = []

    for link in BeautifulSoup(requests.get("http://" +url).text).find_all('a'):

        self.__enlaces.append((link.get('href')))

    return self.__enlaces
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se ejecuta este script"&gt;Se ejecuta este script&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;h1 id="se pide el url desde la linea de comandos"&gt;Se pide el url desde la l&amp;iacute;nea de comandos&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;url = raw_input("Escriba el url del sitio que desea extraer informacion: ")
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se crea la instancia de la clase donde se le pasa el url"&gt;Se crea la instancia de la clase donde se le pasa el url&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;ws = Extraer(url)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se muestra el texto enlaces"&gt;Se muestra el texto Enlaces&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;print "Enlaces: "
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se muestra cada enlace extraido"&gt;Se muestra cada enlace extra&amp;iacute;do&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;for enlace in  ws.Enlaces():

print enlace
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;El resultado se muestra a continuaci&amp;oacute;n:&lt;/code&gt;python
ernesto@grievous:~/bin/python/webscraping$ python ej1.py &lt;/p&gt;
&lt;p&gt;Escriba el url del sitio que desea extraer informacion: 127.0.0.1:8000&lt;/p&gt;
&lt;p&gt;Enlaces: &lt;/p&gt;
&lt;p&gt;/&lt;/p&gt;
&lt;p&gt;/radios/pagina/1/&lt;/p&gt;
&lt;p&gt;/acerca/&lt;/p&gt;
&lt;p&gt;/login/
```&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="webscraping"></category><category term="Beautiful Soup"></category></entry><entry><title>Una introducción a Beautiful Soup 4 en Python.</title><link href="https://ecrespo.github.io/una-introduccion-a-beautiful-soup-4-en-python.html" rel="alternate"></link><published>2013-10-23T09:00:00-05:30</published><updated>2013-10-23T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-10-23:/una-introduccion-a-beautiful-soup-4-en-python.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Beautiful Soup&lt;/code&gt; es una librer&amp;iacute;a de Python que facilita la extracci&amp;oacute;n de datos de archivos html y xml.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo de &lt;a href="www.pythonforbeginners.com/python-on-the-web/beautifulsoup-4-python/"&gt;Python For Beginners&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n oficial se puede leer en el siguiente &lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;beautifulsoup&lt;/code&gt; es necesario tener instalado la librer&amp;iacute;a &lt;code&gt;python-bs4&lt;/code&gt; el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Beautiful Soup&lt;/code&gt; es una librer&amp;iacute;a de Python que facilita la extracci&amp;oacute;n de datos de archivos html y xml.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo de &lt;a href="www.pythonforbeginners.com/python-on-the-web/beautifulsoup-4-python/"&gt;Python For Beginners&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n oficial se puede leer en el siguiente &lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;beautifulsoup&lt;/code&gt; es necesario tener instalado la librer&amp;iacute;a &lt;code&gt;python-bs4&lt;/code&gt; el cual es un parser html.
```&lt;/p&gt;
&lt;h1 id="apt-get install python-bs4"&gt;apt-get install python-bs4&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Luego se instala `beautiful soup 4`:&lt;/code&gt;&lt;/p&gt;
&lt;h1 id="pip install beautifulsoup4"&gt;pip install beautifulsoup4&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;``
Para utilizar&lt;/code&gt;beautifulsoup&lt;code&gt;se le puede pasar un archivo html o un URL, pero para capturar el archivo html se tiene que usar&lt;/code&gt;urllib2&lt;code&gt;,&lt;/code&gt;beautifulsoup` no lo hace s&amp;oacute;lo.&lt;/p&gt;
&lt;p&gt;El API tiene varias formas de realizar filtros para la busqueda:
1. Busqueda por string, se usa la funci&amp;oacute;nn &lt;code&gt;find_all&lt;/code&gt;:
&lt;code&gt;python
soup.find_all("Prueba)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;De esta forma se busca todas las palabras Prueba en el archivo.
2. Expresi&amp;oacute;n regular:
El siguiente c&amp;oacute;digo muestra todos los tags html que comiencen con la letra b.
```python
import re&lt;/p&gt;
&lt;p&gt;for tag in soup.find_all(re.compile("^b")):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print(tag.name)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;El siguiente c&amp;oacute;digo muestra todos los tags html que contenga la letra b:&lt;/code&gt;python
import re&lt;/p&gt;
&lt;p&gt;for tag in soup.find_all(re.compile("b")):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print(tag.name)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Una lista.
Al pasar una lista &lt;code&gt;beautifulsoup&lt;/code&gt; encontrar&amp;aacute; cualquier elemento de la lista.
El siguiente c&amp;oacute;digo muestra como se encuentra todas las a y todas las b que aparezca:
&lt;code&gt;python
print soup.find_all(["a","b"])&lt;/code&gt;
Para demostrar el uso de &lt;code&gt;beautifulsoup&lt;/code&gt; se utilizar&amp;aacute; una aplicaci&amp;oacute;n en django que maneja un registro de radios por internet para la aplicaci&amp;oacute;n radiotray de Linux.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A continuaci&amp;oacute;n una captura de pantalla:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/unaintroduccionabeautifulsoup4enpython-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de ejemplo es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;from bs4 import BeautifulSoup&lt;/p&gt;
&lt;p&gt;import urllib2&lt;/p&gt;
&lt;h1 id="se crea la instancia de bs pasando la url con urllib2."&gt;Se crea la instancia de BS pasando la URL con urllib2.&lt;/h1&gt;
&lt;p&gt;soup = BeautifulSoup(urllib2.urlopen("http://127.0.0.1:8000").read())&lt;/p&gt;
&lt;p&gt;print "--------------------"&lt;/p&gt;
&lt;h1 id="se muestra todo el contenido de la pagina"&gt;Se muestra todo el contenido de la pagina&lt;/h1&gt;
&lt;p&gt;print soup.prettify()&lt;/p&gt;
&lt;p&gt;print "---------------------"&lt;/p&gt;
&lt;h1 id="se muestra el titulo de la pagina"&gt;Se muestra el titulo de la pagina&lt;/h1&gt;
&lt;p&gt;print "Titulo" ,soup.title.string&lt;/p&gt;
&lt;p&gt;print "----------------------"&lt;/p&gt;
&lt;h1 id="se muestra el tag p de html que contiene la pagina"&gt;Se muestra el tag p de html que contiene la pagina&lt;/h1&gt;
&lt;p&gt;print soup.p&lt;/p&gt;
&lt;p&gt;print "----------------------"&lt;/p&gt;
&lt;h1 id="se muestra el tag a de html que contiene la pagina"&gt;Se muestra el tag a de html que contiene la pagina&lt;/h1&gt;
&lt;p&gt;print soup.a
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra una imagen con el resultado del programa:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/unaintroduccionabeautifulsoup4enpython-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Para extraer URLs de la p&amp;aacute;gina se busca el tag html a, luego lo que contenga la palabra href:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;from bs4 import BeautifulSoup&lt;/p&gt;
&lt;p&gt;import urllib2&lt;/p&gt;
&lt;h1 id="se crea la instancia de bs pasando la url con urllib2._1"&gt;Se crea la instancia de BS pasando la URL con urllib2.&lt;/h1&gt;
&lt;p&gt;soup = BeautifulSoup(urllib2.urlopen("http://127.0.0.1:8000").read())&lt;/p&gt;
&lt;p&gt;print "--------------------"&lt;/p&gt;
&lt;h1 id="para extraer url de la pagina."&gt;Para extraer url de la pagina.&lt;/h1&gt;
&lt;p&gt;for link in soup.find_all('a'):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print(link.get('href'))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;El resultado se muestra a continuaci&amp;oacute;n:&lt;/code&gt;python&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;/
/radios/pagina/1/
/acerca/
/login/
```&lt;/p&gt;
&lt;p&gt;Para extraer todo el texto de la p&amp;aacute;gina:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_2"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;from bs4 import BeautifulSoup&lt;/p&gt;
&lt;p&gt;import urllib2&lt;/p&gt;
&lt;h1 id="se crea la instancia de bs pasando la url con urllib2._2"&gt;Se crea la instancia de BS pasando la URL con urllib2.&lt;/h1&gt;
&lt;p&gt;soup = BeautifulSoup(urllib2.urlopen("http://127.0.0.1:8000").read())&lt;/p&gt;
&lt;p&gt;print "--------------------"&lt;/p&gt;
&lt;h1 id="para extraer todo el texto de la pagina."&gt;Para extraer todo el texto de la pagina.&lt;/h1&gt;
&lt;p&gt;print(soup.get_text())
&lt;code&gt;El resultado se muestra a continuaci&amp;oacute;n:&lt;/code&gt;python
....
 Bienvenido 
/span
Radio
                L
/.well 
Nuevas radios
/.well 
/span
/row
&amp;copy; Registro Radiotray 2013&lt;br/&gt;
/.fluid-container
 Le javascript
    ================================================== 
 Placed at the end of the document so the pages load faster
```&lt;/p&gt;
&lt;p&gt;Esta es la base para realizar &lt;a href="es.wikipedia.org/wiki/Web_scraping"&gt;webscraping&lt;/a&gt; que se explicar&amp;aacute; en el siguiente art&amp;iacute;culo.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Beautiful Soup"></category><category term="webscraping"></category></entry><entry><title>Obtener información de metadatos EXIF de una imagen con Python</title><link href="https://ecrespo.github.io/obtener-informacion-de-metadatos-exif-de-una-imagen-con-python.html" rel="alternate"></link><published>2013-10-14T09:00:00-05:30</published><updated>2013-10-14T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-10-14:/obtener-informacion-de-metadatos-exif-de-una-imagen-con-python.html</id><summary type="html">&lt;p&gt;Se probar&amp;aacute; con un simple script como obtener metadatos EXIF de dos im&amp;aacute;genes, son dos fotos, la primera directamente del dispositivo m&amp;oacute;vil con que se tom&amp;oacute; la foto, la segunda imagen se baj&amp;oacute; desde Google+.&lt;/p&gt;
&lt;p&gt;La idea es notar la diferencia de informaci&amp;oacute;n que se obtiene de los metadatos de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Se probar&amp;aacute; con un simple script como obtener metadatos EXIF de dos im&amp;aacute;genes, son dos fotos, la primera directamente del dispositivo m&amp;oacute;vil con que se tom&amp;oacute; la foto, la segunda imagen se baj&amp;oacute; desde Google+.&lt;/p&gt;
&lt;p&gt;La idea es notar la diferencia de informaci&amp;oacute;n que se obtiene de los metadatos de dos fotos id&amp;eacute;nticas para obtenidas de dos formas diferentes.&lt;/p&gt;
&lt;p&gt;Lo primero que se tiene que hacer es instalar el m&amp;oacute;dulo python llamado &lt;code&gt;pyexiv2&lt;/code&gt;. Su documentaci&amp;oacute;n la pueden encontrar &lt;a href="tilloy.net/dev/pyexiv2/index.html"&gt;aqu&amp;iacute;&lt;/a&gt;.
Se puede instalar en Debian wheezy de la siguiente forma:
```&lt;/p&gt;
&lt;h1 id="apt-get install python-pyexiv2 python-pyexiv2-doc"&gt;apt-get install python-pyexiv2 python-pyexiv2-doc&lt;/h1&gt;
&lt;p&gt;```
La imagen original fue tomada desde un celular Motorola Razr XT910 y la segunda imagen se bajo desde Google+.
Imagen original con md5:
md5sum ecrespo-orig.jpg
a74977dbbd40d228658435b03db9a4c3  ecrespo-orig.jpg&lt;/p&gt;
&lt;p&gt;El tama&amp;ntilde;o de la imagen es de 248k:
du  ecrespo-orig.jpg
248 ecrespo-orig.jpg&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/obtenerinformaciondemetadatosexifdeunaimagenconpython-1.jpg"/&gt; 
ecrespo-orig.jpg&lt;/p&gt;
&lt;p&gt;Imagen bajada de Google+ con md5:
md5sum ecrespo.jpg
d1d41f5865bbb8360e6a748e38ae5ee1  ecrespo.jpg
El tama&amp;ntilde;o de la imagen es de 32k:
du ecrespo.jpg
32  ecrespo.jpg&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/obtenerinformaciondemetadatosexifdeunaimagenconpython-2.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;ecrespo.jpg&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo que muestra los metadatos de exif de cada imagen es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa el modulo para analisis de metadatos de exif"&gt;Se importa el modulo para analisis de metadatos de exif&lt;/h1&gt;
&lt;p&gt;import pyexiv2&lt;/p&gt;
&lt;h1 id="se crea una funcion que devuelve en pantalla la informacion exif"&gt;Se crea una funcion que devuelve en pantalla la informacion exif&lt;/h1&gt;
&lt;p&gt;def Meta(archivo):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se crea la instancia metadata al pasarle el archivo que se quiere analizar

metadata = pyexiv2.ImageMetadata(archivo)

#Se lee el metadato

metadata.read()

#Se muestra en pantalla un mensaje

print "Se muestra la informacion exif del archivo %s" %archivo

print  "---------------------------------------------"

#Se despliega la informacion de metadatos exif que contiene la imagen

for metadato in metadata.exif_keys:

    texto = metadato + ": " + metadata[metadato].raw_value

    print texto
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Meta("ecrespo-orig.jpg")

print "********************************************"

Meta("ecrespo.jpg")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;La salida del script es la siguiente:&lt;/code&gt;python
Se muestra la informacion exif del archivo ecrespo-orig.jpg&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Exif.Image.YCbCrPositioning: 1&lt;/p&gt;
&lt;p&gt;Exif.Image.XResolution: 72/1&lt;/p&gt;
&lt;p&gt;Exif.Image.YResolution: 72/1&lt;/p&gt;
&lt;p&gt;Exif.Image.ResolutionUnit: 2&lt;/p&gt;
&lt;p&gt;Exif.Image.DateTime: 2013:09:08 13:10:00&lt;/p&gt;
&lt;p&gt;Exif.Image.Make: Motorola&lt;/p&gt;
&lt;p&gt;Exif.Image.Model: XT910&lt;/p&gt;
&lt;p&gt;Exif.Image.ExifTag: 449&lt;/p&gt;
&lt;p&gt;Exif.Photo.ExifVersion: 48 50 50 48&lt;/p&gt;
&lt;p&gt;Exif.Photo.FlashpixVersion: 48 48 48 48&lt;/p&gt;
&lt;p&gt;Exif.Photo.ColorSpace: 1&lt;/p&gt;
&lt;p&gt;Exif.Photo.ComponentsConfiguration: 1 2 3 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.CompressedBitsPerPixel: 0/1&lt;/p&gt;
&lt;p&gt;Exif.Photo.ExposureTime: 0/1000000&lt;/p&gt;
&lt;p&gt;Exif.Photo.FNumber: 24/10&lt;/p&gt;
&lt;p&gt;Exif.Photo.ExposureProgram: 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.ISOSpeedRatings: 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.ShutterSpeedValue: 0/1&lt;/p&gt;
&lt;p&gt;Exif.Photo.ApertureValue: 3/1&lt;/p&gt;
&lt;p&gt;Exif.Photo.BrightnessValue: 0/1&lt;/p&gt;
&lt;p&gt;Exif.Photo.ExposureBiasValue: 0/10&lt;/p&gt;
&lt;p&gt;Exif.Photo.MaxApertureValue: 3/1&lt;/p&gt;
&lt;p&gt;Exif.Photo.SubjectDistance: 0/1&lt;/p&gt;
&lt;p&gt;Exif.Photo.MeteringMode: 1&lt;/p&gt;
&lt;p&gt;Exif.Photo.LightSource: 3&lt;/p&gt;
&lt;p&gt;Exif.Photo.Flash: 24&lt;/p&gt;
&lt;p&gt;Exif.Photo.FocalLength: 460/100&lt;/p&gt;
&lt;p&gt;Exif.Photo.FlashEnergy: 0/1&lt;/p&gt;
&lt;p&gt;Exif.Photo.ExposureIndex: 0/0&lt;/p&gt;
&lt;p&gt;Exif.Photo.SceneType: 1&lt;/p&gt;
&lt;p&gt;Exif.Photo.CustomRendered: 1&lt;/p&gt;
&lt;p&gt;Exif.Photo.ExposureMode: 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.WhiteBalance: 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.DigitalZoomRatio: 65536/65535&lt;/p&gt;
&lt;p&gt;Exif.Photo.SceneCaptureType: 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.GainControl: 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.Contrast: 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.Saturation: 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.Sharpness: 0&lt;/p&gt;
&lt;p&gt;Exif.Photo.SubjectDistanceRange: 0&lt;/p&gt;
&lt;p&gt;Exif.Image.GPSTag: 1243&lt;/p&gt;
&lt;p&gt;Exif.Thumbnail.ImageWidth: 200&lt;/p&gt;
&lt;p&gt;Exif.Thumbnail.ImageLength: 120&lt;/p&gt;
&lt;p&gt;Exif.Thumbnail.Compression: 6&lt;/p&gt;
&lt;p&gt;Exif.Thumbnail.XResolution: 72/1&lt;/p&gt;
&lt;p&gt;Exif.Thumbnail.YResolution: 72/1&lt;/p&gt;
&lt;p&gt;Exif.Thumbnail.ResolutionUnit: 2&lt;/p&gt;
&lt;p&gt;Exif.Thumbnail.JPEGInterchangeFormat: 2027&lt;/p&gt;
&lt;p&gt;Exif.Thumbnail.JPEGInterchangeFormatLength: 8033&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Se muestra la informacion exif del archivo ecrespo.jpg&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Exif.Image.Software: Google&lt;/p&gt;
&lt;p&gt;Exif.Image.ExifTag: 46&lt;/p&gt;
&lt;p&gt;Exif.Photo.ExifVersion: 48 50 50 48&lt;/p&gt;
&lt;p&gt;Exif.Photo.0x9009: 10 39 8 1 16 1 24 0 32 0 40 0 48 0 56 0 64 0 72 1 80 0 88 0 96 1 104 1 112 0 120 1 128 1 1 136 1 1 144 1 1&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Como se puede observar la imagen original bajada del dispositivo con Android tiene m&amp;aacute;s informaci&amp;oacute;n de metadatos exif que la imagen bajada de Google+, la primera foto tiene informaci&amp;oacute;n del dispositivo, modelo entre otras cosas mientras que la segunda foto maneja informaci&amp;oacute;n del software que proceso la imagen que es de Google.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="exif"></category></entry><entry><title>Mostrar tweets en tiempo real con twython y el API Stream de Twitter</title><link href="https://ecrespo.github.io/mostrar-tweets-en-tiempo-real-con-twython-y-el-api-stream-de-twitter.html" rel="alternate"></link><published>2013-09-26T09:00:00-05:30</published><updated>2013-09-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-09-26:/mostrar-tweets-en-tiempo-real-con-twython-y-el-api-stream-de-twitter.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se usar&amp;aacute; el API Stream de twitter para ver el flujo de tweets que recibe el usuario o lo que se publica en general en twitter.&lt;/p&gt;
&lt;p&gt;La idea es usar &lt;code&gt;twython&lt;/code&gt; con la clase &lt;a href="https://twython.readthedocs.org/en/latest/usage/streaming_api.html"&gt;TwythonStreamer&lt;/a&gt; para acceder a la API stream de twitter.&lt;/p&gt;
&lt;p&gt;Del API de twitter …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se usar&amp;aacute; el API Stream de twitter para ver el flujo de tweets que recibe el usuario o lo que se publica en general en twitter.&lt;/p&gt;
&lt;p&gt;La idea es usar &lt;code&gt;twython&lt;/code&gt; con la clase &lt;a href="https://twython.readthedocs.org/en/latest/usage/streaming_api.html"&gt;TwythonStreamer&lt;/a&gt; para acceder a la API stream de twitter.&lt;/p&gt;
&lt;p&gt;Del API de twitter se mostrar&amp;aacute; &lt;a href="https://developer.twitter.com/docs/api/1.1/get/user"&gt;GET user&lt;/a&gt;  el cual muestra los mensajes en flujo de un s&amp;oacute;lo usuario.&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n se mostrar&amp;aacute; como usar &lt;a href="https://developer.twitter.com/docs/api/1.1/post/statuses/filter"&gt;POST status filter&lt;/a&gt;, el cual muestra todos los tweets p&amp;uacute;blicos que contengan una palabra (track).&lt;/p&gt;
&lt;p&gt;El primer ejemplo es con el &lt;code&gt;GET user&lt;/code&gt;, el c&amp;oacute;digo a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se define el token de la aplicacion"&gt;Se define el token de la aplicacion&lt;/h1&gt;
&lt;p&gt;CONSUMER_KEY = 'xxxxx'&lt;/p&gt;
&lt;p&gt;CONSUMER_SECRET = 'xxxxx'&lt;/p&gt;
&lt;h1 id="se define el acceso al usuario"&gt;Se define el acceso al usuario&lt;/h1&gt;
&lt;p&gt;ACCESS_KEY = 'xxxxx'&lt;/p&gt;
&lt;p&gt;ACCESS_SECRET = 'xxxxx'&lt;/p&gt;
&lt;h1 id="se importa twythonstreamer"&gt;Se importa TwythonStreamer&lt;/h1&gt;
&lt;p&gt;from twython import TwythonStreamer&lt;/p&gt;
&lt;h1 id="se crea la clase mistream que hereda de twythonstreamer"&gt;Se crea la clase MiStream que hereda de TwythonStreamer&lt;/h1&gt;
&lt;p&gt;class MiStream(TwythonStreamer):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se crea el metodo on_success que recibe data

def on_success(self, data):

    #Si la palabra 'text' se encuentra en data se muestra en pantalla

    #su contenido

    if 'text' in data:

        print data['text'].encode('utf-8')

        #Si se desea desconectar luego del primer resultado?

        #self.disconnect()

#Se crea el metodo on_error que recibe el codigo de estatus y data y se muestra en pantalla

def on_error(self, status_code, data):

    print status_code, data
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="requires authentication as of twitter api v1.1"&gt;Requires Authentication as of Twitter API v1.1&lt;/h1&gt;
&lt;h1 id="se crea la instancia de la clase mistream con los parametros de autenticacion del api v1.1 de twittter."&gt;Se crea la instancia de la clase MiStream con los parametros de autenticacion del API v1.1 de twittter.&lt;/h1&gt;
&lt;p&gt;stream = MiStreame(CONSUMER_KEY,CONSUMER_SECRET,ACCESS_KEY,ACCESS_SECRET)&lt;/p&gt;
&lt;h1 id="se recibe los tweets del usuario."&gt;Se recibe los tweets del usuario.&lt;/h1&gt;
&lt;p&gt;stream.user()
```
El resultado se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python
NASA puts papers from Curiosity rover behind paywall; @mbeisen points out this is illegal &amp;amp; shares them http://t.co/UB1jQfRpLR #openaccess&lt;/p&gt;
&lt;p&gt;ICYMI: Boost Mobile now offering Boost Warp 4G http://t.co/qvZKtZXqOn&lt;/p&gt;
&lt;p&gt;Empoderando a la ciudadan&amp;iacute;a para mejorar la educaci&amp;oacute;n en M&amp;eacute;xico http://t.co/GnTqhDWqzv&lt;/p&gt;
&lt;p&gt;BREAKING: Dodgers say man killed in altercation with Giants fans in SF was son of team security guard: http://t.co/CkB75Nkt0V&lt;/p&gt;
&lt;p&gt;RT @Anonymous_Prodi: Posible bomba nuclear de baja intensidad en Siria http://t.co/uSjjVI1T3A @Famelica_legion @AquiyAhora_2013 @wikinotici&amp;hellip;&lt;/p&gt;
&lt;p&gt;gu&amp;iacute;a de gobierno electr&amp;oacute;nico local: http://t.co/X6i7f8NHFe  servicios electr&amp;oacute;nicos orientados al ciudadano #eGov&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Felicidades tambi&amp;eacute;n a @jenniferpsayago por ser la ganadora de estos incre&amp;iacute;bles productos #Samsung y @Oakley_VE! http://t.co/ZfZnNtZtCf&lt;/p&gt;
&lt;h1 id="linux #fedora #art re: request to join the design team http://t.co/cuauncffpu"&gt;linux #fedora  #art  Re: Request to join the Design Team http://t.co/CuAuncfFPU&lt;/h1&gt;
&lt;p&gt;Del Gobierno Abierto como Pol&amp;iacute;tica y la Apertura de Datos como Programa P&amp;uacute;blico http://t.co/4fmZAHA8x6  #OpenData #OGov&lt;/p&gt;
&lt;h1 id="linux #fedora #art re: request to join the design team http://t.co/rihsmifvbq"&gt;linux #fedora  #art  Re: Request to join the Design Team http://t.co/RiHSMifvBQ&lt;/h1&gt;
&lt;p&gt;3D printer duplicates paintings down to the last brush stroke http://t.co/suC4T3P2Lr #3DPrinting #art&lt;/p&gt;
&lt;p&gt;Maduro: Mi ausencia en la ONU se debi&amp;oacute; a provocaciones que hab&amp;iacute;an en mi contra http://t.co/Ed1ufBiPCW&lt;/p&gt;
&lt;p&gt;Venezuela: Turismo &amp;ldquo;raspatarjetas&amp;rdquo; mat&amp;oacute; al turismo http://t.co/Rd18XiZYZu @kaosenlarednet mm&lt;/p&gt;
&lt;p&gt;Como las iniciativas de Datos Abiertos pueden mejorar la vida en las Ciudades? http://t.co/j8FJOUd5mk  #OpenData&lt;/p&gt;
&lt;p&gt;RT @csoghoian: Want to read the details of some NSA #LOVEINT surveillance abuses? Now you can, thanks to Senator @ChuckGrassley http://t.co&amp;hellip;&lt;/p&gt;
&lt;p&gt;&amp;iquest;Me est&amp;aacute; diciendo usted q su teor&amp;iacute;a m&amp;aacute;gica es: no tener teor&amp;iacute;a? Creo que eso no es muy anarquista, ni l&amp;oacute;gico tampoco @fascaso @loadupyourgun&lt;/p&gt;
&lt;p&gt;Venezuela: Turismo &amp;ldquo;raspatarjetas&amp;rdquo; mat&amp;oacute; al turismo http://t.co/Rd18XiZYZu @kaosenlarednetmmmmm&lt;/p&gt;
&lt;p&gt;RT @C354R_B3RMUD3Z: Te interesa saber de #Soporte Tecnico en #Gnu/Linux? #inscribete, es totalmente #gratuito informate por 04243165766&lt;/p&gt;
&lt;p&gt;RT @csoghoian: Are you an NSA analyst? Suspect that your husband is cheating on you? Tap his phone, don't get prosecuted. Page 3 of http://&amp;hellip;&lt;/p&gt;
&lt;p&gt;Saturday Night Live lanza canal oficial de YouTube disponible para todo el mundo http://t.co/LDFcwFxsx0&lt;/p&gt;
&lt;p&gt;Microsoft donated $100k to IPython http://t.co/sU2UP07dJ8&lt;/p&gt;
&lt;p&gt;Crece el hurac&amp;aacute;n: exitosos Ni&amp;ntilde;os Cantores de diversas tendencias pol&amp;iacute;ticas nos dieron hoy p&amp;uacute;blicamente su apoyo http://t.co/SGDvxPrczA&lt;/p&gt;
&lt;p&gt;How is everyone? I feel like I've been away for years when it's only been a few days.
```&lt;/p&gt;
&lt;p&gt;Ahora se muestran todos los tweets p&amp;uacute;blicos que contengan la palabra python, esto se logra al  sustituir la &amp;uacute;ltima l&amp;iacute;nea del c&amp;oacute;digo anterior por &lt;code&gt;stream.statuses.filter&lt;/code&gt; pasando el argumento &lt;code&gt;track&lt;/code&gt; con la palabra a buscar:
&lt;code&gt;python
stream.statuses.filter(track='python')&lt;/code&gt;
El resultado se muestra a continuaci&amp;oacute;n:
```python
lunes que viene #PUG  con pizza, cerveza, #python en @Dlabs_co . Yo no me la perder&amp;iacute;a...&lt;/p&gt;
&lt;p&gt;Monty Python - The man who is alternately rude and polite: :#NowPlaying.#ClassicComedies..#ComedyGreats ,,,#Comedy.  http://t.co/IO3juw6nfD&lt;/p&gt;
&lt;p&gt;Like a Kungfu master, a Pythonista knows how to kill with a single finger, and never to actually do it. http://t.co/xx0Sb8SsWV&lt;/p&gt;
&lt;p&gt;RT @jpcolino: Python + Hadoop: Real Python in Pig trunk http://t.co/i4NZXrofvq&lt;/p&gt;
&lt;p&gt;Affiliate Freelancer, Freelancing September 26, 2013 at 04:51PM Python web front end development by vishalchavda... http://t.co/V45nPv3LVI&lt;/p&gt;
&lt;p&gt;Compressed 4h of Python, Win32 dbg API and Intel PIN in 2h. Still people seemed to like it. I guess a lot of people are into BSDM at @brucon&lt;/p&gt;
&lt;p&gt;Go vs. Python: 10% longer, 10 times faster. http://t.co/v640YolHW4 and concurrent, statically compiled, and the libraries are all modern.&lt;/p&gt;
&lt;p&gt;Quantitative Economics | #python #ebook http://t.co/eVjlO9VBoE&lt;/p&gt;
&lt;p&gt;@MikeKellyofEM Hopefully a Monty Python style parrot...&lt;/p&gt;
&lt;p&gt;por um tutorial de como aprender python em um dia&lt;/p&gt;
&lt;p&gt;@tommyd_95 this could descend into a scene from a Monty Python movie ))
```&lt;/p&gt;
&lt;p&gt;De esta forma se puede mejorar la captura de tweets en tiempo real  del timeline de un usuario o de todos los tweets p&amp;uacute;blicos. &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Twitter"></category><category term="Ubuntu"></category></entry><entry><title>Probando la librería twython para twitter</title><link href="https://ecrespo.github.io/probando-la-libreria-twython-para-twitter.html" rel="alternate"></link><published>2013-09-22T10:00:00-05:30</published><updated>2013-09-22T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-09-22:/probando-la-libreria-twython-para-twitter.html</id><summary type="html">&lt;p&gt;Retomando los &lt;a href="https://www.seraph.to/tag/twitter.html"&gt;art&amp;iacute;culos sobre librer&amp;iacute;as de python para acceder a twitter&lt;/a&gt;, en el &amp;uacute;ltimo art&amp;iacute;culo explique como &lt;a href="http://blog.crespo.org.ve/2013/04/descubriendo-trending-topics-de-twitter.html"&gt;descubrir trending topic con la librer&amp;iacute;a python-twitter&lt;/a&gt;, ahora le toca el turno a twython.
La p&amp;aacute;gina del proyecto se encuentra en &lt;a href="https://github.com/ryanmcgrath/twython"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Twython soporta lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Busqueda para:&lt;ul&gt;
&lt;li&gt;Informaci&amp;oacute;n de usuario.&lt;/li&gt;
&lt;li&gt;Lista de …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Retomando los &lt;a href="https://www.seraph.to/tag/twitter.html"&gt;art&amp;iacute;culos sobre librer&amp;iacute;as de python para acceder a twitter&lt;/a&gt;, en el &amp;uacute;ltimo art&amp;iacute;culo explique como &lt;a href="http://blog.crespo.org.ve/2013/04/descubriendo-trending-topics-de-twitter.html"&gt;descubrir trending topic con la librer&amp;iacute;a python-twitter&lt;/a&gt;, ahora le toca el turno a twython.
La p&amp;aacute;gina del proyecto se encuentra en &lt;a href="https://github.com/ryanmcgrath/twython"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Twython soporta lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Busqueda para:&lt;ul&gt;
&lt;li&gt;Informaci&amp;oacute;n de usuario.&lt;/li&gt;
&lt;li&gt;Lista de twitter.&lt;/li&gt;
&lt;li&gt;L&amp;iacute;neas de tiempo (timeline).&lt;/li&gt;
&lt;li&gt;Mensajes directos (DM).&lt;/li&gt;
&lt;li&gt;Cualquier cosa que se encuentre en la documentaci&amp;oacute;n del API de twitter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Actualizaci&amp;oacute;n de imagen:&lt;ul&gt;
&lt;li&gt;Actualizaci&amp;oacute;n de un estatus de un usuario con una imagen.&lt;/li&gt;
&lt;li&gt;Cambiar el avatar de un usuario.&lt;/li&gt;
&lt;li&gt;Cambiar imagen de fondo.&lt;/li&gt;
&lt;li&gt;Cambiar banner.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Soporte de s&amp;oacute;lo lectura para OAuth2&lt;/li&gt;
&lt;li&gt;Soporte para el API de stream de twitter.&lt;/li&gt;
&lt;li&gt;Soporte para Python 3.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para m&amp;aacute;s informaci&amp;oacute;n sobre la documentaci&amp;oacute;n la pueden visitar en el siguiente &lt;a href="https://twython.readthedocs.org/en/latest/index.html"&gt;enlace&lt;/a&gt;.
Para manejar la autenticaci&amp;oacute;n de la aplicaci&amp;oacute;n y del c&amp;oacute;digo pueden revisar el art&amp;iacute;culo de Efrain Valles, &lt;a href="https://effiejayx.wordpress.com/2010/10/25/jugando-con-las-apis-de-twitter-y-python/"&gt;jugando con las APis de twitter y python&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Para instalar twython se usa &lt;code&gt;pip&lt;/code&gt; o &lt;code&gt;easy_install&lt;/code&gt; como root desde la l&amp;iacute;nea de comandos:
&lt;code&gt;root@grievous:~# pip install twython&lt;/code&gt;
Lo primero que se va a hacer es env&amp;iacute;ar un tweet con una imagen y luego s&amp;oacute;lo texto, la implementaci&amp;oacute;n usa un proxy para enviar los tweets, luego se muestra en pantalla el timeline del usuario y por &amp;uacute;ltimo el resultado de la busqueda de la palabra python.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se define el token de la aplicacion"&gt;Se define el token de la aplicacion&lt;/h1&gt;
&lt;p&gt;CONSUMER_KEY = 'xxxxx'&lt;/p&gt;
&lt;p&gt;CONSUMER_SECRET = 'xxxxx'&lt;/p&gt;
&lt;h1 id="se define el acceso al usuario"&gt;Se define el acceso al usuario&lt;/h1&gt;
&lt;p&gt;ACCESS_KEY = 'xxxxx'&lt;/p&gt;
&lt;p&gt;ACCESS_SECRET = 'xxxxx'&lt;/p&gt;
&lt;h1 id="se importa twython y de time a sleep"&gt;Se importa twython y de time a  sleep&lt;/h1&gt;
&lt;p&gt;from twython import Twython&lt;/p&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="se define los argumentos del cliente, la ip y puerto del proxy, el tiempo de intento de la conexion y el nombre de la"&gt;Se define los argumentos del cliente, la ip y puerto del proxy, el tiempo de intento de la conexion y el nombre de la&lt;/h1&gt;
&lt;h1 id="aplicacion cliente"&gt;aplicacion cliente&lt;/h1&gt;
&lt;p&gt;client_args = {'headers': {'User-Agent': 'cmdtweetpy'},'proxies': {'http': '127.0.0.1:xxxx'},'timeout': 300}&lt;/p&gt;
&lt;h1 id="conectar a twitter y enviar un tweet,"&gt;Conectar a twitter y enviar un tweet,&lt;/h1&gt;
&lt;h1 id="si no se logra la conexion se devuelve un mensaje."&gt;Si no se logra la conexion se devuelve un mensaje.&lt;/h1&gt;
&lt;p&gt;try:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;api = Twython(CONSUMER_KEY,CONSUMER_SECRET,ACCESS_KEY,ACCESS_SECRET,client_args = client_args)

photo = open('linux.jpg','rb')

api.update_status_with_media(media=photo, status='May the source be with you=&amp;gt; ')

api.update_status(status="Enviando tweets con twython por medio de un proxy")

print("Tweet enviado con exito")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;except twython.exceptions.TwythonAuthError:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print(u"Error de autenticaci&amp;oacute;n, no se pudo env&amp;iacute;ar el tweet")
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="listar el timeline del usuario"&gt;Listar el timeline del usuario&lt;/h1&gt;
&lt;p&gt;listado = api.get_home_timeline()&lt;/p&gt;
&lt;p&gt;print("Timeline del usuario _seraph1")&lt;/p&gt;
&lt;p&gt;print("-----------------------------")&lt;/p&gt;
&lt;p&gt;for i in listado:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print i[u'text']


sleep(1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print("-----------------------------")&lt;/p&gt;
&lt;h1 id="se realiza una busqueda de la palabra python con tipo de resultado popular"&gt;Se realiza una busqueda de la palabra python con tipo de resultado popular&lt;/h1&gt;
&lt;p&gt;resultados = api.search(q='python',result_type='popular')&lt;/p&gt;
&lt;h1 id="resultados = api.search(q='python')"&gt;resultados = api.search(q='python')&lt;/h1&gt;
&lt;h1 id="_1"&gt;&lt;/h1&gt;
&lt;p&gt;datos= resultados.keys()&lt;/p&gt;
&lt;p&gt;print("Elementos del diccionario: %s" %datos)&lt;/p&gt;
&lt;p&gt;print("Resultado de la busqueda: python")&lt;/p&gt;
&lt;p&gt;print("--------------------------------")&lt;/p&gt;
&lt;p&gt;for i in range(len(resultados[datos[1]])):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    print resultados[datos[1]][i][u'text']


    print "***********************************"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print("--------------------------------")&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la salida de la aplicaci&amp;oacute;n:
```
Tweet enviado con exito
Timeline del usuario _seraph1&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Bo Xilai Gets Life Sentence http://t.co/oWBTgTBJKv
(Starting with "A") Armstrong, Aslan, Atran: Who will be the first to say this has nothing to do with religion?
http://t.co/8IacERuHN7
All About Team Building &amp;amp; #Leadership Exercises at Work! http://t.co/SEI89zGp8P #managers&lt;/p&gt;
&lt;h1 id="linux #netdev re: [xen-devel] [patch net-next] xen-netfront: convert to gro api and advertise this feature http://t.co/3nwdlbv7pt"&gt;linux #netdev  Re: [Xen-devel] [PATCH net-next] xen-netfront: convert to GRO API and advertise this feature http://t.co/3nWDlbv7pT&lt;/h1&gt;
&lt;h1 id="linux #netdev [patch net 3/5] bnx2x: 57840 non-external loopback test fail on 1g http://t.co/ti6azgkcbz"&gt;linux #netdev  [PATCH net 3/5] bnx2x: 57840 non-external loopback test fail on 1G http://t.co/tI6azgkcBZ&lt;/h1&gt;
&lt;p&gt;"Read the collective bargaining agreement, we can do that" RT @BradStone: ESPN reports #Browns now fielding offers for their fans' souls.
&amp;ldquo;@SoftwareHollis: @CloudExpo - can't wait for November.  Looking forward to presenting! http://t.co/b3dc2a08KU #Cloud #SocialMedia #SaaS&amp;rdquo;
.@jeancase - this is really about the democratization of ideas - the smartest people in the room probably don't work for you #2030NOW
Achieving Accountability With Talk of Infidelity - via @toddbnielsen http://t.co/hZktGZZ3EK #leadership
RT @les_leopold: Solution to the Student Debt Crisis: No More Debt
http://t.co/hsvdZj9uJQ
Recuerda cerrar sesi&amp;oacute;n cuando entres a #Clavenet desde cualquier equipo. #TipdeSeguridad&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Elementos del diccionario: [u'search_metadata', u'statuses']
Resultado de la busqueda: python&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;"Well, everday's a workout when you gotta carry around a 20 pound python in your jeans." -Will Forte 'MacGruber' 2010&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Aprende Python desde cero [Gu&amp;iacute;a completa] http://t.co/ZZE2NXEOVG #YoComparto&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;「d3はシングルスレッドなのでHadoopからデータ直接流し込んで大規模処理するわけにはいかないから、サーバ側でPythonとか走らせ、集計やサンプリング済みデータをJSに渡して可視化してる」的なこと言ったら「フリーソフトでは大規模なデータマイニングは難しい」っていう纏め方された&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Please RT! The most significant fact about today's Raspberry Jam for kids at PyconUK is the gender split: 50/50. #python #progress&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;先方、データマイニングについての記事のインタビューなのにPythonとか全く知らない（名前すらしらない）ようで、RやPython、果てはd3.jsとか全部ひっくるめて「フリーソフトを利用して分析している」っていうすごいざっくりしたまとめられ方してて、前後の話に矛盾が出てる&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Obviously Monty Python was never shown on JA TV as the Reggae Charts out there have Silly Walks Record label listed as err..'Silky Walks".&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Air Jordan IV &amp;ldquo;Black Python&amp;rdquo; Customs. WIN or BIN? #CurtienFashion http://t.co/SHu9MKOOB5&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Defenders of Obamacare dismissing "glitches" increasingly sound like the Black Knight from Monty Python http://t.co/SGV8ys8hMF&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Without this Beatle, Monty Python's "Life of Brian" would never have been made http://t.co/85ys7bLo6S #5facts&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Indonesia adalah Tempat ditemukannya ular terpanjang di dunia yaitu, Python Reticulates sepanjang 10 meter di Sulawesi. #7d&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Recruiter: "I came across your resume in a Google search. You seem to have an awesome expertise on python" To Guido. https://t.co/lAbeQVgo1I&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Mozilla Webdev is looking for a Web Engineer - Python, Django, jQuery, OSS - http://t.co/9hg8GFOeSl&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Writing a High Performance Python book: I'm terribly excited to announce that I'm co-authoring an O'Reilly... http://t.co/ZctbSoZGqa&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;If you can write PHP, you can write C/C++/Java/Python/Ruby/whatever.  These language aren't all that different.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;'El sentido de la vida' cumple 30 a&amp;ntilde;os: 12 cosas que probablemente no sab&amp;iacute;as de la peli de los Monty Python http://t.co/hBVKUCIMFJ&lt;/p&gt;
&lt;hr/&gt;
&lt;hr/&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestran dos im&amp;aacute;genes de los tweets enviados:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/probandolalibreriatwythonparatwitter-1.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/probandolalibreriatwythonparatwitter-2.jpg"/&gt; &lt;/p&gt;
&lt;h2 id="_2"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Twitter"></category><category term="Ubuntu"></category></entry><entry><title>Descubriendo Trending Topics de Twitter con twython y python</title><link href="https://ecrespo.github.io/descubriendo-trending-topics-de-twitter-con-twython-y-python.html" rel="alternate"></link><published>2013-09-22T09:00:00-05:30</published><updated>2013-09-22T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-09-22:/descubriendo-trending-topics-de-twitter-con-twython-y-python.html</id><summary type="html">&lt;p&gt;Siguiendo con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tag/twitter.html"&gt;librer&amp;iacute;as de python para twitter&lt;/a&gt;, hace poco se mostr&amp;oacute; en un art&amp;iacute;culo como &lt;a href="https://www.seraph.to/descubriendo-trending-topics-de-twitter-con-python-twitter.html#descubriendo-trending-topics-de-twitter-con-python-twitter"&gt;ver los Trending Topics usando la librer&amp;iacute;a python-twitter&lt;/a&gt; , ahora se mostrar&amp;aacute; como desplegar los topics usando la librer&amp;iacute;a twython.&lt;/p&gt;
&lt;p&gt;El script mostrar&amp;aacute; la conexi&amp;oacute;n a twitter, luego despliega los identificadores de las …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Siguiendo con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tag/twitter.html"&gt;librer&amp;iacute;as de python para twitter&lt;/a&gt;, hace poco se mostr&amp;oacute; en un art&amp;iacute;culo como &lt;a href="https://www.seraph.to/descubriendo-trending-topics-de-twitter-con-python-twitter.html#descubriendo-trending-topics-de-twitter-con-python-twitter"&gt;ver los Trending Topics usando la librer&amp;iacute;a python-twitter&lt;/a&gt; , ahora se mostrar&amp;aacute; como desplegar los topics usando la librer&amp;iacute;a twython.&lt;/p&gt;
&lt;p&gt;El script mostrar&amp;aacute; la conexi&amp;oacute;n a twitter, luego despliega los identificadores de las ciudades que tienen Trending Topics en Venezuela y por &amp;uacute;ltimo se despliega los Trending Topics de Venezuela en este momento.&lt;/p&gt;
&lt;p&gt;Para saber como obtener el valor del token de la aplicaci&amp;oacute;n o de acceso se recomienda revisar el &lt;a href="http://blog.crespo.org.ve/2013/09/probando-la-libreria-twython-para.html"&gt;art&amp;iacute;culo anterior&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se define el token de la aplicacion"&gt;Se define el token de la aplicacion&lt;/h1&gt;
&lt;p&gt;CONSUMER_KEY = 'xxxxx'&lt;/p&gt;
&lt;p&gt;CONSUMER_SECRET = 'xxxxx'&lt;/p&gt;
&lt;h1 id="se define el acceso al usuario"&gt;Se define el acceso al usuario&lt;/h1&gt;
&lt;p&gt;ACCESS_KEY = 'xxxxx'&lt;/p&gt;
&lt;p&gt;ACCESS_SECRET = 'xxxxx'&lt;/p&gt;
&lt;h1 id="se importa twython y de time a sleep"&gt;Se importa twython y de time a  sleep&lt;/h1&gt;
&lt;p&gt;from twython import Twython&lt;/p&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="se define los argumentos del cliente, la ip y puerto del proxy, el tiempo de intento de la conexion y el nombre de la"&gt;Se define los argumentos del cliente, la ip y puerto del proxy, el tiempo de intento de la conexion y el nombre de la&lt;/h1&gt;
&lt;h1 id="aplicacion cliente"&gt;aplicacion cliente&lt;/h1&gt;
&lt;p&gt;client_args = {'headers': {'User-Agent': 'cmdtweetpy'},'proxies': {'http': '127.0.0.1:xxx'},'timeout': 300}&lt;/p&gt;
&lt;h1 id="conectar a twitter y enviar un tweet,"&gt;Conectar a twitter y enviar un tweet,&lt;/h1&gt;
&lt;h1 id="si no se logra la conexion se devuelve un mensaje."&gt;Si no se logra la conexion se devuelve un mensaje.&lt;/h1&gt;
&lt;p&gt;try:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;api = Twython(CONSUMER_KEY,CONSUMER_SECRET,ACCESS_KEY,ACCESS_SECRET,client_args = client_args)

print(u"Autenticaci&amp;oacute;n con exito")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;except twython.exceptions.TwythonAuthError:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print(u"Error de autenticaci&amp;oacute;n")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print ""&lt;/p&gt;
&lt;p&gt;trending = api.get_available_trends()&lt;/p&gt;
&lt;p&gt;print u"Identificaci&amp;oacute;n de woeid de Venezuela"&lt;/p&gt;
&lt;p&gt;print "-------------------------------------"&lt;/p&gt;
&lt;p&gt;c = 0   &lt;/p&gt;
&lt;p&gt;pos = 0&lt;/p&gt;
&lt;p&gt;woeid = 0&lt;/p&gt;
&lt;h1 id="se despliega los woeid de las ciudades de venezuela y de venezuela en si"&gt;Se despliega los woeid de las ciudades de Venezuela y de Venezuela en si&lt;/h1&gt;
&lt;p&gt;for i in trending:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if i[u'countryCode'] == u'VE':


    print i[u'name'],i[u'woeid']


    #Se toma el woeid de Venezuela


    woeid = i[u'woeid']


    pos = c


c += 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print ""&lt;/p&gt;
&lt;h1 id="se despliega los topics de venezuela."&gt;Se despliega los topics de Venezuela.&lt;/h1&gt;
&lt;p&gt;print "Lista de Trending Topics en Venezuela"&lt;/p&gt;
&lt;p&gt;print "-------------------------------------"&lt;/p&gt;
&lt;p&gt;for i in api.get_place_trends(id=woeid):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for k in i[u'trends']:


    print k[u'name']
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el resultado de la ejecuci&amp;oacute;n del script:&lt;/p&gt;
&lt;p&gt;```python
Identificaci&amp;oacute;n de woeid de Venezuela&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Caracas 395269&lt;/p&gt;
&lt;p&gt;Maracaibo 395270&lt;/p&gt;
&lt;p&gt;Maracay 395271&lt;/p&gt;
&lt;p&gt;Valencia 395272&lt;/p&gt;
&lt;p&gt;Barcelona 395273&lt;/p&gt;
&lt;p&gt;Ciudad Guayana 395275&lt;/p&gt;
&lt;p&gt;Turmero 395277&lt;/p&gt;
&lt;p&gt;Barquisimeto 468382&lt;/p&gt;
&lt;p&gt;Matur&amp;iacute;n 468384&lt;/p&gt;
&lt;p&gt;Venezuela 23424982&lt;/p&gt;
&lt;p&gt;Lista de Trending Topics en Venezuela&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="10cosasqueodio"&gt;10CosasQueOdio&lt;/h1&gt;
&lt;h1 id="alfombrarojae"&gt;AlfombraRojaE&lt;/h1&gt;
&lt;h1 id="emmysporwarner"&gt;EmmysPorWarner&lt;/h1&gt;
&lt;h1 id="chavezelgranarquitecto"&gt;ChavezElGranArquitecto&lt;/h1&gt;
&lt;h1 id="obamanervioso"&gt;ObamaNervioso&lt;/h1&gt;
&lt;p&gt;Angela Merkel&lt;/p&gt;
&lt;p&gt;Titanic&lt;/p&gt;
&lt;p&gt;Kenia&lt;/p&gt;
&lt;p&gt;GNB&lt;/p&gt;
&lt;p&gt;Sofia Vergara
```&lt;/p&gt;
&lt;p&gt;Como se ve, se puede obtener el topics de cada ciudad o Pa&amp;iacute;s al obtener el &lt;code&gt;woeid&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Twitter"></category><category term="Ubuntu"></category></entry><entry><title>Manejo de sesión en el ORM sqlalchemy</title><link href="https://ecrespo.github.io/manejo-de-sesion-en-el-orm-sqlalchemy.html" rel="alternate"></link><published>2013-09-18T09:00:00-05:30</published><updated>2013-09-18T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-09-18:/manejo-de-sesion-en-el-orm-sqlalchemy.html</id><summary type="html">&lt;p&gt;Hace tiempo explique como crear unas tablas para la base de datos &lt;code&gt;sqlite3&lt;/code&gt;, insertar datos, removerlos y consultarlos,el art&amp;iacute;culo se llama &lt;a href="http://blog.crespo.org.ve/2012/04/abstraccion-del-motor-de-base-de-datos.html"&gt;Abstracci&amp;oacute;n del motor de Base de Datos con el ORM Sqlalchemy y python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Antes de comenzar a probar lo que se escribe en este art&amp;iacute;culo es necesario que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hace tiempo explique como crear unas tablas para la base de datos &lt;code&gt;sqlite3&lt;/code&gt;, insertar datos, removerlos y consultarlos,el art&amp;iacute;culo se llama &lt;a href="http://blog.crespo.org.ve/2012/04/abstraccion-del-motor-de-base-de-datos.html"&gt;Abstracci&amp;oacute;n del motor de Base de Datos con el ORM Sqlalchemy y python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Antes de comenzar a probar lo que se escribe en este art&amp;iacute;culo es necesario que realicen pruebas con el art&amp;iacute;culo mencionado anteriormente para que tengan la base de datos con sus datos listas para ser utilizadas en este art&amp;iacute;culo.&lt;/p&gt;
&lt;p&gt;Ahora se explica como usar unas tablas con sus datos ya creada, creando una sesi&amp;oacute;n para la base de datos.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en un &lt;a href="mapfish.org/doc/tutorials/sqlalchemy.html"&gt;tutorial en ingl&amp;eacute;s de sqlalchemy&lt;/a&gt; o el &lt;a href="http://www.rmunn.com/sqlalchemy-tutorial/tutorial.html"&gt;tutorial paso a paso de sqlalchemy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo primero que se har&amp;aacute; es crear un archivo &lt;code&gt;model.py&lt;/code&gt; que contendr&amp;aacute; el modelo de la base de datos.
```python&lt;/p&gt;
&lt;h1 id="se importa el modulo datetime"&gt;Se importa el m&amp;oacute;dulo datetime&lt;/h1&gt;
&lt;p&gt;import datetime&lt;/p&gt;
&lt;h1 id="se importa schema y tupes de sqlalchemy"&gt;Se importa schema y tupes de sqlalchemy&lt;/h1&gt;
&lt;p&gt;from sqlalchemy import schema, types&lt;/p&gt;
&lt;h1 id="se instancia la clase metadata."&gt;Se instancia la clase MetaData.&lt;/h1&gt;
&lt;p&gt;metadata = schema.MetaData()&lt;/p&gt;
&lt;h1 id="se crea la funcion now que devuelve la hora actual."&gt;Se crea la funci&amp;oacute;n now que devuelve la hora actual.&lt;/h1&gt;
&lt;p&gt;def now():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return datetime.datetime.now()
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se crea la instancia table con los campos de la tabla grupos"&gt;Se crea la instancia table con los campos de la tabla grupos&lt;/h1&gt;
&lt;p&gt;grupos_table = schema.Table('grupos',metadata,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    schema.Column('id',types.Integer,primary_key=True),

    schema.Column('grupo',types.String(300),nullable=False),

    schema.Column('descripcion',types.String(500),nullable=False),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h1 id="se crea la instancia table con los campos de la tabla contactos"&gt;Se crea la instancia table con los campos de la tabla contactos&lt;/h1&gt;
&lt;p&gt;contactos_table = schema.Table('contactos',metadata,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    schema.Column('id',types.Integer,primary_key=True),

    schema.Column('nombre',types.String(100),nullable=False),

    schema.Column('telefono',types.String(11),nullable=False),

    schema.Column('grupo_id',types.Integer,nullable=False),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h1 id="se crea la clase contactos y grupos que heredan de object y solo tienen pass."&gt;Se crea la clase Contactos y Grupos que heredan de object y s&amp;oacute;lo tienen pass.&lt;/h1&gt;
&lt;p&gt;class Contactos(object): pass&lt;/p&gt;
&lt;p&gt;class Grupos(object): pass&lt;/p&gt;
&lt;h1 id="se mapea la clase contactos con la tabla contactos_table"&gt;Se mapea la Clase Contactos con la tabla contactos_table&lt;/h1&gt;
&lt;p&gt;orm.mapper(Contactos, contactos_table)&lt;/p&gt;
&lt;h1 id="se mapea la clase grupos con la tabla grupos_table"&gt;Se mapea la Clase Grupos con la tabla grupos_table&lt;/h1&gt;
&lt;p&gt;orm.mapper(Grupos,grupos_table)
```&lt;/p&gt;
&lt;p&gt;Ya con este c&amp;oacute;digo se logra el mapeo de las tablas existentes con sus campos.&lt;/p&gt;
&lt;p&gt;Ahora se crea un archivo llamado &lt;code&gt;prueba-db.py&lt;/code&gt; que va a realizar la sesi&amp;oacute;n a la base de datos por medio del m&amp;oacute;dulo &lt;code&gt;model.py&lt;/code&gt;  donde se realizar&amp;aacute; unas consultas, inserciones y remociones de datos.
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import model&lt;/p&gt;
&lt;p&gt;from sqlalchemy import orm&lt;/p&gt;
&lt;p&gt;from sqlalchemy import create_engine&lt;/p&gt;
&lt;h1 id="crear un engine y crear todas las tablas necesarias"&gt;Crear un engine y crear todas las tablas necesarias&lt;/h1&gt;
&lt;p&gt;engine = create_engine('sqlite:///tutorial.db', echo=False)&lt;/p&gt;
&lt;p&gt;model.metadata.bind = engine&lt;/p&gt;
&lt;p&gt;model.metadata.create_all()&lt;/p&gt;
&lt;h1 id="configurar la sesion"&gt;Configurar la sesion&lt;/h1&gt;
&lt;p&gt;sm = orm.sessionmaker(bind=engine, autoflush=True, autocommit=False,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;        expire_on_commit=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;session = orm.scoped_session(sm)&lt;/p&gt;
&lt;h1 id="se realiza una consulta a la tabla grupos"&gt;Se realiza una consulta a la tabla grupos&lt;/h1&gt;
&lt;p&gt;print "Consulta inicial de la tabla contactos"&lt;/p&gt;
&lt;p&gt;consulta = session.query(model.Contactos).all()&lt;/p&gt;
&lt;p&gt;for lista in consulta:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print lista.nombre,lista.telefono
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print "--------------------------------"&lt;/p&gt;
&lt;h1 id="agregar un contacto"&gt;Agregar un contacto&lt;/h1&gt;
&lt;p&gt;contacto = model.Contactos()&lt;/p&gt;
&lt;p&gt;contacto.nombre = u"Luisa Gonzalez"&lt;/p&gt;
&lt;p&gt;contacto.telefono = u"04155555555"&lt;/p&gt;
&lt;p&gt;contacto.grupo_id = 2&lt;/p&gt;
&lt;p&gt;session.add(contacto)&lt;/p&gt;
&lt;p&gt;session.flush()&lt;/p&gt;
&lt;p&gt;session.commit()&lt;/p&gt;
&lt;h1 id="se realiza una consulta a la tabla grupos_1"&gt;Se realiza una consulta a la tabla grupos&lt;/h1&gt;
&lt;p&gt;print "Consulta la tabla contactos con el dato incorporado"&lt;/p&gt;
&lt;p&gt;consulta = session.query(model.Contactos).all()&lt;/p&gt;
&lt;p&gt;for lista in consulta:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print lista.nombre,lista.telefono
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print "--------------------------------"&lt;/p&gt;
&lt;h1 id="borrar un contacto"&gt;Borrar un contacto&lt;/h1&gt;
&lt;p&gt;session.delete(contacto)&lt;/p&gt;
&lt;p&gt;session.flush()&lt;/p&gt;
&lt;p&gt;session.commit()&lt;/p&gt;
&lt;h1 id="se realiza una consulta a la tabla grupos_2"&gt;Se realiza una consulta a la tabla grupos&lt;/h1&gt;
&lt;p&gt;print "Consulta la tabla contactos luego de borrar el dato"&lt;/p&gt;
&lt;p&gt;consulta = session.query(model.Contactos).all()&lt;/p&gt;
&lt;p&gt;for lista in consulta:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print lista.nombre,lista.telefono
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print "--------------------------------"
```&lt;/p&gt;
&lt;p&gt;El resultado de ejecutar el script &lt;code&gt;pruebas-db.py&lt;/code&gt; se muestra a continuaci&amp;oacute;n:
```
Consulta inicial de la tabla contactos&lt;/p&gt;
&lt;p&gt;Ernesto Crespo 04155673029&lt;/p&gt;
&lt;p&gt;Pedro Perez 0295212223&lt;/p&gt;
&lt;p&gt;Jhon Doe 04184488484&lt;/p&gt;
&lt;p&gt;Jane Doe 04184488482&lt;/p&gt;
&lt;p&gt;Pepito de los palotes 04184588484&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Consulta la tabla contactos con el dato incorporado&lt;/p&gt;
&lt;p&gt;Ernesto Crespo 04155673029&lt;/p&gt;
&lt;p&gt;Pedro Perez 0295212223&lt;/p&gt;
&lt;p&gt;Jhon Doe 04184488484&lt;/p&gt;
&lt;p&gt;Jane Doe 04184488482&lt;/p&gt;
&lt;p&gt;Pepito de los palotes 04184588484&lt;/p&gt;
&lt;p&gt;Luisa Gonzalez 04155555555&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Consulta la tabla contactos luego de borrar el dato&lt;/p&gt;
&lt;p&gt;Ernesto Crespo 04155673029&lt;/p&gt;
&lt;p&gt;Pedro Perez 0295212223&lt;/p&gt;
&lt;p&gt;Jhon Doe 04184488484&lt;/p&gt;
&lt;p&gt;Jane Doe 04184488482&lt;/p&gt;
&lt;p&gt;Pepito de los palotes 04184588484&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;De esta forma se puede realizar consultas, remociones e inserciones por medio de &lt;code&gt;sqlalchemy&lt;/code&gt; con sesiones.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Python"></category></entry><entry><title>Bajar vídeos de youtube desde Python con Pafy.</title><link href="https://ecrespo.github.io/bajar-videos-de-youtube-desde-python-con-pafy.html" rel="alternate"></link><published>2013-09-01T09:00:00-05:30</published><updated>2013-09-01T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-09-01:/bajar-videos-de-youtube-desde-python-con-pafy.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Pafy&lt;/code&gt; permite realizar busquedas de v&amp;iacute;deos de youtube y descargarlos.&lt;/p&gt;
&lt;p&gt;El sitio de &lt;code&gt;Pafy&lt;/code&gt; se encuentra en &lt;a href="http://np1.github.io/pafy/"&gt;github&lt;/a&gt;, en ese sitio se puede bajar la librer&amp;iacute;a en formato zip, tar.gz o visitar el repositorio git del proyecto.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;Pafy&lt;/code&gt; desde Linux se puede hacer con &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Pafy&lt;/code&gt; permite realizar busquedas de v&amp;iacute;deos de youtube y descargarlos.&lt;/p&gt;
&lt;p&gt;El sitio de &lt;code&gt;Pafy&lt;/code&gt; se encuentra en &lt;a href="http://np1.github.io/pafy/"&gt;github&lt;/a&gt;, en ese sitio se puede bajar la librer&amp;iacute;a en formato zip, tar.gz o visitar el repositorio git del proyecto.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;Pafy&lt;/code&gt; desde Linux se puede hacer con &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;pip install Pafy&lt;/code&gt;
Se ejecuta python:
```python
ernesto@grievous:~$ python&lt;/p&gt;
&lt;p&gt;Python 2.7.3 (default, Jan  2 2013, 13:56:14) &lt;/p&gt;
&lt;p&gt;[GCC 4.7.2] on linux2&lt;/p&gt;
&lt;p&gt;Type "help", "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se importa Pafy:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from pafy import Pafy
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se crea la variable donde se encuentra el url del v&amp;iacute;deo:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;url="http://www.youtube.com/watch?v=YOZjaqHioro"
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se crea la instancia del v&amp;iacute;deo:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;video = Pafy(url)
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se obtiene el t&amp;iacute;tulo del v&amp;iacute;deo:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;video.title&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;u'Jimmy Fallon, Robin Thicke &amp;amp; The Roots Sing "Blurred Lines" (w/ Classroom Instruments)'
```
El rating y longitud del v&amp;iacute;deo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;video.rating&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;4.9188302785&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;video.length&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;214&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se muestra los metadatos del v&amp;iacute;deo:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;print video&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Title: Jimmy Fallon, Robin Thicke &amp;amp; The Roots Sing "Blurred Lines" (w/ Classroom Instruments)&lt;/p&gt;
&lt;p&gt;Author: latenight&lt;/p&gt;
&lt;p&gt;ID: YOZjaqHioro&lt;/p&gt;
&lt;p&gt;Duration: 00:03:34&lt;/p&gt;
&lt;p&gt;Rating: 4.9188302785&lt;/p&gt;
&lt;p&gt;Views: 10459846&lt;/p&gt;
&lt;p&gt;Thumbnail: https://i1.ytimg.com/vi/YOZjaqHioro/default.jpg&lt;/p&gt;
&lt;p&gt;Keywords: Jimmy Fallon, Late Night With Jimmy Fallon, Late Night, NBC, NBC TV, Television, Funny, Talk Show, comedic, humor, stand-up, snl, Fallon Stand-up, Fallon monologue, latenight, jokes, funny video, interview, variety, comedy sketches, talent, celebrities, music, musical performance, The Roots, video, clip, highlight, talking, youtube, jimmy fallon &amp;amp; robin thicke, robin thicke, blurred lines, classroom instruments, late night music room
```&lt;/p&gt;
&lt;p&gt;Se muestra el t&amp;iacute;tulo del v&amp;iacute;deo, el autor, el ID del v&amp;iacute;deo, la duraci&amp;oacute;n, el rating, la cantidad de veces que se ha visto, entre otra informaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Se muestra todos los formatos del v&amp;iacute;deo y su resoluci&amp;oacute;n:
```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;streams = video.streams&lt;/p&gt;
&lt;p&gt;for s in streams: print s.resolution, s.extension&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;p&gt;1080x1920 webm&lt;/p&gt;
&lt;p&gt;1080x1920 mp4&lt;/p&gt;
&lt;p&gt;720x1280 webm&lt;/p&gt;
&lt;p&gt;720x1280 mp4&lt;/p&gt;
&lt;p&gt;480x854 webm&lt;/p&gt;
&lt;p&gt;480x854 flv&lt;/p&gt;
&lt;p&gt;360x640 webm&lt;/p&gt;
&lt;p&gt;360x640 flv&lt;/p&gt;
&lt;p&gt;360x640 mp4&lt;/p&gt;
&lt;p&gt;240x400 flv&lt;/p&gt;
&lt;p&gt;320x240 3gp&lt;/p&gt;
&lt;p&gt;144x176 3gp&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se muestran todos los formatos, su resoluci&amp;oacute;n y el url para descargarlo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for s in streams: print s.resolution, s.extension, s.url&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;p&gt;1080x1920 webm http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;1080x1920 mp4 http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;720x1280 webm http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;720x1280 mp4 http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;480x854 webm http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;480x854 flv http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;360x640 webm http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;360x640 flv http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;360x640 mp4 http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;240x400 flv http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;320x240 3gp http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;144x176 3gp http://r14---sn-ab5e6nll.c.youtube.com...&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Obtener la mejor resoluci&amp;oacute;n y su extensi&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;best = video.getbest()&lt;/p&gt;
&lt;p&gt;best.resolution, best.extension&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;('1080x1920', 'webm')&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Mejor resoluci&amp;oacute;n para un formato en espec&amp;iacute;fico:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;best = video.getbest(preftype="mp4")&lt;/p&gt;
&lt;p&gt;best.resolution, best.extension&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;('1080x1920', 'mp4')&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Obtener el url para descargar el v&amp;iacute;deo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;best.url&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;'http://r14---sn-ab5e6nll.c.youtube.com/videoplayback...'&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se descarga el v&amp;iacute;deo con un nombre y en una ruta predefinida:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;myfilename = "/home/ernesto/videos/" + "JimmtFallon" + "." + best.extension&lt;/p&gt;
&lt;p&gt;best.download(progress=False, filepath=myfilename)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;-Downloading 'Jimmy Fallon, Robin Thicke &amp;amp; The Roots Sing "Blurred Lines" (w/ Classroom Instruments).webm' [157,236,345 Bytes]&lt;/p&gt;
&lt;p&gt;Done
```&lt;/p&gt;
&lt;p&gt;Se sale de python:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;exit()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se verifica que el archivo bajo:&lt;/p&gt;
&lt;p&gt;```
ernesto@grievous:~/videos$ ls -l&lt;/p&gt;
&lt;p&gt;total 153556&lt;/p&gt;
&lt;p&gt;-rw-r--r-- 1 ernesto ernesto 157236345 sep  1 11:03 JimmtFallon.webm&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora puede ejecutar su reproductor de v&amp;iacute;deo preferido para ver el v&amp;iacute;deo.  &lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la captura de pantalla del escritorio al momento de reproducir el v&amp;iacute;deo con VLC:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/bajarvideosdeyoutubedesdepythonconpafy-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Si desean ver el v&amp;iacute;deo a continuaci&amp;oacute;n les dejo el enlace de youtube para verlo:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/YOZjaqHioro"&gt;https://youtu.be/YOZjaqHioro&lt;/a&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category></entry><entry><title>Día Debian en Barquisimeto</title><link href="https://ecrespo.github.io/dia-debian-en-barquisimeto.html" rel="alternate"></link><published>2013-08-16T09:00:00-05:30</published><updated>2013-08-16T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-08-16:/dia-debian-en-barquisimeto.html</id><summary type="html">&lt;p&gt;Ma&amp;ntilde;ana s&amp;aacute;bado se realizar&amp;aacute; el evento D&amp;iacute;a Debian en El INCES de la carrera 19 con calle 23 desde las 9am en Barquisimeto.&lt;/p&gt;
&lt;p&gt;La charla que llevar&amp;eacute; se llama colaborar en Debian, la pueden descargar en slideshare.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/ecrespo/colaborar-debian"&gt;Colaborar debian&lt;/a&gt; from &lt;a href="https://www.slideshare.net/ecrespo"&gt;Ernesto Crespo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ma&amp;ntilde;ana s&amp;aacute;bado se realizar&amp;aacute; el evento D&amp;iacute;a Debian en El INCES de la carrera 19 con calle 23 desde las 9am en Barquisimeto.&lt;/p&gt;
&lt;p&gt;La charla que llevar&amp;eacute; se llama colaborar en Debian, la pueden descargar en slideshare.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/ecrespo/colaborar-debian"&gt;Colaborar debian&lt;/a&gt; from &lt;a href="https://www.slideshare.net/ecrespo"&gt;Ernesto Crespo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Ubuntu"></category></entry><entry><title>Nodos más influyentes en un grafo con networkx. Parte 4.</title><link href="https://ecrespo.github.io/nodos-mas-influyentes-en-un-grafo-con-networkx-parte-4.html" rel="alternate"></link><published>2013-08-11T09:00:00-05:30</published><updated>2013-08-11T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-08-11:/nodos-mas-influyentes-en-un-grafo-con-networkx-parte-4.html</id><summary type="html">&lt;p&gt;En la &lt;a href="https://www.seraph.to/creacion-de-grafos-con-networkx-parte-3.html#creacion-de-grafos-con-networkx-parte-3"&gt;parte 3&lt;/a&gt; de creaci&amp;oacute;n de grafos se muestra los tipos de grafos que existen, en la &lt;a href="http://blog.crespo.org.ve/2013/02/creacion-de-grafos-con-networkx-parte-2.html"&gt;parte 2&lt;/a&gt; se muestra como obtener los datos de un archivo que contiene las relaciones de los personajes de la novela Los miserables y en la &lt;a href="http://blog.crespo.org.ve/2012/11/creacion-de-grafos-con-networkx-parte-1.html"&gt;parte 1&lt;/a&gt; se muestra la creaci&amp;oacute;n …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En la &lt;a href="https://www.seraph.to/creacion-de-grafos-con-networkx-parte-3.html#creacion-de-grafos-con-networkx-parte-3"&gt;parte 3&lt;/a&gt; de creaci&amp;oacute;n de grafos se muestra los tipos de grafos que existen, en la &lt;a href="http://blog.crespo.org.ve/2013/02/creacion-de-grafos-con-networkx-parte-2.html"&gt;parte 2&lt;/a&gt; se muestra como obtener los datos de un archivo que contiene las relaciones de los personajes de la novela Los miserables y en la &lt;a href="http://blog.crespo.org.ve/2012/11/creacion-de-grafos-con-networkx-parte-1.html"&gt;parte 1&lt;/a&gt; se muestra la creaci&amp;oacute;n de grafos.&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se toma el archivo de la parte 2 para obtener los nodos del grafo m&amp;aacute;s influyentes, los que m&amp;aacute;s se enlazan con otros personajes de la novela. &lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo en Ingl&amp;eacute;s &lt;a href="https://glowingpython.blogspot.com/2013/02/betweenness-centrality.html"&gt;Betweenness Centrality&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Se usar&amp;aacute; la librer&amp;iacute;a networkx para tomar la informaci&amp;oacute;n del archivo &lt;a href="https://gephi.org/datasets/lesmiserables.gml.zip"&gt;lesmiserables.gml&lt;/a&gt; , para obtener los nodos m&amp;aacute;s influyentes se usar&amp;aacute; la centralidad por intermediaci&amp;oacute;n. &lt;/p&gt;
&lt;p&gt;La centralidad por intermediaci&amp;oacute;n se centra en el n&amp;uacute;mero de visitas a trav&amp;eacute;s de los caminos m&amp;aacute;s cortos.&lt;/p&gt;
&lt;p&gt;La centralidad por intermediaci&amp;oacute;n se define como: &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/nodosmasinfluyentesenungrafoconnetworkx4-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Donde s(s,t) es el n&amp;uacute;mero total de rutas m&amp;aacute;s cortas desde el nodo s al nodo t, y sv(s,t) es el n&amp;uacute;mero de los camions que pasan a trav&amp;eacute;s de v. &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo python que permite calcular los nodos m&amp;aacute;s influyentes por medio de la centralidad por intermediaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;import networkx as nx&lt;/p&gt;
&lt;p&gt;from pylab import show, hist, figure&lt;/p&gt;
&lt;h1 id="leer los datos del archivo lesmiserables.gml"&gt;Leer los datos del archivo lesmiserables.gml&lt;/h1&gt;
&lt;p&gt;G = nx.read_gml('lesmiserables.gml',relabel=True)&lt;/p&gt;
&lt;h1 id="funcion que devuelve los nodos mas importantes"&gt;Funcion que devuelve los nodos mas importantes&lt;/h1&gt;
&lt;p&gt;def most_important(G):&lt;/p&gt;
&lt;p&gt;""" retorna una copia de G con los nodos mas importantes(mas influencia, conexion entre nodos) """ &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se calcula el ranking segun la centralidad

ranking = nx.betweenness_centrality(G).items(

#Se imprime los nodos mas importantes

print ranking

r = [x[1] for x in ranking]

m = sum(r)/len(r) # centralidad

t = m*3 # se mantiene los nodos  con promedio de aparicion de 3 veces


Gt = G.copy()


#Se remueve los nodos que no aparecen


for k, v in ranking:


    if v &amp;lt; t:


        Gt.remove_node(k)


#Se retorna los nodos mas importantes


return Gt
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se recibe los nodos mas importantes"&gt;Se recibe los nodos mas importantes&lt;/h1&gt;
&lt;p&gt;Gt = most_important(G) # trimming&lt;/p&gt;
&lt;h1 id="se crea el layout"&gt;se crea el layout&lt;/h1&gt;
&lt;p&gt;pos = nx.spring_layout(G)&lt;/p&gt;
&lt;h1 id="se dibuja los nodos y sus bordes"&gt;Se dibuja los nodos y sus bordes&lt;/h1&gt;
&lt;p&gt;nx.draw_networkx_nodes(G,pos,node_color='b',alpha=0.2,node_size=8)&lt;/p&gt;
&lt;p&gt;nx.draw_networkx_edges(G,pos,alpha=0.1)&lt;/p&gt;
&lt;h1 id="se dibuja los nodos mas importantes con un estilo diferente"&gt;Se dibuja los nodos mas importantes con un estilo diferente&lt;/h1&gt;
&lt;p&gt;nx.draw_networkx_nodes(Gt,pos,node_color='r',alpha=0.4,node_size=254)&lt;/p&gt;
&lt;h1 id="se define las etiquetas"&gt;se define las etiquetas&lt;/h1&gt;
&lt;p&gt;nx.draw_networkx_labels(Gt,pos,font_size=12,font_color='b')&lt;/p&gt;
&lt;h1 id="se muestra la grafica"&gt;Se muestra la grafica&lt;/h1&gt;
&lt;p&gt;show()
```&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica donde se ve los personajes m&amp;aacute;s influyentes en la novela Los miserables se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/nodosmasinfluyentesenungrafoconnetworkx4-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Esto es &amp;uacute;til a la hora de manejar la influencia en redes sociales como twitter.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Networkx"></category><category term="Python"></category></entry><entry><title>Mejorar la privacidad en celulares y tabletas con Android</title><link href="https://ecrespo.github.io/mejorar-la-privacidad-en-celulares-y-tabletas-con-android.html" rel="alternate"></link><published>2013-08-04T09:00:00-05:30</published><updated>2013-08-04T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-08-04:/mejorar-la-privacidad-en-celulares-y-tabletas-con-android.html</id><summary type="html">&lt;p&gt;Las famosas filtraciones donde se sabe que revisan en tiempo real todo el tr&amp;aacute;fico en Internet, donde Microsoft, Apple, Facebook, skype, Google entre otros colaboran para permitir el acceso de datos/informaci&amp;oacute;n de sus usuarios a la NSA.&lt;/p&gt;
&lt;p&gt;&amp;iquest;Qu&amp;eacute; nos queda a los usuarios por hacer?&lt;/p&gt;
&lt;p&gt;El sitio de noticias …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Las famosas filtraciones donde se sabe que revisan en tiempo real todo el tr&amp;aacute;fico en Internet, donde Microsoft, Apple, Facebook, skype, Google entre otros colaboran para permitir el acceso de datos/informaci&amp;oacute;n de sus usuarios a la NSA.&lt;/p&gt;
&lt;p&gt;&amp;iquest;Qu&amp;eacute; nos queda a los usuarios por hacer?&lt;/p&gt;
&lt;p&gt;El sitio de noticias Rusia Today(&lt;a href="https://actualidad.rt.com/actualidad/view/101785-trucos-evitar-espionaje-internet-nsa"&gt;10 trucos para burlar el espionaje de la NSA en Internet&lt;/a&gt;) da unos tips de como mejorar la privacidad, en este caso tocar&amp;eacute; el tema s&amp;oacute;lo de dispositivos m&amp;oacute;viles (celulares y tabletas) con el Sistema Operativo Android.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n los tips de que hacer:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cambiar Android por alguna versi&amp;oacute;n de CyanogenMod.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=org.thoughtcrime.redphone"&gt;RedPhone&lt;/a&gt;: Provee cifrado de llamadas punto a punto.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.fsck.k9"&gt;K-9 mail&lt;/a&gt;: Sustituto al cliente de correo por defecto de Android (gmail). Se puede integrar con apg para cifrar/descifrar los correos. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=org.torproject.android"&gt;Orbot&lt;/a&gt;: Es un proxy tor que permite navegaci&amp;oacute;n an&amp;oacute;nima en Internet en los dispositivos con Sistema Operativo Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=org.thialfihar.android.apg&amp;amp;hl=es"&gt;APG&lt;/a&gt;: Permite administrar llaves pgp/gpg para cifrar o descifrar archivos y correos. Se puede integrar con k-9 mail.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=info.guardianproject.otr.app.im"&gt;Gibberbot&lt;/a&gt;: Permite conectar mensajeria como jabber y google talk de forma segura con OTR, as&amp;iacute; que desde equipos de escritorio se puede usar pidgin con OTR para una comunicaci&amp;oacute;n cifrada de los mensajes punto a punto.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=jp.naver.line.android"&gt;Line&lt;/a&gt;: Sustituto a whatsapp que maneja el tr&amp;aacute;fico cifrado.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=org.thoughtcrime.securesms"&gt;TextSecure&lt;/a&gt;: Permite env&amp;iacute;ar SMS/MMS de forma cifrada y cifrar dichos SMS/MMS en el dispositivo en caso de robo del equipo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.csipsimple"&gt;CSipSimple&lt;/a&gt;: Permite realizar llamadas de VoIP, es una alternativa a skype.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.woodkick.pgpsmslite"&gt;PGP SMS Lite&lt;/a&gt;: Permite cifrado asim&amp;eacute;trico por medio de llaves pgp/gpg apoyado en una infraestructura de clave p&amp;uacute;blica.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://f-droid.org/"&gt;F-Droid&lt;/a&gt;: Alternativa libre a la tienda de aplicaciones de Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.prey"&gt;Prey Anti Robos&lt;/a&gt;: Es una aplicaci&amp;oacute;n anti robos que permite rastrear y ubicar tu celular o tableta android o laptop. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En un futuro a mediano plazo estar&amp;eacute; migrando este blog a wordpress con un dominio propio y comunicaci&amp;oacute;n por medio de https en vez de http siguiendo el ejemplo de &lt;a href="http://actualidad.rt.com/actualidad/view/102011-nsa-wikipedia-nsa-espionaje"&gt;wikipedia&lt;/a&gt; y como lo menciona &lt;a href="http://www.elladodelmal.com/2013/08/podria-http-s-acabar-con-el-esiponaje.html"&gt;este&lt;/a&gt; art&amp;iacute;culo en Internet.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="General"></category><category term="Linux"></category></entry><entry><title>Graficar la tangente de una curva con python, numpy y pylab.</title><link href="https://ecrespo.github.io/graficar-la-tangente-de-una-curva-con-python-numpy-y-pylab.html" rel="alternate"></link><published>2013-07-26T09:00:00-05:30</published><updated>2013-07-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-07-26:/graficar-la-tangente-de-una-curva-con-python-numpy-y-pylab.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo  "&lt;a href="https://glowingpython.blogspot.com/2013/02/visualizing-tangent.html"&gt;Visualizing the tangent&lt;/a&gt;" . &lt;/p&gt;
&lt;p&gt;La tangente de una curva es una l&amp;iacute;nea recta que toca a la curva en un punto. Est&amp;aacute; l&amp;iacute;nea recta da la pendiente de la curva. Si la curva representa una serie de tiempo se puede decir la relaci&amp;oacute;n de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo  "&lt;a href="https://glowingpython.blogspot.com/2013/02/visualizing-tangent.html"&gt;Visualizing the tangent&lt;/a&gt;" . &lt;/p&gt;
&lt;p&gt;La tangente de una curva es una l&amp;iacute;nea recta que toca a la curva en un punto. Est&amp;aacute; l&amp;iacute;nea recta da la pendiente de la curva. Si la curva representa una serie de tiempo se puede decir la relaci&amp;oacute;n de cambio de valores con s&amp;oacute;lo mirar la tangente.&lt;/p&gt;
&lt;p&gt;Suponga que la curva se da como la gr&amp;aacute;fica de la funci&amp;oacute;n y = f(x), se tiene que la pendiente de la curva en el punto (a,f(a)) es igual a su derivada en un&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/graficarlatangentedeunacurvaconpythonnumpyypylab-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;y la ecuaci&amp;oacute;n de la recta tangente puede enunciarse&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/graficarlatangentedeunacurvaconpythonnumpyypylab-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo de la tangente de &lt;code&gt;x*sen(x^3)&lt;/code&gt; en el punto 1.6:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="de numpy se importa sin, linspace y power"&gt;De numpy se importa sin, linspace y power&lt;/h1&gt;
&lt;p&gt;from numpy import sin,linspace,power&lt;/p&gt;
&lt;h1 id="de pylab se importa plot y show"&gt;De pylab se importa plot y show&lt;/h1&gt;
&lt;p&gt;from pylab import plot,show&lt;/p&gt;
&lt;h1 id="se define la funcion de la curva"&gt;Se define la funcion de la curva&lt;/h1&gt;
&lt;p&gt;def f(x): # sample function
 return x*sin(power(x,3))&lt;/p&gt;
&lt;h1 id="se evalua la funcion en el rango de -2 a 4 con 150 intervalos"&gt;Se evalua la funcion en el rango de -2 a 4 con 150 intervalos&lt;/h1&gt;
&lt;p&gt;x = linspace(-2,4,150)&lt;/p&gt;
&lt;h1 id="se le pasa a la funcion los valores definidos en x."&gt;Se le pasa a la funcion los valores definidos en x.&lt;/h1&gt;
&lt;p&gt;y = f(x)&lt;/p&gt;
&lt;h1 id="se le pasa el punto a calcular la tangente de la curva."&gt;Se le pasa el punto a calcular la tangente de la curva.&lt;/h1&gt;
&lt;p&gt;a = 1.6&lt;/p&gt;
&lt;h1 id="se le pasa el diferencial con un valor de 0.1"&gt;Se le pasa el diferencial con un valor de 0.1&lt;/h1&gt;
&lt;p&gt;h = 0.1&lt;/p&gt;
&lt;h1 id="se calcula la derivada."&gt;Se calcula la derivada.&lt;/h1&gt;
&lt;p&gt;fprime = (f(a+h)-f(a))/h # derivative&lt;/p&gt;
&lt;h1 id="se calcula la tangente"&gt;Se calcula la tangente&lt;/h1&gt;
&lt;p&gt;tan = f(a)+fprime*(x-a)  # tangent&lt;/p&gt;
&lt;h1 id="se grafica la funcion y la tangente."&gt;Se grafica la funcion y la tangente.&lt;/h1&gt;
&lt;p&gt;plot(x,y,'b',a,f(a),'om',x,tan,'--r')&lt;/p&gt;
&lt;h1 id="se muestra la grafica."&gt;Se muestra la grafica.&lt;/h1&gt;
&lt;p&gt;show()
```
A continuaci&amp;oacute;n se muestra las gr&amp;aacute;ficas que se generan:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/graficarlatangentedeunacurvaconpythonnumpyypylab-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;En el art&amp;iacute;culo original se muestra otro ejemplo.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="matplotlib"></category><category term="numpy"></category><category term="Python"></category></entry><entry><title>Utilizando el API de Stream de Twitter con Python y tweetstream. Parte 1.</title><link href="https://ecrespo.github.io/utilizando-el-api-de-stream-de-twitter-con-python-y-tweetstream-parte-1.html" rel="alternate"></link><published>2013-06-04T09:00:00-05:30</published><updated>2013-06-04T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-06-04:/utilizando-el-api-de-stream-de-twitter-con-python-y-tweetstream-parte-1.html</id><summary type="html">&lt;p&gt;Siguiendo con los art&amp;iacute;culos de &lt;a href="https://www.seraph.to/tag/twitter.html"&gt;Twitter con Python&lt;/a&gt;, ahora mostrar&amp;eacute; como usar el &lt;code&gt;API Stream&lt;/code&gt; de Twitter.&lt;/p&gt;
&lt;p&gt;En este caso como la librer&amp;iacute;a twitter no maneja stream es necesario instalar otra librer&amp;iacute;a llamada &lt;a href="https://pypi.org/project/tweetstream/"&gt;tweetstream&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n del API Stream de twiitter se encuentra en el &lt;a href="https://developer.twitter.com/docs/api/1"&gt;enlace&lt;/a&gt;, y  en espec&amp;iacute;fico para …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Siguiendo con los art&amp;iacute;culos de &lt;a href="https://www.seraph.to/tag/twitter.html"&gt;Twitter con Python&lt;/a&gt;, ahora mostrar&amp;eacute; como usar el &lt;code&gt;API Stream&lt;/code&gt; de Twitter.&lt;/p&gt;
&lt;p&gt;En este caso como la librer&amp;iacute;a twitter no maneja stream es necesario instalar otra librer&amp;iacute;a llamada &lt;a href="https://pypi.org/project/tweetstream/"&gt;tweetstream&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n del API Stream de twiitter se encuentra en el &lt;a href="https://developer.twitter.com/docs/api/1"&gt;enlace&lt;/a&gt;, y  en espec&amp;iacute;fico para obtener informaci&amp;oacute;n  objeto tweets lo pueden revisar en el &lt;a href="https://developer.twitter.com/docs/platform-objects/tweets"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ah&amp;iacute; encontrar&amp;aacute;n la estructura json de este objeto. El campo que se uso en el ejemplo son 'text' y 'user', text contiene el texto del tweet y user contiene otro objeto que contiene informaci&amp;oacute;n del usuario, para este caso se usar&amp;aacute; el campo 'screen_name' que maneja el nombre del usuario twitter que env&amp;iacute;a el tweet.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo de la aplicaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="import tweetstram, sleep y exit"&gt;Import tweetstram, sleep y exit&lt;/h1&gt;
&lt;p&gt;import tweetstream&lt;/p&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;p&gt;from sys import exit&lt;/p&gt;
&lt;h1 id="se crea la funcion streamtweet donde se le pasa el usuario y la clave de una cuenta twitter."&gt;Se crea la funcion StreamTweet donde se le pasa el usuario y la clave de una cuenta twitter.&lt;/h1&gt;
&lt;p&gt;def StreamTweet(usuario,clave):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se captura la excepcion de error de conexion e interrupcion por teclado

try:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#Se intenta conectar a la funcion de stream de tweetstream con el usuario y la clave&lt;/p&gt;
&lt;p&gt;#Asignando a stream el resultado&lt;/p&gt;
&lt;p&gt;with tweetstream.TweetStream(usuario,clave) as stream:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; #Se genera un ciclo de cada tweet

 for tweet in stream:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#Se captura la excepcion de KeyError e Interrupcion de teclado, de esa forma&lt;/p&gt;
&lt;p&gt;#Se devuelve un mensaje de error y se termina el programa respectivamente.&lt;/p&gt;
&lt;p&gt;try:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  #Se crea un texto con el numero de tweet y la velocidad de cada tweet.

  adicional = "|| tweet %d || velocidad %.5f tweets/seg" %(stream.count,stream.rate)

  #Se crea un texto final donde se le pasa el nombre del usuario que envia el tweet,

  #el texto del tweet y el texto anterior

  texto = tweet['user']['screen_name'] + "||" + tweet['text'] + adicional

  #Se imprime dicho texto en pantalla

  print texto
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;except KeyError:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  print "No hay tweet"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;except KeyboardInterrupt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  exit()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#Se espera 5 segundos para continuar al siguiente ciclo del lazo&lt;/p&gt;
&lt;p&gt;sleep(5)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;except tweetstream.ConnectionError, e:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print "Desconectado de twitter. Razon: ", e.reason&lt;/p&gt;
&lt;p&gt;exit()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;except KeyboardInterrupt:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;exit()&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se llama a la funcion pasando el usuario y la clave.

StreamTweet(usuario,clave)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la captura de pantalla del programa en funcionamiento:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/utilizandoelapidestreamdetwitterconpythonytweetstream1-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se muestra en cada tweet, el usuario que env&amp;iacute;a el tweet, el tweet en si, el n&amp;uacute;mero de tweet enviado y la velocidad con que se env&amp;iacute;a el tweet.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="API Stream"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Twitter"></category></entry><entry><title>Máquinas virtuales con kvm y qemu</title><link href="https://ecrespo.github.io/maquinas-virtuales-con-kvm-y-qemu.html" rel="alternate"></link><published>2013-06-02T09:00:00-05:30</published><updated>2013-06-02T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-06-02:/maquinas-virtuales-con-kvm-y-qemu.html</id><summary type="html">&lt;p&gt;Hace a&amp;ntilde;os usaba &lt;code&gt;qemu&lt;/code&gt; para probar los paquetes que empaquetaba para Debian, luego me pase a virtualbox.
&amp;Uacute;ltimamente me ha parecido que consume m&amp;aacute;s recursos virtualbox, as&amp;iacute; que por recomendaci&amp;oacute;n retom&amp;eacute; &lt;code&gt;qemu&lt;/code&gt; con &lt;code&gt;kvm&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Los paquetes necesario son:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kvm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;virt-manager&lt;/code&gt;: Para manejar las m&amp;aacute;quians virtuales de forma gr&amp;aacute;fica&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libvirt-bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;qemu-kvm …&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Hace a&amp;ntilde;os usaba &lt;code&gt;qemu&lt;/code&gt; para probar los paquetes que empaquetaba para Debian, luego me pase a virtualbox.
&amp;Uacute;ltimamente me ha parecido que consume m&amp;aacute;s recursos virtualbox, as&amp;iacute; que por recomendaci&amp;oacute;n retom&amp;eacute; &lt;code&gt;qemu&lt;/code&gt; con &lt;code&gt;kvm&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Los paquetes necesario son:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kvm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;virt-manager&lt;/code&gt;: Para manejar las m&amp;aacute;quians virtuales de forma gr&amp;aacute;fica&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libvirt-bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;qemu-kvm&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Instalaci&amp;oacute;n:
&lt;code&gt;apt-get install kvm virt-manager libvirt-bin qemu-kvm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Prueba inicial:
Se iniciar&amp;aacute; una m&amp;aacute;quina virtual que arranca un live-cd, por ejemplo el live-cd de Linuxmint 15 con 720M de RAM:
&lt;code&gt;kvm -m 720 -cdrom  linuxmint-15-cinnamon-dvd-32bit.iso&lt;/code&gt;
En la siguiente figura se muestra la captura de pantalla de la m&amp;aacute;quina virtual:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/maquinasvirtualesconkvmyqemu-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Crear un disco duro para la m&amp;aacute;quina virtual:
Se crea el disco duro virtual en un archivo, en este caso se crear&amp;aacute; un disco duro virtual de 10 GB para instalar Debian en dicho disco duro virtual:
&lt;code&gt;qemu-img create debian.img 10G
Formatting 'debian.img', fmt=raw size=10737418240&lt;/code&gt;
Ahora se tiene: 
&lt;code&gt;ernesto@debian:~/imagenes$ ls -l
total 1808024
-rw-r--r-- 1 ernesto ernesto 10737418240 jun  2 16:22 debian.img
-rw-r--r-- 1 root    root    10737418240 jun  2 16:00 debianserver.img
-rw-r--r-- 1 ernesto ernesto 10737418240 jun  2 15:30 linuxmint.img&lt;/code&gt;
Instalaci&amp;oacute;n de  Debian en la m&amp;aacute;quina virtual:&lt;/p&gt;
&lt;p&gt;Ahora se instalar&amp;aacute; en el disco duro virtual llamado debian.img la distribuci&amp;oacute;n Debian para i386 con 720MB de RAM, se le define el disco duro a usar y el iso a utilizar:
&lt;code&gt;qemu -m 720 -hda debian.img  -cdrom ../Isos/debian-7.0.0-i386-lxde-CD-1.iso&lt;/code&gt;
En la siguiente captura de pantalla se muestra el inicio del cd de Debian:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/maquinasvirtualesconkvmyqemu-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luego de terminar el proceso de instalaci&amp;oacute;n se inicia la m&amp;aacute;quina virtual de la siguiente forma:
&lt;code&gt;qemu -m 720 -hda debian.img&lt;/code&gt;
La siguiente figura muestra el escritorio de LXDE de Debian con la consola abierta mostrando la IP que tiene la m&amp;aacute;quina virtual:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/maquinasvirtualesconkvmyqemu-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Como se puede ver la IP que tiene la m&amp;aacute;quina virtual es una IP privada, la &amp;uacute;nica forma de acceder a la m&amp;aacute;quina virtual es directamente desde &lt;code&gt;qemu&lt;/code&gt;, no se podr&amp;aacute; abrir una sesi&amp;oacute;n remota por que desde el equipo que aloja la m&amp;aacute;quina virtual no se tiene una ruta de como llegar a la IP de la m&amp;aacute;quina virtual.&lt;/p&gt;
&lt;p&gt;Para ello necesitaremos darle unas opciones de redes a &lt;code&gt;qemu&lt;/code&gt;, estas son &lt;code&gt;nic&lt;/code&gt; y &lt;code&gt;tap&lt;/code&gt;, la &amp;uacute;ltima crea una interfaz &lt;code&gt;tap&lt;/code&gt; en el equipo que aloja la m&amp;aacute;quina virtual con la ruta de una red.
&lt;code&gt;qemu -m 720 -hda debian.img   -net nic -net tap&lt;/code&gt;
Adicional a esto es necesario instalar &lt;code&gt;dnsmasq&lt;/code&gt; y configurar una regla de &lt;code&gt;iptables&lt;/code&gt; en la configuraci&amp;oacute;n de &lt;code&gt;kvm&lt;/code&gt; para poder navegar desde la m&amp;aacute;quina virtual.&lt;/p&gt;
&lt;p&gt;Instalar dnsmasq:
&lt;code&gt;apt-get install dnsmasq&lt;/code&gt;
Agregar la siguiente configuraci&amp;oacute;n en el archivo &lt;code&gt;/etc/dnsmasq.conf&lt;/code&gt;:
```&lt;/p&gt;
&lt;h1 id="archivo de resolv.conf con la configuracion de dns de la red local."&gt;Archivo de resolv.conf con la configuraci&amp;oacute;n de dns de la red local.&lt;/h1&gt;
&lt;p&gt;resolv-file=/etc/resolv-orig.conf&lt;/p&gt;
&lt;h1 id="interface a la cual acepta peticiones, en este caso tap0 para la maquina virtual (dns y dhcp) y wlan0 (solo dns)."&gt;Interface a la cual acepta peticiones, en este caso tap0 para la m&amp;aacute;quina virtual (dns y dhcp) y wlan0 (s&amp;oacute;lo dns).&lt;/h1&gt;
&lt;p&gt;interface=tap0,wlan0&lt;/p&gt;
&lt;h1 id="no se activa el dhcp a la interfaz wlan0"&gt;No se activa el dhcp a la interfaz wlan0&lt;/h1&gt;
&lt;p&gt;no-dhcp-interface=wlan0&lt;/p&gt;
&lt;h1 id="se define el rango de red de dhcp y el tiempo de liberacion de las ips."&gt;Se define el rango de red de dhcp y el tiempo de liberaci&amp;oacute;n de las IPs.&lt;/h1&gt;
&lt;p&gt;dhcp-range=172.20.0.10,172.20.0.15,12h
&lt;code&gt;Se agrega la siguiente regla de iptables al archivo `/etc/kvm/kvm-ifup`:&lt;/code&gt;
vim /etc/kvm/kvm-ifup
exec iptables  -t nat -A POSTROUTING -s 172.20.0.0/16 -o wlan0 -j MASQUERADE
```
Est&amp;aacute; regla aplica nat a la red 172.20.0.0/255.255.0.0.&lt;/p&gt;
&lt;p&gt;Ya con esta configuraci&amp;oacute;n ya se puede navegar y acceder remotamente a la m&amp;aacute;quina virtual.&lt;/p&gt;
&lt;p&gt;Para terminar las configuraciones se agrega una regla de iptables que borre las tablas de nat en el archivo /etc/kvm/kvm-ifdown:
```
vim /etc/kvm/kvm-ifdown&lt;/p&gt;
&lt;p&gt;exec iptables -t nat -F
&lt;code&gt;La tabla de enrutamiento del equipo donde se levanta la m&amp;aacute;quina virtual es la siguiente:&lt;/code&gt;
root@debian:~# route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         185.29.52.131   0.0.0.0         UG    0      0        0 wlan0
172.20.0.0      0.0.0.0         255.255.0.0     U     0      0        0 tap0
185.29.52.128   0.0.0.0         255.255.255.128 U     0      0        0 wlan0
```&lt;/p&gt;
&lt;p&gt;En la siguiente captura de pantalla se muestra la p&amp;aacute;gina de este blog desde la m&amp;aacute;quina virtual y la consola donde se muestra la IP que est&amp;aacute; usando la m&amp;aacute;quina virtual, con esa IP se puede acceder desde el equipo que aloja la m&amp;aacute;quina virtual.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/maquinasvirtualesconkvmyqemu-4.png"/&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="General"></category><category term="KVM"></category><category term="qemu"></category></entry><entry><title>Descubriendo trending topics de twitter con python-twitter.</title><link href="https://ecrespo.github.io/descubriendo-trending-topics-de-twitter-con-python-twitter.html" rel="alternate"></link><published>2013-04-27T09:00:00-05:30</published><updated>2013-04-27T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-04-27:/descubriendo-trending-topics-de-twitter-con-python-twitter.html</id><summary type="html">&lt;p&gt;Recuerdo la presentaci&amp;oacute;n de Efrain en el PyDay en M&amp;eacute;rida, donde hablo de la librer&amp;iacute;a tweepy (&lt;a href="https://effiejayx.wordpress.com/2010/10/25/jugando-con-las-apis-de-twitter-y-python/"&gt;ac&amp;aacute; art&amp;iacute;culo de Efrain sobre el tema&lt;/a&gt;) que permite acceder a una cuenta de twitter, actualizar estado entre otras cosas.&lt;/p&gt;
&lt;p&gt;Con el auge de twitter como red social en el pa&amp;iacute;s me dispuse a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recuerdo la presentaci&amp;oacute;n de Efrain en el PyDay en M&amp;eacute;rida, donde hablo de la librer&amp;iacute;a tweepy (&lt;a href="https://effiejayx.wordpress.com/2010/10/25/jugando-con-las-apis-de-twitter-y-python/"&gt;ac&amp;aacute; art&amp;iacute;culo de Efrain sobre el tema&lt;/a&gt;) que permite acceder a una cuenta de twitter, actualizar estado entre otras cosas.&lt;/p&gt;
&lt;p&gt;Con el auge de twitter como red social en el pa&amp;iacute;s me dispuse a probar otra librer&amp;iacute;a de python para twitter llamada &lt;a href="https://github.com/bear/python-twitter"&gt;python-twitter&lt;/a&gt;, la documentaci&amp;oacute;n de la librer&amp;iacute;a se puede acceder desde &lt;a href="https://github.com/bear/python-twitter/wiki"&gt;ac&amp;aacute;&lt;/a&gt;. Existe una serie de ejemplos de como usar la librer&amp;iacute;a python-twitter en &lt;a href="https://github.com/ideoforms/python-twitter-examples/"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Instalar la librer&amp;iacute;a de twitter:
Se usar&amp;aacute; el comando &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt; como &lt;code&gt;root&lt;/code&gt;:
&lt;code&gt;easy_install twitter&lt;/code&gt;
&amp;oacute;
&lt;code&gt;pip install twitter&lt;/code&gt;
El c&amp;oacute;digo que se muestra a continuaci&amp;oacute;n lista el ID de los Pa&amp;iacute;ses, el n&amp;uacute;mero ID de cada Pa&amp;iacute;s. El c&amp;oacute;digo original lo pueden ver en el siguiente &lt;a href="https://github.com/ideoforms/python-twitter-examples/blob/master/twitter-trends-available.py"&gt;enlace&lt;/a&gt;:
Se ejecuta python:
```python
(python2.7)ernesto@jewel:~/prueba$ python&lt;/p&gt;
&lt;p&gt;Python 2.7.3 (default, Jan  2 2013, 16:53:07) &lt;/p&gt;
&lt;p&gt;[GCC 4.7.2] on linux2&lt;/p&gt;
&lt;p&gt;Type "help", "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Se importa el m&amp;oacute;dulo `python-twitter`:&lt;/code&gt;python
import twitter
&lt;code&gt;Se instancia la clase Twitter pasando el dominio (el url de la api de twitter) y la versi&amp;oacute;n del api que en este caso es la versi&amp;oacute;n 1:&lt;/code&gt;python
twitter_api = twitter.Twitter(domain="api.twitter.com", api_version='1')
&lt;code&gt;Se captura los trends disponibles:&lt;/code&gt;python
trends1 = twitter_api.trends.available()
```
Se lista los ID de los Pa&amp;iacute;ses:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for location in trends1:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;...     name = location["name"].encode('ascii', 'replace')&lt;/p&gt;
&lt;p&gt;...     print "(%d) %s" % (location["woeid"], name)&lt;/p&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;p&gt;(1) Worldwide&lt;/p&gt;
&lt;p&gt;(2972) Winnipeg&lt;/p&gt;
&lt;p&gt;(3369) Ottawa&lt;/p&gt;
&lt;p&gt;(3444) Quebec&lt;/p&gt;
&lt;p&gt;(3534) Montreal&lt;/p&gt;
&lt;p&gt;(4118) Toronto&lt;/p&gt;
&lt;p&gt;(8676) Edmonton&lt;/p&gt;
&lt;p&gt;(8775) Calgary&lt;/p&gt;
&lt;p&gt;(9807) Vancouver&lt;/p&gt;
&lt;p&gt;(12723) Birmingham&lt;/p&gt;
&lt;p&gt;(13911) Brighton&lt;/p&gt;
&lt;p&gt;(13963) Bristol&lt;/p&gt;
&lt;p&gt;(15127) Cardiff&lt;/p&gt;
&lt;p&gt;(19344) Edinburgh&lt;/p&gt;
&lt;p&gt;(21125) Glasgow&lt;/p&gt;
&lt;p&gt;(26042) Leeds&lt;/p&gt;
&lt;p&gt;(26062) Leicester&lt;/p&gt;
&lt;p&gt;(26734) Liverpool&lt;/p&gt;
&lt;p&gt;(28218) Manchester&lt;/p&gt;
&lt;p&gt;(30079) Newcastle&lt;/p&gt;
&lt;p&gt;(30720) Nottingham&lt;/p&gt;
&lt;p&gt;(32452) Portsmouth&lt;/p&gt;
&lt;p&gt;(34503) Sheffield&lt;/p&gt;
&lt;p&gt;(44418) London&lt;/p&gt;
&lt;p&gt;(44544) Belfast&lt;/p&gt;
&lt;p&gt;(76456) Santo Domingo&lt;/p&gt;
&lt;p&gt;(116545) Mexico City&lt;/p&gt;
&lt;p&gt;(124162) Guadalajara&lt;/p&gt;
&lt;p&gt;(131068) Le?n&lt;/p&gt;
&lt;p&gt;(134047) Monterrey&lt;/p&gt;
&lt;p&gt;(137612) Puebla&lt;/p&gt;
&lt;p&gt;(149361) Tijuana&lt;/p&gt;
&lt;p&gt;(332471) Mendoza&lt;/p&gt;
&lt;p&gt;(349859) Santiago&lt;/p&gt;
&lt;p&gt;(349860) Concepcion&lt;/p&gt;
&lt;p&gt;(349861) Valparaiso&lt;/p&gt;
&lt;p&gt;(368148) Bogot?&lt;/p&gt;
&lt;p&gt;(395269) Caracas&lt;/p&gt;
&lt;p&gt;(395270) Maracaibo&lt;/p&gt;
&lt;p&gt;(395272) Valencia&lt;/p&gt;
&lt;p&gt;(418440) Lima&lt;/p&gt;
&lt;p&gt;(455819) Bras?lia&lt;/p&gt;
&lt;p&gt;(455820) Bel?m&lt;/p&gt;
&lt;p&gt;(455821) Belo Horizonte&lt;/p&gt;
&lt;p&gt;(455822) Curitiba&lt;/p&gt;
&lt;p&gt;(455823) Porto Alegre&lt;/p&gt;
&lt;p&gt;(455824) Recife&lt;/p&gt;
&lt;p&gt;(455825) Rio de Janeiro&lt;/p&gt;
&lt;p&gt;(455826) Salvador&lt;/p&gt;
&lt;p&gt;(455827) S?o Paulo&lt;/p&gt;
&lt;p&gt;(455828) Campinas&lt;/p&gt;
&lt;p&gt;(455830) Fortaleza&lt;/p&gt;
&lt;p&gt;(455831) Goi?nia&lt;/p&gt;
&lt;p&gt;(455833) Manaus&lt;/p&gt;
&lt;p&gt;(455834) S?o Lu?s&lt;/p&gt;
&lt;p&gt;(455867) Guarulhos&lt;/p&gt;
&lt;p&gt;(466861) C?rdoba&lt;/p&gt;
&lt;p&gt;(466862) Rosario&lt;/p&gt;
&lt;p&gt;(468382) Barquisimeto&lt;/p&gt;
&lt;p&gt;(468739) Buenos Aires&lt;/p&gt;
&lt;p&gt;(560743) Dublin&lt;/p&gt;
&lt;p&gt;(580778) Bordeaux&lt;/p&gt;
&lt;p&gt;(608105) Lille&lt;/p&gt;
&lt;p&gt;(609125) Lyon&lt;/p&gt;
&lt;p&gt;(610264) Marseille&lt;/p&gt;
&lt;p&gt;(612977) Montpellier&lt;/p&gt;
&lt;p&gt;(613858) Nantes&lt;/p&gt;
&lt;p&gt;(615702) Paris&lt;/p&gt;
&lt;p&gt;(619163) Rennes&lt;/p&gt;
&lt;p&gt;(627791) Strasbourg&lt;/p&gt;
&lt;p&gt;(628886) Toulouse&lt;/p&gt;
&lt;p&gt;(638242) Berlin&lt;/p&gt;
&lt;p&gt;(641142) Bremen&lt;/p&gt;
&lt;p&gt;(645458) Dortmund&lt;/p&gt;
&lt;p&gt;(645686) Dresden&lt;/p&gt;
&lt;p&gt;(646099) Dusseldorf&lt;/p&gt;
&lt;p&gt;(648820) Essen&lt;/p&gt;
&lt;p&gt;(650272) Frankfurt&lt;/p&gt;
&lt;p&gt;(656958) Hamburg&lt;/p&gt;
&lt;p&gt;(667931) Cologne&lt;/p&gt;
&lt;p&gt;(671072) Leipzig&lt;/p&gt;
&lt;p&gt;(676757) Munich&lt;/p&gt;
&lt;p&gt;(698064) Stuttgart&lt;/p&gt;
&lt;p&gt;(718345) Milan&lt;/p&gt;
&lt;p&gt;(719258) Naples&lt;/p&gt;
&lt;p&gt;(721943) Rome&lt;/p&gt;
&lt;p&gt;(725003) Turin&lt;/p&gt;
&lt;p&gt;(726874) Den Haag&lt;/p&gt;
&lt;p&gt;(727232) Amsterdam&lt;/p&gt;
&lt;p&gt;(733075) Rotterdam&lt;/p&gt;
&lt;p&gt;(753692) Barcelona&lt;/p&gt;
&lt;p&gt;(766273) Madrid&lt;/p&gt;
&lt;p&gt;(766356) Malaga&lt;/p&gt;
&lt;p&gt;(774508) Seville&lt;/p&gt;
&lt;p&gt;(776688) Valencia&lt;/p&gt;
&lt;p&gt;(779063) Zaragoza&lt;/p&gt;
&lt;p&gt;(906057) Stockholm&lt;/p&gt;
&lt;p&gt;(1030077) Bekasi&lt;/p&gt;
&lt;p&gt;(1044316) Surabaya&lt;/p&gt;
&lt;p&gt;(1047180) Bandung&lt;/p&gt;
&lt;p&gt;(1047378) Jakarta&lt;/p&gt;
&lt;p&gt;(1062617) Singapore&lt;/p&gt;
&lt;p&gt;(1098081) Perth&lt;/p&gt;
&lt;p&gt;(1099805) Adelaide&lt;/p&gt;
&lt;p&gt;(1100661) Brisbane&lt;/p&gt;
&lt;p&gt;(1100968) Canberra&lt;/p&gt;
&lt;p&gt;(1101597) Darwin&lt;/p&gt;
&lt;p&gt;(1103816) Melbourne&lt;/p&gt;
&lt;p&gt;(1105779) Sydney&lt;/p&gt;
&lt;p&gt;(1110809) Kitakyushu&lt;/p&gt;
&lt;p&gt;(1117034) Chiba&lt;/p&gt;
&lt;p&gt;(1117099) Fukuoka&lt;/p&gt;
&lt;p&gt;(1117227) Hiroshima&lt;/p&gt;
&lt;p&gt;(1117502) Kawasaki&lt;/p&gt;
&lt;p&gt;(1117545) Kobe&lt;/p&gt;
&lt;p&gt;(1117817) Nagoya&lt;/p&gt;
&lt;p&gt;(1118108) Sapporo&lt;/p&gt;
&lt;p&gt;(1118129) Sendai&lt;/p&gt;
&lt;p&gt;(1118285) Takamatsu&lt;/p&gt;
&lt;p&gt;(1118370) Tokyo&lt;/p&gt;
&lt;p&gt;(1118550) Yokohama&lt;/p&gt;
&lt;p&gt;(1132447) Busan&lt;/p&gt;
&lt;p&gt;(1132466) Daegu&lt;/p&gt;
&lt;p&gt;(1132481) Gwangju&lt;/p&gt;
&lt;p&gt;(1132496) Incheon&lt;/p&gt;
&lt;p&gt;(1132567) Suwon&lt;/p&gt;
&lt;p&gt;(1132578) Ulsan&lt;/p&gt;
&lt;p&gt;(1132599) Seoul&lt;/p&gt;
&lt;p&gt;(1154726) Klang&lt;/p&gt;
&lt;p&gt;(1154781) Kuala Lumpur&lt;/p&gt;
&lt;p&gt;(1167715) Calocan&lt;/p&gt;
&lt;p&gt;(1199136) Davao City&lt;/p&gt;
&lt;p&gt;(1199477) Manila&lt;/p&gt;
&lt;p&gt;(1199682) Quezon City&lt;/p&gt;
&lt;p&gt;(1398823) Lagos&lt;/p&gt;
&lt;p&gt;(1582504) Johannesburg&lt;/p&gt;
&lt;p&gt;(2077746) Samara&lt;/p&gt;
&lt;p&gt;(2112237) Yekaterinburg&lt;/p&gt;
&lt;p&gt;(2122265) Moscow&lt;/p&gt;
&lt;p&gt;(2122471) Nizhny Novgorod&lt;/p&gt;
&lt;p&gt;(2122541) Novosibirsk&lt;/p&gt;
&lt;p&gt;(2122641) Omsk&lt;/p&gt;
&lt;p&gt;(2123260) Saint Petersburg&lt;/p&gt;
&lt;p&gt;(2282863) Nagpur&lt;/p&gt;
&lt;p&gt;(2295377) Lucknow&lt;/p&gt;
&lt;p&gt;(2295378) Kanpur&lt;/p&gt;
&lt;p&gt;(2295386) Kolkata&lt;/p&gt;
&lt;p&gt;(2295388) Amritsar&lt;/p&gt;
&lt;p&gt;(2295401) Jaipur&lt;/p&gt;
&lt;p&gt;(2295402) Ahmedabad&lt;/p&gt;
&lt;p&gt;(2295408) Indore&lt;/p&gt;
&lt;p&gt;(2295411) Mumbai&lt;/p&gt;
&lt;p&gt;(2295412) Pune&lt;/p&gt;
&lt;p&gt;(2295414) Hyderabad&lt;/p&gt;
&lt;p&gt;(2295420) Bangalore&lt;/p&gt;
&lt;p&gt;(2295424) Chennai&lt;/p&gt;
&lt;p&gt;(2343678) Adana&lt;/p&gt;
&lt;p&gt;(2343732) Ankara&lt;/p&gt;
&lt;p&gt;(2343843) Bursa&lt;/p&gt;
&lt;p&gt;(2344116) Istanbul&lt;/p&gt;
&lt;p&gt;(2344117) Izmir&lt;/p&gt;
&lt;p&gt;(2345896) Okinawa&lt;/p&gt;
&lt;p&gt;(2345975) Daejeon&lt;/p&gt;
&lt;p&gt;(2357024) Atlanta&lt;/p&gt;
&lt;p&gt;(2357536) Austin&lt;/p&gt;
&lt;p&gt;(2358820) Baltimore&lt;/p&gt;
&lt;p&gt;(2359991) Baton Rouge&lt;/p&gt;
&lt;p&gt;(2364559) Birmingham&lt;/p&gt;
&lt;p&gt;(2367105) Boston&lt;/p&gt;
&lt;p&gt;(2378426) Charlotte&lt;/p&gt;
&lt;p&gt;(2379574) Chicago&lt;/p&gt;
&lt;p&gt;(2380358) Cincinnati&lt;/p&gt;
&lt;p&gt;(2381475) Cleveland&lt;/p&gt;
&lt;p&gt;(2383660) Columbus&lt;/p&gt;
&lt;p&gt;(2388929) Dallas-Ft. Worth&lt;/p&gt;
&lt;p&gt;(2391279) Denver&lt;/p&gt;
&lt;p&gt;(2391585) Detroit&lt;/p&gt;
&lt;p&gt;(2414469) Greensboro&lt;/p&gt;
&lt;p&gt;(2418046) Harrisburg&lt;/p&gt;
&lt;p&gt;(2424766) Houston&lt;/p&gt;
&lt;p&gt;(2427032) Indianapolis&lt;/p&gt;
&lt;p&gt;(2428184) Jackson&lt;/p&gt;
&lt;p&gt;(2436704) Las Vegas&lt;/p&gt;
&lt;p&gt;(2442047) Los Angeles&lt;/p&gt;
&lt;p&gt;(2449323) Memphis&lt;/p&gt;
&lt;p&gt;(2450022) Miami&lt;/p&gt;
&lt;p&gt;(2451822) Milwaukee&lt;/p&gt;
&lt;p&gt;(2452078) Minneapolis&lt;/p&gt;
&lt;p&gt;(2457170) Nashville&lt;/p&gt;
&lt;p&gt;(2458410) New Haven&lt;/p&gt;
&lt;p&gt;(2458833) New Orleans&lt;/p&gt;
&lt;p&gt;(2459115) New York&lt;/p&gt;
&lt;p&gt;(2460389) Norfolk&lt;/p&gt;
&lt;p&gt;(2466256) Orlando&lt;/p&gt;
&lt;p&gt;(2471217) Philadelphia&lt;/p&gt;
&lt;p&gt;(2471390) Phoenix&lt;/p&gt;
&lt;p&gt;(2473224) Pittsburgh&lt;/p&gt;
&lt;p&gt;(2475687) Portland&lt;/p&gt;
&lt;p&gt;(2477058) Providence&lt;/p&gt;
&lt;p&gt;(2478307) Raleigh&lt;/p&gt;
&lt;p&gt;(2480894) Richmond&lt;/p&gt;
&lt;p&gt;(2486340) Sacramento&lt;/p&gt;
&lt;p&gt;(2486982) St. Louis&lt;/p&gt;
&lt;p&gt;(2487610) Salt Lake City&lt;/p&gt;
&lt;p&gt;(2487796) San Antonio&lt;/p&gt;
&lt;p&gt;(2487889) San Diego&lt;/p&gt;
&lt;p&gt;(2487956) San Francisco&lt;/p&gt;
&lt;p&gt;(2490383) Seattle&lt;/p&gt;
&lt;p&gt;(2503713) Tallahassee&lt;/p&gt;
&lt;p&gt;(2503863) Tampa&lt;/p&gt;
&lt;p&gt;(2514815) Washington&lt;/p&gt;
&lt;p&gt;(15015370) Osaka&lt;/p&gt;
&lt;p&gt;(15015372) Kyoto&lt;/p&gt;
&lt;p&gt;(20070458) Delhi&lt;/p&gt;
&lt;p&gt;(23424738) United Arab Emirates&lt;/p&gt;
&lt;p&gt;(23424747) Argentina&lt;/p&gt;
&lt;p&gt;(23424748) Australia&lt;/p&gt;
&lt;p&gt;(23424768) Brazil&lt;/p&gt;
&lt;p&gt;(23424775) Canada&lt;/p&gt;
&lt;p&gt;(23424782) Chile&lt;/p&gt;
&lt;p&gt;(23424787) Colombia&lt;/p&gt;
&lt;p&gt;(23424800) Dominican Republic&lt;/p&gt;
&lt;p&gt;(23424801) Ecuador&lt;/p&gt;
&lt;p&gt;(23424803) Ireland&lt;/p&gt;
&lt;p&gt;(23424819) France&lt;/p&gt;
&lt;p&gt;(23424829) Germany&lt;/p&gt;
&lt;p&gt;(23424834) Guatemala&lt;/p&gt;
&lt;p&gt;(23424846) Indonesia&lt;/p&gt;
&lt;p&gt;(23424848) India&lt;/p&gt;
&lt;p&gt;(23424853) Italy&lt;/p&gt;
&lt;p&gt;(23424856) Japan&lt;/p&gt;
&lt;p&gt;(23424868) Korea&lt;/p&gt;
&lt;p&gt;(23424900) Mexico&lt;/p&gt;
&lt;p&gt;(23424901) Malaysia&lt;/p&gt;
&lt;p&gt;(23424908) Nigeria&lt;/p&gt;
&lt;p&gt;(23424909) Netherlands&lt;/p&gt;
&lt;p&gt;(23424916) New Zealand&lt;/p&gt;
&lt;p&gt;(23424919) Peru&lt;/p&gt;
&lt;p&gt;(23424922) Pakistan&lt;/p&gt;
&lt;p&gt;(23424934) Philippines&lt;/p&gt;
&lt;p&gt;(23424936) Russia&lt;/p&gt;
&lt;p&gt;(23424942) South Africa&lt;/p&gt;
&lt;p&gt;(23424948) Singapore&lt;/p&gt;
&lt;p&gt;(23424950) Spain&lt;/p&gt;
&lt;p&gt;(23424954) Sweden&lt;/p&gt;
&lt;p&gt;(23424969) Turkey&lt;/p&gt;
&lt;p&gt;(23424975) United Kingdom&lt;/p&gt;
&lt;p&gt;(23424977) United States&lt;/p&gt;
&lt;p&gt;(23424982) Venezuela&lt;/p&gt;
&lt;p&gt;(56013632) Petaling&lt;/p&gt;
&lt;p&gt;(56013645) Hulu Langat
```&lt;/p&gt;
&lt;p&gt;EL ID 1 es para listar los trending topics  mundial, para Venezuela se tiene el ID 23424982, se resalta en negrita los IDs de las ciudades de Venezuela. &lt;/p&gt;
&lt;p&gt;Ahora se va a desplegar la lista de trending topic global(1): 
Se define el valor 1 a WOE_ID para capturar el trending topic global, se instancia la clase Twitter con el dominio api.twitter.com y se define la versi&amp;oacute;n del api como la versi&amp;oacute;n 1. A continuaci&amp;oacute;n se captura los trending topic, se muestra los 10 t&amp;oacute;picos del mundo.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;WORLD_WOE_ID = 1&lt;/p&gt;
&lt;p&gt;twitter_api = twitter.Twitter(domain="api.twitter.com", api_version='1')&lt;/p&gt;
&lt;p&gt;world_trends = twitter_api.trends._(WORLD_WOE_ID)&lt;/p&gt;
&lt;p&gt;trends = world_trends()&lt;/p&gt;
&lt;p&gt;for i in range(10):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;...     print trends[0]['trends'][i][u'name']&lt;/p&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;h1 id="ilovecheese"&gt;ILoveCheese&lt;/h1&gt;
&lt;h1 id="caprilesvenezuelayelmundoestacontigo"&gt;CaprilesVenezuelayELMUNDOest&amp;aacute;contigo&lt;/h1&gt;
&lt;h1 id="mimamadice"&gt;MiMam&amp;aacute;Dice&lt;/h1&gt;
&lt;h1 id="vamosmaravilla"&gt;VamosMaravilla&lt;/h1&gt;
&lt;h1 id="ajuiciocaprilesasesino"&gt;AJuicioCaprilesAsesino&lt;/h1&gt;
&lt;p&gt;Sara McMann&lt;/p&gt;
&lt;p&gt;Rene de Calle 13&lt;/p&gt;
&lt;p&gt;Sheila Gaff&lt;/p&gt;
&lt;p&gt;RDMA&lt;/p&gt;
&lt;p&gt;Rene&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Al cambiar el valor de la variable WORLD_WOE_ID a la de Venezuela (23424982) se tiene:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;WORLD_WOE_ID = 23424982&lt;/p&gt;
&lt;p&gt;twitter_api = twitter.Twitter(domain="api.twitter.com", api_version='1')&lt;/p&gt;
&lt;p&gt;world_trends = twitter_api.trends._(WORLD_WOE_ID)&lt;/p&gt;
&lt;p&gt;trends = world_trends()&lt;/p&gt;
&lt;p&gt;for i in range(10):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;...     print trends[0]['trends'][i][u'name']&lt;/p&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;h1 id="caprilesvenezuelayelmundoestacontigo_1"&gt;CaprilesVenezuelayELMUNDOest&amp;aacute;contigo&lt;/h1&gt;
&lt;h1 id="ajuiciocaprilesasesino_1"&gt;AJuicioCaprilesAsesino&lt;/h1&gt;
&lt;h1 id="mimamadice_1"&gt;MiMam&amp;aacute;Dice&lt;/h1&gt;
&lt;h1 id="mearrechocuando"&gt;MeArrechoCuando&lt;/h1&gt;
&lt;h1 id="quevivan"&gt;QueVivan&lt;/h1&gt;
&lt;p&gt;Feliz D&amp;iacute;a del Dise&amp;ntilde;ador Gr&amp;aacute;fico&lt;/p&gt;
&lt;p&gt;Estuvimos 5&lt;/p&gt;
&lt;p&gt;Dayana Mendoza&lt;/p&gt;
&lt;p&gt;Omar Borkan Al Gala&lt;/p&gt;
&lt;p&gt;Antonio Rivero&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Para el caso de Valencia (395272):&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;WORLD_WOE_ID = 395272&lt;/p&gt;
&lt;p&gt;twitter_api = twitter.Twitter(domain="api.twitter.com", api_version='1')&lt;/p&gt;
&lt;p&gt;world_trends = twitter_api.trends._(WORLD_WOE_ID)&lt;/p&gt;
&lt;p&gt;trends = world_trends()&lt;/p&gt;
&lt;p&gt;for i in range(10):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;...     print trends[0]['trends'][i][u'name']&lt;/p&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;h1 id="caprilesvenezuelayelmundoestacontigo_2"&gt;CaprilesVenezuelayELMUNDOest&amp;aacute;contigo&lt;/h1&gt;
&lt;h1 id="ajuiciocaprilesasesino_2"&gt;AJuicioCaprilesAsesino&lt;/h1&gt;
&lt;h1 id="mearrechocuando_1"&gt;MeArrechoCuando&lt;/h1&gt;
&lt;h1 id="mimamadice_2"&gt;MiMam&amp;aacute;Dice&lt;/h1&gt;
&lt;p&gt;Omar Borkan Al Gala&lt;/p&gt;
&lt;h1 id="tropa"&gt;TROPA&lt;/h1&gt;
&lt;p&gt;Feliz D&amp;iacute;a del Dise&amp;ntilde;ador Gr&amp;aacute;fico&lt;/p&gt;
&lt;p&gt;Estuvimos 5&lt;/p&gt;
&lt;p&gt;Dayana Mendoza&lt;/p&gt;
&lt;p&gt;Antonio Rivero&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;De esta forma se puede listar los 10 t&amp;oacute;picos  seg&amp;uacute;n el Pa&amp;iacute;s o ciudad utilizando Python. &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Python"></category><category term="Twitter"></category></entry><entry><title>Descubrir equipos en una Red Local con Python (ipcalc y scapy).</title><link href="https://ecrespo.github.io/descubrir-equipos-en-una-red-local-con-python-ipcalc-y-scapy.html" rel="alternate"></link><published>2013-04-22T09:00:00-05:30</published><updated>2013-04-22T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-04-22:/descubrir-equipos-en-una-red-local-con-python-ipcalc-y-scapy.html</id><summary type="html">&lt;p&gt;Si se tiene una red con asignaci&amp;oacute;n abierta de IPs, la administraci&amp;oacute;n se hace algo complicada, as&amp;iacute; que se necesita tener un registro de la asignaci&amp;oacute;n de IPs a los equipos de la red local.&lt;/p&gt;
&lt;p&gt;Una amiga administradora hizo un registro con una herramienta propietaria en Windows. Record&amp;eacute; la librer&amp;iacute;a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Si se tiene una red con asignaci&amp;oacute;n abierta de IPs, la administraci&amp;oacute;n se hace algo complicada, as&amp;iacute; que se necesita tener un registro de la asignaci&amp;oacute;n de IPs a los equipos de la red local.&lt;/p&gt;
&lt;p&gt;Una amiga administradora hizo un registro con una herramienta propietaria en Windows. Record&amp;eacute; la librer&amp;iacute;a de python ipcalc que facilita el c&amp;aacute;lculo de direcciones IP y redes (un art&amp;iacute;culo de su uso &lt;a href="https://scapy.readthedocs.io/en/latest/#about-scapy"&gt;ac&amp;aacute;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Adem&amp;aacute;s existe la librer&amp;iacute;a o herramienta scapy, el cual permite capturar y modificar paquetes de red (la documentaci&amp;oacute;n se puede revisar en el siguiente &lt;a href="https://scapy.readthedocs.io/en/latest/#about-scapy"&gt;enlace&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Una alternativa es usar los comandos ping y arp por medio de python con el m&amp;oacute;dulo commands; es preferible usar scapy que permite descubrir la direcci&amp;oacute;n MAC de los equipos que tienen asignado las IPs.&lt;/p&gt;
&lt;p&gt;As&amp;iacute; que por un lado se usa ipcalc para definir el rango de la red seg&amp;uacute;n la mascara y luego con scapy se descubre las direcciones MAC.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo que devuelve la direcci&amp;oacute;n MAC de cada IP utilizada en la red:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa los modulos necesarios."&gt;Se importa los modulos necesarios.&lt;/h1&gt;
&lt;p&gt;from ipcalc import IP, Network&lt;/p&gt;
&lt;p&gt;from scapy.all import srp,Ether,ARP,conf&lt;/p&gt;
&lt;h1 id="se desactiva el verbose de la captura y envio de paquetes."&gt;Se desactiva el verbose de la captura y envio de paquetes.&lt;/h1&gt;
&lt;p&gt;conf.verb=0&lt;/p&gt;
&lt;h1 id="se genera un ciclo con el rango de ips dando la red y la mascara"&gt;Se genera un ciclo con el rango de IPs dando la RED y la mascara&lt;/h1&gt;
&lt;p&gt;for ip in Network('192.168.12.128/25'):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se realiza un broadcast de MAC pasando cada IP el cual devuelve la

#direccion MAC de la IP consultada.

ans,unans=srp(Ether(dst="ff:ff:ff:ff:ff:ff")/ARP(pdst=str(ip)),timeout=2)

for snd,rcv in ans:

    #Se muestra en pantalla la direccion MAC y la direccion IP

    print rcv.sprintf(r"%Ether.src% y %ARP.psrc%")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Al ejecutar el programa se tiene lo siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;p&gt;ernesto@jewel:~/bin/python$ sudo ./descubrir.py&lt;/p&gt;
&lt;p&gt;WARNING: No route found for IPv6 destination :: (no default route?)&lt;/p&gt;
&lt;p&gt;00:26:35:c6:93:0d y 192.168.12.130&lt;/p&gt;
&lt;p&gt;00:2e:0b:c5:70:3c y 192.168.12.132&lt;/p&gt;
&lt;p&gt;00:2e:90:c2:ec:51 y 192.168.12.134&lt;/p&gt;
&lt;p&gt;00:50:ca:c1:71:8a y 192.168.12.136&lt;/p&gt;
&lt;p&gt;00:32:57:ce:81:e7 y 192.168.12.138&lt;/p&gt;
&lt;p&gt;00:2e:90:c4:58:7c y 192.168.12.139&lt;/p&gt;
&lt;p&gt;00:2c:25:ce:ae:be y 192.168.12.140&lt;/p&gt;
&lt;p&gt;d0:37:88:c4:11:ed y 192.168.12.141&lt;/p&gt;
&lt;p&gt;00:2e:90:cc:f5:16 y 192.168.12.142&lt;/p&gt;
&lt;p&gt;00:2c:c4:c4:26:28 y 192.168.12.148&lt;/p&gt;
&lt;p&gt;40:7a:ab:ce:11:c0 y 192.168.12.150&lt;/p&gt;
&lt;p&gt;3c:53:8e:cc:4d:89 y 192.168.12.161&lt;/p&gt;
&lt;p&gt;1c:5b:d6:c9:6d:a9 y 192.168.12.169&lt;/p&gt;
&lt;p&gt;00:2e:7f:c4:8d:d7 y 192.168.12.170&lt;/p&gt;
&lt;p&gt;00:24:c2:c8:23:8d y 192.168.12.172&lt;/p&gt;
&lt;p&gt;68:19:ed:c75:44:31 y 192.168.12.174&lt;/p&gt;
&lt;p&gt;74:3f:68:c2:91:d6 y 192.168.12.196&lt;/p&gt;
&lt;p&gt;00:30:aa:c2:6d:3c y 192.168.12.201&lt;/p&gt;
&lt;p&gt;c8:3c:dc:c8:a9:53 y 192.168.12.208&lt;/p&gt;
&lt;p&gt;00:34:f2:c5:2f:21 y 192.168.12.211&lt;/p&gt;
&lt;p&gt;00:34:f2:cc:2e:d0 y 192.168.12.212&lt;/p&gt;
&lt;p&gt;00:34:f2:c5:35:70 y 192.168.12.214&lt;/p&gt;
&lt;p&gt;00:34:f2:c3:1a:ee y 192.168.12.215&lt;/p&gt;
&lt;p&gt;00:34:f2:c3:1b:4c y 192.168.12.216&lt;/p&gt;
&lt;p&gt;00:34:f2:c5:33:49 y 192.168.12.224&lt;/p&gt;
&lt;p&gt;00:3c:02:c6:b5:3f y 192.168.12.225&lt;/p&gt;
&lt;p&gt;00:3e:90:c8:bb:d6 y 192.168.12.251
```&lt;/p&gt;
&lt;p&gt;As&amp;iacute; pues desde Linux y con Python se puede capturar la informaci&amp;oacute;n de las direcciones MAC de las IPs asignadas con pocas l&amp;iacute;neas de c&amp;oacute;digo.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="scapy"></category><category term="ipcalc"></category></entry><entry><title>Resolución de sistemas de ecuaciones lineales por descomposión QR usando Numpy</title><link href="https://ecrespo.github.io/resolucion-de-sistemas-de-ecuaciones-lineales-por-descomposion-qr-usando-numpy.html" rel="alternate"></link><published>2013-02-21T09:00:00-05:30</published><updated>2013-02-21T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-21:/resolucion-de-sistemas-de-ecuaciones-lineales-por-descomposion-qr-usando-numpy.html</id><summary type="html">&lt;p&gt;En Diciembre se  public&amp;oacute; un &lt;a href="https://www.seraph.to/resolucion-de-sistemas-de-ecuaciones-con-numpy.html"&gt;art&amp;iacute;culo&lt;/a&gt; donde se explica como resolver sistemas de ecuaciones.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa de un art&amp;iacute;culo en Ingl&amp;eacute;s &lt;a href="glowingpython.blogspot.com/2011/05/qr-decomposition-with-numpy.html"&gt;QR descomposition with numpy &lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si se desea averiguar m&amp;aacute;s sobre la descomposici&amp;oacute;n QR se puede consultar a la p&amp;aacute;gina de &lt;a href="es.wikipedia.org/wiki/Descomposici%C3%B3n_QR"&gt;wikipedia&lt;/a&gt; &amp;oacute; de la siguiente &lt;a href="rkb.home.cern.ch/rkb/AN16pp/node224.html#SECTION0002240000000000000000"&gt;p&amp;aacute;gina&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Las …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En Diciembre se  public&amp;oacute; un &lt;a href="https://www.seraph.to/resolucion-de-sistemas-de-ecuaciones-con-numpy.html"&gt;art&amp;iacute;culo&lt;/a&gt; donde se explica como resolver sistemas de ecuaciones.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa de un art&amp;iacute;culo en Ingl&amp;eacute;s &lt;a href="glowingpython.blogspot.com/2011/05/qr-decomposition-with-numpy.html"&gt;QR descomposition with numpy &lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si se desea averiguar m&amp;aacute;s sobre la descomposici&amp;oacute;n QR se puede consultar a la p&amp;aacute;gina de &lt;a href="es.wikipedia.org/wiki/Descomposici%C3%B3n_QR"&gt;wikipedia&lt;/a&gt; &amp;oacute; de la siguiente &lt;a href="rkb.home.cern.ch/rkb/AN16pp/node224.html#SECTION0002240000000000000000"&gt;p&amp;aacute;gina&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Las ecuaciones que se usaron son:
&lt;code&gt;3x+9y-10z  =   24
x-6y+4z      =   -4
10x-2y+8z  =  20&lt;/code&gt;
Donde &lt;code&gt;Ax = b.&lt;/code&gt;
&lt;code&gt;A = [[3 9 -10][1 -6 4][10 -2 8]] y
B  = [[24][-4[[20]]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;from numpy import *&lt;/p&gt;
&lt;h1 id="se define los valores de la matriz a"&gt;Se define los valores de la matriz A&lt;/h1&gt;
&lt;p&gt;A = array([[3,9,-10],[1,-6,4],[10,-2,8]])&lt;/p&gt;
&lt;p&gt;Q,R = linalg.qr(A) # qr decomposition of A&lt;/p&gt;
&lt;h1 id="se definen los valores de la matriz b"&gt;Se definen los valores de la matriz B&lt;/h1&gt;
&lt;p&gt;b = array([[24],[-4],[20]])&lt;/p&gt;
&lt;h1 id="resolver ax=b usando la funcion estandar numpy"&gt;resolver Ax=b usando la funcion estandar numpy&lt;/h1&gt;
&lt;p&gt;x = linalg.solve(A,b)&lt;/p&gt;
&lt;h1 id="resolver ax = b usando q y r."&gt;resolver Ax = b usando Q y R.&lt;/h1&gt;
&lt;p&gt;y = dot(Q.T,b)
xQR = linalg.solve(R,y) &lt;/p&gt;
&lt;p&gt;print "\nComparacion de Soluciones:"
print x.T,'Ax=b'
print xQR.T,'Rx=y'
```
Al ejecutar el script se tiene lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
python qr.py&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;Comparacion de Soluciones:
```python
[[ 2.99029126  0.40776699 -1.13592233]] Ax=b&lt;/p&gt;
&lt;p&gt;[[ 2.99029126  0.40776699 -1.13592233]] Rx=y
```&lt;/p&gt;
&lt;p&gt;Como se puede ver, la soluci&amp;oacute;n usando la funci&amp;oacute;n est&amp;aacute;ndar de numpy y por la descomposici&amp;oacute;n QR generan el mismo resultado.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="numpy"></category><category term="Python"></category></entry><entry><title>Creación de gráfico de burbujas con matplotlib</title><link href="https://ecrespo.github.io/creacion-de-grafico-de-burbujas-con-matplotlib.html" rel="alternate"></link><published>2013-02-20T09:00:00-05:30</published><updated>2013-02-20T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-20:/creacion-de-grafico-de-burbujas-con-matplotlib.html</id><summary type="html">&lt;p&gt;Los gr&amp;aacute;ficos de burbuja presentan los datos como una serie de burbujas, el tama&amp;ntilde;o de las cuales es proporcional a la cantidad de datos. &lt;/p&gt;
&lt;p&gt;Un gr&amp;aacute;fico de este tipo resulta muy efectivo para mostrar el n&amp;uacute;mero de productos vendidos en cierta regi&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Existe una herramienta que se llama Trendalyzer  desarrollada …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Los gr&amp;aacute;ficos de burbuja presentan los datos como una serie de burbujas, el tama&amp;ntilde;o de las cuales es proporcional a la cantidad de datos. &lt;/p&gt;
&lt;p&gt;Un gr&amp;aacute;fico de este tipo resulta muy efectivo para mostrar el n&amp;uacute;mero de productos vendidos en cierta regi&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Existe una herramienta que se llama Trendalyzer  desarrollada por la Fundaci&amp;oacute;n Gapminder, est&amp;aacute; herramienta permite convertir series de estad&amp;iacute;sticas en gr&amp;aacute;ficos interactivos. &lt;/p&gt;
&lt;p&gt;Es &lt;a href="https://es.wikipedia.org/wiki/Hans_Rosling"&gt;Hans Rosling&lt;/a&gt;  uno de los fundadores de Gapminder quien ha mostrado el potencial de la herramienta.
El siguiente v&amp;iacute;deo es una demostraci&amp;oacute;n de la herramienta:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/-C-hXn2RY3M"&gt;https://youtu.be/-C-hXn2RY3M&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Con matplotlib en Python tambi&amp;eacute;n se pueden crear gr&amp;aacute;ficas de burbuja, el art&amp;iacute;culo se basa en un art&amp;iacute;culo en Ingl&amp;eacute;s llamado "&lt;a href="glowingpython.blogspot.com/2011/11/how-to-make-bubble-charts-with.html"&gt;How to make Bubble charts with matplotlib&lt;/a&gt; ". &lt;/p&gt;
&lt;p&gt;Los datos se obtendr&amp;aacute;n de un archivo csv, estos datos son de estad&amp;iacute;stica del crimen en los Estados Unidos por estado del a&amp;ntilde;o 2005. El archivo csv se puede bajar &lt;a href="datasets.flowingdata.com/crimeRatesByState2005.csv"&gt;aqu&amp;iacute;&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;La informaci&amp;oacute;n en el archivo csv se tiene de la siguiente forma (se muestra las primeras l&amp;iacute;neas del archivo):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;state,murder,forcible_rape,robbery,aggravated_assault,burglary,larceny_theft,motor_vehicle_theft,population
United States,5.6,31.7,140.7,291.1,726.7,2286.3,416.7,295753151
Alabama,8.2,34.3,141.4,247.8,953.8,2650,288.3,4545049
Alaska,4.8,81.1,80.9,465.1,622.5,2599.1,391,669488
Arizona,7.5,33.8,144.4,327.4,948.4,2965.2,924.4,5974834
Arkansas,6.7,42.9,91.1,386.8,1084.6,2711.2,262.1,2776221
California,6.9,26,176.1,317.3,693.3,1916.5,712.8,35795255&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Como se ve la primera l&amp;iacute;nea se tiene el t&amp;iacute;tulo de cada columna, en la segunda l&amp;iacute;nea se tiene la informaci&amp;oacute;n total de Estados Unidos y luego se muestra la informaci&amp;oacute;n por Estado.&lt;/p&gt;
&lt;p&gt;Para efectos de programaci&amp;oacute;n la primera y segunda l&amp;iacute;nea no son relevantes para la gr&amp;aacute;fica de burbuja.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo del programa:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;from pylab import *
from scipy import *&lt;/p&gt;
&lt;h1 id="leer los datos desde el archivo csv"&gt;Leer los datos desde el archivo csv&lt;/h1&gt;
&lt;h1 id="archivo original"&gt;Archivo original&lt;/h1&gt;
&lt;h1 id="durl = 'http://datasets.flowingdata.com/crimeratesbystate2005.csv'"&gt;durl = 'http://datasets.flowingdata.com/crimeRatesByState2005.csv'&lt;/h1&gt;
&lt;h1 id="archivo modificado."&gt;Archivo modificado.&lt;/h1&gt;
&lt;p&gt;durl = 'http://127.0.0.1/descargas/crimeRatesByState2005-es.csv'&lt;/p&gt;
&lt;h1 id="se captura los datos del archivo csv."&gt;Se captura los datos del archivo csv.&lt;/h1&gt;
&lt;p&gt;rdata = genfromtxt(durl,dtype='S8,f,f,f,f,f,f,f,i',delimiter=',')&lt;/p&gt;
&lt;p&gt;rdata[0] = zeros(8) # se elimina los titulos 
rdata[1] = zeros(8) # se elimina la estadistica total de estados unidos (2da linea)
x = []
y = []
color = []
area = []&lt;/p&gt;
&lt;h1 id="se captura los datos de cada fila"&gt;Se captura los datos de cada fila&lt;/h1&gt;
&lt;p&gt;for data in rdata:
    x.append(data[1]) # asesinatos
    y.append(data[5]) # robo
    color.append(data[6]) # hurtos
    area.append(sqrt(data[8])) # poblacion
    # graficando las primeras 8 letras del nombre del estado
    text(data[1], data[5],data[0],size=11,horizontalalignment='center')&lt;/p&gt;
&lt;h1 id="se crea la grafica"&gt;se crea la grafica&lt;/h1&gt;
&lt;p&gt;sct = scatter(x, y, c=color, s=area, linewidths=2, edgecolor='w')
sct.set_alpha(0.75)&lt;/p&gt;
&lt;h1 id="se define los ejes"&gt;Se define los ejes&lt;/h1&gt;
&lt;p&gt;axis([0,11,200,1280])&lt;/p&gt;
&lt;h1 id="las etiquetas de cada eje"&gt;Las etiquetas de cada eje&lt;/h1&gt;
&lt;p&gt;xlabel('Asesinatos por cada 100.000 habitantes')
ylabel('Robos por cada 100.000 habitantes')
show()
```&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra el resultado de la ejecuci&amp;oacute;n del programa:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/creaciondegraficodeburbujasconmatplotlib.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="matplotlib"></category><category term="Python"></category><category term="pylab"></category><category term="scipy"></category></entry><entry><title>Manejar información de un archivo csv con csvkit</title><link href="https://ecrespo.github.io/manejar-informacion-de-un-archivo-csv-con-csvkit.html" rel="alternate"></link><published>2013-02-19T10:00:00-05:30</published><updated>2013-02-19T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-19:/manejar-informacion-de-un-archivo-csv-con-csvkit.html</id><summary type="html">&lt;p&gt;El programa &lt;code&gt;csvkit&lt;/code&gt; es una herramienta desarrollada en Python que facilita la manipulaci&amp;oacute;n de la informaci&amp;oacute;n contenida en un archivo con formato &lt;code&gt;csv&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se utilizar&amp;aacute; como ejemplo los datos de la p&amp;aacute;gina data.gov. Los datos que se utilizar&amp;aacute; son del Departamento de Asuntos de Veteranos de beneficios educativos de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El programa &lt;code&gt;csvkit&lt;/code&gt; es una herramienta desarrollada en Python que facilita la manipulaci&amp;oacute;n de la informaci&amp;oacute;n contenida en un archivo con formato &lt;code&gt;csv&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se utilizar&amp;aacute; como ejemplo los datos de la p&amp;aacute;gina data.gov. Los datos que se utilizar&amp;aacute; son del Departamento de Asuntos de Veteranos de beneficios educativos de los Estatos Unidos (disculpen la traducci&amp;oacute;n) del a&amp;ntilde;o 2009.&lt;/p&gt;
&lt;p&gt;Es necesario instalar &lt;code&gt;csvkit&lt;/code&gt;, en este caso se usa el comando &lt;code&gt;pip&lt;/code&gt; de python:&lt;br/&gt;
&lt;code&gt;python
pip install csvkit&lt;/code&gt;
Obtener los datos:
```
mkdir beneficios&lt;/p&gt;
&lt;p&gt;cd beneficios 
&lt;code&gt;Bajar archivo `2009.csv` con el comando `wget`:&lt;/code&gt;
wget -O 2009.csv -U "Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/534.16 (JHTML, like Gecko) chrome/10.0.648.205 Safari/534.16" http://www.data.gob/download/4029/csv 
&lt;code&gt;Verificar las primeras 5 l&amp;iacute;neas del archivo:&lt;/code&gt;
head -n 5 2009.csv &lt;/p&gt;
&lt;p&gt;State Name,State Abbreviate,Code,Montgomery GI Bill-Active Duty,Montgomery GI Bill- Selective Reserve,Dependents' Educational Assistance,Reserve Educational Assistance Program,Post-Vietnam Era Veteran's Educational Assistance Program,TOTAL,&lt;/p&gt;
&lt;p&gt;ALABAMA,AL,01,"6,718","1,728","2,703","1,269",8,"12,426",&lt;/p&gt;
&lt;p&gt;ALASKA,AK,02,776,154,166,60,2,"1,158",&lt;/p&gt;
&lt;p&gt;ARIZONA,AZ,04,"26,822","2,005","3,137","2,011",11,"33,986",&lt;/p&gt;
&lt;p&gt;ARKANSAS,AR,05,"2,061",988,"1,575",886,3,"5,513",
&lt;code&gt;``
Se puede usar el mismo comando&lt;/code&gt;wget` para bajar los archivos de los a&amp;ntilde;os 2010.csv, 2011.csv y 2012.csv.&lt;/p&gt;
&lt;p&gt;Obtener la informaci&amp;oacute;n de las columnas con &lt;code&gt;csvcut&lt;/code&gt;:
```
csvcut -n 2009.csv&lt;/p&gt;
&lt;p&gt;1: State Name&lt;/p&gt;
&lt;p&gt;2: State Abbreviate&lt;/p&gt;
&lt;p&gt;3: Code&lt;/p&gt;
&lt;p&gt;4: Montgomery GI Bill-Active Duty&lt;/p&gt;
&lt;p&gt;5: Montgomery GI Bill- Selective Reserve&lt;/p&gt;
&lt;p&gt;6: Dependents' Educational Assistance&lt;/p&gt;
&lt;p&gt;7: Reserve Educational Assistance Program&lt;/p&gt;
&lt;p&gt;8: Post-Vietnam Era Veteran's Educational Assistance Program&lt;/p&gt;
&lt;p&gt;9: TOTAL&lt;/p&gt;
&lt;p&gt;10: 
```&lt;/p&gt;
&lt;p&gt;Como se puede observar, el archivo &lt;code&gt;csv&lt;/code&gt; maneja 9 columnas. &lt;/p&gt;
&lt;p&gt;Con el comando &lt;code&gt;csvcut&lt;/code&gt; se puede obtener informaci&amp;oacute;n entre la fila 2 y 3 (State Abbreviate y Code), s&amp;oacute;lo se desea mostrar las primeras 5 l&amp;iacute;neas del archivo: 
```
csvcut -c 2,3 2009.csv | head -n 5&lt;/p&gt;
&lt;p&gt;State Abbreviate,Code
AL,01
AK,02
AZ,04
AR,05
```&lt;/p&gt;
&lt;p&gt;Se puede tambi&amp;eacute;n manejar estadisticas bajo demanda con &lt;code&gt;csvstat&lt;/code&gt;. Se genera la estadistica de la informaci&amp;oacute;n de las columnas 1,4,9 y 10. Para este caso se utiliza &lt;code&gt;csvcut&lt;/code&gt; y se pasa la informaci&amp;oacute;n a &lt;code&gt;csvstat&lt;/code&gt;:
```
csvcut -c 1,4,9,10 2009.csv | csvstat&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;State Name
    &lt;type 'unicode'=""&gt;
    Nulls: True
    Unique values: 52
    Max length: 17&lt;/type&gt;&lt;/li&gt;
&lt;li&gt;Montgomery GI Bill-Active Duty
    &lt;type 'int'=""&gt;
    Nulls: True
    Min: 435
    Max: 34942
    Sum: 325723
    Mean: 6263.90384615
    Median: 3548.0
    Standard Deviation: 7537.86225373
    Unique values: 52&lt;/type&gt;&lt;/li&gt;
&lt;li&gt;TOTAL
    &lt;type 'int'=""&gt;
    Nulls: True
    Min: 768
    Max: 46897
    Sum: 506914
    Mean: 9748.34615385
    Median: 6520.0
    Standard Deviation: 10070.4022127
    Unique values: 52&lt;/type&gt;&lt;/li&gt;
&lt;li&gt;_unnamed
    &lt;type 'nonetype'=""&gt;
    Nulls: True
    Values: 
```&lt;/type&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se puede realizar busquedas por filas con &lt;code&gt;csvgrep&lt;/code&gt;. En este caso la informaci&amp;oacute;n total del Estado de Illinois:
```
csvcut -c 1,"TOTAL" 2009.csv | csvgrep -c 1 -m ILLINOIS&lt;/p&gt;
&lt;p&gt;State Name,TOTAL&lt;/p&gt;
&lt;p&gt;ILLINOIS,"21,964"
```&lt;/p&gt;
&lt;p&gt;Voltear orden de las columnas con &lt;code&gt;csvcut&lt;/code&gt;: 
```
csvcut -c 9,1 2009.csv | head -n 5&lt;/p&gt;
&lt;p&gt;TOTAL,State Name
"12,426",ALABAMA
"1,158",ALASKA
"33,986",ARIZONA
"5,513",ARKANSAS
```
En este caso se cambia el orden de las columnas al decirle a csvcut el orden de las columnas. &lt;/p&gt;
&lt;p&gt;Ordenar con &lt;code&gt;csvsort&lt;/code&gt;: 
```
csvcut -c 9,1 2009.csv | csvsort -r | head -n 5&lt;/p&gt;
&lt;p&gt;TOTAL,State Name
46897,CALIFORNIA
40402,TEXAS
36394,FLORIDA
33986,ARIZONA
&lt;code&gt;Se puede dar un formato para que sea legible la informaci&amp;oacute;n con `csvlook`:&lt;/code&gt;
csvcut -c 9,1 2009.csv | csvsort -r -l | csvlook&lt;/p&gt;
&lt;p&gt;|--------------+-------+--------------------|
|  line_number | TOTAL | State Name         |
|--------------+-------+--------------------|
|  1           | 46897 | CALIFORNIA         |
|  2           | 40402 | TEXAS              |
|  3           | 36394 | FLORIDA            |
|  4           | 33986 | ARIZONA            |
|  5           | 21964 | ILLINOIS           |
|  6           | 20541 | VIRGINIA           |
|  7           | 18236 | GEORGIA            |
|  8           | 15730 | NORTH CAROLINA     |
|  9           | 13967 | NEW YORK           |
|  10          | 13962 | MISSOURI           |
|  11          | 13614 | COLORADO           |
|  12          | 13314 | OHIO               |
|  13          | 13011 | PENNSYLVANIA       |
|  14          | 12426 | ALABAMA            |
|  15          | 11492 | WASHINGTON         |
|  16          | 10085 | MARYLAND           |
|  17          | 9791  | MINNESOTA          |
|  18          | 9344  | MICHIGAN           |
|  19          | 9206  | OKLAHOMA           |
|  20          | 9013  | IOWA               |
|  21          | 8840  | WEST VIRGINIA      |
|  22          | 8757  | TENNESSEE          |
|  23          | 8081  | WISCONSIN          |
|  24          | 7872  | SOUTH CAROLINA     |
|  25          | 7809  | INDIANA            |
|  26          | 6652  | LOUISIANA          |
|  27          | 6388  | KENTUCKY           |
|  28          | 6009  | MASSACHUSETTS      |
|  29          | 5870  | OREGON             |
|  30          | 5513  | ARKANSAS           |
|  31          | 5511  | NEW JERSEY         |
|  32          | 5416  | NEBRASKA           |
|  33          | 5345  | UTAH               |
|  34          | 4947  | KANSAS             |
|  35          | 4551  | NEW MEXICO         |
|  36          | 4424  | PUERTO RICO        |
|  37          | 4299  | MISSISSIPPI        |
|  38          | 3728  | NEVADA             |
|  39          | 2997  | CONNECTICUT        |
|  40          | 2751  | IDAHO              |
|  41          | 2521  | HAWAII             |
|  42          | 1992  | SOUTH DAKOTA       |
|  43          | 1920  | MAINE              |
|  44          | 1795  | MONTANA            |
|  45          | 1778  | NORTH DAKOTA       |
|  46          | 1326  | NEW HAMPSHIRE      |
|  47          | 1175  | RHODE ISLAND       |
|  48          | 1158  | ALASKA             |
|  49          | 1145  | DELAWARE           |
|  50          | 1117  | WYOMING            |
|  51          | 1084  | DIST. OF COLUMBIA  |
|  52          | 768   | VERMONT            |
|  53          |       |                    |
|--------------+-------+--------------------|
```&lt;/p&gt;
&lt;p&gt;Para finalizar se puede salvar el trabajo en un nuevo archivo csv:
&lt;code&gt;csvcut -c 9,1 2009.csv | csvsort -r -l &amp;gt; 2009_ranking.csv&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Si se desea aprender m&amp;aacute;s de la herramienta &lt;code&gt;csvkit&lt;/code&gt; se puede revisar la p&amp;aacute;gina de la &lt;a href="https://csvkit.readthedocs.io/en/latest/index.html"&gt;documentaci&amp;oacute;n&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;En pr&amp;oacute;ximo art&amp;iacute;culo se mostrar&amp;aacute; como usar &lt;code&gt;csvkit&lt;/code&gt; desde un programa en Python.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Python"></category><category term="csv"></category><category term="csvkit"></category></entry><entry><title>Teorema de muestreo explicado con numpy</title><link href="https://ecrespo.github.io/teorema-de-muestreo-explicado-con-numpy.html" rel="alternate"></link><published>2013-02-19T10:00:00-05:30</published><updated>2013-02-19T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-19:/teorema-de-muestreo-explicado-con-numpy.html</id><summary type="html">&lt;p&gt;El teorema demuestra que la reconstrucci&amp;oacute;n exacta de una se&amp;ntilde;al peri&amp;oacute;dica continua en banda base a partir de sus muestras, es matem&amp;aacute;ticamente posible si la se&amp;ntilde;al est&amp;aacute; limitada en banda y la tasa de muestreo es superior al doble de su ancho de banda. 
En el art&amp;iacute;culo se mostrar&amp;aacute; una …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El teorema demuestra que la reconstrucci&amp;oacute;n exacta de una se&amp;ntilde;al peri&amp;oacute;dica continua en banda base a partir de sus muestras, es matem&amp;aacute;ticamente posible si la se&amp;ntilde;al est&amp;aacute; limitada en banda y la tasa de muestreo es superior al doble de su ancho de banda. 
En el art&amp;iacute;culo se mostrar&amp;aacute; una tasa de muestreo a diferentes frecuencias, desde el valor doble a la frecuencia base, luego a un valor menor.&lt;/p&gt;
&lt;p&gt;Algo m&amp;aacute;s de teor&amp;iacute;a:
El teorema de muestreo de una se&amp;ntilde;al continua que x (t) limitada en banda a B Hz pueden ser recuperados de sus muestras x [n] = x (n * T), donde n es un n&amp;uacute;mero entero, si T es mayor que o igual a 1 / (2B) sin p&amp;eacute;rdida de ninguna informaci&amp;oacute;n. Y llamamos 2B la tasa de Nyquist.&lt;/p&gt;
&lt;p&gt;El muestreo a una tasa inferior a la tasa de Nyquist se denomina submuestreo, se produce el efecto aliasing.&lt;/p&gt;
&lt;p&gt;Si se desea m&amp;aacute;s informaci&amp;oacute;n sobre el Teorema de Muestreo se puede consultar a &lt;a href="https://es.wikipedia.org/wiki/Teorema_de_muestreo_de_Nyquist-Shannon"&gt;wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en un art&amp;iacute;culo en Ingl&amp;eacute;s "&lt;a href="glowingpython.blogspot.com/2011/09/sampling-theorem-explained-with-numpy.html"&gt;The sampling theorem explained with numpy&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="de numpy se importa lo necesario para graficar la"&gt;De numpy se importa lo necesario para graficar la&lt;/h1&gt;
&lt;h1 id="funcion seno"&gt;funcion seno&lt;/h1&gt;
&lt;p&gt;from numpy import linspace,sin,cos,pi,ceil,floor,arange&lt;/p&gt;
&lt;h1 id="de pylab se importa plot, show y axis. lo necesario para crear"&gt;De pylab se importa plot, show y axis. Lo necesario para crear&lt;/h1&gt;
&lt;h1 id="la grafica"&gt;la grafica&lt;/h1&gt;
&lt;p&gt;from pylab import plot,show,axis&lt;/p&gt;
&lt;h1 id="muestreo de una seganl de ancho de banda 40 hz"&gt;Muestreo de una seganl de ancho de banda 40 hz&lt;/h1&gt;
&lt;h1 id="con velocidad de muestreo de 80 hz"&gt;con velocidad de muestreo de 80 Hz&lt;/h1&gt;
&lt;p&gt;f = 40;  # Hz&lt;/p&gt;
&lt;h1 id="tiempo minimo y maximo"&gt;Tiempo minimo y maximo&lt;/h1&gt;
&lt;p&gt;tmin = -0.3;&lt;/p&gt;
&lt;p&gt;tmax = 0.3;&lt;/p&gt;
&lt;h1 id="se define el tiempo de la segnal."&gt;Se define el tiempo de la segnal.&lt;/h1&gt;
&lt;p&gt;t = linspace(tmin, tmax, 400);&lt;/p&gt;
&lt;h1 id="se define la segnal de muestreo"&gt;Se define la segnal de muestreo&lt;/h1&gt;
&lt;p&gt;x = cos(2&lt;em&gt;pi&lt;/em&gt;t) + cos(2&lt;em&gt;pi&lt;/em&gt;f*t)&lt;/p&gt;
&lt;h1 id="se grafica el tiempo y la segnal."&gt;Se grafica el tiempo y la segnal.&lt;/h1&gt;
&lt;p&gt;plot(t, x)&lt;/p&gt;
&lt;h1 id="sampling the signal with a sampling rate of 80 hz"&gt;sampling the signal with a sampling rate of 80 Hz&lt;/h1&gt;
&lt;h1 id="in this case, we are using the nyquist rate."&gt;in this case, we are using the Nyquist rate.&lt;/h1&gt;
&lt;h1 id="muestreo de la segnal con una velocidad de muestreo de 80 hz."&gt;Muestreo de la segnal con una velocidad de muestreo de 80 Hz.&lt;/h1&gt;
&lt;h1 id="periodo de muestreo"&gt;Periodo de muestreo&lt;/h1&gt;
&lt;p&gt;T = 1/80.0;&lt;/p&gt;
&lt;h1 id="tiempo minimo"&gt;Tiempo minimo&lt;/h1&gt;
&lt;p&gt;nmin = ceil(tmin / T);&lt;/p&gt;
&lt;h1 id="tiempo maximo"&gt;Tiempo maximo&lt;/h1&gt;
&lt;p&gt;nmax = floor(tmax / T);&lt;/p&gt;
&lt;h1 id="tiempo de la segnal."&gt;Tiempo de la segnal.&lt;/h1&gt;
&lt;p&gt;n = arange(nmin,nmax);&lt;/p&gt;
&lt;h1 id="segnal a la velocidad de muestreo"&gt;Segnal a la velocidad de muestreo&lt;/h1&gt;
&lt;p&gt;x1 = cos(2&lt;em&gt;pi&lt;/em&gt;n&lt;em&gt;T) + cos(2&lt;/em&gt;pi&lt;em&gt;f&lt;/em&gt;n*T);&lt;/p&gt;
&lt;h1 id="se grafica la segnal."&gt;Se grafica la segnal.&lt;/h1&gt;
&lt;p&gt;plot(n*T, x1, 'bo')&lt;/p&gt;
&lt;h1 id="muestreo de la segnal con una velocidad de muestreo de 35hz."&gt;Muestreo de la segnal con una velocidad de muestreo de 35Hz.&lt;/h1&gt;
&lt;h1 id="note que 35hz esta por debajo de la velocidad de nyquist."&gt;Note que 35Hz esta por debajo de la velocidad de Nyquist.&lt;/h1&gt;
&lt;p&gt;T = 1/35.0;&lt;/p&gt;
&lt;p&gt;nmin = ceil(tmin / T);&lt;/p&gt;
&lt;p&gt;nmax = floor(tmax / T);&lt;/p&gt;
&lt;p&gt;n = arange(nmin,nmax);&lt;/p&gt;
&lt;p&gt;x2 = cos(2&lt;em&gt;pi&lt;/em&gt;n&lt;em&gt;T) + cos(2&lt;/em&gt;pi&lt;em&gt;f&lt;/em&gt;n*T);&lt;/p&gt;
&lt;p&gt;plot(n*T, x2, '-r.',markersize=15)&lt;/p&gt;
&lt;p&gt;axis([-0.3, 0.3, -1.5, 2.3])&lt;/p&gt;
&lt;p&gt;show()
```&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica generada es la siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/teoremademuestreoexplicadoconnumpy-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Con puntos azules se tiene el muestreo a 80Hz, con puntos rojos se tiene el muestreo a 35 Hz, se nota que el muestreo a 80 Hz es suficiente para capturar la oscilaci&amp;oacute;n de la se&amp;ntilde;al.&lt;/p&gt;
&lt;p&gt;En la siguiente gr&amp;aacute;fica se tiene un muestreo a 10 Hz que est&amp;aacute; por debajo de la frecuencia base de la se&amp;ntilde;al (40 Hz).&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/teoremademuestreoexplicadoconnumpy-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Ahora se muestra la frecuencia de muestreo a 20 Hz:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/teoremademuestreoexplicadoconnumpy-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Para terminar se muestra la frecuencia de muestreo a 30 Hz:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/teoremademuestreoexplicadoconnumpy-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;Para terminar se muestra la gr&amp;aacute;fica a una frecuencia de muestreo de 320 Hz:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/teoremademuestreoexplicadoconnumpy-5.png"/&gt; &lt;/p&gt;
&lt;p&gt;Como puede notarse, mientras menor es la frecuencia de muestreo con respecto a la frecuencia base de la se&amp;ntilde;al no se puede generar la se&amp;ntilde;al original a partir de la muestra, mientras se va a aumentando la se&amp;ntilde;al hasta llegar a la frecuencia base, se nota que se tiene m&amp;aacute;s muestras para dicha recuperaci&amp;oacute;n pero sigue sin ser suficiente, es a partir del doble de la frecuencia base que la muestra puede ser generada.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="matplotlib"></category><category term="numpy"></category><category term="python"></category></entry><entry><title>Encontrar el mínimo de una función usando fmin de scipy</title><link href="https://ecrespo.github.io/encontrar-el-minimo-de-una-funcion-usando-fmin-de-scipy.html" rel="alternate"></link><published>2013-02-18T09:00:00-05:30</published><updated>2013-02-18T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-18:/encontrar-el-minimo-de-una-funcion-usando-fmin-de-scipy.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo muestra como se encuentra el valor m&amp;iacute;nimo de una funci&amp;oacute;n con la funci&amp;oacute;n fmin de &lt;code&gt;scipy&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo es una versi&amp;oacute;n en Espa&amp;ntilde;ol del art&amp;iacute;culo en Ingl&amp;eacute;s "&lt;a href="https://glowingpython.blogspot.com/2011/04/how-to-find-minimum-of-function-using.html"&gt;How to find the minimum of a function using fmin from scipy&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo muestra como se encuentra el valor m&amp;iacute;nimo de una funci&amp;oacute;n con la funci&amp;oacute;n fmin de &lt;code&gt;scipy&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo es una versi&amp;oacute;n en Espa&amp;ntilde;ol del art&amp;iacute;culo en Ingl&amp;eacute;s "&lt;a href="https://glowingpython.blogspot.com/2011/04/how-to-find-minimum-of-function-using.html"&gt;How to find the minimum of a function using fmin from scipy&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar numpy,pylab y la funcion fmin de scipy.optimize."&gt;Importar numpy,pylab y la funci&amp;oacute;n fmin de scipy.optimize.&lt;/h1&gt;
&lt;p&gt;import numpy&lt;/p&gt;
&lt;p&gt;import pylab&lt;/p&gt;
&lt;p&gt;from scipy.optimize import fmin&lt;/p&gt;
&lt;h1 id="se define la funcion a partir de lambda."&gt;Se define la funcion a partir de lambda.&lt;/h1&gt;
&lt;p&gt;rsinc = lambda x: -1 * numpy.sin(x)/x&lt;/p&gt;
&lt;h1 id="se define un valor x0 de -5."&gt;Se define un valor x0 de -5.&lt;/h1&gt;
&lt;p&gt;x0 = -5&lt;/p&gt;
&lt;h1 id="se calcula el valor minimo de la funcion en el punto x0"&gt;Se calcula el valor minimo de la funcion en el punto x0&lt;/h1&gt;
&lt;p&gt;xmin0 = fmin(rsinc,x0)&lt;/p&gt;
&lt;h1 id="se define el punto x1 con valor -4"&gt;Se define el punto x1 con valor -4&lt;/h1&gt;
&lt;p&gt;x1 = -4&lt;/p&gt;
&lt;h1 id="se calcula el valor minimo de la funcion en el punto x1"&gt;Se calcula el valor minimo de la funcion en el punto x1&lt;/h1&gt;
&lt;p&gt;xmin1 = fmin(rsinc,x1)&lt;/p&gt;
&lt;h1 id="se grafica la funcion."&gt;se grafica la funcion.&lt;/h1&gt;
&lt;p&gt;x = numpy.linspace(-15,15,100)&lt;/p&gt;
&lt;p&gt;y = rsinc(x)&lt;/p&gt;
&lt;p&gt;pylab.plot(x,y)&lt;/p&gt;
&lt;h1 id="se define el punto x0 en la grafica de la funcion"&gt;Se define el punto x0 en la grafica de la funcion&lt;/h1&gt;
&lt;p&gt;pylab.plot(x0,rsinc(x0),'bd',xmin0,rsinc(xmin0),'bo')&lt;/p&gt;
&lt;h1 id="se define el punto x1 en la grafica de la funcion"&gt;Se define el punto x1 en la grafica de la funcion&lt;/h1&gt;
&lt;p&gt;pylab.plot(x1,rsinc(x1),'rd',xmin1,rsinc(xmin1),'ro')&lt;/p&gt;
&lt;p&gt;pylab.axis([-15,15,-1.3,0.3])&lt;/p&gt;
&lt;p&gt;pylab.show()
```&lt;/p&gt;
&lt;p&gt;La figura a continuaci&amp;oacute;n muestra la gr&amp;aacute;fica de la funci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/encontrarelminimodeunafuncionusandofmindescipy.png"/&gt; &lt;/p&gt;
&lt;p&gt;El punto azul es el m&amp;iacute;nimo encontrado al inicio desde diamante azul  (x= -5), el punto rojo es el m&amp;iacute;nimo encontrado iniciando desde diamante rojo. Este punto es el m&amp;iacute;nimo global encontrado en la funci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Adem&amp;aacute;s de la gr&amp;aacute;fica se genera la siguiente salida que genera la funci&amp;oacute;n fmin:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Optimization terminated successfully.
         Current function value: -0.128375
         Iterations: 18
         Function evaluations: 36
Optimization terminated successfully.
         Current function value: -1.000000
         Iterations: 19
         Function evaluations: 38&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="matplotlib"></category><category term="pylab"></category><category term="python"></category></entry><entry><title>Graficar la intercepción de 2 funciones</title><link href="https://ecrespo.github.io/graficar-la-intercepcion-de-2-funciones.html" rel="alternate"></link><published>2013-02-15T09:00:00-05:30</published><updated>2013-02-15T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-15:/graficar-la-intercepcion-de-2-funciones.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se explica como encontrar la intercepci&amp;oacute;n de 2 funciones, en este caso una funci&amp;oacute;n senoidal con una cosenoidal.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo se basa en uno en Ingl&amp;eacute;s que se llama "&lt;a href="Graficar la intercepci&amp;oacute;n de 2 funciones"&gt;How to find the intersection of two functions&lt;/a&gt; ".&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica mostrar&amp;aacute; la intercepci&amp;oacute;n de las funciones sin(x …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se explica como encontrar la intercepci&amp;oacute;n de 2 funciones, en este caso una funci&amp;oacute;n senoidal con una cosenoidal.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo se basa en uno en Ingl&amp;eacute;s que se llama "&lt;a href="Graficar la intercepci&amp;oacute;n de 2 funciones"&gt;How to find the intersection of two functions&lt;/a&gt; ".&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica mostrar&amp;aacute; la intercepci&amp;oacute;n de las funciones sin(x) y cos(x) desde el valor inicial de x igual a cero. Se utilizar&amp;aacute; la funci&amp;oacute;n fsolve la cual devuelve la ra&amp;iacute;z de una ecuaci&amp;oacute;n (no lineal ) definida por func(x) = 0.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;from scipy.optimize import fsolve&lt;/p&gt;
&lt;h1 id="importar pylab"&gt;Importar pylab&lt;/h1&gt;
&lt;p&gt;import pylab&lt;/p&gt;
&lt;h1 id="importar numpy"&gt;Importar numpy&lt;/h1&gt;
&lt;p&gt;import numpy&lt;/p&gt;
&lt;h1 id="se define la funcion que calcula la intercepcion"&gt;Se define la funcion que calcula la intercepcion&lt;/h1&gt;
&lt;h1 id="de 2 funciones."&gt;de 2 funciones.&lt;/h1&gt;
&lt;p&gt;def EncontrarIntercepcion(fun1,fun2,x0):
    #Se usa la funci&amp;oacute;n lambda de la diferencia de ambas funciones con&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#valor inicial x0
return fsolve(lambda x : fun1(x) - fun2(x),x0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#se calcula el resultado de la intercepcion de 2 funciones

#sin y cos con valor inicial de 0.

resultado = EncontrarInterseccion(numpy.sin,numpy.cos,0.0)

#se genera el rango de -2 a 2.

x = numpy.linspace(-2,2,50)

#Se genera la grafica,

pylab.plot(x,numpy.sin(x),x,numpy.cos(x),result,numpy.sin(result),'ro')

#se muestra la grafica.

pylab.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/graficarlaintercepcionde2funciones.png"/&gt; &lt;/p&gt;
&lt;p&gt;La funci&amp;oacute;n seno se encuentra en color azul,la gr&amp;aacute;fica del coseno en color verde y la intercepci&amp;oacute;n es un punto de color rojo.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="numpy"></category><category term="Python"></category></entry><entry><title>Encontrar la raíz de una función con fsolve</title><link href="https://ecrespo.github.io/encontrar-la-raiz-de-una-funcion-con-fsolve.html" rel="alternate"></link><published>2013-02-14T10:00:00-05:30</published><updated>2013-02-14T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-14:/encontrar-la-raiz-de-una-funcion-con-fsolve.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo explica como calcular la ra&amp;iacute;z de una funci&amp;oacute;n utilizando la funci&amp;oacute;n &lt;code&gt;fsolve&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo se basa en un art&amp;iacute;culo en Ingl&amp;eacute;s "&lt;a href="https://glowingpython.blogspot.com/2011/05/how-to-find-roots-of-function-with.html"&gt;How to find the rooots of a function with fsolve&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;La funci&amp;oacute;n fsolve retorna la ra&amp;iacute;ces de una ecuaci&amp;oacute;n no lineal definida por &lt;code&gt;f(x) = 0&lt;/code&gt;.
Para …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo explica como calcular la ra&amp;iacute;z de una funci&amp;oacute;n utilizando la funci&amp;oacute;n &lt;code&gt;fsolve&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo se basa en un art&amp;iacute;culo en Ingl&amp;eacute;s "&lt;a href="https://glowingpython.blogspot.com/2011/05/how-to-find-roots-of-function-with.html"&gt;How to find the rooots of a function with fsolve&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;La funci&amp;oacute;n fsolve retorna la ra&amp;iacute;ces de una ecuaci&amp;oacute;n no lineal definida por &lt;code&gt;f(x) = 0&lt;/code&gt;.
Para este caso se calcular&amp;aacute; la ra&amp;iacute;z de la funci&amp;oacute;n &lt;code&gt;f(x) = x^3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="import fsolve para calcular la raiz de la funcion x^3"&gt;Import fsolve para calcular la raiz de la funcion x^3&lt;/h1&gt;
&lt;p&gt;from scipy.optimize import fsolve&lt;/p&gt;
&lt;h1 id="importar pylab"&gt;Importar pylab&lt;/h1&gt;
&lt;p&gt;import pylab&lt;/p&gt;
&lt;h1 id="importar numpy"&gt;importar numpy&lt;/h1&gt;
&lt;p&gt;import numpy&lt;/p&gt;
&lt;h1 id="se calcula la potencia 3 de x con la funcion lambda"&gt;se calcula la potencia 3 de x con la funcion lambda&lt;/h1&gt;
&lt;p&gt;potencia3 = lambda x : x**3&lt;/p&gt;
&lt;h1 id="se calcula la raiz de x^3 iniciando con x = 10"&gt;Se calcula la raiz de x^3 iniciando con x = 10&lt;/h1&gt;
&lt;p&gt;resultado = fsolve(potencia3,10) # starting from x = 10&lt;/p&gt;
&lt;p&gt;print resultado&lt;/p&gt;
&lt;h1 id="se define 400 valores de x entre -4 a 4"&gt;Se define 400 valores de x entre -4 a 4&lt;/h1&gt;
&lt;p&gt;x = numpy.linspace(-4,4,400)&lt;/p&gt;
&lt;h1 id="se genera la grafica, pasando el valor de x"&gt;Se genera la grafica, pasando el valor de x&lt;/h1&gt;
&lt;h1 id="la potencia 3era de x, el valor de resultado, la potencia 3era de resultado"&gt;la potencia 3era de x, el valor de resultado, la potencia 3era de resultado&lt;/h1&gt;
&lt;p&gt;pylab.plot(x,potencia3(x),resultado,potencia3(resultado),'ro')&lt;/p&gt;
&lt;h1 id="se define el grid"&gt;Se define el grid&lt;/h1&gt;
&lt;p&gt;pylab.grid(b=1)&lt;/p&gt;
&lt;h1 id="se muestra la grafica"&gt;Se muestra la grafica&lt;/h1&gt;
&lt;p&gt;pylab.show()
```
La gr&amp;aacute;fica muestra el punto donde se encuentra la ra&amp;iacute;z de la funci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/encontrarlaraizdeunafuncionconfsolve.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="matplotlib"></category><category term="numpy"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Graficar una función de 2 variables con matplotlib</title><link href="https://ecrespo.github.io/graficar-una-funcion-de-2-variables-con-matplotlib.html" rel="alternate"></link><published>2013-02-14T09:00:00-05:30</published><updated>2013-02-14T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-14:/graficar-una-funcion-de-2-variables-con-matplotlib.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo en Ingles "&lt;a href="https://glowingpython.blogspot.com/2012/01/how-to-plot-two-variable-functions-with.html"&gt;How to plot a function of two variables with matplotlib&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;Se tendr&amp;aacute; 2 gr&amp;aacute;ficas de una funci&amp;oacute;n de 2 variables, la primera ser&amp;aacute; la gr&amp;aacute;fica de intensidad y la segunda gr&amp;aacute;fica ser&amp;aacute; una gr&amp;aacute;fica 3D.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo en Ingles "&lt;a href="https://glowingpython.blogspot.com/2012/01/how-to-plot-two-variable-functions-with.html"&gt;How to plot a function of two variables with matplotlib&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;Se tendr&amp;aacute; 2 gr&amp;aacute;ficas de una funci&amp;oacute;n de 2 variables, la primera ser&amp;aacute; la gr&amp;aacute;fica de intensidad y la segunda gr&amp;aacute;fica ser&amp;aacute; una gr&amp;aacute;fica 3D.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="de numpy se explorta arange y exp"&gt;De numpy se explorta arange y exp&lt;/h1&gt;
&lt;p&gt;from numpy import exp,arange&lt;/p&gt;
&lt;h1 id="de pylab se importa meshgrid, cm, imshow, contour, clabel, clorbar, axis, title y show"&gt;De pylab se importa meshgrid, cm, imshow, contour, clabel, clorbar, axis, title y show&lt;/h1&gt;
&lt;p&gt;from pylab import meshgrid,cm,imshow,contour,clabel,colorbar,axis,title,show&lt;/p&gt;
&lt;p&gt;from mpl_toolkits.mplot3d import Axes3D&lt;/p&gt;
&lt;p&gt;from matplotlib import cm&lt;/p&gt;
&lt;p&gt;from matplotlib.ticker import LinearLocator, FormatStrFormatter&lt;/p&gt;
&lt;p&gt;import matplotlib.pyplot as plt&lt;/p&gt;
&lt;h1 id="se define la funcion que se va a graficar"&gt;Se define la funcion que se va a graficar&lt;/h1&gt;
&lt;p&gt;def z_func(x,y):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return (1-(x**2+y**3))*exp(-(x**2+y**2)/2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;def graficaIntencidad(Z):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se dibuja la funcion

im = imshow(Z,cmap=cm.RdBu)

#Se agrega el contorno de lineas con sus etiquetas

cset = contour(Z,arange(-1,1.5,0.2),linewidths=2,cmap=cm.Set2)

clabel(cset,inline=True,fmt='%1.1f',fontsize=10)

#Se agrega la barra de colores a la derecha

colorbar(im)

#Se crea el titulo de la grafica con estilo latex

title('$z=(1-x^2+y^3) e^{-(x^2+y^3)/2}$')

#Se muestra la grafica

show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;def grafica3D(X,Y,Z):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fig = plt.figure()

ax = fig.gca(projection='3d')

surf = ax.plot_surface(X, Y, Z, rstride=1, cstride=1,

                       cmap=cm.RdBu,linewidth=0, antialiased=False)

ax.zaxis.set_major_locator(LinearLocator(10))

ax.zaxis.set_major_formatter(FormatStrFormatter('%.02f'))

fig.colorbar(surf, shrink=0.5, aspect=5)

plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#rango de valores para x y y.

x = arange(-3.0,3.0,0.1)

y = arange(-3.0,3.0,0.1)

#Se define la grilla de puntos

X,Y = meshgrid(x, y)

#Se evalua la funcion segun los valores de X y Y

Z = z_func(X, Y)

graficaIntencidad(Z)

grafica3D(X,Y,Z)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```    &lt;/p&gt;
&lt;p&gt;Al ejecutar el script se mostrar&amp;aacute; la primera gr&amp;aacute;fica, al cerrarla aparecer&amp;aacute; la segunda gr&amp;aacute;fica.&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica de intensidad se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/graficarunafuncionde2variablesconmatplotlib-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica 3D se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/graficarunafuncionde2variablesconmatplotlib-1.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="matplotlib"></category><category term="numpy"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Creación de grafos con networkx. Parte 3.</title><link href="https://ecrespo.github.io/creacion-de-grafos-con-networkx-parte-3.html" rel="alternate"></link><published>2013-02-13T09:00:00-05:30</published><updated>2013-02-13T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-13:/creacion-de-grafos-con-networkx-parte-3.html</id><summary type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/creacion-de-grafos-con-networkx-parte-2.html#creacion-de-grafos-con-networkx-parte-2"&gt;art&amp;iacute;culo anterior se muestra como crear grafos a partir del contenido de un archivo&lt;/a&gt;, &lt;a href="https://www.seraph.to/creacion-de-grafos-con-networkx-parte-1.html#creacion-de-grafos-con-networkx-parte-1"&gt;en el primero se explica lo b&amp;aacute;sico en la creaci&amp;oacute;n de grafos&lt;/a&gt;, en este se tocar&amp;aacute; el tema de analizar los grafos, de extraer informaci&amp;oacute;n de los mismos.&lt;/p&gt;
&lt;p&gt;El ejemplo a continuaci&amp;oacute;n se crea …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/creacion-de-grafos-con-networkx-parte-2.html#creacion-de-grafos-con-networkx-parte-2"&gt;art&amp;iacute;culo anterior se muestra como crear grafos a partir del contenido de un archivo&lt;/a&gt;, &lt;a href="https://www.seraph.to/creacion-de-grafos-con-networkx-parte-1.html#creacion-de-grafos-con-networkx-parte-1"&gt;en el primero se explica lo b&amp;aacute;sico en la creaci&amp;oacute;n de grafos&lt;/a&gt;, en este se tocar&amp;aacute; el tema de analizar los grafos, de extraer informaci&amp;oacute;n de los mismos.&lt;/p&gt;
&lt;p&gt;El ejemplo a continuaci&amp;oacute;n se crea un grafo con varios nodos (de la "a" a la "z"), se enlazan todos los nodos, luego se muestra la cantidad de nodos, la cantidad de relaciones entre nodos, se le asigna un atributo a un nodo, un atributo entre 2 nodos, se averigua los vecinos de un nodo, el valor del atributo de un nodo, entre 2 nodos, se muestra tambi&amp;eacute;n la ruta m&amp;aacute;s corta para llegar del nodo m al b; cual es el promedio de la ruta m&amp;aacute;s corta, se muestra la relaci&amp;oacute;n de los nodos con respecto a m, cual es la ruta m&amp;aacute;s corta utilizando el &lt;a href="https://es.wikipedia.org/wiki/Algoritmo_de_Dijkstra"&gt;Algoritmo de Dijkstra&lt;/a&gt;  entre m y b. Para terminar se genera el grafo con varios m&amp;eacute;todos (espectral, aleatoria, circular y normal).&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;import networkx as net&lt;/p&gt;
&lt;h1 id="se importa la libreria pyplot de matplotlib como plt"&gt;Se importa la libreria pyplot de matplotlib como plt&lt;/h1&gt;
&lt;p&gt;import matplotlib.pyplot as plt&lt;/p&gt;
&lt;h1 id="se crea la instancia vacia del grafo"&gt;Se crea la instancia vacia del grafo&lt;/h1&gt;
&lt;p&gt;g=net.Graph()&lt;/p&gt;
&lt;h1 id="se crean los nodos con sus relaciones"&gt;Se crean los nodos con sus relaciones&lt;/h1&gt;
&lt;p&gt;g.add_edge('a','b')&lt;/p&gt;
&lt;p&gt;g.add_edge('b','c')&lt;/p&gt;
&lt;p&gt;g.add_edge('c','a')&lt;/p&gt;
&lt;p&gt;g.add_edge('a','d')&lt;/p&gt;
&lt;p&gt;g.add_edge('f','d')&lt;/p&gt;
&lt;p&gt;g.add_edge('g','f')&lt;/p&gt;
&lt;p&gt;g.add_edge('h','b')&lt;/p&gt;
&lt;p&gt;g.add_edge('i','h')&lt;/p&gt;
&lt;p&gt;g.add_edge('i','g')&lt;/p&gt;
&lt;p&gt;g.add_edge('j','c')&lt;/p&gt;
&lt;p&gt;g.add_edge('k','j')&lt;/p&gt;
&lt;p&gt;g.add_edge('l','k')&lt;/p&gt;
&lt;p&gt;g.add_edge('m','l')&lt;/p&gt;
&lt;p&gt;g.add_edge('k','h')&lt;/p&gt;
&lt;p&gt;g.add_edge('i','d')&lt;/p&gt;
&lt;p&gt;g.add_edge('f','k')&lt;/p&gt;
&lt;p&gt;g.add_edge('m','g')&lt;/p&gt;
&lt;p&gt;g.add_edge('n','m')&lt;/p&gt;
&lt;p&gt;g.add_edge('o','m')&lt;/p&gt;
&lt;p&gt;g.add_edge('p','o')&lt;/p&gt;
&lt;p&gt;g.add_edge('q','h')&lt;/p&gt;
&lt;p&gt;g.add_edge('r','q')&lt;/p&gt;
&lt;p&gt;g.add_edge('s','r')&lt;/p&gt;
&lt;p&gt;g.add_edge('t','a')&lt;/p&gt;
&lt;p&gt;g.add_edge('u','t')&lt;/p&gt;
&lt;p&gt;g.add_edge('v','u')&lt;/p&gt;
&lt;p&gt;g.add_edge('j','b')&lt;/p&gt;
&lt;p&gt;g.add_edge('w','f')&lt;/p&gt;
&lt;p&gt;g.add_edge('x','w')&lt;/p&gt;
&lt;p&gt;g.add_edge('y','i')&lt;/p&gt;
&lt;p&gt;g.add_edge('z','y')&lt;/p&gt;
&lt;p&gt;g.add_edge('n','p')&lt;/p&gt;
&lt;p&gt;g.add_edge('z','x')&lt;/p&gt;
&lt;p&gt;g.add_edge('z','v')&lt;/p&gt;
&lt;p&gt;g.add_edge('s','x')&lt;/p&gt;
&lt;p&gt;g.add_edge('p','v')&lt;/p&gt;
&lt;p&gt;g.add_edge('r','u')&lt;/p&gt;
&lt;p&gt;print "Nodos: ",g.nodes()&lt;/p&gt;
&lt;p&gt;print "Relaciones: ",g.edges()&lt;/p&gt;
&lt;h1 id="se define un tamagno al nodo a y un peso a la relacion entre el nodo a y b"&gt;Se define un tamagno al nodo a y un peso a la relacion entre el nodo a y b&lt;/h1&gt;
&lt;p&gt;g.node['a']['size']=1&lt;/p&gt;
&lt;p&gt;g['a']['b']['weight']=1&lt;/p&gt;
&lt;p&gt;print "Vecinos de m: ", g.neighbors('m')&lt;/p&gt;
&lt;p&gt;print "Valor del nodo a: ",g['a']&lt;/p&gt;
&lt;p&gt;print "Peso de la relacion entre a y b: ", g['a']['b']&lt;/p&gt;
&lt;p&gt;print "Ruta mas corta entre m y b: ",net.algorithms.shortest_path(g,'m','b')&lt;/p&gt;
&lt;p&gt;print "Promedio de la ruta mas corta ",net.algorithms.average_shortest_path_length(g)&lt;/p&gt;
&lt;p&gt;print "Muestra la relacion de ruta mas corta entre pares de nodos relacionado con m: ", net.algorithms.all_pairs_shortest_path(g)['m']&lt;/p&gt;
&lt;p&gt;print "Ruta mas corta usando el algoritmo de Dijkstra entre m y b:",net.algorithms.dijkstra_path(g, 'm', 'b')&lt;/p&gt;
&lt;h1 id="se dibuja el grafo"&gt;Se dibuja el grafo&lt;/h1&gt;
&lt;p&gt;net.draw(g)&lt;/p&gt;
&lt;h1 id="net.draw_spectral(g)"&gt;net.draw_spectral(g)&lt;/h1&gt;
&lt;h1 id="net.draw_circular(g)"&gt;net.draw_circular(g)&lt;/h1&gt;
&lt;h1 id="net.draw_random(g)"&gt;net.draw_random(g)&lt;/h1&gt;
&lt;h1 id="se muestra el grafico"&gt;Se muestra el grafico&lt;/h1&gt;
&lt;p&gt;plt.show()
```&lt;/p&gt;
&lt;p&gt;Para generar el grafo de forma espectral, circular o aleatoria se comenta el anterior y se descomenta el que se desea generar.&lt;/p&gt;
&lt;p&gt;El grafo normal se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/creaciondegrafosconnetworkx3-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el grafo espectral:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/creaciondegrafosconnetworkx3-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el grafo circular:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/creaciondegrafosconnetworkx3-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el grafo aleatorio:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/creaciondegrafosconnetworkx3-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;A parte de las gr&amp;aacute;ficas se imprime lo siguiente en pantalla:&lt;/p&gt;
&lt;p&gt;```
Nodos:  ['a', 'c', 'b', 'd', 'g', 'f', 'i', 'h', 'k', 'j', 'm', 'l', 'o', 'n', 'q', 'p', 's', 'r', 'u', 't', 'w', 'v', 'y', 'x', 'z']&lt;/p&gt;
&lt;p&gt;Relaciones:  [('a', 'c'), ('a', 'b'), ('a', 'd'), ('a', 't'), ('c', 'b'), ('c', 'j'), ('b', 'h'), ('b', 'j'), ('d', 'i'), ('d', 'f'), ('g', 'i'), ('g', 'm'), ('g', 'f'), ('f', 'w'), ('f', 'k'), ('i', 'y'), ('i', 'h'), ('h', 'q'), ('h', 'k'), ('k', 'j'), ('k', 'l'), ('m', 'o'), ('m', 'l'), ('m', 'n'), ('o', 'p'), ('n', 'p'), ('q', 'r'), ('p', 'v'), ('s', 'x'), ('s', 'r'), ('r', 'u'), ('u', 't'), ('u', 'v'), ('w', 'x'), ('v', 'z'), ('y', 'z'), ('x', 'z')]&lt;/p&gt;
&lt;p&gt;Vecinos de m:  ['o', 'l', 'g', 'n']&lt;/p&gt;
&lt;p&gt;Valor del nodo a:  {'c': {}, 'b': {'weight': 1}, 'd': {}, 't': {}}&lt;/p&gt;
&lt;p&gt;Peso de la relacion entre a y b:  {'weight': 1}&lt;/p&gt;
&lt;p&gt;Ruta mas corta entre m y b:  ['m', 'l', 'k', 'h', 'b']&lt;/p&gt;
&lt;p&gt;Promedio de la ruta mas corta  2.99&lt;/p&gt;
&lt;p&gt;Muestra la relacion de ruta mas corta entre pares de nodos relacionado con m:  {'a': ['m', 'g', 'i', 'd', 'a'], 'c': ['m', 'l', 'k', 'j', 'c'], 'b': ['m', 'g', 'i', 'h', 'b'], 'd': ['m', 'g', 'i', 'd'], 'g': ['m', 'g'], 'f': ['m', 'g', 'f'], 'i': ['m', 'g', 'i'], 'h': ['m', 'g', 'i', 'h'], 'k': ['m', 'l', 'k'], 'j': ['m', 'l', 'k', 'j'], 'm': ['m'], 'l': ['m', 'l'], 'o': ['m', 'o'], 'n': ['m', 'n'], 'q': ['m', 'g', 'i', 'h', 'q'], 'p': ['m', 'o', 'p'], 's': ['m', 'g', 'f', 'w', 'x', 's'], 'r': ['m', 'g', 'i', 'h', 'q', 'r'], 'u': ['m', 'o', 'p', 'v', 'u'], 't': ['m', 'g', 'i', 'd', 'a', 't'], 'w': ['m', 'g', 'f', 'w'], 'v': ['m', 'o', 'p', 'v'], 'y': ['m', 'g', 'i', 'y'], 'x': ['m', 'g', 'f', 'w', 'x'], 'z': ['m', 'o', 'p', 'v', 'z']}&lt;/p&gt;
&lt;p&gt;Ruta mas corta usando el algoritmo de Dijkstra entre m y b: ['m', 'g', 'i', 'h', 'b']&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;De esta forma se puede extraer informaci&amp;oacute;n del grafo como la ruta m&amp;aacute;s corta entre m y b (m,g,i,h y b) que se tiene el mismo resultado usando el Algoritmo de Dijkstra.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="matplotlib"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Obtener número de serial y número de versión de Raspberry Pi con Python</title><link href="https://ecrespo.github.io/obtener-numero-de-serial-y-numero-de-version-de-raspberry-pi-con-python.html" rel="alternate"></link><published>2013-02-06T10:00:00-05:30</published><updated>2013-02-06T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-06:/obtener-numero-de-serial-y-numero-de-version-de-raspberry-pi-con-python.html</id><summary type="html">&lt;p&gt;El Raspberry Pi tiene informaci&amp;oacute;n de n&amp;uacute;mero del n&amp;uacute;mero de revisi&amp;oacute;n del PCB, este n&amp;uacute;mero indica que se tiene peque&amp;ntilde;os cambios en el PCB. Estos cambios pueden afectar en el funcionamiento de los programas Python e incluso como est&amp;aacute; distribuido los pines (alimentaci&amp;oacute;n, entrada/salida, etc) en la placa.&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El Raspberry Pi tiene informaci&amp;oacute;n de n&amp;uacute;mero del n&amp;uacute;mero de revisi&amp;oacute;n del PCB, este n&amp;uacute;mero indica que se tiene peque&amp;ntilde;os cambios en el PCB. Estos cambios pueden afectar en el funcionamiento de los programas Python e incluso como est&amp;aacute; distribuido los pines (alimentaci&amp;oacute;n, entrada/salida, etc) en la placa.&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; informaci&amp;oacute;n se puede obtener desde el archivo /proc/cpuinfo como se indica a continuaci&amp;oacute;n:
```
ernesto@raspberrypi ~ $ cat /proc/cpuinfo &lt;/p&gt;
&lt;p&gt;Processor   : ARMv6-compatible processor rev 7 (v6l)&lt;/p&gt;
&lt;p&gt;BogoMIPS    : 697.95&lt;/p&gt;
&lt;p&gt;Features    : swp half thumb fastmult vfp edsp java tls &lt;/p&gt;
&lt;p&gt;CPU implementer : 0x41&lt;/p&gt;
&lt;p&gt;CPU architecture: 7&lt;/p&gt;
&lt;p&gt;CPU variant : 0x0&lt;/p&gt;
&lt;p&gt;CPU part    : 0xb76&lt;/p&gt;
&lt;p&gt;CPU revision    : 7&lt;/p&gt;
&lt;p&gt;Hardware    : BCM2708&lt;/p&gt;
&lt;p&gt;Revision    : 000f&lt;/p&gt;
&lt;p&gt;Serial      : 00000000bcd34f5e&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El n&amp;uacute;mero de Revisi&amp;oacute;n es 00f y el serial es 00000000bcd34f5e.
Las variantes del Raspberry Pi seg&amp;uacute;n n&amp;uacute;mero versi&amp;oacute;n se tiene a continuaci&amp;oacute;n (tomado de ac&amp;aacute;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modelo B Revisi&amp;oacute;n 1.0: El valor de cpuinfo es 0002.&lt;/li&gt;
&lt;li&gt;Modelo B Revisi&amp;oacute;n 1.0+ECN001(sin fusible, D14 se removi&amp;oacute;): El valor de cpuinfo es 0003.&lt;/li&gt;
&lt;li&gt;Modelo B Revisi&amp;oacute;n 2.0: El valor de cpuinfo es 0004,0005, 0006...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El sitio &lt;a href="https://www.raspberrypi-spy.co.uk/"&gt;Raspberrypi spy&lt;/a&gt;  tiene un par de scripts para obtener el n&amp;uacute;mero de revisi&amp;oacute;n y el serial de la placa.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el script (con una peque&amp;ntilde;a correcci&amp;oacute;n):
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;"""
Script que busca la informacion del serial y numero de revision en el Raspberry Pi.
Este script se obtiene de los siguientes enlaces:
Numero de Revision:
http://www.raspberrypi-spy.co.uk/2012/09/getting-your-raspberry-pi-revision-number-using-python/#more-574
Numero de Serial:
http://www.raspberrypi-spy.co.uk/2012/09/getting-your-raspberry-pi-serial-number-using-python/#more-570&lt;/p&gt;
&lt;p&gt;"""python&lt;/p&gt;
&lt;p&gt;def getrevision():
    # Extrae la informacion del numero de revision del raspberry pi
    #Se asigna a revision un string de 4 ceros.
    revision = "0000"
    #Se abre el archivo cpuinfo
    #Se 
    try:
        f = open('/proc/cpuinfo','r')
        #Se recorre el archivo
        for linea in f:
            #Si existe el contenido Revision en una linea
            if linea[0:8]=='Revision':
                #Se toma la longitud de la linea
                longitud =len(linea)
                #Se agrega la informacion completa de la revision
                revision = linea[11:longitud-1]
        #Se cierra el archivo
        f.close()&lt;/p&gt;
&lt;h1 id="si no abre el archivo se asigna 4 ceros a revision"&gt;Si no abre el archivo se asigna 4 ceros a revision&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;except IOError:
    revision = "0000"
#Se retorna el valor de revision
return revision
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;def getserial():
    # Extrae la informacion del serial desde cpuinfo
    #Se asigna un string con ceros a cpuserial
    cpuserial = "00000000"
    #Se intenta a capturar la informacion del archivo cpuinfo,
    #si no se tiene un mensaje de error.
    try:
        f = open('/proc/cpuinfo','r')
        #se recorre el archivo linea a linea
        for linea in f:
            #Si existe el contenido Serial en la linea
            if linea[0:6]=='Serial':
                #Se agrega la informacion completa del serial del cpu
                cpuserial = linea[10:-1]
        #Se cierra el archivo
        f.close()
    #Si no abre el archivo se asigna el valor de error al serial
    except IOError:
        cpuserial = "ERROR000000000"
    #retorna el valor del serial del cpu
    return cpuserial&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    print u"El n&amp;uacute;mero de Serial del Raspberry Pi es: %s " %getserial()
    print u"El n&amp;uacute;mero de Revision del Raspberry Pi es: %s" %getrevision()
```&lt;/p&gt;
&lt;p&gt;Al ejecutar el script se obtiene lo siguiente:&lt;/p&gt;
&lt;p&gt;```
ernesto@raspberrypi ~ $ ./versionSerial.py &lt;/p&gt;
&lt;p&gt;El n&amp;uacute;mero de Serial del Raspberry Pi es: 00000000bcd34f5e &lt;/p&gt;
&lt;p&gt;El n&amp;uacute;mero de Revision del Raspberry Pi es: 000f
```
Ya con esta informaci&amp;oacute;n se tiene que el Raspberry Pi es de la revis&amp;oacute;n 2.0.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la organizaci&amp;oacute;n de los pines de la revisi&amp;oacute;n 1.0:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/obtenernumerodeserialynumerodeversionderaspberrypiconpython-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Y la organizaci&amp;oacute;n de los pines de la revisi&amp;oacute;n 2.0:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/obtenernumerodeserialynumerodeversionderaspberrypiconpython-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Con esta informaci&amp;oacute;n ya se conoce como realizar las conexiones de los circuitos con el Rasberry Pi.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="Rasberry Pi"></category><category term="Rasbian"></category></entry><entry><title>Graficar el espectro de frecuencia con Numpy</title><link href="https://ecrespo.github.io/graficar-el-espectro-de-frecuencia-con-numpy.html" rel="alternate"></link><published>2013-02-06T09:00:00-05:30</published><updated>2013-02-06T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-06:/graficar-el-espectro-de-frecuencia-con-numpy.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; como generar una gr&amp;aacute;fica de una se&amp;ntilde;al que se tiene en el dominio del tiempo a generar la gr&amp;aacute;fica en el dominio de la frecuencia.&lt;/p&gt;
&lt;p&gt;Est&amp;eacute; art&amp;iacute;culo se basa de un art&amp;iacute;culo en Ingl&amp;eacute;s  llamado "&lt;a href="https://glowingpython.blogspot.com/search?updated-max=2011-08-05T17:10:00%2B01:00&amp;amp;max-results=3&amp;amp;start=42&amp;amp;by-date=false"&gt;How to plot the frequency spectrum with scipy&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;El an&amp;aacute;lisis …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; como generar una gr&amp;aacute;fica de una se&amp;ntilde;al que se tiene en el dominio del tiempo a generar la gr&amp;aacute;fica en el dominio de la frecuencia.&lt;/p&gt;
&lt;p&gt;Est&amp;eacute; art&amp;iacute;culo se basa de un art&amp;iacute;culo en Ingl&amp;eacute;s  llamado "&lt;a href="https://glowingpython.blogspot.com/search?updated-max=2011-08-05T17:10:00%2B01:00&amp;amp;max-results=3&amp;amp;start=42&amp;amp;by-date=false"&gt;How to plot the frequency spectrum with scipy&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;El an&amp;aacute;lisis de frecuencia es el proceso de determinar la representaci&amp;oacute;n en el dominio de una se&amp;ntilde;al de dominio del tiempo y comunmente empleando la &lt;a href="https://es.wikipedia.org/wiki/Transformada_de_fourier"&gt;Transformada de Fourier&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;La &lt;a href="https://es.wikipedia.org/wiki/Transformada_de_Fourier_discreta"&gt;Transformada Discreta de Fourier&lt;/a&gt;  (DFT) se usa para determinar el contenido de frecuencias de las se&amp;ntilde;ales  y la &lt;a href="https://es.wikipedia.org/wiki/Transformada_r%C3%A1pida_de_Fourier"&gt;Transformada R&amp;aacute;pida de Fourier&lt;/a&gt;  (FFT) es un m&amp;eacute;todo eficiente para calcular la Transformada Discreta de Fourier. Scipy implemente  FFT y se usar&amp;aacute; para analizar el espectro de frecuencias.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo que gr&amp;aacute;fica la amplitud en el dominio de frecuencia de la funci&amp;oacute;n coseno del dominio del tiempo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importa coseno, linspace y pi"&gt;Importa  coseno, linspace y pi&lt;/h1&gt;
&lt;p&gt;from numpy import cos, linspace, pi&lt;/p&gt;
&lt;h1 id="importa plot, show, title, xlabel, ylabel y subplot para graficar"&gt;Importa plot, show, title, xlabel, ylabel y subplot para graficar&lt;/h1&gt;
&lt;p&gt;from pylab import plot, show, title, xlabel, ylabel, subplot&lt;/p&gt;
&lt;h1 id="importa fft y arange"&gt;Importa fft y arange&lt;/h1&gt;
&lt;p&gt;from scipy import fft, arange&lt;/p&gt;
&lt;h1 id="_1"&gt;&lt;/h1&gt;
&lt;p&gt;def plotSpectrum(y,Fs):&lt;/p&gt;
&lt;p&gt;"""&lt;/p&gt;
&lt;p&gt;grafica la amplitud del espectro de y(t)&lt;/p&gt;
&lt;p&gt;"""&lt;/p&gt;
&lt;p&gt;n = len(y) # longitud de la se&amp;ntilde;al&lt;/p&gt;
&lt;p&gt;k = arange(n)&lt;/p&gt;
&lt;p&gt;T = n/Fs&lt;/p&gt;
&lt;p&gt;frq = k/T # 2 lados del rango de frecuancia&lt;/p&gt;
&lt;p&gt;frq = frq[range(n/2)] # Un lado del rango de frecuencia&lt;/p&gt;
&lt;p&gt;Y = fft(y)/n # fft calcula la normalizacion&lt;/p&gt;
&lt;p&gt;Y = Y[range(n/2)]&lt;/p&gt;
&lt;p&gt;plot(frq,abs(Y),'r') # grafica el espectro de frecuencia&lt;/p&gt;
&lt;p&gt;xlabel('Frecuencia (Hz)')&lt;/p&gt;
&lt;p&gt;ylabel('|Y(f)|')&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Fs = 150.0;  # rata de muestreo

Ts = 1.0/Fs; # intevalo de muestreo

t = arange(0,1,Ts) # vector tiempo

ff = 5;   # frecuencia de la se&amp;ntilde;al

y = cos(5*pi*ff*t)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#Proceso de graficar la se&amp;ntilde;al&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;subplot(2,1,1)

plot(t,y)

xlabel('Tiempo')

ylabel('Amplitud')

subplot(2,1,2)

#Se llama a la funcion con la se&amp;ntilde;al y la rata de muestreo

plotSpectrum(y,Fs)

show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```    &lt;/p&gt;
&lt;p&gt;Al ejecutar el script se genera la siguiente gr&amp;aacute;fica:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/graficarelespectrodefrecuenciaconnumpy.png"/&gt; &lt;/p&gt;
&lt;h2 id="_2"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="matplotlib"></category><category term="numpy"></category><category term="Python"></category></entry><entry><title>Instalación de Raspbian en un Raspberry Pi.</title><link href="https://ecrespo.github.io/instalacion-de-raspbian-en-un-raspberry-pi.html" rel="alternate"></link><published>2013-02-05T09:00:00-05:30</published><updated>2013-02-05T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-05:/instalacion-de-raspbian-en-un-raspberry-pi.html</id><summary type="html">&lt;p&gt;Raspberry Pi es una placa de computadora de bajo costo (M&amp;aacute;s informaci&amp;oacute;n en &lt;a href="https://es.wikipedia.org/wiki/Raspberry_Pi"&gt;wikipedia&lt;/a&gt;) desarrollada por el Reino Unido.&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra un esquema de la placa:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalacionderaspbianenunraspberrypi-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n 2 fotos del unboxing  del Raspberry Pi que me lleg&amp;oacute; hace una semana:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalacionderaspbianenunraspberrypi-2.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalacionderaspbianenunraspberrypi-3.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;Para poner a funcionar la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Raspberry Pi es una placa de computadora de bajo costo (M&amp;aacute;s informaci&amp;oacute;n en &lt;a href="https://es.wikipedia.org/wiki/Raspberry_Pi"&gt;wikipedia&lt;/a&gt;) desarrollada por el Reino Unido.&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra un esquema de la placa:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalacionderaspbianenunraspberrypi-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n 2 fotos del unboxing  del Raspberry Pi que me lleg&amp;oacute; hace una semana:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalacionderaspbianenunraspberrypi-2.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalacionderaspbianenunraspberrypi-3.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;Para poner a funcionar la placa es necesario lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un cable de monitor VGA a HDMI.&lt;/li&gt;
&lt;li&gt;Una tarjeta de Memoria SD (m&amp;iacute;nimo 8 GB).&lt;/li&gt;
&lt;li&gt;Un teclado y rat&amp;oacute;n USB.&lt;/li&gt;
&lt;li&gt;Cable de red.&lt;/li&gt;
&lt;li&gt;Cargador de Celular microusb.&lt;/li&gt;
&lt;li&gt;Una versi&amp;oacute;n de Linux (para este caso Raspbian una versi&amp;oacute;n de Debian Wheezy para Arquitectura ARM).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para bajar  Rasbian lo pueden hacer desde el siguiente &lt;a href="downloads.raspberrypi.org/images/raspbian/2012-12-16-wheezy-raspbian/2012-12-16-wheezy-raspbian.zip"&gt;enlace&lt;/a&gt;, el n&amp;uacute;mero SHA-1 para verificar la integridad del archivo es el siguiente:  &lt;code&gt;514974a5fcbbbea02151d79a715741c2159d4b0a&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;El usuario del sistema es &lt;code&gt;pi&lt;/code&gt; y la clave &lt;code&gt;raspberry&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para instalar la imagen del Raspbian en la memoria SD es necesario colocar la memoria en un equipo, descomprimir el archivo descargado y desde la l&amp;iacute;nea de comandos ejecutar un dd (para este caso la memoria se encuentra en /dev/sdb, es necesario verificar la identificaci&amp;oacute;n de la memoria antes de ejecutar el comando):
```
dd dd bs=1M if=./2012-12-16-wheezy-raspbian.img of=/dev/sdb&lt;/p&gt;
&lt;p&gt;1850+0 registros le&amp;iacute;dos
1850+0 registros escritos
1939865600 bytes (1,9 GB) copiados, 1610,06 s, 1,2 MB/s
```
El siguiente v&amp;iacute;deo muestra el proceso de arranque de raspbian. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/WQ3pezQsApE"&gt;https://youtu.be/WQ3pezQsApE&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;V&amp;iacute;deo donde se muestra la configuraci&amp;oacute;n del raspbian:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/Xc2pMabUWAo"&gt;https://youtu.be/Xc2pMabUWAo&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Para finalizar se muestra una foto del escritorio LXDE del Raspbian:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/instalacionderaspbianenunraspberrypi-4.jpg"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="General"></category><category term="Linux"></category></entry><entry><title>Contador incremental con un display 7 segmentos y Arduino</title><link href="https://ecrespo.github.io/contador-incremental-con-un-display-7-segmentos-y-arduino.html" rel="alternate"></link><published>2013-02-04T09:00:00-05:30</published><updated>2013-02-04T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-04:/contador-incremental-con-un-display-7-segmentos-y-arduino.html</id><summary type="html">&lt;p&gt;Luego de explicar &lt;a href="https://www.seraph.to/encender-y-apagar-un-led-constantemente-con-arduino.html#encender-y-apagar-un-led-constantemente-con-arduino"&gt;como se enciende y apaga de manera constante un LED en un Arduino&lt;/a&gt;, ahora se mostrar&amp;aacute; como conectar un Display 7 segmento de c&amp;aacute;todo com&amp;uacute;n.&lt;/p&gt;
&lt;p&gt;El display incrementar&amp;aacute; de 1 a 9, luego pasa a valor 0 y vuelve a contar desde 1 a 9, a intervalos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Luego de explicar &lt;a href="https://www.seraph.to/encender-y-apagar-un-led-constantemente-con-arduino.html#encender-y-apagar-un-led-constantemente-con-arduino"&gt;como se enciende y apaga de manera constante un LED en un Arduino&lt;/a&gt;, ahora se mostrar&amp;aacute; como conectar un Display 7 segmento de c&amp;aacute;todo com&amp;uacute;n.&lt;/p&gt;
&lt;p&gt;El display incrementar&amp;aacute; de 1 a 9, luego pasa a valor 0 y vuelve a contar desde 1 a 9, a intervalos de 1 segundo.&lt;/p&gt;
&lt;p&gt;Requerimientos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Arduino Uno.  &lt;/li&gt;
&lt;li&gt;Protoboard.&lt;/li&gt;
&lt;li&gt;Cables.&lt;/li&gt;
&lt;li&gt;Display 7 segmentos de c&amp;aacute;todo com&amp;uacute;n.&lt;/li&gt;
&lt;li&gt;Resistencia de 220 Ohms.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En la siguiente figura se muestra la identificaci&amp;oacute;n de los LEDs del display 7 segmentos:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/contadorincrementalconundisplay7segmentosyarduino-1.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;El esquema de conexi&amp;oacute;n es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/contadorincrementalconundisplay7segmentosyarduino-2.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;Conexiones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pin a - Digital 7&lt;/li&gt;
&lt;li&gt;Pin b - Digital 8&lt;/li&gt;
&lt;li&gt;Pin c - Digital 9&lt;/li&gt;
&lt;li&gt;Pin d - Digital 10&lt;/li&gt;
&lt;li&gt;Pin e - Digital 11&lt;/li&gt;
&lt;li&gt;Pin f - Digital 12&lt;/li&gt;
&lt;li&gt;Pin g - Digital 13&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La siguiente figura se muestra el montaje del circuito:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/contadorincrementalconundisplay7segmentosyarduino-3.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```
int pausa=1000; // define la pausa entre cada digito&lt;/p&gt;
&lt;h1 id="se definen los pines de salida al display 7 segmentos"&gt;Se definen los Pines de salida al display 7 segmentos&lt;/h1&gt;
&lt;p&gt;void setup()&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;pinMode(7, OUTPUT);  &lt;/p&gt;
&lt;p&gt;pinMode(8, OUTPUT);&lt;/p&gt;
&lt;p&gt;pinMode(9, OUTPUT);&lt;/p&gt;
&lt;p&gt;pinMode(10, OUTPUT);&lt;/p&gt;
&lt;p&gt;pinMode(11, OUTPUT);&lt;/p&gt;
&lt;p&gt;pinMode(12, OUTPUT);&lt;/p&gt;
&lt;p&gt;pinMode(13, OUTPUT);&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;//Se define la funcion display que recibe 7&lt;/p&gt;
&lt;p&gt;//variables y se asignan a cada una de sus salidas&lt;/p&gt;
&lt;p&gt;void display (int a, int b, int c, int d, int e, int f, int g)&lt;/p&gt;
&lt;p&gt;// Funcion del display&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;digitalWrite (7,a);   &lt;/p&gt;
&lt;p&gt;digitalWrite (8,b);   &lt;/p&gt;
&lt;p&gt;digitalWrite (9,c);&lt;/p&gt;
&lt;p&gt;digitalWrite (10,d);&lt;/p&gt;
&lt;p&gt;digitalWrite (11,e);&lt;/p&gt;
&lt;p&gt;digitalWrite (12,f);&lt;/p&gt;
&lt;p&gt;digitalWrite (13,g);&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;//Funcion principal que genera un lazo continuo&lt;/p&gt;
&lt;p&gt;void loop() &lt;/p&gt;
&lt;p&gt;// Dependiendo de cada d&amp;iacute;gito, se env&amp;iacute;a a la funci&amp;oacute;n display&lt;/p&gt;
&lt;p&gt;// los estados (0 y 1) a cada uno de los segmentos&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;display (1,1,1,1,1,1,0); //escribe 0&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;display (0,1,1,0,0,0,0); //escribe 1&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;display (1,1,0,1,1,0,1); //escribe 2&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;display (1,1,1,1,0,0,1); //escribe 3&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;display (0,1,1,0,0,1,1); //escribe 4&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;display (1,0,1,1,0,1,1); //escribe 5&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;display (1,0,1,1,1,1,1); //escribe 6&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;display (1,1,1,0,0,0,0); //escribe 7&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;display (1,1,1,1,1,1,1); //escribe 8&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;display (1,1,1,0,0,1,1); //escribe 9&lt;/p&gt;
&lt;p&gt;delay(pausa);&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la conexi&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/contadorincrementalconundisplay7segmentosyarduino-4.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;Para terminar, se muestra un v&amp;iacute;deo con el contador funcionando:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/u4jXy_XypEY"&gt;https://youtu.be/u4jXy_XypEY&lt;/a&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Arduino"></category><category term="Linux"></category><category term="Debian"></category><category term="Ubuntu"></category></entry><entry><title>Graficar consumo de memoria con memory_profiler</title><link href="https://ecrespo.github.io/graficar-consumo-de-memoria-con-memory_profiler.html" rel="alternate"></link><published>2013-02-03T10:00:00-05:30</published><updated>2013-02-03T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-03:/graficar-consumo-de-memoria-con-memory_profiler.html</id><summary type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/monitorear-el-uso-de-memoria-de-un-programa-python-con-memory_profiler.html#monitorear-el-uso-de-memoria-de-un-programa-python-con-memory_profiler"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explica como usar memory_profiler para evaluar el consumo de memoria de un programa Python, a continuaci&amp;oacute;n se explicar&amp;aacute; como graficar ese consumo utilizando matplotlib.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo &lt;a href="http://fseoane.net/blog/2013/memory-plots-with-memory_profiler/"&gt;Memory plots with memory_profiler&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se har&amp;aacute; una peque&amp;ntilde;a modificaci&amp;oacute;n al programa que c&amp;aacute;lcula la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/monitorear-el-uso-de-memoria-de-un-programa-python-con-memory_profiler.html#monitorear-el-uso-de-memoria-de-un-programa-python-con-memory_profiler"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explica como usar memory_profiler para evaluar el consumo de memoria de un programa Python, a continuaci&amp;oacute;n se explicar&amp;aacute; como graficar ese consumo utilizando matplotlib.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo &lt;a href="http://fseoane.net/blog/2013/memory-plots-with-memory_profiler/"&gt;Memory plots with memory_profiler&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se har&amp;aacute; una peque&amp;ntilde;a modificaci&amp;oacute;n al programa que c&amp;aacute;lcula la matriz inversa:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importar de memory_profiler a memory_usage"&gt;Importar de memory_profiler a memory_usage&lt;/h1&gt;
&lt;p&gt;from memory_profiler import memory_usage&lt;/p&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se crea la funcion que calcula la matriz inversa"&gt;Se crea la funcion que calcula la matriz inversa&lt;/h1&gt;
&lt;p&gt;def Inversa(n):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return np.matrix(np.random.rand(n,n)).I

#rando = np.random.rand(n, n)

#a = np.matrix(rando)

#inversa = a.I



return inversa
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se define una lista de  tama&amp;ntilde;os de la matriz

tamagno = 2 ** np.arange(0, 12)

#Se calcula la memoria usada de la funcion Inversa pasando el ultimo tama&amp;ntilde;o de la lista generada

mem_usage = memory_usage((Inversa,(tamagno[-1],)),interval=.01)

#Se imprime la lista que contiene la informaci&amp;oacute;n de la memoria usada

print mem_usage

#Se importa pylab

import pylab as pl

#Se genera la gr&amp;aacute;fica

pl.plot(np.arange(len(mem_usage)) * .01, mem_usage, label='Matriz Inversa')

pl.xlabel('Tiempo (seg)')

pl.ylabel('Consumo de memoria (MB)')

pl.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado de la ejecuci&amp;oacute;n es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[11.39453125, 13.39453125, 15.45703125, 17.51953125, 19.83984375, 21.90234375, 23.96484375, 26.02734375, 28.34765625, 30.41015625, 32.73046875, 34.79296875, 36.85546875, 38.91796875, 41.23828125, 43.30078125, 53.80859375, 64.37890625, 74.94921875, 48.70703125, 60.30859375, 71.91015625, 77.8046875, 81.15625, 85.0234375, 88.890625, 92.5, 96.109375, 99.71875, 103.5859375, 107.453125, 111.04296875, 114.39453125, 118.00390625, 121.61328125, 125.22265625, 128.83203125, 132.44140625, 134.76171875, 138.11328125, 139.6328125, 139.6328125, 140.5703125, 140.5703125, 140.5703125, 140.5703125, 140.5703125, 140.5703125, 140.5703125, 140.4609375, 140.4609375, 140.4609375, 139.953125, 140.4609375, 140.4609375, 140.4609375, 140.4609375, 140.4609375, 140.4609375, 140.4609375, 140.4609375, 140.20703125, 140.20703125, 139.953125, 140.20703125, 140.20703125, 140.4609375, 140.4609375, 140.4609375, 140.4609375, 140.4609375, 140.4609375, 140.6640625, 140.6640625, 140.6640625, 140.05078125, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.625, 140.625, 140.625, 140.625, 140.05078125, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.05078125, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.05078125, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.55859375, 140.359375, 140.61328125, 140.61328125, 140.61328125, 140.61328125, 140.61328125, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.7265625, 140.75, 140.75, 140.75, 140.75, 140.75, 140.75, 140.75, 140.75, 140.75, 140.75, 140.75, 140.75, 141.26171875, 141.26171875, 141.26171875, 141.26171875, 140.75, 140.75, 141.26171875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 144.8671875, 142.80859375, 140.75, 140.75, 140.75, 141.26171875, 141.26171875, 141.26171875, 141.26171875, 140.8359375, 149.08203125, 149.08203125, 153.4609375, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 157.328125, 149.08203125, 149.08203125, 140.8359375, 140.8359375, 141.34765625, 141.34765625, 141.34765625, 141.34765625, 141.34765625, 142.89453125, 142.89453125, 143.6640625, 144.953125, 144.953125, 144.953125, 144.953125, 144.953125, 144.953125, 144.953125, 144.953125, 144.953125, 144.953125, 144.953125, 142.89453125, 142.89453125, 142.89453125, 142.89453125, 140.8359375, 140.8359375, 140.8359375, 140.8359375, 140.8359375, 140.8359375, 140.8359375, 140.8359375, 140.8359375, 140.8359375, 140.8359375, 141.34375, 141.34375, 141.34375, 140.83984375, 140.83984375, 140.83984375, 142.8984375, 143.41015625, 144.95703125, 144.95703125, 144.95703125, 144.95703125, 144.95703125, 144.95703125, 144.95703125, 144.95703125, 144.95703125, 144.95703125, 144.95703125, 144.95703125, 142.8984375, 142.8984375, 140.84375, 140.84375, 140.84375, 141.35546875, 141.35546875, 141.35546875, 141.35546875, 140.84375, 144.96484375, 148.83203125, 156.3046875, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 157.078125, 149.08984375, 149.08984375, 140.84375, 140.84375, 141.35546875, 141.35546875, 141.35546875, 141.35546875, 140.84375, 142.90234375, 142.90234375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 144.9609375, 142.90234375, 142.90234375, 140.84375, 140.84375, 140.84375, 141.35546875, 141.35546875, 141.35546875, 141.35546875, 140.84375, 140.84375, 141.765625, 150.015625, 160.84375, 161.35546875, 76.8515625, 12.84375]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica que se genera es la siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="gr&amp;aacute;fica consumo de memoria" src="./images/2013-grafica-memoria.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se puede notar en la gr&amp;aacute;fica que se incrementa el consumo de memoria r&amp;aacute;pidamente en menos de 1 segundo a aproximadamente 140MB, luego viene una estabilizaci&amp;oacute;n con peque&amp;ntilde;os aumentos y disminuciones al valor constante hasta que se genera una ca&amp;iacute;da a 12MB a los 5 segundos de ejecuci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Si desea ver m&amp;aacute;s ejemplos de como graficar el consumo de memoria puede revisar el art&amp;iacute;culo el cual se baso este.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="numpy"></category><category term="Python"></category></entry><entry><title>Monitorear el uso de memoria de un programa Python con memory_profiler</title><link href="https://ecrespo.github.io/monitorear-el-uso-de-memoria-de-un-programa-python-con-memory_profiler.html" rel="alternate"></link><published>2013-02-02T10:00:00-05:30</published><updated>2013-02-02T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-02:/monitorear-el-uso-de-memoria-de-un-programa-python-con-memory_profiler.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Memory_profiler&lt;/code&gt; es un m&amp;oacute;dulo Python desarrollado para monitorear el consumo de memoria de un programa Python l&amp;iacute;nea por l&amp;iacute;nea de cada instrucci&amp;oacute;n del programa.&lt;/p&gt;
&lt;p&gt;Para instalar el m&amp;oacute;dulo se usa &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;easy_install -U memory_profiler&lt;/code&gt;
&lt;code&gt;pip install -U memory_profiler&lt;/code&gt;
Se muestra el c&amp;oacute;digo del art&amp;iacute;culo sobre profiling publicado &lt;a href="http://blog.crespo.org.ve/2012/12/profiling-de-un-script-python-con.html"&gt;antes …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Memory_profiler&lt;/code&gt; es un m&amp;oacute;dulo Python desarrollado para monitorear el consumo de memoria de un programa Python l&amp;iacute;nea por l&amp;iacute;nea de cada instrucci&amp;oacute;n del programa.&lt;/p&gt;
&lt;p&gt;Para instalar el m&amp;oacute;dulo se usa &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;easy_install -U memory_profiler&lt;/code&gt;
&lt;code&gt;pip install -U memory_profiler&lt;/code&gt;
Se muestra el c&amp;oacute;digo del art&amp;iacute;culo sobre profiling publicado &lt;a href="http://blog.crespo.org.ve/2012/12/profiling-de-un-script-python-con.html"&gt;antes&lt;/a&gt;:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se define el uso del decorador profile. en la funcion que genera matrices inversas."&gt;Se define el uso del decorador profile. En la funcion que genera matrices inversas.&lt;/h1&gt;
&lt;p&gt;@profile
def Inversa(n):
    a = np.matrix(np.random.rand(n, n))
    return a.I&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    #Se define una lista de  tama&amp;ntilde;os de la matriz
    tamagno = 2 ** np.arange(0, 12)
    #Se recorre la lista  y se invierte cada matriz con la
    #funcion Inversa
    for n in tamagno:
        Inversa(n)
&lt;code&gt;Para iniciar el monitoreo se ejecuta el siguiente comando:&lt;/code&gt;python
python -m memory_profiler matrizinversa.py
```&lt;/p&gt;
&lt;p&gt;El resultado se muestra a continuaci&amp;oacute;n:
```python
Filename: matrizinversa.py&lt;/p&gt;
&lt;h1 id="line # mem usage increment line contents"&gt;Line #    Mem usage    Increment   Line Contents&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt; 8                             @profile
 9     11.89 MB      0.00 MB   def Inversa(n):
10     11.91 MB      0.02 MB       a = np.matrix(np.random.rand(n, n))
11     12.10 MB      0.19 MB       return a.I
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.11 MB      0.00 MB   def Inversa(n):
    10     12.11 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.16 MB      0.05 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.16 MB      0.00 MB   def Inversa(n):
    10     12.16 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.16 MB      0.00 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.16 MB      0.00 MB   def Inversa(n):
    10     12.16 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.16 MB      0.00 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.16 MB      0.00 MB   def Inversa(n):
    10     12.16 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.16 MB      0.00 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.16 MB      0.00 MB   def Inversa(n):
    10     12.16 MB      0.00 MB       a = np.matrix(np.random.rand(n, n))
    11     12.17 MB      0.00 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.17 MB      0.00 MB   def Inversa(n):
    10     12.22 MB      0.05 MB       a = np.matrix(np.random.rand(n, n))
    11     12.35 MB      0.13 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.35 MB      0.00 MB   def Inversa(n):
    10     12.45 MB      0.09 MB       a = np.matrix(np.random.rand(n, n))
    11     12.95 MB      0.50 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.45 MB      0.00 MB   def Inversa(n):
    10     12.95 MB      0.50 MB       a = np.matrix(np.random.rand(n, n))
    11     13.54 MB      0.59 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.53 MB      0.00 MB   def Inversa(n):
    10     14.54 MB      2.00 MB       a = np.matrix(np.random.rand(n, n))
    11     16.79 MB      2.26 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.79 MB      0.00 MB   def Inversa(n):
    10     20.79 MB      8.00 MB       a = np.matrix(np.random.rand(n, n))
    11     28.88 MB      8.09 MB       return a.I&lt;/p&gt;
&lt;p&gt;Filename: matrizinversa.py
Line #    Mem usage    Increment   Line Contents
================================================
     8                             @profile
     9     12.87 MB      0.00 MB   def Inversa(n):
    10     44.87 MB     32.00 MB       a = np.matrix(np.random.rand(n, n))
    11     77.38 MB     32.50 MB       return a.I
```&lt;/p&gt;
&lt;p&gt;Se muestran los ciclos de ejecuci&amp;oacute;n de la generaci&amp;oacute;n de la matriz inversa del archivo &lt;code&gt;matrizinversa.py&lt;/code&gt;, se representa en columna la informaci&amp;oacute;n de la l&amp;iacute;nea que se est&amp;aacute; ejecutando del programa, la cantidad de memoria utilizada, el incremento de memoria y el c&amp;oacute;digo que se est&amp;aacute; ejecutando.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Creación de grafos con networkx. Parte 2.</title><link href="https://ecrespo.github.io/creacion-de-grafos-con-networkx-parte-2.html" rel="alternate"></link><published>2013-02-02T09:00:00-05:30</published><updated>2013-02-02T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-02:/creacion-de-grafos-con-networkx-parte-2.html</id><summary type="html">&lt;p&gt;El &lt;a href="https://www.seraph.to/creacion-de-grafos-con-networkx-parte-1.html#creacion-de-grafos-con-networkx-parte-1"&gt;primer art&amp;iacute;culo sobre networkx&lt;/a&gt;  mostraba como crear los nodos y los enlaces de las redes (relaci&amp;oacute;n de Estados y Ciudades de Venezuela).&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se basa en un art&amp;iacute;culo del sitio "The Glowing Python&lt;a href="https://glowingpython.blogspot.com/"&gt;The Glowing Python&lt;/a&gt;", este art&amp;iacute;culo se llama Primeros pasos con Networkx (en ingl&amp;eacute;s). Este …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El &lt;a href="https://www.seraph.to/creacion-de-grafos-con-networkx-parte-1.html#creacion-de-grafos-con-networkx-parte-1"&gt;primer art&amp;iacute;culo sobre networkx&lt;/a&gt;  mostraba como crear los nodos y los enlaces de las redes (relaci&amp;oacute;n de Estados y Ciudades de Venezuela).&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se basa en un art&amp;iacute;culo del sitio "The Glowing Python&lt;a href="https://glowingpython.blogspot.com/"&gt;The Glowing Python&lt;/a&gt;", este art&amp;iacute;culo se llama Primeros pasos con Networkx (en ingl&amp;eacute;s). Este art&amp;iacute;culo usa como ejemplo las relaciones de los personajes de la novela Los Miserables. Usa un archivo con extensi&amp;oacute;n gml que maneja las relaciones de los personajes, el archivo lo pueden descargar de &lt;a href="https://gephi.org/datasets/lesmiserables.gml.zip"&gt;aqu&amp;iacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El archivo contiene la definici&amp;oacute;n de los nodos dentro de un grafo, la informaci&amp;oacute;n de cada nodo se coloca entre corchetes como se muestra a continuaci&amp;oacute;n:
```python
graph&lt;/p&gt;
&lt;p&gt;[&lt;/p&gt;
&lt;p&gt;node&lt;/p&gt;
&lt;p&gt;[&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;id 0

label "Myriel"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;node&lt;/p&gt;
&lt;p&gt;[&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;id 1

label "Napoleon"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;node&lt;/p&gt;
&lt;p&gt;[&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;id 2

label "MlleBaptistine"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;node&lt;/p&gt;
&lt;p&gt;[&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;id 3

label "MmeMagloire"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;]
```&lt;/p&gt;
&lt;p&gt;Se identifica el nodo y se coloca una etiqueta, en este caso la etiqueta es sobre un personaje de la novela ya mencionada antes.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la generaci&amp;oacute;n del grafo se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa networkx como nx"&gt;Se importa networkx como nx&lt;/h1&gt;
&lt;p&gt;import networkx as nx&lt;/p&gt;
&lt;h1 id="se importa la libreria pyplot de matplotlib como plt"&gt;Se importa la libreria pyplot de matplotlib como plt&lt;/h1&gt;
&lt;p&gt;import matplotlib.pyplot as plt&lt;/p&gt;
&lt;h1 id="leer el grafo desde archivo con formato gml"&gt;leer el grafo desde archivo con formato gml&lt;/h1&gt;
&lt;p&gt;G = nx.read_gml('losmiserables.gml',relabel=True)&lt;/p&gt;
&lt;h1 id="dibujar la red completa."&gt;dibujar la red completa.&lt;/h1&gt;
&lt;p&gt;plt.figure(1)&lt;/p&gt;
&lt;p&gt;nx.draw_spring(G,node_size=0,edge_color='b',alpha=.2,font_size=10)&lt;/p&gt;
&lt;p&gt;plt.show()
```
A continuaci&amp;oacute;n se muestra el grafo:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/creaciondegrafosconnetworkx2-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;El grafo en s&amp;iacute; no muestra informaci&amp;oacute;n &amp;uacute;til que se diga, para entender m&amp;aacute;s la informaci&amp;oacute;n del grafo se crear&amp;aacute; un histograma del n&amp;uacute;mero de conexiones por nodo (es la continuaci&amp;oacute;n del c&amp;oacute;digo anterior):&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="histograma"&gt;Histograma&lt;/h1&gt;
&lt;h1 id="se crea la figura 2"&gt;Se crea la figura 2&lt;/h1&gt;
&lt;p&gt;plt.figure(2)&lt;/p&gt;
&lt;h1 id="se crea la instancia degree del grafo"&gt;se crea la instancia degree del grafo&lt;/h1&gt;
&lt;p&gt;d = nx.degree(G)&lt;/p&gt;
&lt;h1 id="se crea el histograma con los valore del grafo."&gt;Se crea el histograma con los valore del grafo.&lt;/h1&gt;
&lt;p&gt;plt.hist(d.values(),bins=15)&lt;/p&gt;
&lt;h1 id="se muestra la grafica."&gt;Se muestra la grafica.&lt;/h1&gt;
&lt;p&gt;plt.show()
```
La siguiente figura muestra el histograma:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/creaciondegrafosconnetworkx2-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se nota en el histograma que s&amp;oacute;lo pocos personajes tienen m&amp;aacute;s de 10 conexiones.
A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo de un grafo de s&amp;oacute;lo esos personajes con m&amp;aacute;s de 10 conexiones:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;p&gt;def trim_nodes(G,d):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;""" retorna una copia de G sin

  los nodos de menos de d conexiones"""

#Se crea la copia de G

Gt = G.copy()

#Se define la instancia de degree con la copia de G

dn = nx.degree(Gt)

#Se recorre los nodos y se remueve los que tengan menos de d conexiones

for n in Gt.nodes():

    if dn[n] &amp;lt;= d:

        Gt.remove_node(n)

#Se retorna el nuevo G

return Gt
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="dibujar la red solo con nodos de mas de 10"&gt;dibujar la red solo con nodos de mas de 10&lt;/h1&gt;
&lt;h1 id="conexiones"&gt;conexiones&lt;/h1&gt;
&lt;p&gt;Gt = trim_nodes(G,10)&lt;/p&gt;
&lt;h1 id="se crea la figura 3"&gt;Se crea la figura 3&lt;/h1&gt;
&lt;p&gt;plt.figure(3)&lt;/p&gt;
&lt;h1 id="se dibuja el grafo"&gt;Se dibuja el grafo&lt;/h1&gt;
&lt;p&gt;nx.draw(Gt,node_size=0,node_color='w',edge_color='b',alpha=.2)&lt;/p&gt;
&lt;h1 id="se muestra en pantalla el grafo"&gt;Se muestra en pantalla el grafo&lt;/h1&gt;
&lt;p&gt;plt.show()
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el grafo con los personajes m&amp;aacute;s relevantes de la novela Los Miserables:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/creaciondegrafosconnetworkx2-3.png"/&gt;
&lt;a href="www.zemanta.com/?px"&gt;Enhanced by Zemanta&lt;/a&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="matplotlib"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Encender y apagar un LED constantemente con Arduino</title><link href="https://ecrespo.github.io/encender-y-apagar-un-led-constantemente-con-arduino.html" rel="alternate"></link><published>2013-02-01T09:00:00-05:30</published><updated>2013-02-01T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2013-02-01:/encender-y-apagar-un-led-constantemente-con-arduino.html</id><summary type="html">&lt;p&gt;Ten&amp;iacute;a mucho tiempo sin hacer pruebas en el &amp;aacute;rea de dise&amp;ntilde;o digital o electr&amp;oacute;nica. A finales del a&amp;ntilde;o pasado decid&amp;iacute; comprar una placa &lt;a href="https://es.wikipedia.org/wiki/Arduino"&gt;Arduino&lt;/a&gt; y empezar a hacer pruebas. A continuaci&amp;oacute;n explico un ejemplo sencillo de encendido y apagado de un Diodo Emisor de Luz (LED).&lt;/p&gt;
&lt;p&gt;Arduino es una plataforma …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ten&amp;iacute;a mucho tiempo sin hacer pruebas en el &amp;aacute;rea de dise&amp;ntilde;o digital o electr&amp;oacute;nica. A finales del a&amp;ntilde;o pasado decid&amp;iacute; comprar una placa &lt;a href="https://es.wikipedia.org/wiki/Arduino"&gt;Arduino&lt;/a&gt; y empezar a hacer pruebas. A continuaci&amp;oacute;n explico un ejemplo sencillo de encendido y apagado de un Diodo Emisor de Luz (LED).&lt;/p&gt;
&lt;p&gt;Arduino es una plataforma de Hardware Libre basada en un microcontrolador y  un entorno de Desarrollo que facilita el desarrollo de proyectos de Electr&amp;oacute;nica.&lt;/p&gt;
&lt;p&gt;Como primer ejemplo se conectar&amp;aacute; un LED en serie con una resistencia de (270 Ohm) y conectado al Arduino.&lt;/p&gt;
&lt;p&gt;Los componentes son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Resistencia de 270 Ohm (0.5 W).&lt;/li&gt;
&lt;li&gt;Un LED Rojo de 5 mm.&lt;/li&gt;
&lt;li&gt;Una placa Arduino Uno.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Es necesario instalar en Debian el programa fritzing y Arduino IDE:
&lt;code&gt;apt-get install arduino-mk arduino-core arduino fritzing fritzing-data&lt;/code&gt;
El esquema de conexi&amp;oacute;n se desarroll&amp;oacute; con la herramienta &lt;code&gt;Fritzing&lt;/code&gt;. Se muestra en la siguiente figura el esquema:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/encenderyapagarunledconstantementeconarduino-1.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra una foto de la interconexi&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/encenderyapagarunledconstantementeconarduino-2.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;El programa se verifica, se compila y se carga en el Arduino con la herramienta Arduino IDE.
La siguiente figura muestra una captura de pantalla de la herramienta Arduino IDE:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/encenderyapagarunledconstantementeconarduino-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:
```
/* Ejemplo de encendido y apagado de&lt;/p&gt;
&lt;p&gt;un LED&lt;/p&gt;
&lt;p&gt;*/&lt;/p&gt;
&lt;p&gt;// Se define el Pin 13 donde se conectara el LED&lt;/p&gt;
&lt;p&gt;int led = 13;&lt;/p&gt;
&lt;p&gt;// Se inicializa el Pin digital como una salida&lt;/p&gt;
&lt;p&gt;void setup() {                &lt;/p&gt;
&lt;p&gt;pinMode(led, OUTPUT);     &lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;// Se crea una funcion ciclo donde se enciende y apaga el LED&lt;/p&gt;
&lt;p&gt;// cada segundo.&lt;/p&gt;
&lt;p&gt;void loop() {&lt;/p&gt;
&lt;p&gt;digitalWrite(led, HIGH);   // Se enciende el LED&lt;/p&gt;
&lt;p&gt;delay(1000);               // se espera un segundo&lt;/p&gt;
&lt;p&gt;digitalWrite(led, LOW);    // Se apaga el LED&lt;/p&gt;
&lt;p&gt;delay(1000);               // se espera un segundo&lt;/p&gt;
&lt;p&gt;}
```
Al cargar el programa el LED empieza a encender y apagarse a intervalos de 1 segundo.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra un v&amp;iacute;deo del encendido y apagado del LED:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/vzgGxkola_0"&gt;https://youtu.be/vzgGxkola_0&lt;/a&gt; &lt;/p&gt;
&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/vzgGxkola_0" width="560"&gt;&lt;/iframe&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Arduino"></category></entry><entry><title>Pruebas Unitarias en Python con unittest</title><link href="https://ecrespo.github.io/pruebas-unitarias-en-python-con-unittest.html" rel="alternate"></link><published>2012-12-26T09:00:00-05:30</published><updated>2012-12-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-26:/pruebas-unitarias-en-python-con-unittest.html</id><summary type="html">&lt;p&gt;Continuando con las herramientas que permiten el aseguramiento de la calidad, ahora se realizar&amp;aacute; pruebas unitarias a la funci&amp;oacute;n que c&amp;aacute;lcula la ra&amp;iacute;z cuadrada del art&amp;iacute;culo anterior (&lt;a href="https://www.seraph.to/probar-codigo-con-doctest.html#probar-codigo-con-doctest"&gt;Probar c&amp;oacute;digo con doctest&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;El desarrollo guiado por pruebas &amp;oacute; &lt;a href="http://es.wikipedia.org/wiki/TDD"&gt;Test driven development&lt;/a&gt; (TDD), es una pr&amp;aacute;ctica de la programaci&amp;oacute;n que involucra dos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con las herramientas que permiten el aseguramiento de la calidad, ahora se realizar&amp;aacute; pruebas unitarias a la funci&amp;oacute;n que c&amp;aacute;lcula la ra&amp;iacute;z cuadrada del art&amp;iacute;culo anterior (&lt;a href="https://www.seraph.to/probar-codigo-con-doctest.html#probar-codigo-con-doctest"&gt;Probar c&amp;oacute;digo con doctest&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;El desarrollo guiado por pruebas &amp;oacute; &lt;a href="http://es.wikipedia.org/wiki/TDD"&gt;Test driven development&lt;/a&gt; (TDD), es una pr&amp;aacute;ctica de la programaci&amp;oacute;n que involucra dos pr&amp;aacute;cticas: Escribir las pruebas primero y refactorizar continuamente el c&amp;oacute;digo.&lt;/p&gt;
&lt;p&gt;Para escribir primero las pruebas se usa generalmente las &lt;a href="http://es.wikipedia.org/wiki/Prueba_unitaria"&gt;pruebas unitarias&lt;/a&gt;. esto es una forma de probar el correcto funcionamiento de un m&amp;oacute;dulo de c&amp;oacute;digo. Permite asegurar el correcto funcionamiento de cada m&amp;oacute;dulo por separado, luego con las &lt;a href="https://es.wikipedia.org/wiki/Pruebas_de_integraci%C3%B3n"&gt;pruebas de integraci&amp;oacute;n&lt;/a&gt;, se podr&amp;aacute; asegurar el correcto funcionamiento del sistema.&lt;/p&gt;
&lt;p&gt;Ciclo de desarrollo guidado por pruebas (TDD).
En primer lugar se debe definir una lista de requisitos, despu&amp;eacute;s se ejecuta el siguiente ciclo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Elegir un requisito: Se elige de una lista el requerimiento que se cree dar&amp;aacute; mayor conocimiento del problema y que a la vez sea facilmente implementable.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Escribir una prueba.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verificar que la prueba falle: Si la prueba no falla es por que el requerimiento ya estaba implementado o por que la prueba es erronea.   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ejecutar las pruebas automatizadas: Verificar que todo el conjunto de pruebas funciona correctamente.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eliminaci&amp;oacute;n de duplicaci&amp;oacute;n: Se eliminar&amp;aacute; c&amp;oacute;digo duplicado.   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Actualizaci&amp;oacute;n de la lista de requisitos: Se actualiza la lista de requisitos tachando el requisito implementado.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Para que una prueba unitaria sea buena tiene que cumplir los siguientes requisitos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Automatizable: No debe ejecutarse manualmente (&amp;uacute;til para integraci&amp;oacute;n continua).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Completas: Deben cubrir la mayor cantidad de c&amp;oacute;digo.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reutilizables: No se deben crear pruebas que s&amp;oacute;lo puedan ser ejecutadas una vez (&amp;uacute;til para integraci&amp;oacute;n continua).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Independientes: La ejecuci&amp;oacute;n de una prueba no debe afectar la ejecuci&amp;oacute;n de otra prueba.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Profesionales: Las pruebas deben ser consideradas igual que el c&amp;oacute;digo, con la misma profesionalidad, documentaci&amp;oacute;n, etc. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Las pruebas unitarias son pruebas automatizadas que prueban peque&amp;ntilde;as piezas de c&amp;oacute;digo, usualmente una funci&amp;oacute;n o un m&amp;eacute;todo.&lt;/p&gt;
&lt;p&gt;Python tiene el API de &lt;code&gt;PyUnit&lt;/code&gt; para pruebas unitarias. El m&amp;oacute;dulo se llama &lt;code&gt;unittest&lt;/code&gt;, se basa en el framework &lt;code&gt;XUnit&lt;/code&gt; dise&amp;ntilde;ado por Ken Beck y Erich Gamma.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de ejemplo muestra por un lado la funci&amp;oacute;n Raiz y por el otro la clase RaizTest que hereda de &lt;code&gt;unittest.TestCase&lt;/code&gt;. Esta clase tendr&amp;aacute; 3 m&amp;eacute;todos, el primero que c&amp;aacute;lcula la raiz de 9 y devuelve 3, el segundo que c&amp;aacute;lcula la raiz de 0 y devuelve 0 y por &amp;uacute;ltimo el que c&amp;aacute;lcula la raiz de un valor negativo y devuelve una excepci&amp;oacute;n o mensaje de error.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra  a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo unittest y math"&gt;Se importa el m&amp;oacute;dulo unittest y math&lt;/h1&gt;
&lt;p&gt;import unittest&lt;/p&gt;
&lt;p&gt;import math&lt;/p&gt;
&lt;h1 id="funcion raiz cuadrada."&gt;Funci&amp;oacute;n raiz cuadrada.&lt;/h1&gt;
&lt;p&gt;def Raiz(a):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Si a es mayor o igual a cero se calcula la raiz cuadrada

if a &amp;gt;= 0:

    return math.sqrt(a)

#Si es menor a cero se genera una excepci&amp;oacute;n donde se informa que a debe ser mayor o igual a cero.

else:

    raise ValueError,"a debe ser &amp;gt;= 0"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;class RaizTest(unittest.TestCase):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def test_Raiz(self):

    #Test para la raiz de nueve que devuelve 3 que debe pasar.

    self.assertEqual(3, Raiz(9))

def test_zero(self):

    #Test para la raiz de 0 que devuelve 0, que debe pasar.

    self.assertEqual(0, Raiz(0))

def test_negative(self):

    #Test para la raiz de un n&amp;uacute;mero negativo, que debe fallar.

    # Este debe devolver un ValueError, pero se espera un IndexError.

    self.assertRaises(IndexError, Raiz(-10))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se ejecuta la prueba unitaria

unittest.main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Al ejecutar el c&amp;oacute;digo se tiene lo siguiente:&lt;br/&gt;
```
ecrespo@jewel:~/proyectos/ernesto-ecrespo.blogspot/timeit$ python test-raiz.py 
.E.
======================================================================
ERROR: test_negative (&lt;strong&gt;main&lt;/strong&gt;.RaizTest)&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Traceback (most recent call last):
  File "test-raiz.py", line 40, in test_negative
    self.assertRaises(IndexError, Raiz(-10))
  File "test-raiz.py", line 24, in Raiz
    raise ValueError,"a debe ser &amp;gt;= 0"
ValueError: a debe ser &amp;gt;= 0&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Ran 3 tests in 0.001s&lt;/p&gt;
&lt;p&gt;FAILED (errors=1)
```&lt;/p&gt;
&lt;p&gt;Como se puede ver, la prueba de un valor negativo falla. 
Si se comenta el m&amp;eacute;todo de prueba de valor negativo la ejecuci&amp;oacute;n devuelve que no hay errores:
```
ecrespo@jewel:~/proyectos/ernesto-ecrespo.blogspot/timeit$ python test-raiz.py 
..&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Ran 2 tests in 0.000s&lt;/p&gt;
&lt;p&gt;OK
```&lt;/p&gt;
&lt;p&gt;Las funciones de &lt;code&gt;unittest&lt;/code&gt; utilizadas son:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;assertEqual&lt;/code&gt;: Prueba donde dos valores son iguales.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;assertRaises&lt;/code&gt;: Prueba donde una excepci&amp;oacute;n es devuelta.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para m&amp;aacute;s m&amp;eacute;todos del m&amp;oacute;dulo unittest se puede revisar la &lt;a href="https://docs.python.org/2/library/unittest.html#unittest.TestCase"&gt;documentaci&amp;oacute;n&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="numpy"></category><category term="Python"></category><category term="TDD"></category><category term="unittest"></category></entry><entry><title>Pyproceessing: Un ambiente para crear gráficos con Python</title><link href="https://ecrespo.github.io/pyproceessing-un-ambiente-para-crear-graficos-con-python.html" rel="alternate"></link><published>2012-12-24T09:00:00-05:30</published><updated>2012-12-24T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-24:/pyproceessing-un-ambiente-para-crear-graficos-con-python.html</id><summary type="html">&lt;p&gt;Pyprocessing es un paquete python que permite crear gr&amp;aacute;ficos que se basa en las librer&amp;iacute;as  &lt;a href="https://www.opengl.org/"&gt;OpenGL&lt;/a&gt; y &lt;a href="https://bitbucket.org/pyglet/pyglet/wiki/Home"&gt;Pyglet&lt;/a&gt;. El proyecto se aloja en &lt;a href="https://code.google.com/archive/p/pyprocessing/"&gt;google code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En la documentaci&amp;oacute;n encontrar&amp;aacute;n la gu&amp;iacute;a de referencia r&amp;aacute;pida, un tutorial &lt;a href="https://code.google.com/archive/p/pyprocessing/wikis/BasicTutorial.wiki"&gt;b&amp;aacute;sico&lt;/a&gt;, &lt;a href="https://code.google.com/archive/p/pyprocessing/wikis/Tutorials.wiki"&gt;un tutorial m&amp;aacute;s completo&lt;/a&gt; y las &lt;a href="https://code.google.com/archive/p/pyprocessing/wikis/UsageInstructions.wiki"&gt;instrucciones de uso&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalarlo en linux …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pyprocessing es un paquete python que permite crear gr&amp;aacute;ficos que se basa en las librer&amp;iacute;as  &lt;a href="https://www.opengl.org/"&gt;OpenGL&lt;/a&gt; y &lt;a href="https://bitbucket.org/pyglet/pyglet/wiki/Home"&gt;Pyglet&lt;/a&gt;. El proyecto se aloja en &lt;a href="https://code.google.com/archive/p/pyprocessing/"&gt;google code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En la documentaci&amp;oacute;n encontrar&amp;aacute;n la gu&amp;iacute;a de referencia r&amp;aacute;pida, un tutorial &lt;a href="https://code.google.com/archive/p/pyprocessing/wikis/BasicTutorial.wiki"&gt;b&amp;aacute;sico&lt;/a&gt;, &lt;a href="https://code.google.com/archive/p/pyprocessing/wikis/Tutorials.wiki"&gt;un tutorial m&amp;aacute;s completo&lt;/a&gt; y las &lt;a href="https://code.google.com/archive/p/pyprocessing/wikis/UsageInstructions.wiki"&gt;instrucciones de uso&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalarlo en linux se usa &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;easy_install pyprocessing&lt;/code&gt;
&lt;code&gt;pip install pyprocessing&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El ejemplo que se har&amp;aacute; es el de crear con rectangulo, l&amp;iacute;neas y elipses una especie de mu&amp;ntilde;eco sin brazos junto a una peque&amp;ntilde;a esfera. Este ejemplo se basa en el peque&amp;ntilde;o ejemplo que tiene el proyecto en la p&amp;aacute;gina de entrada.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa pyprocessing"&gt;Se importa pyprocessing&lt;/h1&gt;
&lt;p&gt;from pyprocessing import *&lt;/p&gt;
&lt;h1 id="define el tamano de la ventana."&gt;define el tama&amp;ntilde;o de la ventana.&lt;/h1&gt;
&lt;p&gt;size(200,200)&lt;/p&gt;
&lt;h1 id="define un rectangulo en el centro de la ventana"&gt;Define un rectangulo en el centro de la ventana&lt;/h1&gt;
&lt;p&gt;rectMode(CENTER)&lt;/p&gt;
&lt;h1 id="se crea el rectangulo(x,y,ancho,alto)"&gt;Se crea el rectangulo(x,y,ancho,alto)&lt;/h1&gt;
&lt;p&gt;rect(100,100,20,100)&lt;/p&gt;
&lt;h1 id="se crean 3 elipses(x,y,ancho,alto)"&gt;Se crean 3 elipses(x,y,ancho,alto)&lt;/h1&gt;
&lt;p&gt;ellipse(100,70,60,60)&lt;/p&gt;
&lt;p&gt;ellipse(81,70,16,32) &lt;/p&gt;
&lt;p&gt;ellipse(119,70,16,32)&lt;/p&gt;
&lt;h1 id="se crean 2 lineas(x1,y1,x2,y2)"&gt;Se crean 2 lineas(x1,y1,x2,y2)&lt;/h1&gt;
&lt;p&gt;line(90,150,80,160)&lt;/p&gt;
&lt;p&gt;line(110,150,120,160)&lt;/p&gt;
&lt;h1 id="no se crea bordes en la figura"&gt;No se crea bordes en la figura&lt;/h1&gt;
&lt;p&gt;noStroke();&lt;/p&gt;
&lt;h1 id="define que tendra luz la esfera"&gt;Define que tendr&amp;aacute; luz la esfera&lt;/h1&gt;
&lt;p&gt;lights();&lt;/p&gt;
&lt;h1 id="define la cantidad de desplazamiento con respecto a la ventana."&gt;Define la cantidad de desplazamiento con respecto a la ventana.&lt;/h1&gt;
&lt;h1 id="(derecha/izquierda,arriba/abajo,delante/detras)"&gt;(derecha/izquierda,arriba/abajo,delante/detr&amp;aacute;s)&lt;/h1&gt;
&lt;p&gt;translate(28, 48, 0);&lt;/p&gt;
&lt;h1 id="se crea una esfera con radio 15"&gt;Se crea una esfera con radio 15&lt;/h1&gt;
&lt;p&gt;sphere(15)&lt;/p&gt;
&lt;h1 id="se muestra en la ventana."&gt;Se muestra en la ventana.&lt;/h1&gt;
&lt;p&gt;run()
```
La siguiente figura muestra el resultado del c&amp;oacute;digo al ser ejecutado:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/pyproceessingunambienteparacreargraficosconpython.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="Pyprocessing"></category><category term="Python"></category></entry><entry><title>Separar código de pruebas de la documentación (doctest, 2da parte)</title><link href="https://ecrespo.github.io/separar-codigo-de-pruebas-de-la-documentacion-doctest-2da-parte.html" rel="alternate"></link><published>2012-12-14T09:00:00-05:30</published><updated>2012-12-14T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-14:/separar-codigo-de-pruebas-de-la-documentacion-doctest-2da-parte.html</id><summary type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/probar-codigo-con-doctest.html#probar-codigo-con-doctest"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explic&amp;oacute; como utilizar &lt;code&gt;doctest&lt;/code&gt; dentro de un c&amp;oacute;digo para realizar pruebas sobre la documentaci&amp;oacute;n de cada funci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Ahora se explicar&amp;aacute; como realizar dichas pruebas de la documentaci&amp;oacute;n en un archivo aparte del c&amp;oacute;digo del programa. Se usar&amp;aacute; el mismo ejemplo del art&amp;iacute;culo anterior pero adaptandolo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/probar-codigo-con-doctest.html#probar-codigo-con-doctest"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explic&amp;oacute; como utilizar &lt;code&gt;doctest&lt;/code&gt; dentro de un c&amp;oacute;digo para realizar pruebas sobre la documentaci&amp;oacute;n de cada funci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Ahora se explicar&amp;aacute; como realizar dichas pruebas de la documentaci&amp;oacute;n en un archivo aparte del c&amp;oacute;digo del programa. Se usar&amp;aacute; el mismo ejemplo del art&amp;iacute;culo anterior pero adaptandolo a tener la documentaci&amp;oacute;n aparte en un archivo de texto.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo math para calcular la raiz cuadrada."&gt;Se importa el m&amp;oacute;dulo math para calcular la raiz cuadrada.&lt;/h1&gt;
&lt;p&gt;import math&lt;/p&gt;
&lt;h1 id="funcion raiz cuadrada."&gt;Funci&amp;oacute;n raiz cuadrada.&lt;/h1&gt;
&lt;p&gt;def Raiz(a):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Si a es mayor o igual a cero se calcula la raiz cuadrada

if a &amp;gt;= 0:

    return math.sqrt(a)

#Si es menor a cero se genera una excepci&amp;oacute;n donde se informa que a debe ser mayor o igual a cero.

else:

    raise ValueError("a debe ser &amp;gt;= 0")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se importa el m&amp;oacute;dulo doctest

import doctest

#Se realiza la prueba al archivo raizcuadra.txt

doctest.testfile("raizcuadrada.txt")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Como se ve se realiza la prueba al archivo raizcuadrada.txt. El archivo contiene lo siguiente:&lt;/p&gt;
&lt;p&gt;```python
Modulo raiz cuadrada&lt;/p&gt;
&lt;p&gt;=====================&lt;/p&gt;
&lt;p&gt;Usando  'raizcuadrada'&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Primero se importa la funci&amp;oacute;n:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from raizcuadrada import Raiz
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ejemplos de calculo de raiz cuadrada:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(4)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(9)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(25)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;5.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(0)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;0.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Raiz(-1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Traceback (most recent call last):&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;ValueError: a debe ser &amp;gt;= 0
&lt;code&gt;Ahora lo que viene es ejecutar el comando que devuelve el resultado de las pruebas:&lt;/code&gt;
python -m doctest -v raizcuadrada.txt&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from raizcuadrada import Raiz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting nothing&lt;/p&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(9)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(25)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;5.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Raiz(-1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Traceback (most recent call last):

...

ValueError: a debe ser &amp;gt;= 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;1 items passed all tests:&lt;/p&gt;
&lt;p&gt;6 tests in raizcuadrada.txt&lt;/p&gt;
&lt;p&gt;6 tests in 1 items.&lt;/p&gt;
&lt;p&gt;6 passed and 0 failed.&lt;/p&gt;
&lt;p&gt;Test passed.
```&lt;/p&gt;
&lt;p&gt;Como se puede observar en este caso se realiza la importaci&amp;oacute;n del programa y luego se empieza las pruebas.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Probar código con doctest</title><link href="https://ecrespo.github.io/probar-codigo-con-doctest.html" rel="alternate"></link><published>2012-12-13T09:00:00-05:30</published><updated>2012-12-13T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-13:/probar-codigo-con-doctest.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Doctest&lt;/code&gt; es un framework que viene en Python el cual permite desarrollar aplicaciones utilizando TDD (&lt;a href="https://es.wikipedia.org/wiki/Desarrollo_guiado_por_pruebas"&gt;Desarrollo guiado por pruebas&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;El TDD exige escribir las pruebas primero y la refactorizaci&amp;oacute;n del c&amp;oacute;digo para llegar al resultado deseado.&lt;/p&gt;
&lt;p&gt;En este caso se usar&amp;aacute; &lt;code&gt;doctest&lt;/code&gt; el cual permite realizar pruebas seg&amp;uacute;n la documentaci&amp;oacute;n …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Doctest&lt;/code&gt; es un framework que viene en Python el cual permite desarrollar aplicaciones utilizando TDD (&lt;a href="https://es.wikipedia.org/wiki/Desarrollo_guiado_por_pruebas"&gt;Desarrollo guiado por pruebas&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;El TDD exige escribir las pruebas primero y la refactorizaci&amp;oacute;n del c&amp;oacute;digo para llegar al resultado deseado.&lt;/p&gt;
&lt;p&gt;En este caso se usar&amp;aacute; &lt;code&gt;doctest&lt;/code&gt; el cual permite realizar pruebas seg&amp;uacute;n la documentaci&amp;oacute;n que se tenga escrita en el c&amp;oacute;digo. Significa que es necesario tener una documentaci&amp;oacute;n clara para cada funci&amp;oacute;n antes de desarrollarla, de esta forma se tiene claro los casos de funcionamiento correcto de la funci&amp;oacute;n y los casos en los cuales puede fallar.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de ejemplo es el de una funci&amp;oacute;n que permite calcular la ra&amp;iacute;z cuadrada de un n&amp;uacute;mero.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo math para calcular la raiz cuadrada."&gt;Se importa el m&amp;oacute;dulo math para calcular la raiz cuadrada.&lt;/h1&gt;
&lt;p&gt;import math&lt;/p&gt;
&lt;h1 id="funcion raiz cuadrada."&gt;Funci&amp;oacute;n raiz cuadrada.&lt;/h1&gt;
&lt;p&gt;def RaizCuadrada(a):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;"""

&amp;gt;&amp;gt;&amp;gt; RaizCuadrada(4)

2.0

&amp;gt;&amp;gt;&amp;gt; RaizCuadrada(9)

3.0

&amp;gt;&amp;gt;&amp;gt; RaizCuadrada(25)

5.0

&amp;gt;&amp;gt;&amp;gt; RaizCuadrada(0)

0.0

&amp;gt;&amp;gt;&amp;gt; RaizCuadrada(-1)

Traceback (most recent call last):

    ...

ValueError: a debe ser &amp;gt;= 0

"""

#Si a es mayor o igual a cero se calcula la raiz cuadrada

if a &amp;gt;= 0:

    return math.sqrt(a)

#Si es menor a cero se genera una excepci&amp;oacute;n donde se informa que a debe ser mayor o igual a cero.

else:

    raise ValueError("a debe ser &amp;gt;= 0")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Como se muestra se genera en la documentaci&amp;oacute;n una serie de casos de ejecuci&amp;oacute;n de la funci&amp;oacute;n donde debe devolver un valor correcto y si se pasa un valor que no puede ser calculado devuelve la excepci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Para realizar la prueba se ejecuta el c&amp;oacute;digo realizando una llamada al m&amp;oacute;dulo &lt;code&gt;doctest&lt;/code&gt; y modo &lt;code&gt;verbose&lt;/code&gt;:
&lt;code&gt;python
python -m doctest -v prueba-raizcuadrada.py&lt;/code&gt;
El resultado es el siguiente:
```python
Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RaizCuadrada(4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RaizCuadrada(9)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RaizCuadrada(25)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;5.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RaizCuadrada(0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;Trying:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RaizCuadrada(-1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expecting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Traceback (most recent call last):

    ...

ValueError: a debe ser &amp;gt;= 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;1 items had no tests:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;prueba-raizcuadrada
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1 items passed all tests:&lt;/p&gt;
&lt;p&gt;5 tests in prueba-raizcuadrada.RaizCuadrada&lt;/p&gt;
&lt;p&gt;5 tests in 2 items.&lt;/p&gt;
&lt;p&gt;5 passed and 0 failed.&lt;/p&gt;
&lt;p&gt;Test passed.
```&lt;/p&gt;
&lt;p&gt;Como se muestra todos los casos pasaron el test.
Pueden revisar la siguiente documentaci&amp;oacute;n y tutoriales:
La documentaci&amp;oacute;n oficial la puede revisar en el siguiente &lt;a href="https://docs.python.org/2/library/doctest.html"&gt;enlace&lt;/a&gt;.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://magmax9.blogspot.com/2011/09/python-como-hacer-pruebas-1.html"&gt;Como hacer pruebas 1: Doctest&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythontesting.net/framework/doctest/doctest-introduction/?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A%20PythonTesting%20%28Python%20Testing%29"&gt;Introducci&amp;oacute;n a doctest&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pymotw.com/3/doctest/"&gt;Otro tutorial de Doctest&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En otro art&amp;iacute;culo se explicar&amp;aacute; como separar los diferentes casos en un archivo de texto y el programa en un script aparte.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="doctest"></category></entry><entry><title>Configurar pantalla touch Bematech en Debian</title><link href="https://ecrespo.github.io/configurar-pantalla-touch-bematech-en-debian.html" rel="alternate"></link><published>2012-12-12T09:00:00-05:30</published><updated>2012-12-12T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-12:/configurar-pantalla-touch-bematech-en-debian.html</id><summary type="html">&lt;p&gt;Se realiza la instalaci&amp;oacute;n de Debian Squeeze con la pantacha t&amp;aacute;ctil conectada. en este caso la pantalla es una pantalla t&amp;aacute;ctil por medio de una conexi&amp;oacute;n USB.&lt;/p&gt;
&lt;p&gt;Al terminar la instalaci&amp;oacute;n se ejecuta el comando lsusb para ver como se detecta la pantalla:
&lt;code&gt;lsusb
Bus 004 Device 002: ID 0eef …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Se realiza la instalaci&amp;oacute;n de Debian Squeeze con la pantacha t&amp;aacute;ctil conectada. en este caso la pantalla es una pantalla t&amp;aacute;ctil por medio de una conexi&amp;oacute;n USB.&lt;/p&gt;
&lt;p&gt;Al terminar la instalaci&amp;oacute;n se ejecuta el comando lsusb para ver como se detecta la pantalla:
&lt;code&gt;lsusb
Bus 004 Device 002: ID 0eef:0001 D-WAV Scientific Co., Ltd eGalax TouchScreen&lt;/code&gt;
Es un dispositivo de la Empresa eGalax.
Se visita la p&amp;aacute;gina de eGalax para bakar los drivers para &lt;a href="http://home.eeti.com.tw/web20/eGalaxTouchDriver/linuxDriver.htm"&gt;Linux&lt;/a&gt;,el driver es eGTouch_v2.5.2107.L-x, este driver es el que tiene soporte para kernel superior a 2.6.24.&lt;/p&gt;
&lt;p&gt;Instalar paquetes necesarios para la configuraci&amp;oacute;n del touch:&lt;/p&gt;
&lt;p&gt;Es necesario instalar librer&amp;iacute;as de xorg y los headers del kernel que tiene Squeeze.
&lt;code&gt;apt-get install xserver-xorg-input-evtouch xinput xserver-xorg-dev xserver-xorg-input-evdev-dev xserver-xorg-input-evdev xserver-xorg-input-synaptics-dev  linux-headers-2.6.32-5-686&lt;/code&gt;
Al tener el archivo comprimido en el equipo se descomprime:
&lt;code&gt;tar -xvzf eGTouch_v2.5.2107.L-x.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se entra en el directorio del driver:
&lt;code&gt;cd eGTouch_v2.5.2107.L-x/&lt;/code&gt;
Ahora se ejecuta el script &lt;code&gt;setup.sh&lt;/code&gt; el cual es una ayuda para el proceso de Instalaci&amp;oacute;n del driver:
```
sudo sh setup.sh&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se sigue las instrucciones del instalador:
Se resaltar&amp;aacute; la parte de las preguntas del instalador.&lt;/p&gt;
&lt;p&gt;(&lt;em&gt;) Driver installer for touch controller
(&lt;/em&gt;) Script Version = 1.04.2013&lt;/p&gt;
&lt;p&gt;(I) Check user permission: root, you are the supervisor.
(I) Platform application binary interface = i686
(W) X server detected.&lt;/p&gt;
&lt;p&gt;Declaration and Disclaimer
The programs, including but not limited to software and/or firmware
(hereinafter referred to "Programs" or "PROGRAMS", are owned by
eGalax_eMPIA Technology Inc. (hereinafter referred to EETI) and are
compiled from EETI Source code. EETI hereby grants to licensee a
personal, non-exclusive, non-transferable license to copy, use and
create derivative works of Programs for the sole purpose in
conjunction with an EETI Product, including but not limited to
integrated circuit and/or controller. Any reproduction, copies,
modification, translation, compilation, application, or representation
of Programs except as specified above is prohibited without the
express written permission by EETI.&lt;/p&gt;
&lt;p&gt;Disclaimer: EETI MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
WITH REGARD TO PROGRAMS, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
EETI reserves the right to make changes without further notice to the
Programs described herein. Licensee agrees that EETI does not assume
any liability, damages or costs, including but not limited to attorney
fees, arising out from Programs themselves or those arising out from
the application or combination Programs into other products or
circuit. The use or the inclusion of EETI's Programs implies that the
Licensee assumes all risk of such use and in doing so indemnifies EETI
against all charges, including but not limited to any claims to
infringement of any third party's intellectual property right.&lt;/p&gt;
&lt;p&gt;Do you agree with above patent declaration?
 [Y] Yes, I agree.  [N] No, I don't agree.
Y&lt;/p&gt;
&lt;p&gt;(Q) Which interface controller do you use?
(I) [1] RS232 [2] USB [3] PS2 : 2
(I) Please confirm the touch controller is linked with your device.
Press [Enter] key to continue..........&lt;/p&gt;
&lt;p&gt;(I) Found /etc/rc.local file.
(I) Found a HID compliant touch controller.
(I) X.Org X server 1.7.7
(I) X verion is 1.7.6 upwards
(I) Found uinput.ko in modules.
(I) Attach uinput at boot.
(I) Add uinput module into /etc/modules file.
(I) Place eGTouch driver archive to /usr/local/eGTouch32withX.
(I) Create eGTouch daemon shortcut in /usr/bin.
(I) Create eGTouchU tool shortcut in /usr/bin.
(I) Create eCalib tool shortcut in /usr/bin.
(I) Append eGTouch daemon execution into /etc/rc.local.&lt;/p&gt;
&lt;p&gt;(Q) How many controllers do you want to plug-in to system? [1-10]
(I) Default [1]:&lt;/p&gt;
&lt;p&gt;(I) Device Nums is set to 1
(I) Copy udev rule: 52-egalax-virtual.conf to /usr/share/X11/xorg.conf.d.
(I) Create eGTouchU shortcut in application list.&lt;/p&gt;
&lt;p&gt;(I) Driver installation completed. Setup version 1.04.2013.
(I) Please reboot the system.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;```
Lo que queda es reiniciar el equipo.&lt;/p&gt;
&lt;p&gt;Ahora viene el proceso de configuraci&amp;oacute;n del touch ejecutando el comando &lt;code&gt;eGTouchU&lt;/code&gt; desde la consola: 
&lt;code&gt;eGTouchU&lt;/code&gt;
Este despliega una herramienta gr&amp;aacute;fica que permite configurar y calibrar el touch:&lt;/p&gt;
&lt;p&gt;La figura muestra la pesta&amp;ntilde;a general donde debe aparecer el controlador USB.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;La pesta&amp;ntilde;a Setting se deja tal cual viene pre configurada:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;La pesta&amp;ntilde;a Tool es la que permite calibrar la pantalla toch, se selecciona la Funci&amp;oacute;n de Linearizaci&amp;oacute;n con 25 puntos de calibraci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la pantalla en el momento de calibrarla:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-5.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;Ahora se selecciona la prueba de dibujo para verificar el correcto funcionamiento de la pantalla t&amp;aacute;ctil:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-6.png"/&gt; &lt;/p&gt;
&lt;p&gt;En la figura se muestra el funcionamiento de la pantalla desde la prueba de dibujo:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-7.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;En la pesta&amp;ntilde;a Display se selecciona modo full pantalla:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-8.png"/&gt; &lt;/p&gt;
&lt;p&gt;En la pesta&amp;ntilde;a Edge no se realizan cambios:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-9.png"/&gt; &lt;/p&gt;
&lt;p&gt;En la pesta&amp;ntilde;a Misc s&amp;oacute;lo se cambia el Modo del Mouse a Click on Touch:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/configurarpantallatouchbematechendebian-10.png"/&gt; &lt;/p&gt;
&lt;p&gt;Luego de esto se pueden aplicar los cambios y reiniciar el equipo.
Con esto ya se tiene la pantalla t&amp;aacute;ctil funcionando.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="gnome"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="Pantalla táctil"></category></entry><entry><title>Analizando código Python con Pylint</title><link href="https://ecrespo.github.io/analizando-codigo-python-con-pylint.html" rel="alternate"></link><published>2012-12-11T09:00:00-05:30</published><updated>2012-12-11T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-11:/analizando-codigo-python-con-pylint.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Pylint&lt;/code&gt; es una herramienta de an&amp;aacute;lisis de c&amp;oacute;digo creada por LogiLab.  Es m&amp;aacute;s complejo que &lt;code&gt;Pyflakes&lt;/code&gt; y permite m&amp;aacute;s personalizaci&amp;oacute;n. Para m&amp;aacute;s informaci&amp;oacute;n de pylint puede revisar el &lt;a href="https://www.logilab.org/card/pylint_manual"&gt;manual&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se puede instalar &lt;code&gt;pylint&lt;/code&gt; por medio de &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt; y si es una distribuci&amp;oacute;n de Linux basada en Debian se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Pylint&lt;/code&gt; es una herramienta de an&amp;aacute;lisis de c&amp;oacute;digo creada por LogiLab.  Es m&amp;aacute;s complejo que &lt;code&gt;Pyflakes&lt;/code&gt; y permite m&amp;aacute;s personalizaci&amp;oacute;n. Para m&amp;aacute;s informaci&amp;oacute;n de pylint puede revisar el &lt;a href="https://www.logilab.org/card/pylint_manual"&gt;manual&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se puede instalar &lt;code&gt;pylint&lt;/code&gt; por medio de &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt; y si es una distribuci&amp;oacute;n de Linux basada en Debian se puede instalar v&amp;iacute;a &lt;code&gt;apt-get&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
easy_install  pylint&lt;/code&gt;
&lt;code&gt;python
pip install pylint&lt;/code&gt;
&lt;code&gt;apt-get install pylint&lt;/code&gt;
La salida de &lt;code&gt;pylint&lt;/code&gt; puede ser texto crudo o puede ser en formato html. Los mensajes tienen el siguiente formato:
TIPO_MENSAJE: LINEA:[OBJECTO:] MENSAJE&lt;/p&gt;
&lt;p&gt;El tipo de mensaje puede ser de la siguiente forma:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[R]: Significa que se recomienda la refactorizaci&amp;oacute;n del c&amp;oacute;digo.&lt;/li&gt;
&lt;li&gt;[C]: Significa que en el c&amp;oacute;digo hubo violaci&amp;oacute;n de estilos.&lt;/li&gt;
&lt;li&gt;[W]: Es una alarma por un problema menor.&lt;/li&gt;
&lt;li&gt;[E]: Significa mensaje de error o un potencial bug.&lt;/li&gt;
&lt;li&gt;[F]: Indica un error grave, bloqueo para an&amp;aacute;lisis futuros.&lt;/li&gt;
&lt;li&gt;Se usar&amp;aacute; el mismo c&amp;oacute;digo del art&amp;iacute;culo anterior:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np
from pudb import set_trace; set_trace()
import string
a = np.arange(10)
print a
print a[8]
print a[9]
for i in a:
    if i == plataforma:
        print i
```&lt;/p&gt;
&lt;p&gt;Este script se salva con el nombre de &lt;code&gt;arreglo.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ahora se ejecutar&amp;aacute; &lt;code&gt;pylint&lt;/code&gt; y se le pasa como argumento el archivo &lt;code&gt;arreglo.py&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;La salida de la ejecuci&amp;oacute;n de &lt;code&gt;pylint&lt;/code&gt; se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python
&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;*&lt;/strong&gt;* Module arreglo&lt;/p&gt;
&lt;p&gt;C:  1,0: Missing docstring&lt;/p&gt;
&lt;p&gt;C:  7,28: More than one statement on a single line&lt;/p&gt;
&lt;p&gt;W:  8,0: Uses of a deprecated module 'string'&lt;/p&gt;
&lt;p&gt;C: 12,0: Invalid name "a" (should match (([A-Z_][A-Z0-9_]&lt;em&gt;)|(__.&lt;/em&gt;__))$)&lt;/p&gt;
&lt;p&gt;E: 18,12: Undefined variable 'plataforma'&lt;/p&gt;
&lt;p&gt;W:  8,0: Unused import string&lt;/p&gt;
&lt;p&gt;Report&lt;/p&gt;
&lt;p&gt;======&lt;/p&gt;
&lt;p&gt;12 statements analysed.&lt;/p&gt;
&lt;p&gt;Duplication&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;+-------------------------+------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|                         |now   |previous |difference |&lt;/p&gt;
&lt;p&gt;+=========================+======+=========+===========+&lt;/p&gt;
&lt;p&gt;|nb duplicated lines      |0     |0        |=          |&lt;/p&gt;
&lt;p&gt;+-------------------------+------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|percent duplicated lines |0.000 |0.000    |=          |&lt;/p&gt;
&lt;p&gt;+-------------------------+------+---------+-----------+&lt;/p&gt;
&lt;p&gt;Statistics by type&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;+---------+-------+-----------+-----------+------------+---------+&lt;/p&gt;
&lt;p&gt;|type     |number |old number |difference |%documented |%badname |&lt;/p&gt;
&lt;p&gt;+=========+=======+===========+===========+============+=========+&lt;/p&gt;
&lt;p&gt;|module   |1      |1          |=          |0.00        |0.00     |&lt;/p&gt;
&lt;p&gt;+---------+-------+-----------+-----------+------------+---------+&lt;/p&gt;
&lt;p&gt;|class    |0      |0          |=          |0           |0        |&lt;/p&gt;
&lt;p&gt;+---------+-------+-----------+-----------+------------+---------+&lt;/p&gt;
&lt;p&gt;|method   |0      |0          |=          |0           |0        |&lt;/p&gt;
&lt;p&gt;+---------+-------+-----------+-----------+------------+---------+&lt;/p&gt;
&lt;p&gt;|function |0      |0          |=          |0           |0        |&lt;/p&gt;
&lt;p&gt;+---------+-------+-----------+-----------+------------+---------+&lt;/p&gt;
&lt;p&gt;External dependencies&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;::&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;numpy (arreglo)


pudb


  \-set_trace (arreglo)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Raw metrics&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;+----------+-------+------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|type      |number |%     |previous |difference |&lt;/p&gt;
&lt;p&gt;+==========+=======+======+=========+===========+&lt;/p&gt;
&lt;p&gt;|code      |11     |64.71 |11       |=          |&lt;/p&gt;
&lt;p&gt;+----------+-------+------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|docstring |0      |0.00  |0        |=          |&lt;/p&gt;
&lt;p&gt;+----------+-------+------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|comment   |3      |17.65 |3        |=          |&lt;/p&gt;
&lt;p&gt;+----------+-------+------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|empty     |3      |17.65 |3        |=          |&lt;/p&gt;
&lt;p&gt;+----------+-------+------+---------+-----------+&lt;/p&gt;
&lt;p&gt;Messages by category&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;+-----------+-------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|type       |number |previous |difference |&lt;/p&gt;
&lt;p&gt;+===========+=======+=========+===========+&lt;/p&gt;
&lt;p&gt;|convention |3      |3        |=          |&lt;/p&gt;
&lt;p&gt;+-----------+-------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|refactor   |0      |0        |=          |&lt;/p&gt;
&lt;p&gt;+-----------+-------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|warning    |2      |2        |=          |&lt;/p&gt;
&lt;p&gt;+-----------+-------+---------+-----------+&lt;/p&gt;
&lt;p&gt;|error      |1      |1        |=          |&lt;/p&gt;
&lt;p&gt;+-----------+-------+---------+-----------+&lt;/p&gt;
&lt;p&gt;Messages&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;+-----------+------------+&lt;/p&gt;
&lt;p&gt;|message id |occurrences |&lt;/p&gt;
&lt;p&gt;+===========+============+&lt;/p&gt;
&lt;p&gt;|W0611      |1           |&lt;/p&gt;
&lt;p&gt;+-----------+------------+&lt;/p&gt;
&lt;p&gt;|W0402      |1           |&lt;/p&gt;
&lt;p&gt;+-----------+------------+&lt;/p&gt;
&lt;p&gt;|E0602      |1           |&lt;/p&gt;
&lt;p&gt;+-----------+------------+&lt;/p&gt;
&lt;p&gt;|C0321      |1           |&lt;/p&gt;
&lt;p&gt;+-----------+------------+&lt;/p&gt;
&lt;p&gt;|C0111      |1           |&lt;/p&gt;
&lt;p&gt;+-----------+------------+&lt;/p&gt;
&lt;p&gt;|C0103      |1           |&lt;/p&gt;
&lt;p&gt;+-----------+------------+&lt;/p&gt;
&lt;p&gt;Global evaluation&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Your code has been rated at 1.67/10 (previous run: 1.67/10)
```&lt;/p&gt;
&lt;p&gt;Si se desea m&amp;aacute;s informaci&amp;oacute;n de la informaci&amp;oacute;n generada en el reporte de pylint se puede revisar la documentaci&amp;oacute;n antes &lt;a href="https://www.logilab.org/card/pylint_manual"&gt;mencionada&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="numpy"></category><category term="python"></category><category term="PyLint"></category></entry><entry><title>Analizar código Python con Pyflakes</title><link href="https://ecrespo.github.io/analizar-codigo-python-con-pyflakes.html" rel="alternate"></link><published>2012-12-10T09:00:00-05:30</published><updated>2012-12-10T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-10:/analizar-codigo-python-con-pyflakes.html</id><summary type="html">&lt;p&gt;Pyflakes es una herramienta de an&amp;aacute;lisis de c&amp;oacute;digo Python.&lt;/p&gt;
&lt;p&gt;Pyflakes puede detectar potenciales problemas como:&lt;/p&gt;
&lt;p&gt;M&amp;oacute;dulos importados sin usar.
Variables sin usar.&lt;/p&gt;
&lt;p&gt;Para instalarlo se puede bajar desde &lt;a href="https://pypi.org/project/pyflakes/"&gt;PyPI&lt;/a&gt; &amp;oacute; desde el sitio de &lt;a href="https://launchpad.net/pyflakes"&gt;Launchpad&lt;/a&gt;; tambi&amp;eacute;n se puede instalar con easy_install &amp;oacute; pip y para las distribuciones basadas en Debian …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pyflakes es una herramienta de an&amp;aacute;lisis de c&amp;oacute;digo Python.&lt;/p&gt;
&lt;p&gt;Pyflakes puede detectar potenciales problemas como:&lt;/p&gt;
&lt;p&gt;M&amp;oacute;dulos importados sin usar.
Variables sin usar.&lt;/p&gt;
&lt;p&gt;Para instalarlo se puede bajar desde &lt;a href="https://pypi.org/project/pyflakes/"&gt;PyPI&lt;/a&gt; &amp;oacute; desde el sitio de &lt;a href="https://launchpad.net/pyflakes"&gt;Launchpad&lt;/a&gt;; tambi&amp;eacute;n se puede instalar con easy_install &amp;oacute; pip y para las distribuciones basadas en Debian se instala v&amp;iacute;a &lt;code&gt;apt-get&lt;/code&gt; o &lt;code&gt;aptitude&lt;/code&gt;.
&lt;code&gt;easy_install pyflakes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install pyflakes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install pyflakes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para probar el uso de &lt;code&gt;pyflakes&lt;/code&gt; se usar&amp;aacute; el c&amp;oacute;digo del tutorial de debugging, se agregar&amp;aacute; la importaci&amp;oacute;n de string y una instrucci&amp;oacute;n if donde se compara el valor de i con una variable llamada plataforma.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;p&gt;from pudb import set_trace; set_trace()&lt;/p&gt;
&lt;p&gt;import string&lt;/p&gt;
&lt;p&gt;a = np.arange(10)&lt;/p&gt;
&lt;p&gt;print a&lt;/p&gt;
&lt;p&gt;print a[8]&lt;/p&gt;
&lt;p&gt;print a[9]&lt;/p&gt;
&lt;p&gt;for i in a:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if i == plataforma:

    print i
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;``
Este script se salvar&amp;aacute; con el nombre de&lt;/code&gt;arreglo.py`.&lt;/p&gt;
&lt;p&gt;Ahora se ejecutar&amp;aacute; &lt;code&gt;pyflakes&lt;/code&gt;:
```python
pyflakes arreglo.py &lt;/p&gt;
&lt;p&gt;arreglo.py:8: 'string' imported but unused&lt;/p&gt;
&lt;p&gt;arreglo.py:18: undefined name 'plataforma'
```&lt;/p&gt;
&lt;p&gt;La ejecuci&amp;oacute;n devuelve la l&amp;iacute;nea donde hay definiciones sin usar (import string) y una variable sin definir (plataforma).&lt;/p&gt;
&lt;p&gt;Al eliminar la importaci&amp;oacute;n de la l&amp;iacute;nea 8 y areglar la definici&amp;oacute;n de la variable plataforma o cambiar dicha parte del c&amp;oacute;digo se eliminar&amp;aacute; los mensajes que devuelve pyflakes. Esto permite prevenir errores en el c&amp;oacute;digo.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Pyflakes"></category></entry><entry><title>Depurar código python con pudb</title><link href="https://ecrespo.github.io/depurar-codigo-python-con-pudb.html" rel="alternate"></link><published>2012-12-07T09:00:00-05:30</published><updated>2012-12-07T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-07:/depurar-codigo-python-con-pudb.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Pudb&lt;/code&gt; es una herramienta de depuraci&amp;oacute;n full pantalla para la consola. Soporta teclas de cursor y comandos del editor vi. Se puede integrar con &lt;code&gt;ipython&lt;/code&gt; si se requiere.&lt;/p&gt;
&lt;p&gt;Para instalarlo en distribuciones basadas en Debian se ejecuta el siguiente comando:
&lt;code&gt;apt-get install python-pudb&lt;/code&gt;
Para instalarlo con &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt; se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Pudb&lt;/code&gt; es una herramienta de depuraci&amp;oacute;n full pantalla para la consola. Soporta teclas de cursor y comandos del editor vi. Se puede integrar con &lt;code&gt;ipython&lt;/code&gt; si se requiere.&lt;/p&gt;
&lt;p&gt;Para instalarlo en distribuciones basadas en Debian se ejecuta el siguiente comando:
&lt;code&gt;apt-get install python-pudb&lt;/code&gt;
Para instalarlo con &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt; se ejecuta lo siguiente:
&lt;code&gt;easy_install pudb&lt;/code&gt;
&lt;code&gt;pip install pudb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se depurar&amp;aacute; el mismo c&amp;oacute;digo del &lt;a href="http://blog.crespo.org.ve/2012/12/depurar-codigo-python-con-ipython.html"&gt;art&amp;iacute;culo anterior&lt;/a&gt;. Se agregar&amp;aacute; al c&amp;oacute;digo para la depuraci&amp;oacute;n:
from pudb import set_trace; set_trace()&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo completo se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;p&gt;from pudb import set_trace; set_trace()&lt;/p&gt;
&lt;p&gt;a = np.arange(10)
print a
print a[8]
print a[9]&lt;/p&gt;
&lt;p&gt;for i in a:
    print i&lt;/p&gt;
&lt;p&gt;print a[10]
&lt;code&gt;Para iniciar la depuraci&amp;oacute;n se ejecuta python haciendo una llamada al m&amp;oacute;dulo de `pudb.run` y luego se pasa el script a depurar:&lt;/code&gt;
python -m pudb.run arreglo.py
&lt;code&gt;``
En la siguiente figura se muestra la interfaz de&lt;/code&gt;pudb`.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/depurarcodigopythonconpudb-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;En la ventana principal se muestra el c&amp;oacute;digo del script, en la primera ventana lateral superior se muestra las variables, la siguiente ventana inferior se muestra el stack y por &amp;uacute;ltimo los breakpoints. &lt;/p&gt;
&lt;p&gt;Para ver las opciones existentes de la interfaz se presiona a la tecla "?". En la siguiente figura se muestra las opciones.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/depurarcodigopythonconpudb-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Opciones:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Control+p: Permite editar las preferencias de la interfaz.&lt;/li&gt;
&lt;li&gt;n (next): Permite saltar a la siguiente instrucci&amp;oacute;n del c&amp;oacute;digo.&lt;/li&gt;
&lt;li&gt;c (continue):  Continua a la siguiente instrucci&amp;oacute;n.&lt;/li&gt;
&lt;li&gt;s (step into): Salta a la siguiente instrucci&amp;oacute;n.&lt;/li&gt;
&lt;li&gt;r/f:: Finaliza la funci&amp;oacute;n actual.&lt;/li&gt;
&lt;li&gt;t: Corre al cursor.&lt;/li&gt;
&lt;li&gt;e: Muestra el traceback (postmorten o en el estado de una excepci&amp;oacute;n).&lt;/li&gt;
&lt;li&gt;H: Mueve a la l&amp;iacute;nea actual (al final del stack). &lt;/li&gt;
&lt;li&gt;u: Mueve hacia arriba en el stack&lt;/li&gt;
&lt;li&gt;d: Mueve hacia abajo en el stack&lt;/li&gt;
&lt;li&gt;!: Invoca un interprete de comandos python en el actual ambiente.&lt;/li&gt;
&lt;li&gt;o: Muestra la consola o la salida de la pantalla.&lt;/li&gt;
&lt;li&gt;b: Conmuta los breakpoints.&lt;/li&gt;
&lt;li&gt;q: Salir/reiniciar el script.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En la siguiente figura se muestra las preferencias:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/depurarcodigopythonconpudb-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;La siguiente figura muestra a el depurador en funcionamiento.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/depurarcodigopythonconpudb-4.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="numpy"></category><category term="python"></category><category term="pudb"></category></entry><entry><title>Depurar código python con ipython.</title><link href="https://ecrespo.github.io/depurar-codigo-python-con-ipython.html" rel="alternate"></link><published>2012-12-06T09:00:00-05:30</published><updated>2012-12-06T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-06:/depurar-codigo-python-con-ipython.html</id><summary type="html">&lt;p&gt;En los 3 art&amp;iacute;culos anteriores se explic&amp;oacute; como realizar profiling con 3 herramientas (timeit, line_profiler y cProfile). Ahora se explicar&amp;aacute; como depurar c&amp;oacute;digo python.&lt;/p&gt;
&lt;p&gt;En este caso se explicar&amp;aacute; la depuraci&amp;oacute;n de c&amp;oacute;digo utilizando &lt;code&gt;ipython&lt;/code&gt;.
&lt;code&gt;ipython&lt;/code&gt; aparte de permitir hacer profiling tambi&amp;eacute;n permite realizar depuraci&amp;oacute;n de c&amp;oacute;digo.&lt;/p&gt;
&lt;p&gt;Se mostrar&amp;aacute; el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En los 3 art&amp;iacute;culos anteriores se explic&amp;oacute; como realizar profiling con 3 herramientas (timeit, line_profiler y cProfile). Ahora se explicar&amp;aacute; como depurar c&amp;oacute;digo python.&lt;/p&gt;
&lt;p&gt;En este caso se explicar&amp;aacute; la depuraci&amp;oacute;n de c&amp;oacute;digo utilizando &lt;code&gt;ipython&lt;/code&gt;.
&lt;code&gt;ipython&lt;/code&gt; aparte de permitir hacer profiling tambi&amp;eacute;n permite realizar depuraci&amp;oacute;n de c&amp;oacute;digo.&lt;/p&gt;
&lt;p&gt;Se mostrar&amp;aacute; el c&amp;oacute;digo de la generaci&amp;oacute;n de un arreglo, luego se muestra en pantalla el arreglo, el valor de un elemento de ese arreglo y el recorrido de los elementos del arreglo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;p&gt;a = np.arange(10)&lt;/p&gt;
&lt;p&gt;print a&lt;/p&gt;
&lt;p&gt;print a[8]&lt;/p&gt;
&lt;p&gt;print a[9]&lt;/p&gt;
&lt;p&gt;for i in a:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print i
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;print a[10]
```&lt;/p&gt;
&lt;p&gt;El resultado de ejecutar el script es el siguiente:&lt;/p&gt;
&lt;p&gt;```
ecrespo@jewel:~/proyectos/ernesto-ecrespo.blogspot/debugipython$ python arreglo.py &lt;/p&gt;
&lt;p&gt;[0 1 2 3 4 5 6 7 8 9]&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;0&lt;/p&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;Traceback (most recent call last):&lt;/p&gt;
&lt;p&gt;File "arreglo.py", line 17, in &lt;module&gt;&lt;/module&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print a[10]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;IndexError: index out of bounds
```&lt;/p&gt;
&lt;p&gt;Se muestra el mensaje de error de tratar de presentar en pantalla el valor del elemento 10 del arreglo a (que no existe).&lt;/p&gt;
&lt;p&gt;Se ejecuta a continuaci&amp;oacute;n &lt;code&gt;ipython&lt;/code&gt; desde la consola Linux, ipython entra en un interprete interactivo, ah&amp;iacute; se ejecuta el comando &lt;code&gt;%run script.py&lt;/code&gt;. Esto hace que se inicie el modo depuraci&amp;oacute;n con el script que se pasa como argumento:&lt;/p&gt;
&lt;p&gt;```python
ecrespo@jewel:~/proyectos/ernesto-ecrespo.blogspot/debugipython$ ipython&lt;/p&gt;
&lt;p&gt;Python 2.7.3rc2 (default, Apr 22 2012, 22:35:38) &lt;/p&gt;
&lt;p&gt;Type "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;p&gt;IPython 0.13.1 -- An enhanced Interactive Python.&lt;/p&gt;
&lt;p&gt;?         -&amp;gt; Introduction and overview of IPython's features.&lt;/p&gt;
&lt;p&gt;%quickref -&amp;gt; Quick reference.&lt;/p&gt;
&lt;p&gt;help      -&amp;gt; Python's own help system.&lt;/p&gt;
&lt;p&gt;object?   -&amp;gt; Details about 'object', use 'object??' for extra details.&lt;/p&gt;
&lt;p&gt;In [1]: %run arreglo.py&lt;/p&gt;
&lt;p&gt;[0 1 2 3 4 5 6 7 8 9]&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;0&lt;/p&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;IndexError                                Traceback (most recent call last)&lt;/p&gt;
&lt;p&gt;/usr/lib/python2.7/dist-packages/IPython/utils/py3compat.pyc in execfile(fname, *where)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;176             else:


177                 filename = fname
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;--&amp;gt; 178             &lt;strong&gt;builtin&lt;/strong&gt;.execfile(filename, *where)&lt;/p&gt;
&lt;p&gt;/home/ecrespo/proyectos/ernesto-ecrespo.blogspot/debugipython/arreglo.py in &lt;module&gt;()&lt;/module&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 15     print i


 16
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;---&amp;gt; 17 print a[10]&lt;/p&gt;
&lt;p&gt;IndexError: index out of bounds&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado es la ejecuci&amp;oacute;n del script y se&amp;ntilde;ala la secci&amp;oacute;n donde se tiene el error.&lt;/p&gt;
&lt;p&gt;Ahora se ejecuta el comando &lt;code&gt;%debug&lt;/code&gt;:
```python
In [2]: %debug&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/home/ecrespo/proyectos/ernesto-ecrespo.blogspot/debugipython/arreglo.py(17)&lt;module&gt;()
     15     print i
     16 
---&amp;gt; 17 print a[10]
```
Se ve claramente que el error se encuentra en la l&amp;iacute;nea 17 del script, donde se trata de mostrar en pantalla el elemento 10 del arreglo el cual no existe.&lt;/module&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se puede listar el c&amp;oacute;digo al ejecutar el comando &lt;code&gt;list&lt;/code&gt;:
&lt;code&gt;python
ipdb&amp;gt; list
     12 print a[9]
     13 
     14 for i in a:
     15     print i
     16 
---&amp;gt; 17 print a[10]&lt;/code&gt;
Evaluar c&amp;oacute;digo. Se puede ejecutar una instrucci&amp;oacute;n python para evaluar el tama&amp;ntilde;o del arreglo.
&lt;code&gt;python
ipdb&amp;gt; len(a)
10&lt;/code&gt;
Se muestra en pantalla el valor de a:
&lt;code&gt;python
ipdb&amp;gt; print a
[0 1 2 3 4 5 6 7 8 9]&lt;/code&gt;
Ver las llamadas del stack:Es un stack que contiene informaci&amp;oacute;n acerca de las funciones activas de un programa en ejecuci&amp;oacute;n. El comando para ver el stack es bt:&lt;/p&gt;
&lt;p&gt;```python
ipdb&amp;gt; bt&lt;/p&gt;
&lt;p&gt;/usr/lib/python2.7/dist-packages/IPython/utils/py3compat.py(178)execfile()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;174             if isinstance(fname, unicode):


175                 filename = fname.encode(sys.getfilesystemencoding())


176             else:


177                 filename = fname
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;--&amp;gt; 178             &lt;strong&gt;builtin&lt;/strong&gt;.execfile(filename, *where)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/home/ecrespo/proyectos/ernesto-ecrespo.blogspot/debugipython/arreglo.py(17)&lt;module&gt;()&lt;/module&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt; 13


 14 for i in a:


 15     print i


 16
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;---&amp;gt; 17 print a[10]&lt;/p&gt;
&lt;p&gt;Moverse hacia arriba en el stack se logra al ejecutar el comando &lt;code&gt;u&lt;/code&gt;:
```python
ipdb&amp;gt; u&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/usr/lib/python2.7/dist-packages/IPython/utils/py3compat.py(178)execfile()
    176             else:
    177                 filename = fname
--&amp;gt; 178             &lt;strong&gt;builtin&lt;/strong&gt;.execfile(filename, *where)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para moverse hacia abajo en el stack se logra al ejecutar el comando d:
ipdb&amp;gt; d&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/home/ecrespo/proyectos/ernesto-ecrespo.blogspot/debugipython/arreglo.py(17)&lt;module&gt;()
     15     print i
     16 
---&amp;gt; 17 print a[10]
```&lt;/module&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para salirse del modo depuraci&amp;oacute;n se ejecuta el comando &lt;code&gt;exit&lt;/code&gt;, para salirse del interprete de comandos &lt;code&gt;ipython&lt;/code&gt; se vuelve a ejectuar &lt;code&gt;exit&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se tiene claro que el error en el script se encuentra en la l&amp;iacute;nea 17, donde se trata de imprimir en pantalla un elemento del arreglo que no existe.&lt;/p&gt;
&lt;p&gt;De esta forma se puede realizar depuraci&amp;oacute;n de c&amp;oacute;digo python con &lt;code&gt;ipython&lt;/code&gt;. &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="numpy"></category><category term="python"></category><category term="ipython"></category></entry><entry><title>Profiling de un script python con cProfile</title><link href="https://ecrespo.github.io/profiling-de-un-script-python-con-cprofile.html" rel="alternate"></link><published>2012-12-05T09:00:00-05:30</published><updated>2012-12-05T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-05:/profiling-de-un-script-python-con-cprofile.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre profiling, otra herramienta para llevar adelante el profiling se llama &lt;code&gt;cProfile&lt;/code&gt;, esta es una extensi&amp;oacute;n en C que se introdujo en Python 2.5. Se usa para determinar Profiling deterministico (se mide el tiempo de manera precisa en vez de muestreo).&lt;/p&gt;
&lt;p&gt;El ejemplo que se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre profiling, otra herramienta para llevar adelante el profiling se llama &lt;code&gt;cProfile&lt;/code&gt;, esta es una extensi&amp;oacute;n en C que se introdujo en Python 2.5. Se usa para determinar Profiling deterministico (se mide el tiempo de manera precisa en vez de muestreo).&lt;/p&gt;
&lt;p&gt;El ejemplo que se desarrollar&amp;aacute; es el mismo de la generaci&amp;oacute;n de la matriz inversa, la diferencia ser&amp;aacute; que la definici&amp;oacute;n del valor de n de la matriz y su generaci&amp;oacute;n estar&amp;aacute; en una funci&amp;oacute;n llamada main. Est&amp;aacute; funci&amp;oacute;n luego se llamar&amp;aacute; desde &lt;code&gt;cProfile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;p&gt;import cProfile&lt;/p&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;h1 id="funcion que genera matrices inversas."&gt;funcion que genera matrices inversas.&lt;/h1&gt;
&lt;p&gt;def Inversa(n):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a = np.matrix(np.random.rand(n, n))

return a.I
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;def main():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se define una lista de  tama&amp;ntilde;os de la matriz

tamagno = 2**np.arange(0,12)

#Se recorre la lista de tama&amp;ntilde;os y se invierte cada matriz con la

#funcion.

for n in tamagno:

    Inversa(n)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se ejecuta la funcion main desde la llamada run de cprofile."&gt;Se ejecuta la funci&amp;oacute;n main desde la llamada run de cProfile.&lt;/h1&gt;
&lt;p&gt;cProfile.run('main()')
```&lt;/p&gt;
&lt;p&gt;Al ejecutar el script se tiene como resultado el profiling de la generaci&amp;oacute;n de la matriz inversa:&lt;/p&gt;
&lt;p&gt;```
ecrespo@jewel:~/proyectos/ernesto-ecrespo.blogspot/cprofile$ python matrizinversa.py &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     809 function calls in 5.764 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ordered by: standard name&lt;/p&gt;
&lt;p&gt;ncalls  tottime  percall  cumtime  percall filename:lineno(function)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    1    0.000    0.000    5.764    5.764 &amp;lt;string&amp;gt;:1(&amp;lt;module&amp;gt;)

   24    0.000    0.000    0.058    0.002 defmatrix.py:233(__new__)

   36    0.000    0.000    0.000    0.000 defmatrix.py:279(__array_finalize__)

   12    0.000    0.000    0.000    0.000 defmatrix.py:55(asmatrix)

   12    0.015    0.001    5.467    0.456 defmatrix.py:808(getI)

    1    0.000    0.000    0.000    0.000 dual.py:12(&amp;lt;module&amp;gt;)

   12    0.000    0.000    0.000    0.000 linalg.py:127(_to_native_byte_order)

   12    0.000    0.000    0.257    0.021 linalg.py:139(_fastCopyAndTranspose)

   12    0.000    0.000    0.000    0.000 linalg.py:151(_assertRank2)

   12    0.000    0.000    0.000    0.000 linalg.py:157(_assertSquareness)

   12    0.000    0.000    5.396    0.450 linalg.py:244(solve)

   12    0.020    0.002    5.452    0.454 linalg.py:404(inv)

   36    0.000    0.000    0.000    0.000 linalg.py:66(_makearray)

   36    0.000    0.000    0.000    0.000 linalg.py:71(isComplexType)

   24    0.000    0.000    0.000    0.000 linalg.py:84(_realType)

   12    0.000    0.000    0.000    0.000 linalg.py:99(_commonType)

   12    0.007    0.001    5.751    0.479 matrizinversa.py:12(Inversa)

    1    0.013    0.013    5.764    5.764 matrizinversa.py:17(main)

   36    0.000    0.000    0.000    0.000 numeric.py:167(asarray)

   12    0.000    0.000    0.035    0.003 numeric.py:1830(identity)

   36    0.000    0.000    0.000    0.000 {getattr}

   72    0.000    0.000    0.000    0.000 {isinstance}

   60    0.000    0.000    0.000    0.000 {issubclass}

   60    0.000    0.000    0.000    0.000 {len}

   12    0.000    0.000    0.000    0.000 {max}

   24    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}

   24    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}

   12    0.059    0.005    0.059    0.005 {method 'astype' of 'numpy.ndarray' objects}

   12    0.058    0.005    0.058    0.005 {method 'copy' of 'numpy.ndarray' objects}

    1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}

   24    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}

   12    0.220    0.018    0.220    0.018 {method 'rand' of 'mtrand.RandomState' objects}

   12    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}

   12    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}

   12    0.000    0.000    0.000    0.000 {min}

   24    0.257    0.011    0.257    0.011 {numpy.core.multiarray._fastCopyAndTranspose}

    1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.arange}

   36    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}

   24    0.035    0.001    0.035    0.001 {numpy.core.multiarray.zeros}

   12    5.078    0.423    5.078    0.423 {numpy.linalg.lapack_lite.dgesv}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La salida es la misma que se mostr&amp;oacute; en el art&amp;iacute;culo de timeit con ipython.  Como adicional al &lt;a href="http://blog.crespo.org.ve/2012/12/profiling-de-un-script-python-con-timeit.html"&gt;art&amp;iacute;culo de timeit&lt;/a&gt; se muestra a continuaci&amp;oacute;n el significado de cada columna:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ncalls&lt;/code&gt;: N&amp;uacute;mero de llamadas.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tottime&lt;/code&gt;: Tiempo total gastado en una funci&amp;oacute;n.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;percall&lt;/code&gt;: Tiempo por llamada, calculado el tiempo total la cantidad de llamadas.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cumtime&lt;/code&gt;: Tiempo acumulado gastado en una funci&amp;oacute;n y llamadas a funciones por la funci&amp;oacute;n, incluyendo llamadas recursivas.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El c&amp;oacute;digo del script lo pueden bajar desde &lt;a href="https://bitbucket.org/ecrespo/ernesto-ecrespo.blogspot/src/a3294957f9a7a41932385d064d7799ad1dd80b60/cprofile/matrizinversa.py?at=default"&gt;bitbucket&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="numpy"></category><category term="python"></category><category term="cProfile"></category><category term="Profiling"></category></entry><entry><title>Profiling de un script python con line_profiler</title><link href="https://ecrespo.github.io/profiling-de-un-script-python-con-line_profiler.html" rel="alternate"></link><published>2012-12-04T09:00:00-05:30</published><updated>2012-12-04T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-04:/profiling-de-un-script-python-con-line_profiler.html</id><summary type="html">&lt;p&gt;Ahora se mostrar&amp;aacute; el uso de la herramienta &lt;code&gt;line_profiler&lt;/code&gt; para hacer profiling de programas Python.&lt;/p&gt;
&lt;p&gt;Lo primero que se tiene que hacer es instalar &lt;code&gt;line_profiler&lt;/code&gt; con el comando &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;easy_install line_profiler&lt;/code&gt;
&lt;code&gt;pip install line_profiler&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo que se va a revisar es el mismo del art&amp;iacute;culo anterior (matriz …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ahora se mostrar&amp;aacute; el uso de la herramienta &lt;code&gt;line_profiler&lt;/code&gt; para hacer profiling de programas Python.&lt;/p&gt;
&lt;p&gt;Lo primero que se tiene que hacer es instalar &lt;code&gt;line_profiler&lt;/code&gt; con el comando &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;easy_install line_profiler&lt;/code&gt;
&lt;code&gt;pip install line_profiler&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo que se va a revisar es el mismo del art&amp;iacute;culo anterior (matriz inversa). La diferencia es que se define en la funci&amp;oacute;n que genera la matriz inversa el uso del decorador profile.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se define el uso del decorador profile. en la funcion que genera matrices inversas."&gt;Se define el uso del decorador profile. En la funcion que genera matrices inversas.&lt;/h1&gt;
&lt;p&gt;@profile&lt;/p&gt;
&lt;p&gt;def Inversa(n):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a = np.matrix(np.random.rand(n, n))

return a.I
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se define una lista de tamanos de la matriz"&gt;Se define una lista de  tama&amp;ntilde;os de la matriz&lt;/h1&gt;
&lt;p&gt;tamagno = 2 ** np.arange(0, 12)&lt;/p&gt;
&lt;h1 id="se recorre la lista de tamanos y se invierte cada matriz con la"&gt;Se recorre la lista de tama&amp;ntilde;os y se invierte cada matriz con la&lt;/h1&gt;
&lt;h1 id="funcion."&gt;funcion.&lt;/h1&gt;
&lt;p&gt;for n in tamagno:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Inversa(n)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```
Para realizar el profiling se ejecuta el siguiente comando:&lt;/p&gt;
&lt;p&gt;```python
ecrespo@jewel:~/proyectos/ernesto-ecrespo.blogspot/line_profiler$ kernprof.py -l -v  matrizinversa.py &lt;/p&gt;
&lt;p&gt;Wrote profile results to matrizinversa.py.lprof&lt;/p&gt;
&lt;p&gt;Timer unit: 1e-06 s&lt;/p&gt;
&lt;p&gt;File: matrizinversa.py&lt;/p&gt;
&lt;p&gt;Function: Inversa at line 10&lt;/p&gt;
&lt;p&gt;Total time: 6.05993 s&lt;/p&gt;
&lt;p&gt;Line #      Hits         Time  Per Hit   % Time  Line Contents&lt;/p&gt;
&lt;p&gt;==============================================================&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;10                                           @profile

11                                           def Inversa(n):

12        12       260506  21708.8      4.3      a = np.matrix(np.random.rand(n, n))

13        12      5799424 483285.3     95.7      return a.I
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado muestra el tiempo total de ejecuci&amp;oacute;n, Luego muestra cada l&amp;iacute;nea de ejecuci&amp;oacute;n, y el porcentaje de tiempo que se ha ejecutado. Se nota que la generaci&amp;oacute;n de la matriz no tarda mucho, pero al invertirla si un 95,7% del tiempo de ejecuci&amp;oacute;n.
El significado de cada par&amp;aacute;metro es:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Line&lt;/code&gt;: Es el n&amp;uacute;mero de l&amp;iacute;nea en el archivo.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Hits&lt;/code&gt;: Es el n&amp;uacute;mero de veces que la l&amp;iacute;nea se ejecuta.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Time&lt;/code&gt;: Tiempo que gasta al ejecutar cada l&amp;iacute;nea.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Per Hit&lt;/code&gt;: Tiempo promedio que se gasta al ejecutar cada l&amp;iacute;nea.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;% Time&lt;/code&gt;: Porcentaje de tiempo que se gasta al ejecutar la l&amp;iacute;nea relativo al tiempo que se gasta en ejecutar todas las l&amp;iacute;neas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El c&amp;oacute;digo del script se encuentra en &lt;a href="https://bitbucket.org/ecrespo/ernesto-ecrespo.blogspot/src/dbfc744caa2138355d0be1811a1edbde5379f189/line_profiler/matrizinversa.py?at=default"&gt;bitbucket&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="numpy"></category><category term="Python"></category><category term="Profiling"></category><category term="line_profiler"></category></entry><entry><title>Profiling de un script python con timeit</title><link href="https://ecrespo.github.io/profiling-de-un-script-python-con-timeit.html" rel="alternate"></link><published>2012-12-03T09:00:00-05:30</published><updated>2012-12-03T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-03:/profiling-de-un-script-python-con-timeit.html</id><summary type="html">&lt;p&gt;El profiling permite conocer el tiempo que consume un programa en ejecutarse e incluso conocer cuanto tarda cada llamada de funciones de distintos m&amp;oacute;dulos utilizados.&lt;/p&gt;
&lt;p&gt;El ejemplo que se har&amp;aacute; es un script que tiene una funci&amp;oacute;n donde se le pasa el tama&amp;ntilde;o de la matriz NxN  generada de forma …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El profiling permite conocer el tiempo que consume un programa en ejecutarse e incluso conocer cuanto tarda cada llamada de funciones de distintos m&amp;oacute;dulos utilizados.&lt;/p&gt;
&lt;p&gt;El ejemplo que se har&amp;aacute; es un script que tiene una funci&amp;oacute;n donde se le pasa el tama&amp;ntilde;o de la matriz NxN  generada de forma aleatoria y devuelve la matriz inversa. Luego se genera una lista de tama&amp;ntilde;os de forma aletoria. Se crea un ciclo recorriendo la lista donde dentro del ciclo se crea la matriz inversa.&lt;/p&gt;
&lt;p&gt;El script se guarda con nombre &lt;code&gt;ej4.py&lt;/code&gt;.
El c&amp;oacute;digo del script se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se crea la funcion que invierte una matriz de valores aleatorios"&gt;Se crea la funci&amp;oacute;n que invierte una matriz de valores aleatorios&lt;/h1&gt;
&lt;p&gt;def Inversa(n):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a = np.matrix(np.random.rand(n, n))

return a.I
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se define una lista de tamanos de la matriz"&gt;Se define una lista de  tama&amp;ntilde;os de la matriz&lt;/h1&gt;
&lt;p&gt;tamagno = 2 ** np.arange(0, 12)&lt;/p&gt;
&lt;h1 id="se recorre la lista de tamanos y se invierte cada matriz con la"&gt;Se recorre la lista de tama&amp;ntilde;os y se invierte cada matriz con la&lt;/h1&gt;
&lt;h1 id="funcion."&gt;funcion.&lt;/h1&gt;
&lt;p&gt;for n in tamagno:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Inversa(n)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Desde la consola se ejecuta  &lt;code&gt;ipython --pylab&lt;/code&gt;. Luego se ejecuta el comando &lt;code&gt;%run -t ej4.py&lt;/code&gt; el cual devuelve el tiempo de ejecuci&amp;oacute;n en la capa de usuario, capa de sistema. Luego se ejecuta &lt;code&gt;%run -p ej4.py&lt;/code&gt; el cual devuelve los tiempos de ejecuci&amp;oacute;n de cada funci&amp;oacute;n.
```python
ecrespo@jewel:~/bin/python/matplotlib$ ipython --pylab&lt;/p&gt;
&lt;p&gt;Python 2.7.3rc2 (default, Apr 22 2012, 22:35:38) &lt;/p&gt;
&lt;p&gt;Type "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;p&gt;IPython 0.13.1 -- An enhanced Interactive Python.&lt;/p&gt;
&lt;p&gt;?         -&amp;gt; Introduction and overview of IPython's features.&lt;/p&gt;
&lt;p&gt;%quickref -&amp;gt; Quick reference.&lt;/p&gt;
&lt;p&gt;help      -&amp;gt; Python's own help system.&lt;/p&gt;
&lt;p&gt;object?   -&amp;gt; Details about 'object', use 'object??' for extra details.&lt;/p&gt;
&lt;p&gt;Welcome to pylab, a matplotlib-based Python environment [backend: TkAgg].&lt;/p&gt;
&lt;p&gt;For more information, type 'help(pylab)'.&lt;/p&gt;
&lt;p&gt;In [1]:  %run -t ej4.py&lt;/p&gt;
&lt;p&gt;IPython CPU timings (estimated):&lt;/p&gt;
&lt;p&gt;User   :       8.79 s.&lt;/p&gt;
&lt;p&gt;System :       0.13 s.&lt;/p&gt;
&lt;p&gt;Wall time:       6.17 s.&lt;/p&gt;
&lt;p&gt;In [2]:  850 function calls in 6.201 seconds&lt;/p&gt;
&lt;p&gt;Ordered by: internal time&lt;/p&gt;
&lt;p&gt;ncalls  tottime  percall  cumtime  percall filename:lineno(function)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   12    5.556    0.463    5.556    0.463 {numpy.linalg.lapack_lite.dgesv}


   24    0.236    0.010    0.236    0.010 {numpy.core.multiarray._fastCopyAndTranspose}


   12    0.229    0.019    0.229    0.019 {method 'rand' of 'mtrand.RandomState' objects}


   12    0.058    0.005    0.058    0.005 {method 'astype' of 'numpy.ndarray' objects}


   12    0.042    0.004    0.042    0.004 {method 'copy' of 'numpy.ndarray' objects}


   24    0.036    0.001    0.036    0.001 {numpy.core.multiarray.zeros}


   12    0.022    0.002    5.909    0.492 linalg.py:404(inv)


    1    0.012    0.012    6.200    6.200 ej4.py:5(&amp;lt;module&amp;gt;)


   12    0.006    0.001    6.188    0.516 ej4.py:9(Inversa)


    1    0.001    0.001    6.201    6.201 {execfile}


   12    0.000    0.000    5.851    0.488 linalg.py:244(solve)


    1    0.000    0.000    6.201    6.201 interactiveshell.py:2390(safe_execfile)


   12    0.000    0.000    0.036    0.003 numeric.py:1830(identity)


   12    0.000    0.000    5.909    0.492 defmatrix.py:808(getI)


   12    0.000    0.000    0.000    0.000 linalg.py:99(_commonType)


    1    0.000    0.000    0.000    0.000 {open}


   24    0.000    0.000    0.043    0.002 defmatrix.py:233(__new__)


   36    0.000    0.000    0.000    0.000 defmatrix.py:279(__array_finalize__)


   36    0.000    0.000    0.000    0.000 linalg.py:66(_makearray)


   36    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}


   12    0.000    0.000    0.236    0.020 linalg.py:139(_fastCopyAndTranspose)


   24    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}


   12    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}


   12    0.000    0.000    0.000    0.000 linalg.py:127(_to_native_byte_order)


   75    0.000    0.000    0.000    0.000 {isinstance}


   36    0.000    0.000    0.000    0.000 numeric.py:167(asarray)


   12    0.000    0.000    0.000    0.000 defmatrix.py:55(asmatrix)


   12    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;60    0.000    0.000    0.000    0.000 {issubclass}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   12    0.000    0.000    0.000    0.000 linalg.py:151(_assertRank2)


   36    0.000    0.000    0.000    0.000 linalg.py:71(isComplexType)


   12    0.000    0.000    0.000    0.000 linalg.py:157(_assertSquareness)


   24    0.000    0.000    0.000    0.000 linalg.py:84(_realType)


   36    0.000    0.000    0.000    0.000 {getattr}


   61    0.000    0.000    0.000    0.000 {len}


    1    0.000    0.000    0.000    0.000 posixpath.py:312(normpath)


    1    0.000    0.000    0.000    0.000 posixpath.py:118(dirname)


   30    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}


    1    0.000    0.000    0.000    0.000 syspathcontext.py:55(__enter__)


    1    0.000    0.000    0.000    0.000 {posix.getcwdu}


   12    0.000    0.000    0.000    0.000 {max}


   24    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}


    1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.arange}


    1    0.000    0.000    6.201    6.201 py3compat.py:173(execfile)


    1    0.000    0.000    0.000    0.000 posixpath.py:341(abspath)


    1    0.000    0.000    0.000    0.000 syspathcontext.py:62(__exit__)


   12    0.000    0.000    0.000    0.000 {min}


    1    0.000    0.000    0.000    0.000 posixpath.py:60(join)


    5    0.000    0.000    0.000    0.000 {method 'startswith' of 'unicode' objects}


    1    0.000    0.000    0.000    0.000 {_codecs.utf_8_decode}


    1    0.000    0.000    6.201    6.201 &amp;lt;string&amp;gt;:1(&amp;lt;module&amp;gt;)


    1    0.000    0.000    0.000    0.000 {method 'encode' of 'unicode' objects}


    1    0.000    0.000    0.000    0.000 {method 'split' of 'unicode' objects}


    1    0.000    0.000    0.000    0.000 {method 'rfind' of 'unicode' objects}


    1    0.000    0.000    0.000    0.000 posixpath.py:249(expanduser)


    1    0.000    0.000    0.000    0.000 utf_8.py:15(decode)


    1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}


    1    0.000    0.000    0.000    0.000 posixpath.py:51(isabs)


    1    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}


    1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'unicode' objects}




    2    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}


    1    0.000    0.000    0.000    0.000 syspathcontext.py:52(__init__)


    1    0.000    0.000    0.000    0.000 {method 'join' of 'unicode' objects}


    1    0.000    0.000    0.000    0.000 {method 'endswith' of 'unicode' objects}


    1    0.000    0.000    0.000    0.000 {sys.getfilesystemencoding}


    1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo lo pueden encontrar en &lt;a href="https://bitbucket.org/ecrespo/ernesto-ecrespo.blogspot/src/dbfc744caa2138355d0be1811a1edbde5379f189/line_profiler/matrizinversa.py?at=default"&gt;bitbucket&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="numpy"></category><category term="Python"></category><category term="Profiling"></category><category term="timeit"></category></entry><entry><title>Resolución de sistemas de ecuaciones con NumPy</title><link href="https://ecrespo.github.io/resolucion-de-sistemas-de-ecuaciones-con-numpy.html" rel="alternate"></link><published>2012-12-02T09:00:00-05:30</published><updated>2012-12-02T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-12-02:/resolucion-de-sistemas-de-ecuaciones-con-numpy.html</id><summary type="html">&lt;p&gt;Recordando un poco de resoluci&amp;oacute;n de sistemas de ecuaciones con Algebra Lineal.&lt;/p&gt;
&lt;p&gt;Se puede usar python por medio de NumPy para resolver estos sistemas de ecuaciones por medio de matrices.&lt;/p&gt;
&lt;p&gt;Las ecuaciones que se quieren resolver son:
&lt;code&gt;3x+9y-10z = 24
x-6y+4z = -4
10x-2y+8z = 20&lt;/code&gt;
Estas ecuaciones se pueden …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recordando un poco de resoluci&amp;oacute;n de sistemas de ecuaciones con Algebra Lineal.&lt;/p&gt;
&lt;p&gt;Se puede usar python por medio de NumPy para resolver estos sistemas de ecuaciones por medio de matrices.&lt;/p&gt;
&lt;p&gt;Las ecuaciones que se quieren resolver son:
&lt;code&gt;3x+9y-10z = 24
x-6y+4z = -4
10x-2y+8z = 20&lt;/code&gt;
Estas ecuaciones se pueden representar como un sistema de Matrices como &lt;code&gt;A*x=B&lt;/code&gt;, donde si se desea resolver la matr&amp;iacute;z x se aplica la inversa de A, &lt;code&gt;x = inv(A)*B&lt;/code&gt;. Donde A para nuestro caso es &lt;code&gt;[[3 9 -10][1 -6 4][10 -2 8]&lt;/code&gt; y B es &lt;code&gt;[[24][-4[[20]]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo para resolver el sistema de ecuaciones es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa numpy como np"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se define los valores de la matriz a"&gt;Se define los valores de la matriz A&lt;/h1&gt;
&lt;p&gt;A = np.matrix([[3,9,-10],[1,-6,4],[10,-2,8]])&lt;/p&gt;
&lt;h1 id="se definen los valores de la matriz b"&gt;Se definen los valores de la matriz B&lt;/h1&gt;
&lt;p&gt;B = np.matrix([[24],[-4],[20]])&lt;/p&gt;
&lt;h1 id="se calcula el valor de x con x=inv(a)*b"&gt;Se calcula el valor de X con X=inv(A)*B&lt;/h1&gt;
&lt;p&gt;X = A*&lt;em&gt;(-1)&lt;/em&gt;B&lt;/p&gt;
&lt;h1 id="se muestra el resultado"&gt;Se muestra el resultado&lt;/h1&gt;
&lt;p&gt;print("El resultado de X es:",X)&lt;/p&gt;
&lt;h1 id="para verificar el resultado se calcula x*a y debe dar b"&gt;Para verificar el resultado se calcula X*A y debe dar B&lt;/h1&gt;
&lt;p&gt;print("El resultado de A&lt;em&gt;X es B-&amp;gt; ",A&lt;/em&gt;X)
```&lt;/p&gt;
&lt;p&gt;El resultado de ejecutar el script se muestra a continuaci&amp;oacute;n:
&lt;code&gt;python
('El resultado de X es:', matrix([[ 2.99029126],
        [ 0.40776699],
        [-1.13592233]]))
('El resultado de A*X es B-&amp;gt; ', matrix([[ 24.],
        [ -4.],
        [ 20.]]))&lt;/code&gt;
Hay un problema a la hora de calcular la matriz inversa y es que no todas las matrices pueden ser invertidas, as&amp;iacute; que est&amp;aacute; soluci&amp;oacute;n no funciona para todos los casos. La soluci&amp;oacute;n es usar la funci&amp;oacute;n &lt;a href="docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.svd.html"&gt;numpy.linalg.svd&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo siguiente en vez de usar la clase matrix usar&amp;aacute; la clase array y usar la funci&amp;oacute;n &lt;code&gt;numpy.linalg.svd&lt;/code&gt;.
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa numpy como np_1"&gt;Se importa numpy como np&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se define los valores de la matriz a_1"&gt;Se define los valores de la matriz A&lt;/h1&gt;
&lt;p&gt;A = np.array([[3,9,-10],[1,-6,4],[10,-2,8]])&lt;/p&gt;
&lt;h1 id="se definen los valores de la matriz b_1"&gt;Se definen los valores de la matriz B&lt;/h1&gt;
&lt;p&gt;B = np.array([[24],[-4],[20]])&lt;/p&gt;
&lt;h1 id="se calcula el valor de x con x=inv(a)*b_1"&gt;Se calcula el valor de X con X=inv(A)*B&lt;/h1&gt;
&lt;p&gt;X = np.linalg.inv(A).dot(B)&lt;/p&gt;
&lt;h1 id="se muestra el resultado_1"&gt;Se muestra el resultado&lt;/h1&gt;
&lt;p&gt;print("El resultado de X es:",X)
&lt;code&gt;El resultado es el siguiente:&lt;/code&gt;
('El resultado de X es:', array([[ 2.99029126],
       [ 0.40776699],
       [-1.13592233]]))
```
As&amp;iacute; pues el valor de x es 2.99, el de y es 0.407 y el de z es -1.1359, mostrado con 2 procedimientos distintos.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de estos 2 ejemplos lo pueden encontrar en el &lt;a href="https://bitbucket.org/ecrespo/ernesto-ecrespo.blogspot/src/71eb8e1fcbaf472997dbcd4d179f2423b7ee4ae6/numpy1?at=default"&gt;repositorio de bitbucket de c&amp;oacute;digos de este blog&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="numpy"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Creación de grafos con networkx. Parte 1.</title><link href="https://ecrespo.github.io/creacion-de-grafos-con-networkx-parte-1.html" rel="alternate"></link><published>2012-11-26T09:00:00-05:30</published><updated>2012-11-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-11-26:/creacion-de-grafos-con-networkx-parte-1.html</id><summary type="html">&lt;p&gt;&lt;a href="http://networkx.lanl.gov/index.html"&gt;Networkx&lt;/a&gt; es una librer&amp;iacute;a para python que facilita la creaci&amp;oacute;n, manipulaci&amp;oacute;n y estudio de estructuras din&amp;aacute;micas, y funciones para redes complejas.&lt;/p&gt;
&lt;p&gt;En el siguiente &lt;a href="http://networkx.lanl.gov/tutorial/tutorial.html"&gt;enlace&lt;/a&gt; encontrar&amp;aacute;n un tutorial del sitio oficial de networkx. Donde explican como crear un grafo, los nodos y como enlazar dichos nodos.&lt;/p&gt;
&lt;p&gt;El siguiente ejemplo crear&amp;aacute; …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://networkx.lanl.gov/index.html"&gt;Networkx&lt;/a&gt; es una librer&amp;iacute;a para python que facilita la creaci&amp;oacute;n, manipulaci&amp;oacute;n y estudio de estructuras din&amp;aacute;micas, y funciones para redes complejas.&lt;/p&gt;
&lt;p&gt;En el siguiente &lt;a href="http://networkx.lanl.gov/tutorial/tutorial.html"&gt;enlace&lt;/a&gt; encontrar&amp;aacute;n un tutorial del sitio oficial de networkx. Donde explican como crear un grafo, los nodos y como enlazar dichos nodos.&lt;/p&gt;
&lt;p&gt;El siguiente ejemplo crear&amp;aacute; nodos sobre Venezuela, algunos Estados y Ciudades. Lo primero que se hace es crear los nodos, luego se definen los enlaces entre cada nodo.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a  continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa la libreria networkx como nx"&gt;Se importa la libreria networkx como nx&lt;/h1&gt;
&lt;p&gt;import networkx as nx&lt;/p&gt;
&lt;h1 id="se importa la libreria pyplot de matplotlib como plt"&gt;Se importa la libreria pyplot de matplotlib como plt&lt;/h1&gt;
&lt;p&gt;import matplotlib.pyplot as plt&lt;/p&gt;
&lt;h1 id="se crea un grafo vacio"&gt;Se crea un grafo vacio&lt;/h1&gt;
&lt;p&gt;G=nx.Graph()&lt;/p&gt;
&lt;h1 id="se crean los nodos:"&gt;Se crean los nodos:&lt;/h1&gt;
&lt;h1 id="nodo venezuela"&gt;Nodo Venezuela&lt;/h1&gt;
&lt;p&gt;G.add_node("Venezuela")&lt;/p&gt;
&lt;h1 id="se crean los nodos de los estados"&gt;Se crean los nodos de los estados&lt;/h1&gt;
&lt;p&gt;G.add_nodes_from(["Carabobo","Miranda","Aragua","Merida","Lara","Distrito Capital"])&lt;/p&gt;
&lt;h1 id="se crean los nodos de las ciudades."&gt;Se crean los nodos de las ciudades.&lt;/h1&gt;
&lt;p&gt;G.add_nodes_from((["Valencia","Barquisimeto","Merida","Caracas","Guacara","Carora","Cubiro"]))&lt;/p&gt;
&lt;h1 id="se crean los enlaces de los estados al pais"&gt;Se crean los enlaces de los estados al pa&amp;iacute;s&lt;/h1&gt;
&lt;p&gt;G.add_edge("Carabobo","Venezuela")&lt;/p&gt;
&lt;p&gt;G.add_edge("Lara","Venezuela")&lt;/p&gt;
&lt;p&gt;G.add_edge("Merida","Venezuela")&lt;/p&gt;
&lt;p&gt;G.add_edge("Distrito Capital","Venezuela")&lt;/p&gt;
&lt;p&gt;G.add_edge("Aragua","Venezuela")&lt;/p&gt;
&lt;p&gt;G.add_edge("Miranda","Venezuela")&lt;/p&gt;
&lt;h1 id="se crean los nodos de las ciudades a su respectivo estado"&gt;Se crean los nodos de las ciudades a su respectivo estado&lt;/h1&gt;
&lt;p&gt;v1 = ("Valencia","Carabobo")&lt;/p&gt;
&lt;p&gt;v2 = ("Guacara","Carabobo")&lt;/p&gt;
&lt;p&gt;dc = ("Caracas","Distrito Capital")&lt;/p&gt;
&lt;p&gt;G.add_edge(*v1)&lt;/p&gt;
&lt;p&gt;G.add_edge(*v2)&lt;/p&gt;
&lt;p&gt;G.add_edge("Tocuyito","Carabobo")&lt;/p&gt;
&lt;p&gt;G.add_edge("San Diego","Carabobo")&lt;/p&gt;
&lt;p&gt;G.add_edge("Puerto Cabello","Carabobo")&lt;/p&gt;
&lt;p&gt;G.add_edge("Moron","Carabobo")&lt;/p&gt;
&lt;p&gt;G.add_edge("Rafael Urdaneta","Valencia")&lt;/p&gt;
&lt;p&gt;G.add_edge(u"Miguel Pe&amp;ntilde;a","Valencia")&lt;/p&gt;
&lt;p&gt;G.add_edge("Santa Rosa","Valencia")&lt;/p&gt;
&lt;p&gt;G.add_edge("Candelaria","Valencia")&lt;/p&gt;
&lt;p&gt;G.add_edge(*dc)&lt;/p&gt;
&lt;p&gt;G.add_edge("Barquisimeto","Lara")&lt;/p&gt;
&lt;p&gt;G.add_edge("Carora","Lara")&lt;/p&gt;
&lt;p&gt;G.add_edge("Cubiro","Lara")&lt;/p&gt;
&lt;p&gt;G.add_edge("Merida","Merida")&lt;/p&gt;
&lt;p&gt;G.add_edge("El Vigia","Merida")&lt;/p&gt;
&lt;p&gt;G.add_edge("Ejido","Merida")&lt;/p&gt;
&lt;h1 id="se dibuja el grafo"&gt;Se dibuja el grafo&lt;/h1&gt;
&lt;p&gt;nx.draw(G)&lt;/p&gt;
&lt;h1 id="se muestra en pantalla"&gt;Se muestra en pantalla&lt;/h1&gt;
&lt;p&gt;plt.show()&lt;/p&gt;
&lt;h1 id="se vuelve a dibujar el grafo y se salva en un archivo png."&gt;Se vuelve a dibujar el grafo y se salva en un archivo png.&lt;/h1&gt;
&lt;p&gt;nx.draw(G)&lt;/p&gt;
&lt;p&gt;plt.savefig("networkx1.png")&lt;/p&gt;
&lt;h1 id="se muestra informacion de los nodos (cantidad, nodos)"&gt;Se muestra informaci&amp;oacute;n de los nodos (cantidad, nodos)&lt;/h1&gt;
&lt;p&gt;print "Nodos: ", G.number_of_nodes(), G.nodes()&lt;/p&gt;
&lt;h1 id="se muestra informacion de los enlaces (cantidad, enlaces)"&gt;SE muestra informaci&amp;oacute;n de los enlaces (cantidad, enlaces)&lt;/h1&gt;
&lt;p&gt;print "Enlaces: ", G.number_of_edges(),G.edges()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La imagen que muestra el gr&amp;aacute;fico del resultado del programa en la siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/creaciondegrafosconnetworkx-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;El resultado de mostrar la cantidad de nodos, los nodos, la cantidad de enlaces y los enlaces es la siguiente:
&lt;code&gt;Nodos:  23 ['Caracas', 'Ejido', u'Miguel Pe\xf1a', 'Tocuyito', 'Aragua', 'Santa Rosa', 'Valencia', 'Moron', 'Carora', 'Venezuela', 'San Diego', 'Cubiro', 'Miranda', 'Puerto Cabello', 'El Vigia', 'Distrito Capital', 'Barquisimeto', 'Merida', 'Rafael Urdaneta', 'Lara', 'Guacara', 'Carabobo', 'Candelaria']
Enlaces:  23 [('Caracas', 'Distrito Capital'), ('Ejido', 'Merida'), (u'Miguel Pe\xf1a', 'Valencia'), ('Tocuyito', 'Carabobo'), ('Aragua', 'Venezuela'), ('Santa Rosa', 'Valencia'), ('Valencia', 'Candelaria'), ('Valencia', 'Carabobo'), ('Valencia', 'Rafael Urdaneta'), ('Moron', 'Carabobo'), ('Carora', 'Lara'), ('Venezuela', 'Distrito Capital'), ('Venezuela', 'Lara'), ('Venezuela', 'Merida'), ('Venezuela', 'Miranda'), ('Venezuela', 'Carabobo'), ('San Diego', 'Carabobo'), ('Cubiro', 'Lara'), ('Puerto Cabello', 'Carabobo'), ('El Vigia', 'Merida'), ('Barquisimeto', 'Lara'), ('Merida', 'Merida'), ('Guacara', 'Carabobo')]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo lo pueden bajar del repositorio de &lt;a href="https://bitbucket.org/ecrespo/ernesto-ecrespo.blogspot/src/54abfc379d62b35028f29b32314fbee84abc8a42/networkx1/networkx1.py?at=default"&gt;bitbucket&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="General"></category><category term="matplotlib"></category><category term="Python"></category><category term="grafos"></category><category term="networkx"></category></entry><entry><title>Tutorial de PyQt. Desarrollo con QtDesigner(2 ventanas). Parte 12</title><link href="https://ecrespo.github.io/tutorial-de-pyqt-desarrollo-con-qtdesigner2-ventanas-parte-12.html" rel="alternate"></link><published>2012-09-16T09:00:00-05:30</published><updated>2012-09-16T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-09-16:/tutorial-de-pyqt-desarrollo-con-qtdesigner2-ventanas-parte-12.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; como realizar llamadas a 2 ventanas creadas desde &lt;code&gt;qtdesigner&lt;/code&gt;.
La primera ventana tiene una entrada de datos para el nombre y un combo box donde se lista ciudades, se tiene 3 bot&amp;oacute;nes aplicar, borrar y salir; aplicar toma el nombre y la ciudad y lo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; como realizar llamadas a 2 ventanas creadas desde &lt;code&gt;qtdesigner&lt;/code&gt;.
La primera ventana tiene una entrada de datos para el nombre y un combo box donde se lista ciudades, se tiene 3 bot&amp;oacute;nes aplicar, borrar y salir; aplicar toma el nombre y la ciudad y lo muestra en un par de etiquetas; adicionalmente muestra una ventana con informaci&amp;oacute;n en html sobre el nombre y la ciudad, esa ventana tiene un bot&amp;oacute;n para salir que oculta dicha ventana.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra ambas ventanas con las se&amp;ntilde;ales definidas desde el &lt;code&gt;qtdesigner&lt;/code&gt;:
Ventana principal:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdepyqtdesarrolloconqtdesigner2ventanas-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Ventana secundaria:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdepyqtdesarrolloconqtdesigner2ventanas-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se salvan ambas ventanas con el nombre &lt;code&gt;ej1.ui&lt;/code&gt; y &lt;code&gt;ej1b.ui&lt;/code&gt;, luego se convierten ambos archivos a c&amp;oacute;digo python con los siguientes comandos:
&lt;code&gt;pyuic4 -x ej1.ui -o ej1.py
pyuic4 -x ej1b.ui -o ej1b.py&lt;/code&gt;
El c&amp;oacute;digo de &lt;code&gt;ej1.py&lt;/code&gt; y &lt;code&gt;ej1b.py&lt;/code&gt; se muestra a continuaci&amp;oacute;n:
Archivo &lt;code&gt;ej1.py&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="form implementation generated from reading ui file 'ej1.ui'"&gt;Form implementation generated from reading ui file 'ej1.ui'&lt;/h1&gt;
&lt;h1 id="_1"&gt;&lt;/h1&gt;
&lt;h1 id="created: sun sep 16 13:21:47 2012"&gt;Created: Sun Sep 16 13:21:47 2012&lt;/h1&gt;
&lt;h1 id="by: pyqt4 ui code generator 4.9.3"&gt;by: PyQt4 UI code generator 4.9.3&lt;/h1&gt;
&lt;h1 id="_2"&gt;&lt;/h1&gt;
&lt;h1 id="warning! all changes made in this file will be lost!"&gt;WARNING! All changes made in this file will be lost!&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtCore, QtGui&lt;/p&gt;
&lt;p&gt;try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s&lt;/p&gt;
&lt;p&gt;class Ui_ventana(object):
    def setupUi(self, ventana):
        ventana.setObjectName(_fromUtf8("ventana"))
        ventana.resize(348, 322)
        self.lnombre = QtGui.QLabel(ventana)
        self.lnombre.setGeometry(QtCore.QRect(10, 40, 62, 15))
        self.lnombre.setObjectName(_fromUtf8("lnombre"))
        self.lciudad = QtGui.QLabel(ventana)
        self.lciudad.setGeometry(QtCore.QRect(10, 80, 62, 15))
        self.lciudad.setObjectName(_fromUtf8("lciudad"))
        self.gboxresultados = QtGui.QGroupBox(ventana)
        self.gboxresultados.setGeometry(QtCore.QRect(20, 140, 301, 91))
        self.gboxresultados.setObjectName(_fromUtf8("gboxresultados"))
        self.lrnombre = QtGui.QLabel(self.gboxresultados)
        self.lrnombre.setGeometry(QtCore.QRect(40, 30, 91, 16))
        self.lrnombre.setObjectName(_fromUtf8("lrnombre"))
        self.lrciudad = QtGui.QLabel(self.gboxresultados)
        self.lrciudad.setGeometry(QtCore.QRect(40, 60, 81, 16))
        self.lrciudad.setObjectName(_fromUtf8("lrciudad"))
        self.nombre = QtGui.QLabel(self.gboxresultados)
        self.nombre.setGeometry(QtCore.QRect(140, 30, 111, 16))
        self.nombre.setText(_fromUtf8(""))
        self.nombre.setObjectName(_fromUtf8("nombre"))
        self.ciudad = QtGui.QLabel(self.gboxresultados)
        self.ciudad.setGeometry(QtCore.QRect(140, 60, 101, 16))
        self.ciudad.setText(_fromUtf8(""))
        self.ciudad.setObjectName(_fromUtf8("ciudad"))
        self.baplicar = QtGui.QPushButton(ventana)
        self.baplicar.setGeometry(QtCore.QRect(10, 260, 89, 27))
        self.baplicar.setObjectName(_fromUtf8("baplicar"))
        self.bsalir = QtGui.QPushButton(ventana)
        self.bsalir.setGeometry(QtCore.QRect(220, 260, 89, 27))
        self.bsalir.setObjectName(_fromUtf8("bsalir"))
        self.cciudad = QtGui.QComboBox(ventana)
        self.cciudad.setGeometry(QtCore.QRect(110, 70, 171, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Liberation Sans"))
        font.setPointSize(12)
        self.cciudad.setFont(font)
        self.cciudad.setMaxVisibleItems(5)
        self.cciudad.setObjectName(_fromUtf8("cciudad"))
        self.enombre = QtGui.QLineEdit(ventana)
        self.enombre.setGeometry(QtCore.QRect(110, 30, 171, 23))
        self.enombre.setObjectName(_fromUtf8("enombre"))
        self.bborrar = QtGui.QPushButton(ventana)
        self.bborrar.setGeometry(QtCore.QRect(110, 260, 89, 27))
        self.bborrar.setObjectName(_fromUtf8("bborrar"))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    self.retranslateUi(ventana)
    QtCore.QObject.connect(self.bsalir, QtCore.SIGNAL(_fromUtf8("clicked()")), ventana.close)
    QtCore.QObject.connect(self.bborrar, QtCore.SIGNAL(_fromUtf8("clicked()")), self.ciudad.clear)
    QtCore.QObject.connect(self.bborrar, QtCore.SIGNAL(_fromUtf8("clicked()")), self.nombre.clear)
    QtCore.QObject.connect(self.bborrar, QtCore.SIGNAL(_fromUtf8("clicked()")), self.enombre.clear)
    QtCore.QMetaObject.connectSlotsByName(ventana)

def retranslateUi(self, ventana):
    ventana.setWindowTitle(QtGui.QApplication.translate("ventana", "Form", None, QtGui.QApplication.UnicodeUTF8))
    self.lnombre.setText(QtGui.QApplication.translate("ventana", "Nombre:", None, QtGui.QApplication.UnicodeUTF8))
    self.lciudad.setText(QtGui.QApplication.translate("ventana", "Ciudad:", None, QtGui.QApplication.UnicodeUTF8))
    self.gboxresultados.setTitle(QtGui.QApplication.translate("ventana", "Resultado:", None, QtGui.QApplication.UnicodeUTF8))
    self.lrnombre.setText(QtGui.QApplication.translate("ventana", "Info nombre:", None, QtGui.QApplication.UnicodeUTF8))
    self.lrciudad.setText(QtGui.QApplication.translate("ventana", "Info Ciudad:", None, QtGui.QApplication.UnicodeUTF8))
    self.baplicar.setText(QtGui.QApplication.translate("ventana", "Aplicar", None, QtGui.QApplication.UnicodeUTF8))
    self.bsalir.setText(QtGui.QApplication.translate("ventana", "Salir", None, QtGui.QApplication.UnicodeUTF8))
    self.bborrar.setText(QtGui.QApplication.translate("ventana", "Borrar", None, QtGui.QApplication.UnicodeUTF8))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    import sys
    app = QtGui.QApplication(sys.argv)
    ventana = QtGui.QWidget()
    ui = Ui_ventana()
    ui.setupUi(ventana)
    ventana.show()
    sys.exit(app.exec_())
```&lt;/p&gt;
&lt;p&gt;el archivo de &lt;code&gt;ej1b.py&lt;/code&gt; se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="-- coding: utf-8 --_1"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="form implementation generated from reading ui file 'ej1b.ui'"&gt;Form implementation generated from reading ui file 'ej1b.ui'&lt;/h1&gt;
&lt;h1 id="_3"&gt;&lt;/h1&gt;
&lt;h1 id="created: sun sep 16 11:55:31 2012"&gt;Created: Sun Sep 16 11:55:31 2012&lt;/h1&gt;
&lt;h1 id="by: pyqt4 ui code generator 4.9.3_1"&gt;by: PyQt4 UI code generator 4.9.3&lt;/h1&gt;
&lt;h1 id="_4"&gt;&lt;/h1&gt;
&lt;h1 id="warning! all changes made in this file will be lost!_1"&gt;WARNING! All changes made in this file will be lost!&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtCore, QtGui&lt;/p&gt;
&lt;p&gt;try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s&lt;/p&gt;
&lt;p&gt;class Ui_ventana_web(object):
    def setupUi(self, ventana_web):
        ventana_web.setObjectName(_fromUtf8("ventana_web"))
        ventana_web.resize(458, 430)
        self.salir = QtGui.QPushButton(ventana_web)
        self.salir.setGeometry(QtCore.QRect(180, 400, 89, 27))
        self.salir.setObjectName(_fromUtf8("salir"))
        self.web = QtWebKit.QWebView(ventana_web)
        self.web.setGeometry(QtCore.QRect(0, 40, 451, 341))
        self.web.setUrl(QtCore.QUrl(_fromUtf8("about:blank")))
        self.web.setObjectName(_fromUtf8("web"))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    self.retranslateUi(ventana_web)
    QtCore.QObject.connect(self.salir, QtCore.SIGNAL(_fromUtf8("clicked()")), ventana_web.hide)
    QtCore.QMetaObject.connectSlotsByName(ventana_web)

def retranslateUi(self, ventana_web):
    ventana_web.setWindowTitle(QtGui.QApplication.translate("ventana_web", "Form", None, QtGui.QApplication.UnicodeUTF8))
    self.salir.setText(QtGui.QApplication.translate("ventana_web", "Salir", None, QtGui.QApplication.UnicodeUTF8))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;from PyQt4 import QtWebKit&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    import sys
    app = QtGui.QApplication(sys.argv)
    ventana_web = QtGui.QWidget()
    ui = Ui_ventana_web()
    ui.setupUi(ventana_web)
    ventana_web.show()
    sys.exit(app.exec_())
```
Como se muestra en ambos archivos se tiene 2 clases donde se define cada ventana, sus widgets, sus se&amp;ntilde;alesy m&amp;eacute;todos.&lt;/p&gt;
&lt;p&gt;Estos 2 archivos no se modifican directamente, si se necesitan realizar cambios en la interfaz con el qtdesigner y al volver a crearlos se perder&amp;aacute; todo lo que se le haya modificado a dichos archivos.
La soluci&amp;oacute;n es crear un script en python donde se importe las clases de estos 2 archivos y se haga las modificaciones necesarias (nuevas se&amp;ntilde;ales, modificaci&amp;oacute;n de valores en los widgets, la llamada de las ventanas, etc).&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;run.py&lt;/code&gt; ser&amp;aacute; el que maneje las personalizaciones de las se&amp;ntilde;ales, nuevos m&amp;eacute;todos, nuevas variables y el manejo de las ventanas:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --_2"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo sys"&gt;Se importa el m&amp;oacute;dulo sys&lt;/h1&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;h1 id="se importa de pyqt4 qtcore y qtgui"&gt;Se importa de PyQt4 QtCore y QtGui&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtCore, QtGui&lt;/p&gt;
&lt;h1 id="se importa la clase ui_ventana de ej1"&gt;Se importa la clase Ui_ventana de ej1&lt;/h1&gt;
&lt;p&gt;from ej1 import Ui_ventana&lt;/p&gt;
&lt;h1 id="se importa la clase ui_ventana_web de ej1b"&gt;Se importa la clase Ui_ventana_web de ej1b&lt;/h1&gt;
&lt;p&gt;from ej1b import Ui_ventana_web&lt;/p&gt;
&lt;h1 id="se crea la clase de la ventana secundaria"&gt;Se crea la clase de la ventana secundaria&lt;/h1&gt;
&lt;h1 id="se define el archivo html que abrira el widget web"&gt;Se define el archivo html que abrir&amp;aacute; el widget web&lt;/h1&gt;
&lt;p&gt;class DialogSecundaria(QtGui.QDialog):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self, parent=None):
    QtGui.QWidget.__init__(self, parent)
    self.ui_d = Ui_ventana_web()
    self.ui_d.setupUi(self)
    self.ui_d.web.setUrl(QtCore.QUrl("file:///home/ernesto/bin/python/qtdesigner/ej1/temporal.html"))
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se crea la clase principal"&gt;Se crea la clase principal&lt;/h1&gt;
&lt;h1 id="donde se define la lista de ciudades y se agregan al widget combobox"&gt;Donde se define la lista de ciudades y se agregan al widget combobox&lt;/h1&gt;
&lt;h1 id="se genera la senal del boton baplicar con el metodo abrirventana,"&gt;Se genera la se&amp;ntilde;al del bot&amp;oacute;n baplicar con el m&amp;eacute;todo AbrirVentana,&lt;/h1&gt;
&lt;h1 id="el cual hace el llamado a la clase ventana secundaria."&gt;el cual hace el llamado a la clase ventana secundaria.&lt;/h1&gt;
&lt;p&gt;class VentanaPrincipal(QtGui.QDialog):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self, parent=None):
    QtGui.QWidget.__init__(self, parent)
    self.ui = Ui_ventana()
    self.__ciudades = ["Valencia","Maracay","Barquisimeto","Merida","Caracas"]

    self.ui.setupUi(self)
    for ciudad in self.__ciudades: 
        self.ui.cciudad.addItem(ciudad)

QtCore.QObject.connect(self.ui.baplicar, QtCore.SIGNAL("clicked()"), self.AbrirVentana)


def AbrirVentana(self):
    #Se crea un archivo html donde se le pasa los datos del nombre y ciudad en formato html
    archivo = open("/home/ernesto/bin/python/qtdesigner/ej1/temporal.html","w")
mensaje = """&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Reporte de prueba&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Nombre:%s&amp;lt;/h1&amp;gt;
    &amp;lt;h2&amp;gt;Ciudad:%s&amp;lt;/h2&amp;gt;
    &amp;lt;/body&amp;gt;
    &amp;lt;/html&amp;gt;""" %(self.ui.enombre.text(),self.ui.cciudad.currentText())
lista = [mensaje]
archivo.writelines(lista)
archivo.close()
#Se publica el nombre y la ciudad en la ventana principal
self.ui.nombre.setText(self.ui.enombre.text())
self.ui.ciudad.setText(self.ui.cciudad.currentText())
    #Se muestra la ventana secundaria.
    self.w = DialogSecundaria()
    self.w.show()

def quit(self):
    sys.exit(app.exec_())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    app = QtGui.QApplication(sys.argv)
    myapp = VentanaPrincipal()
    myapp.show()
    sys.exit(app.exec_())
```
En la siguiente figura se muestra la aplicaci&amp;oacute;n en funcionamiento:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdepyqtdesarrolloconqtdesigner2ventanas-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Si est&amp;aacute;n interesados es revisar las interfaces hechas con &lt;code&gt;qtdesigner&lt;/code&gt; y el c&amp;oacute;digo python en el enlace de mi repositorio en bitbucket lo pueden &lt;a href="https://bitbucket.org/ecrespo/ernesto-ecrespo.blogspot/src/1e3cb462c42a/qtdesigner12"&gt;encontrar&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Quiero agradecer a Hern&amp;aacute;n Ram&amp;iacute;rez por los tips para el manejo de varias ventanas, aqu&amp;iacute; est&amp;aacute; su &lt;a href="http://blog.hernanramirez.info/"&gt;blog&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_5"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="PyQt"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Python en Android (FUDcon Valencia 2012)</title><link href="https://ecrespo.github.io/python-en-android-fudcon-valencia-2012.html" rel="alternate"></link><published>2012-08-26T09:00:00-05:30</published><updated>2012-08-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-08-26:/python-en-android-fudcon-valencia-2012.html</id><summary type="html">&lt;p&gt;Del 23 al 25 de Agosto se realiz&amp;oacute; en Valencia se realiz&amp;oacute; el evento &lt;a href="http://fudconlatam.org/"&gt;FUDcon Latam&lt;/a&gt;. EL FUDcon es un evento de los desarrolladores y usuarios de la Distribuci&amp;oacute;n Fedora.&lt;/p&gt;
&lt;p&gt;Dict&amp;eacute; la charla Python en Android y a continuaci&amp;oacute;n les paso el enlace para bajarse la &lt;a href="https://www.slideshare.net/ecrespo/python-en-androidcharla-del-fudcon-latam-2012"&gt;presentaci&amp;oacute;n&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/pythonenandroidfudconvalencia2012.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/ecrespo/python-en-androidcharla-del-fudcon-latam-2012"&gt;Python en Android …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Del 23 al 25 de Agosto se realiz&amp;oacute; en Valencia se realiz&amp;oacute; el evento &lt;a href="http://fudconlatam.org/"&gt;FUDcon Latam&lt;/a&gt;. EL FUDcon es un evento de los desarrolladores y usuarios de la Distribuci&amp;oacute;n Fedora.&lt;/p&gt;
&lt;p&gt;Dict&amp;eacute; la charla Python en Android y a continuaci&amp;oacute;n les paso el enlace para bajarse la &lt;a href="https://www.slideshare.net/ecrespo/python-en-androidcharla-del-fudcon-latam-2012"&gt;presentaci&amp;oacute;n&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/pythonenandroidfudconvalencia2012.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/ecrespo/python-en-androidcharla-del-fudcon-latam-2012"&gt;Python en Android,Charla del FUDcon Latam 2012&lt;/a&gt; from &lt;a href="https://www.slideshare.net/ecrespo"&gt;Ernesto Crespo&lt;/a&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="General"></category><category term="Python"></category></entry><entry><title>Sistema de Mensajeria de Colas con ZeroMQ y Python (Charla FUDcon Latam Valencia 2012)</title><link href="https://ecrespo.github.io/sistema-de-mensajeria-de-colas-con-zeromq-y-python-charla-fudcon-latam-valencia-2012.html" rel="alternate"></link><published>2012-08-26T09:00:00-05:30</published><updated>2012-08-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-08-26:/sistema-de-mensajeria-de-colas-con-zeromq-y-python-charla-fudcon-latam-valencia-2012.html</id><summary type="html">&lt;p&gt;La charla Sistema de Mensajeria de colas con ZeroMQ y Python del FUDcon Latam Valencia 2012 la pueden bajar en el siguiente &lt;a href="https://www.slideshare.net/ecrespo/sistema-de-mensajeria-de-colas-con-zeromq-y-python"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/sistemademensajeriadecolasconzeromqypythoncharlafudconlatamvalencia2012.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/ecrespo/sistema-de-mensajeria-de-colas-con-zeromq-y-python?ref="&gt;Sistema de Mensajer&amp;iacute;a de colas&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;Sistema de Mensajeria de Colas con ZeroMQ y Python&lt;/a&gt; from &lt;a href="https://www.slideshare.net/ecrespo"&gt;Ernesto Crespo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar …&lt;/p&gt;</summary><content type="html">&lt;p&gt;La charla Sistema de Mensajeria de colas con ZeroMQ y Python del FUDcon Latam Valencia 2012 la pueden bajar en el siguiente &lt;a href="https://www.slideshare.net/ecrespo/sistema-de-mensajeria-de-colas-con-zeromq-y-python"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/sistemademensajeriadecolasconzeromqypythoncharlafudconlatamvalencia2012.jpg"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/ecrespo/sistema-de-mensajeria-de-colas-con-zeromq-y-python?ref="&gt;Sistema de Mensajer&amp;iacute;a de colas&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;Sistema de Mensajeria de Colas con ZeroMQ y Python&lt;/a&gt; from &lt;a href="https://www.slideshare.net/ecrespo"&gt;Ernesto Crespo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="ZeroMQ"></category></entry><entry><title>Captura de vídeo con Python y SimpleCV. Parte 4.</title><link href="https://ecrespo.github.io/captura-de-video-con-python-y-simplecv-parte-4.html" rel="alternate"></link><published>2012-07-31T09:00:00-05:30</published><updated>2012-07-31T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-31:/captura-de-video-con-python-y-simplecv-parte-4.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se muestra como generar un v&amp;iacute;deo usando la webcam del computador con python y &lt;code&gt;SimpleCV&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El script simplemente define la captura de v&amp;iacute;deo, genera un ciclo donde se captura el v&amp;iacute;deo y se muestra en pantalla. Cuando se presiona la tecla espaciadora se hace una captura de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se muestra como generar un v&amp;iacute;deo usando la webcam del computador con python y &lt;code&gt;SimpleCV&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El script simplemente define la captura de v&amp;iacute;deo, genera un ciclo donde se captura el v&amp;iacute;deo y se muestra en pantalla. Cuando se presiona la tecla espaciadora se hace una captura de una imagen y se salva, al presionar la tecla Escape se finaliza el ciclo de captura de v&amp;iacute;deo.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa cv2."&gt;Se importa cv2.&lt;/h1&gt;
&lt;p&gt;import cv2&lt;/p&gt;
&lt;h1 id="se crea la instancia de la captura de video."&gt;se crea la instancia de la captura de Video.&lt;/h1&gt;
&lt;p&gt;video = cv2.VideoCapture(0)&lt;/p&gt;
&lt;h1 id="se define un ciclo."&gt;Se define un ciclo.&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se captura el video de la webcam

ret,im = video.read()

#Se muestra el video  donde se pasa im que es la lectura del video de la webcam.

cv2.imshow('Prueba de video',im)

#Se captura la tecla de escape del teclado

tecla = cv2.waitKey(10)

if tecla == 27:

    #Si es la tecla escape se termina el ciclo

    break

#Si la tecla es el espacio en blanco se captura una imagen del video.

if tecla == ord(' '):

    cv2.imwrite('captura_img.jpg',im)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el v&amp;iacute;deo:&lt;/p&gt;
&lt;p&gt;https://youtu.be/XF9BjxYKiEo&lt;/p&gt;
&lt;p&gt;En la siguiente imagen se muestra la captura de la foto al grabar el v&amp;iacute;deo:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/capturadevideoconpythonysimplecv4-1.jpg"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Camara"></category><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Gnome"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Videos"></category><category term="SimpleCV"></category></entry><entry><title>Modificar imagen con simpleCV(binarización). Parte 3.</title><link href="https://ecrespo.github.io/modificar-imagen-con-simplecvbinarizacion-parte-3.html" rel="alternate"></link><published>2012-07-30T09:00:00-05:30</published><updated>2012-07-30T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-30:/modificar-imagen-con-simplecvbinarizacion-parte-3.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo se explicar&amp;aacute; como convertir una imagen a dos colores, osea tomar una foto normal y convertirla en blanco y negro.&lt;/p&gt;
&lt;p&gt;Se usar&amp;aacute; la funci&amp;oacute;n binarized, se puede pasar un valor entre 0 y 255 (donde cero es negro y 255 es blanco).&lt;/p&gt;
&lt;p&gt;Se toma la imagen y luego …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo se explicar&amp;aacute; como convertir una imagen a dos colores, osea tomar una foto normal y convertirla en blanco y negro.&lt;/p&gt;
&lt;p&gt;Se usar&amp;aacute; la funci&amp;oacute;n binarized, se puede pasar un valor entre 0 y 255 (donde cero es negro y 255 es blanco).&lt;/p&gt;
&lt;p&gt;Se toma la imagen y luego se pasa la funci&amp;oacute;n a la imagen.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la imagen original:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/modificarimagenconsimplecvbinarizacion-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:  &lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa image de simplecv"&gt;Se importa Image de SimpleCV&lt;/h1&gt;
&lt;p&gt;from SimpleCV import Image&lt;/p&gt;
&lt;h1 id="se crea la instancia imagen tomando la imagen"&gt;Se crea la instancia Imagen tomando la imagen&lt;/h1&gt;
&lt;h1 id="imagen1.png"&gt;imagen1.png&lt;/h1&gt;
&lt;p&gt;imagen = Image('imagen1.png')&lt;/p&gt;
&lt;h1 id="se ejecuta binarize a la imagen"&gt;Se ejecuta binarize a la imagen&lt;/h1&gt;
&lt;h1 id="sin argumentos."&gt;sin argumentos.&lt;/h1&gt;
&lt;p&gt;imgBin = imagen.binarize()&lt;/p&gt;
&lt;h1 id="se salva la imagen como resultado3.jpg"&gt;Se salva la imagen como resultado3.jpg&lt;/h1&gt;
&lt;p&gt;imgBin.save("resultado.jpg")
```&lt;/p&gt;
&lt;p&gt;La imagen generada se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/modificarimagenconsimplecvbinarizacion-2.jpg"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Camara"></category><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="gnome"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="SimpleCV"></category></entry><entry><title>Tutorial de PyQt. Desarrollo con QtDesigner. Parte 11.</title><link href="https://ecrespo.github.io/tutorial-de-pyqt-desarrollo-con-qtdesigner-parte-11.html" rel="alternate"></link><published>2012-07-29T09:00:00-05:30</published><updated>2012-07-29T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-29:/tutorial-de-pyqt-desarrollo-con-qtdesigner-parte-11.html</id><summary type="html">&lt;p&gt;Para repasar los art&amp;iacute;culos sobre &lt;code&gt;pyQt&lt;/code&gt; pueden revisar el siguiente &lt;a href="https://www.seraph.to/tag/pyqt.html"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En este caso en vez de escribir todo el c&amp;oacute;digo de la intefaz gr&amp;aacute;fica se usar&amp;aacute; la herramienta &lt;code&gt;QtDesigner&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se pedir&amp;aacute; el nombre de la persona y al darle click al bot&amp;oacute;n Aplicar se mostrar&amp;aacute; el nombre colocado en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Para repasar los art&amp;iacute;culos sobre &lt;code&gt;pyQt&lt;/code&gt; pueden revisar el siguiente &lt;a href="https://www.seraph.to/tag/pyqt.html"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En este caso en vez de escribir todo el c&amp;oacute;digo de la intefaz gr&amp;aacute;fica se usar&amp;aacute; la herramienta &lt;code&gt;QtDesigner&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se pedir&amp;aacute; el nombre de la persona y al darle click al bot&amp;oacute;n Aplicar se mostrar&amp;aacute; el nombre colocado en la entrada de datos en la etiqueta, se tiene un segundo bot&amp;oacute;n el cual termina la ejecuci&amp;oacute;n de la aplicaci&amp;oacute;n al darle click.&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra el dise&amp;ntilde;o de la interfaz:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdepyqtdesarrolloconqtdesigner-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la relaci&amp;oacute;n entre los botones y se&amp;ntilde;ales:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdepyqtdesarrolloconqtdesigner-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;A cada bot&amp;oacute;n se le asocia una funci&amp;oacute;n como lo muestra las siguientes dos figuras:
Bot&amp;oacute;n Salir:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdepyqtdesarrolloconqtdesigner-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Bot&amp;oacute;n Aplicar:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdepyqtdesarrolloconqtdesigner-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;Al salvar la interfaz gr&amp;aacute;fica con nombre &lt;code&gt;prueba3.ui&lt;/code&gt; lo que se har&amp;aacute; a continuaci&amp;oacute;n es generar el c&amp;oacute;digo python por medio del comando:
&lt;code&gt;pyuic4 -x prueba3.ui -o prueba3.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo generado se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="form implementation generated from reading ui file 'prueba3.ui'"&gt;Form implementation generated from reading ui file 'prueba3.ui'&lt;/h1&gt;
&lt;h1 id="_1"&gt;&lt;/h1&gt;
&lt;h1 id="created: sun jul 29 22:49:50 2012"&gt;Created: Sun Jul 29 22:49:50 2012&lt;/h1&gt;
&lt;h1 id="by: pyqt4 ui code generator 4.9.1"&gt;by: PyQt4 UI code generator 4.9.1&lt;/h1&gt;
&lt;h1 id="_2"&gt;&lt;/h1&gt;
&lt;h1 id="warning! all changes made in this file will be lost!"&gt;WARNING! All changes made in this file will be lost!&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtCore, QtGui&lt;/p&gt;
&lt;p&gt;try:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;_fromUtf8 = QtCore.QString.fromUtf8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;except AttributeError:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;_fromUtf8 = lambda s: s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;class Ui_Form(object):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def setupUi(self, Form):

    Form.setObjectName(_fromUtf8("Form"))

    Form.resize(400, 300)

    self.pushButton = QtGui.QPushButton(Form)

    self.pushButton.setGeometry(QtCore.QRect(280, 260, 102, 28))

    self.pushButton.setObjectName(_fromUtf8("pushButton"))

    self.pushButton_2 = QtGui.QPushButton(Form)

    self.pushButton_2.setGeometry(QtCore.QRect(140, 260, 102, 28))

    self.pushButton_2.setObjectName(_fromUtf8("pushButton_2"))

    self.lineEdit = QtGui.QLineEdit(Form)

    self.lineEdit.setGeometry(QtCore.QRect(140, 40, 221, 28))

    self.lineEdit.setObjectName(_fromUtf8("lineEdit"))

    self.label = QtGui.QLabel(Form)

    self.label.setGeometry(QtCore.QRect(20, 40, 69, 18))

    self.label.setObjectName(_fromUtf8("label"))

    self.label_2 = QtGui.QLabel(Form)

    self.label_2.setGeometry(QtCore.QRect(20, 160, 81, 18))

    self.label_2.setObjectName(_fromUtf8("label_2"))

    self.label_3 = QtGui.QLabel(Form)

    self.label_3.setGeometry(QtCore.QRect(140, 160, 221, 18))

    self.label_3.setObjectName(_fromUtf8("label_3"))

    self.retranslateUi(Form)

    QtCore.QObject.connect(self.pushButton, QtCore.SIGNAL(_fromUtf8("clicked()")), Form.close)

    QtCore.QObject.connect(self.pushButton_2, QtCore.SIGNAL(_fromUtf8("clicked()")), self.label_3.update)

    QtCore.QMetaObject.connectSlotsByName(Form)

def retranslateUi(self, Form):

    Form.setWindowTitle(QtGui.QApplication.translate("Form", "Prueba", None, QtGui.QApplication.UnicodeUTF8))

    self.pushButton.setText(QtGui.QApplication.translate("Form", "Salir", None, QtGui.QApplication.UnicodeUTF8))

    self.pushButton_2.setText(QtGui.QApplication.translate("Form", "Aplicar", None, QtGui.QApplication.UnicodeUTF8))

    self.label.setText(QtGui.QApplication.translate("Form", "Nombre:", None, QtGui.QApplication.UnicodeUTF8))

    self.label_2.setText(QtGui.QApplication.translate("Form", "Resultado:", None, QtGui.QApplication.UnicodeUTF8))

    self.label_3.setText(QtGui.QApplication.translate("Form", "Texto", None, QtGui.QApplication.UnicodeUTF8))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import sys

app = QtGui.QApplication(sys.argv)

Form = QtGui.QWidget()

ui = Ui_Form()

ui.setupUi(Form)

Form.show()

sys.exit(app.exec_())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se resalta en color azul la relaci&amp;oacute;n de ambos botones (Salir y Aplicar) con los eventos (Form.close y label_3.update).&lt;/p&gt;
&lt;p&gt;El cambio en el c&amp;oacute;digo que se tiene que hacer es crear un m&amp;eacute;todo en la clase creada que toma el contenido del widget lineEdit y se la pasa a label_3, se muestra en la consola por medio de print y en la etiqueta por el m&amp;eacute;todo set de la etiqueta.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo modificado con las secciones en azul que muestra lo explicado antes:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --_1"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="form implementation generated from reading ui file 'prueba3.ui'_1"&gt;Form implementation generated from reading ui file 'prueba3.ui'&lt;/h1&gt;
&lt;h1 id="_3"&gt;&lt;/h1&gt;
&lt;h1 id="created: sun jul 29 22:27:29 2012"&gt;Created: Sun Jul 29 22:27:29 2012&lt;/h1&gt;
&lt;h1 id="by: pyqt4 ui code generator 4.9.1_1"&gt;by: PyQt4 UI code generator 4.9.1&lt;/h1&gt;
&lt;h1 id="_4"&gt;&lt;/h1&gt;
&lt;h1 id="warning! all changes made in this file will be lost!_1"&gt;WARNING! All changes made in this file will be lost!&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtCore, QtGui&lt;/p&gt;
&lt;p&gt;try:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;_fromUtf8 = QtCore.QString.fromUtf8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;except AttributeError:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;_fromUtf8 = lambda s: s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;class Ui_Form(object):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def Actualizar(self):

    texto = self.lineEdit.text()

    print texto

    self.label_3.setText(texto)



def setupUi(self, Form):

    Form.setObjectName(_fromUtf8("Form"))

    Form.resize(400, 300)

    self.pushButton = QtGui.QPushButton(Form)

    self.pushButton.setGeometry(QtCore.QRect(280, 260, 102, 28))

    self.pushButton.setObjectName(_fromUtf8("pushButton"))

    self.pushButton_2 = QtGui.QPushButton(Form)

    self.pushButton_2.setGeometry(QtCore.QRect(140, 260, 102, 28))

    self.pushButton_2.setObjectName(_fromUtf8("pushButton_2"))

    self.lineEdit = QtGui.QLineEdit(Form)

    self.lineEdit.setGeometry(QtCore.QRect(140, 40, 221, 28))

    self.lineEdit.setObjectName(_fromUtf8("lineEdit"))

    self.label = QtGui.QLabel(Form)

    self.label.setGeometry(QtCore.QRect(20, 40, 69, 18))

    self.label.setObjectName(_fromUtf8("label"))

    self.label_2 = QtGui.QLabel(Form)

    self.label_2.setGeometry(QtCore.QRect(20, 160, 81, 18))

    self.label_2.setObjectName(_fromUtf8("label_2"))

    self.label_3 = QtGui.QLabel(Form)

    self.label_3.setGeometry(QtCore.QRect(140, 160, 221, 18))

    self.label_3.setObjectName(_fromUtf8("label_3"))

    self.retranslateUi(Form)

    QtCore.QObject.connect(self.pushButton, QtCore.SIGNAL(_fromUtf8("clicked()")), Form.close)

    QtCore.QObject.connect(self.pushButton_2, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Actualizar)

    QtCore.QMetaObject.connectSlotsByName(Form)

def retranslateUi(self, Form):

    Form.setWindowTitle(QtGui.QApplication.translate("Form", "Prueba", None, QtGui.QApplication.UnicodeUTF8))

    self.pushButton.setText(QtGui.QApplication.translate("Form", "Salir", None, QtGui.QApplication.UnicodeUTF8))

    self.pushButton_2.setText(QtGui.QApplication.translate("Form", "Aplicar", None, QtGui.QApplication.UnicodeUTF8))

    self.label.setText(QtGui.QApplication.translate("Form", "Nombre:", None, QtGui.QApplication.UnicodeUTF8))

    self.label_2.setText(QtGui.QApplication.translate("Form", "Resultado:", None, QtGui.QApplication.UnicodeUTF8))

    self.label_3.setText(QtGui.QApplication.translate("Form", "Texto", None, QtGui.QApplication.UnicodeUTF8))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import sys

app = QtGui.QApplication(sys.argv)

Form = QtGui.QWidget()

ui = Ui_Form()

ui.setupUi(Form)

Form.show()

sys.exit(app.exec_())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la figura de la ejecuci&amp;oacute;n de la aplicaci&amp;oacute;n luego de capturar y mostrar la informaci&amp;oacute;n del widget &lt;code&gt;LineEdit&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdepyqtdesarrolloconqtdesigner-5.png"/&gt; &lt;/p&gt;
&lt;h2 id="_5"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="General"></category><category term="gnome"></category><category term="Linux"></category><category term="PyQt"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Ejecutar una tarea en una fecha próxima (APScheduler)</title><link href="https://ecrespo.github.io/ejecutar-una-tarea-en-una-fecha-proxima-apscheduler.html" rel="alternate"></link><published>2012-07-19T09:00:00-05:30</published><updated>2012-07-19T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-19:/ejecutar-una-tarea-en-una-fecha-proxima-apscheduler.html</id><summary type="html">&lt;p&gt;En el art&amp;iacute;culo &lt;a href="https://www.seraph.to/agendar-tareas-con-python.html#agendar-tareas-con-python"&gt;anterior&lt;/a&gt; se explican 2 formas de definir tareas de forma peri&amp;oacute;dica y al estilo &lt;code&gt;crond&lt;/code&gt;. En este caso se explicar&amp;aacute; como ejecutar una funci&amp;oacute;n en una fecha pr&amp;oacute;xima.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa date"&gt;Se importa date&lt;/h1&gt;
&lt;p&gt;from datetime import date&lt;/p&gt;
&lt;h1 id="se importa scheduler"&gt;Se importa Scheduler&lt;/h1&gt;
&lt;p&gt;from apscheduler.scheduler import …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el art&amp;iacute;culo &lt;a href="https://www.seraph.to/agendar-tareas-con-python.html#agendar-tareas-con-python"&gt;anterior&lt;/a&gt; se explican 2 formas de definir tareas de forma peri&amp;oacute;dica y al estilo &lt;code&gt;crond&lt;/code&gt;. En este caso se explicar&amp;aacute; como ejecutar una funci&amp;oacute;n en una fecha pr&amp;oacute;xima.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa date"&gt;Se importa date&lt;/h1&gt;
&lt;p&gt;from datetime import date&lt;/p&gt;
&lt;h1 id="se importa scheduler"&gt;Se importa Scheduler&lt;/h1&gt;
&lt;p&gt;from apscheduler.scheduler import Scheduler&lt;/p&gt;
&lt;h1 id="se importa sleep"&gt;Se importa sleep&lt;/h1&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="se instancia la clase scheduler"&gt;Se instancia la clase scheduler&lt;/h1&gt;
&lt;p&gt;sched = Scheduler()&lt;/p&gt;
&lt;h1 id="se inicia el scheduler"&gt;Se inicia el scheduler&lt;/h1&gt;
&lt;p&gt;sched.start()&lt;/p&gt;
&lt;h1 id="se define la funcion a ser ejecutada."&gt;Se define la funci&amp;oacute;n a ser ejecutada.&lt;/h1&gt;
&lt;h1 id="la funcion toma un texto y lo presenta en pantalla."&gt;La funci&amp;oacute;n toma un texto y lo presenta en pantalla.&lt;/h1&gt;
&lt;p&gt;def Tarea(texto):
    print texto&lt;/p&gt;
&lt;h1 id="la tarea sera ejecutada el 19 de julio de 2012."&gt;La tarea ser&amp;aacute; ejecutada el 19 de Julio de 2012.&lt;/h1&gt;
&lt;p&gt;fecha_ejecucion = date(2012, 07, 19)&lt;/p&gt;
&lt;h1 id="se alamacena la tarea en la variable tarea en caso que se quiera suspender"&gt;se alamacena la tarea en la variable tarea en caso que se quiera suspender&lt;/h1&gt;
&lt;h1 id="se le pasa la funcion tarea, la fecha a ejecutar y los argumentos solicitados de la funcion"&gt;Se le pasa la funci&amp;oacute;n Tarea, la fecha a ejecutar y los argumentos solicitados de la funci&amp;oacute;n&lt;/h1&gt;
&lt;p&gt;tarea = sched.add_date_job(Tarea, fecha_ejecucion, ['texto a escribir'])&lt;/p&gt;
&lt;h1 id="se muestra las tareas definidas."&gt;Se muestra las tareas definidas.&lt;/h1&gt;
&lt;p&gt;print sched.print_jobs()&lt;/p&gt;
&lt;h1 id="se crea un ciclo de 10 iteraciones"&gt;Se crea un ciclo de 10 iteraciones&lt;/h1&gt;
&lt;h1 id="donde se espera 60 minutos por cada iteracion"&gt;Donde se espera 60 minutos por cada iteracion&lt;/h1&gt;
&lt;h1 id="se muestra en pantalla las veces que se ejecuta."&gt;Se muestra en pantalla las veces que se ejecuta.&lt;/h1&gt;
&lt;p&gt;for i in range(10):
    print "---- %s" %i
    sleep(3600)&lt;/p&gt;
&lt;h1 id="se detiene el scheduler"&gt;Se detiene el scheduler&lt;/h1&gt;
&lt;p&gt;sched.shutdown(wait=False)
```&lt;/p&gt;
&lt;p&gt;Al ejecutar el programa se muestra lo siguiente:&lt;/p&gt;
&lt;p&gt;```
ernesto@clara:~/bin/python/procesos$ sudo ./procesos3.py&lt;/p&gt;
&lt;p&gt;Jobstore default:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Tarea (trigger: date[2012-07-19 00:00:00], next run at: 2012-07-19 00:00:00)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;p&gt;---- 0&lt;/p&gt;
&lt;p&gt;---- 1&lt;/p&gt;
&lt;p&gt;text&lt;/p&gt;
&lt;p&gt;---- 2&lt;/p&gt;
&lt;p&gt;---- 3&lt;/p&gt;
&lt;p&gt;---- 4&lt;/p&gt;
&lt;p&gt;---- 5&lt;/p&gt;
&lt;p&gt;---- 6&lt;/p&gt;
&lt;p&gt;---- 7&lt;/p&gt;
&lt;p&gt;---- 8&lt;/p&gt;
&lt;p&gt;---- 9
```&lt;/p&gt;
&lt;p&gt;Con este art&amp;iacute;culo se muestran las tres formas de ejecutar procesos con &lt;code&gt;APScheduler&lt;/code&gt; (ejecuci&amp;oacute;n peri&amp;oacute;dica, estilo crond y ejecuci&amp;oacute;n en una fecha pr&amp;oacute;xima).&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Tareas"></category></entry><entry><title>Agendar tareas con python</title><link href="https://ecrespo.github.io/agendar-tareas-con-python.html" rel="alternate"></link><published>2012-07-18T09:00:00-05:30</published><updated>2012-07-18T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-18:/agendar-tareas-con-python.html</id><summary type="html">&lt;p&gt;En Linux se pueden ejecutar procesos de forma periodica gracias a &lt;code&gt;cron&lt;/code&gt; o en un momento determinado gracias a &lt;code&gt;at&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En python se tiene una librer&amp;iacute;a que permite ejecutar de forma periodica o en una fecha determinada al estilo de &lt;code&gt;cron&lt;/code&gt; o &lt;code&gt;at&lt;/code&gt;, la librer&amp;iacute;a se llama &lt;a href="https://pypi.org/project/APScheduler/"&gt;APScheduler&lt;/a&gt; (Advanced Python …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En Linux se pueden ejecutar procesos de forma periodica gracias a &lt;code&gt;cron&lt;/code&gt; o en un momento determinado gracias a &lt;code&gt;at&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En python se tiene una librer&amp;iacute;a que permite ejecutar de forma periodica o en una fecha determinada al estilo de &lt;code&gt;cron&lt;/code&gt; o &lt;code&gt;at&lt;/code&gt;, la librer&amp;iacute;a se llama &lt;a href="https://pypi.org/project/APScheduler/"&gt;APScheduler&lt;/a&gt; (Advanced Python Scheduler). La documentaci&amp;oacute;n de &lt;code&gt;SPScheduler&lt;/code&gt; lo pueden revisar en este &lt;a href="https://apscheduler.readthedocs.io/en/latest/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El ejemplo a mostrar a continuaci&amp;oacute;n permite ejecutar 2 tareas, la primera tarea se ejecuta a intervalos de 1 minuto, la segunda tarea se ejecuta de lunes a viernes en una hora espec&amp;iacute;fica.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del ejemplo se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa scheduler"&gt;Se importa Scheduler&lt;/h1&gt;
&lt;p&gt;from apscheduler.scheduler import Scheduler&lt;/p&gt;
&lt;h1 id="se importa ctime y sleep"&gt;Se importa ctime y sleep&lt;/h1&gt;
&lt;p&gt;from time import ctime,sleep&lt;/p&gt;
&lt;h1 id="se crea la instancia de la clase scheduler"&gt;Se crea la instancia de la clase Scheduler&lt;/h1&gt;
&lt;p&gt;sched = Scheduler()&lt;/p&gt;
&lt;h1 id="se crea una funcion con la tarea1, pero se dfine"&gt;Se crea una funcion con la tarea1, pero se dfine&lt;/h1&gt;
&lt;h1 id="un decorador para la tarea para que sea periodica"&gt;un decorador para la tarea para que sea periodica&lt;/h1&gt;
&lt;h1 id="cada minuto se ejecutara la tarea."&gt;Cada minuto se ejecutara la tarea.&lt;/h1&gt;
&lt;p&gt;@sched.interval_schedule(minutes=1)&lt;/p&gt;
&lt;p&gt;def Tarea1():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Muestra en pantalla la fecha y hora

print "Se ejecuta cada minuto: %s" %ctime()
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se crea la tarea2 al estilo cron por medio de un decorador cron"&gt;Se crea la tarea2 al estilo cron por medio de un decorador cron&lt;/h1&gt;
&lt;h1 id="que se ejecuta de lunes a viernes a las 9:40pm."&gt;que se ejecuta de lunes a viernes a las 9:40pm.&lt;/h1&gt;
&lt;p&gt;@sched.cron_schedule(day_of_week='mon-fri', hour=21,minute=30)&lt;/p&gt;
&lt;p&gt;def Tarea2():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se muestra en pantalla la hora del momento que se ejecuta la aplicacion.

print "Se ejecuto a las : %s" %ctime()
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se pasa la configuracion al scheduler"&gt;Se pasa la configuracion al scheduler&lt;/h1&gt;
&lt;p&gt;sched.configure()&lt;/p&gt;
&lt;h1 id="se inicia el scheduler"&gt;Se inicia el scheduler&lt;/h1&gt;
&lt;p&gt;sched.start()&lt;/p&gt;
&lt;h1 id="se muestra las tareas definidas."&gt;Se muestra las tareas definidas.&lt;/h1&gt;
&lt;p&gt;print sched.print_jobs()&lt;/p&gt;
&lt;h1 id="se crea un ciclo de 10 iteraciones"&gt;Se crea un ciclo de 10 iteraciones&lt;/h1&gt;
&lt;h1 id="donde se espera un minuto por cada iteracion"&gt;Donde se espera un minuto por cada iteracion&lt;/h1&gt;
&lt;h1 id="se muestra en pantalla las veces que se ejecuta."&gt;Se muestra en pantalla las veces que se ejecuta.&lt;/h1&gt;
&lt;p&gt;for i in range(10):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print "---- %s" %i

sleep(60)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se detiene las tareas del scheduler al finalizar"&gt;Se detiene las tareas del scheduler al finalizar&lt;/h1&gt;
&lt;h1 id="las iteraciones"&gt;las iteraciones&lt;/h1&gt;
&lt;p&gt;sched.shutdown(wait=False)
```
La salida de la ejecuci&amp;oacute;n del programa se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```
ernesto@clara:~/bin/python/procesos$ sudo ./procesos2.py &lt;/p&gt;
&lt;p&gt;Jobstore default:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Tarea1 (trigger: interval[0:01:00], next run at: 2012-07-18 21:27:59.911483)

Tarea2 (trigger: cron[day_of_week='mon-fri', hour='21', minute='30'], next run at: 2012-07-18 21:30:00)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;p&gt;---- 0&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:27:59 2012&lt;/p&gt;
&lt;p&gt;---- 1&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:28:59 2012&lt;/p&gt;
&lt;p&gt;---- 2&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:29:59 2012&lt;/p&gt;
&lt;p&gt;Se ejecuto a las : Wed Jul 18 21:30:00 2012&lt;/p&gt;
&lt;p&gt;---- 3&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:30:59 2012&lt;/p&gt;
&lt;p&gt;---- 4&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:31:59 2012&lt;/p&gt;
&lt;p&gt;---- 5&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:32:59 2012&lt;/p&gt;
&lt;p&gt;---- 6&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:33:59 2012&lt;/p&gt;
&lt;p&gt;---- 7&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:34:59 2012&lt;/p&gt;
&lt;p&gt;---- 8&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:35:59 2012&lt;/p&gt;
&lt;p&gt;---- 9&lt;/p&gt;
&lt;p&gt;Se ejecuta cada minuto: Wed Jul 18 21:36:59 2012
```
Con est&amp;aacute; librer&amp;iacute;a se puede definir la ejecuci&amp;oacute;n de procesos a ciertos d&amp;iacute;as y horas, o de forma peri&amp;oacute;dica.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="Tareas periodicas"></category></entry><entry><title>Desplegar información vía web con Django. Parte 3.</title><link href="https://ecrespo.github.io/desplegar-informacion-via-web-con-django-parte-3.html" rel="alternate"></link><published>2012-07-15T09:00:00-05:30</published><updated>2012-07-15T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-15:/desplegar-informacion-via-web-con-django-parte-3.html</id><summary type="html">&lt;p&gt;En el art&amp;iacute;culo &lt;a href="https://www.seraph.to/hola-mundo-con-django-parte-2.html#hola-mundo-con-django-parte-2"&gt;anterior&lt;/a&gt; se explic&amp;oacute; como mostrar un resultado en una p&amp;aacute;gina web por medio de &lt;code&gt;Django&lt;/code&gt;, ahora se mostrar&amp;aacute; una serie de informaci&amp;oacute;n como p&amp;aacute;gina html normal y luego usando las plantillas de &lt;code&gt;Django&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La idea es desplegar una serie de actividades mostrando el nivel de prioridad que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el art&amp;iacute;culo &lt;a href="https://www.seraph.to/hola-mundo-con-django-parte-2.html#hola-mundo-con-django-parte-2"&gt;anterior&lt;/a&gt; se explic&amp;oacute; como mostrar un resultado en una p&amp;aacute;gina web por medio de &lt;code&gt;Django&lt;/code&gt;, ahora se mostrar&amp;aacute; una serie de informaci&amp;oacute;n como p&amp;aacute;gina html normal y luego usando las plantillas de &lt;code&gt;Django&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La idea es desplegar una serie de actividades mostrando el nivel de prioridad que tiene cada actividad.&lt;/p&gt;
&lt;p&gt;Se tiene la vista (views.py) con la funci&amp;oacute;n Actividades, esta funci&amp;oacute;n retorna un c&amp;oacute;digo html con la lista de actividades y su prioridad. Es necesario modificar el archivo &lt;code&gt;urls.py&lt;/code&gt; para cuando se coloque el url que se desea visitar (en este caso asociada a actividades), este devuelva el resultado de la funci&amp;oacute;n Actividades del archivo &lt;code&gt;views.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del archivo &lt;code&gt;views.py&lt;/code&gt; se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python
from django.http import HttpResponse&lt;/p&gt;
&lt;p&gt;def Actividades(request):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return HttpResponse("""

                    &amp;lt;html&amp;gt;

                    &amp;lt;head&amp;gt;

                    &amp;lt;title&amp;gt;Lista de actividades&amp;lt;/title&amp;gt;

                    &amp;lt;/head&amp;gt;

                    &amp;lt;body&amp;gt;

                    &amp;lt;h1&amp;gt;Actividades:&amp;lt;/h1&amp;gt;

                    &amp;lt;li&amp;gt;Comprar comida&amp;lt;/li&amp;gt;

                    &amp;lt;li&amp;gt;Preparar articulo&amp;lt;/li&amp;gt;

                    &amp;lt;li&amp;gt;Trotar&amp;lt;/li&amp;gt;

                    &amp;lt;li&amp;gt;Reunion para proyecto pysms&amp;lt;/li&amp;gt;

                    &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;""")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del archivo &lt;code&gt;urls.py&lt;/code&gt; se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python
from django.conf.urls import patterns, include, url&lt;/p&gt;
&lt;p&gt;import todo.views&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns('',&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;url(r'^actividades/',todo.views.Actividades),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;)
```
Al visitar el url http://127.0.0.1:8080/actividades se muestra la p&amp;aacute;gina como aparece en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/desplegarinformacionviawebcondjango-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Ahora en vez de insertar c&amp;oacute;digo html en la vista se usar&amp;aacute; plantillas, para ello se crea una funci&amp;oacute;n &lt;code&gt;Actividades1&lt;/code&gt; en la vista donde se crea una lista de diccionarios con la informaci&amp;oacute;n de la actividad y su prioridad,  se carga la plantilla &lt;code&gt;index.html&lt;/code&gt;, se crea el contexto donde se le pasa la lista de diccionarios de las actividades y se retorna la respuesta HTTP por medio de la plantilla haciendo render del contexto.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo del archivo views.py:
```python&lt;/p&gt;
&lt;h1 id="create your views here."&gt;Create your views here.&lt;/h1&gt;
&lt;p&gt;from django.http import HttpResponse&lt;/p&gt;
&lt;p&gt;from django.template import Context, loader&lt;/p&gt;
&lt;p&gt;def Actividades(request):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return HttpResponse("""

                    &amp;lt;html&amp;gt;

                    &amp;lt;head&amp;gt;

                    &amp;lt;title&amp;gt;Lista de actividades&amp;lt;/title&amp;gt;

                    &amp;lt;/head&amp;gt;

                    &amp;lt;body&amp;gt;

                    &amp;lt;h1&amp;gt;Actividades:&amp;lt;/h1&amp;gt;

                    &amp;lt;li&amp;gt;Comprar comida&amp;lt;/li&amp;gt;

                    &amp;lt;li&amp;gt;Preparar articulo&amp;lt;/li&amp;gt;

                    &amp;lt;li&amp;gt;Trotar&amp;lt;/li&amp;gt;

                    &amp;lt;li&amp;gt;Reunion para proyecto pysms&amp;lt;/li&amp;gt;

                    &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;""")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;def Actividades1(request):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se genera la lista de diccionarios con las actividades y su importancia

actividades = [{'titulo':'Comprar comida','importancia':'baja'},

    {'titulo':'Preparar articulo','importancia':'media'},

    {'titulo':'Trotar','importancia':'alta'},

    {'titulo':'Reunion para proyecto Pysms','importancia':'muy alta'}]

#Se carga el archivo con la plantilla html

t = loader.get_template('index.html')

#Se carga el contexto de las actividades

c = Context({'actividades': actividades,})

#Se envia la respuesta renderizando el contexto a la plantilla

return HttpResponse(t.render(c))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora se agrega una nueva l&amp;iacute;nea al archivo &lt;code&gt;urls.py&lt;/code&gt; donde aparece la redirecci&amp;oacute;n a actividades1 que usa la funci&amp;oacute;n de la vista (views.py) Actividades1:
```python
from django.conf.urls import patterns, include, url&lt;/p&gt;
&lt;p&gt;import todo.views&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns('',&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;url(r'^actividades/',todo.views.Actividades),

url(r'^actividades1/',todo.views.Actividades1),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;)
&lt;code&gt;``
Ahora se crear&amp;aacute; un directorio llamado plantillas dentro de la aplicaci&amp;oacute;n pruebas del proyecto pruebas, dentro de ese directorio se crea el archivo&lt;/code&gt;index.html` con el siguiente contenido:&lt;/p&gt;
&lt;p&gt;```
&lt;html&gt;&lt;/html&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt;

    &amp;lt;title&amp;gt;Lista de actividades&amp;lt;/title&amp;gt;

    &amp;lt;style type="text/css"&amp;gt;

         body { font-family: Arial, Helvetica, sans-serif;color: black;background: #ffffff; }

    &amp;lt;/style&amp;gt;




&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;

    &amp;lt;h1&amp;gt;Actividades:&amp;lt;/h1&amp;gt;

        {% if actividades %}

        &amp;lt;table border="1"&amp;gt;

        {% for actividad in actividades %}

        &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;{{actividad.titulo}}&amp;lt;/td&amp;gt;

        &amp;lt;td&amp;gt;{{actividad.importancia}}&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;

        {% endfor %}

        &amp;lt;/table&amp;gt;

        {% else %}

        &amp;lt;p&amp;gt;No hay actividades que hacer!&amp;lt;/p&amp;gt;

        {% endif %}

&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
```
&lt;p&gt;Al salvar el archivo se inicia el servidor de &lt;code&gt;django&lt;/code&gt; (python manage.py runserver 8080) y aparece lo siguiente al navegar a http://localhost:8080/actividades1/ :&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/desplegarinformacionviawebcondjango-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;La aplicaci&amp;oacute;n dice que la plantilla no existe, claro falt&amp;oacute; modificar el archivo &lt;code&gt;settings.py&lt;/code&gt; para que busque la plantilla en la ruta donde se encuentra:&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;settings.py&lt;/code&gt; debe tener la ruta donde se guardar&amp;aacute; las plantillas, la configuraci&amp;oacute;n de la secci&amp;oacute;n templates se muestra a continuaci&amp;oacute;n:
```python
TEMPLATE_DIRS = (&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".

# Always use forward slashes, even on Windows.

# Don't forget to use absolute paths, not relative paths.

'/home/ernesto/django/pruebas/pruebas/pruebas/plantillas/'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;)
```
Luego al iniciar el servidor web de Django se obtiene el resultado de la lista de actividades con sus prioridades:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/desplegarinformacionviawebcondjango-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Pueden bajar el archivo comprimido del c&amp;oacute;digo en este &lt;a href="www.debian.org.ve/varios/pruebas-django.tar.gz"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Django"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Captura de imágen desde webcam con el framework SimpleCV. Parte 2.</title><link href="https://ecrespo.github.io/captura-de-imagen-desde-webcam-con-el-framework-simplecv-parte-2.html" rel="alternate"></link><published>2012-07-08T10:00:00-05:30</published><updated>2012-07-08T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-08:/captura-de-imagen-desde-webcam-con-el-framework-simplecv-parte-2.html</id><summary type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/captura-de-imagen-desde-la-webcam-con-el-framework-simplecv-parte-1.html#captura-de-imagen-desde-la-webcam-con-el-framework-simplecv-parte-1"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explica como usar la webcam del equipo para capturar una im&amp;aacute;gen, en este caso se explicar&amp;aacute; como definir el tama&amp;ntilde;o de la im&amp;aacute;gen, ahora se muestra como manejar 2 webcam al mismo tiempo.&lt;/p&gt;
&lt;p&gt;La idea es capturar im&amp;aacute;genes de ambas webcam y luego salvarlas en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/captura-de-imagen-desde-la-webcam-con-el-framework-simplecv-parte-1.html#captura-de-imagen-desde-la-webcam-con-el-framework-simplecv-parte-1"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explica como usar la webcam del equipo para capturar una im&amp;aacute;gen, en este caso se explicar&amp;aacute; como definir el tama&amp;ntilde;o de la im&amp;aacute;gen, ahora se muestra como manejar 2 webcam al mismo tiempo.&lt;/p&gt;
&lt;p&gt;La idea es capturar im&amp;aacute;genes de ambas webcam y luego salvarlas en formato png.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n es la siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importa camera de simplecv"&gt;Importa Camera de SimpleCV&lt;/h1&gt;
&lt;p&gt;from SimpleCV import Camera&lt;/p&gt;
&lt;h1 id="se importa sleep de time"&gt;Se importa sleep de time&lt;/h1&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="se asocia la primera camara con un ancho y alto predefinido."&gt;Se asocia la primera camara con un ancho y alto predefinido.&lt;/h1&gt;
&lt;p&gt;camara1 = Camera(0,{ "width": 640, "height": 480 })&lt;/p&gt;
&lt;h1 id="se asocia la segunda camara"&gt;Se asocia la segunda camara&lt;/h1&gt;
&lt;p&gt;camara2 = Camera(1)&lt;/p&gt;
&lt;h1 id="se captura la imagen de la primera camara y segunda camara"&gt;Se captura la imagen de la primera camara y segunda camara&lt;/h1&gt;
&lt;p&gt;imagen1 = camara1.getImage()&lt;/p&gt;
&lt;p&gt;imagen2 = camara2.getImage()&lt;/p&gt;
&lt;h1 id="se escribe un texto en la primera camara con la posicion dentro de la"&gt;Se escribe un texto en la primera camara con la posicion dentro de la&lt;/h1&gt;
&lt;h1 id="imagen donde va a estar."&gt;imagen donde va a estar.&lt;/h1&gt;
&lt;p&gt;imagen1.drawText("Camara 1",160, 120)&lt;/p&gt;
&lt;h1 id="se escribe un texto en la segunda camara"&gt;Se escribe un texto en la segunda camara&lt;/h1&gt;
&lt;p&gt;imagen2.drawText("Camara 2")&lt;/p&gt;
&lt;h1 id="se muestra ambas imagenes"&gt;Se muestra ambas imagenes&lt;/h1&gt;
&lt;p&gt;imagen1.show()&lt;/p&gt;
&lt;p&gt;imagen2.show()&lt;/p&gt;
&lt;h1 id="se salva ambas imagenes"&gt;Se salva ambas imagenes&lt;/h1&gt;
&lt;p&gt;imagen1.save("imagen1.png")&lt;/p&gt;
&lt;p&gt;imagen2.save("imagen2.png")
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra las im&amp;aacute;genes capturadas por las 2 webcam: 
Webcam 1:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/capturadeimagendesdewebcamconelframeworksimplecv-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Webcam 2:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/capturadeimagendesdewebcamconelframeworksimplecv-2.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Camara"></category><category term="Canaima"></category><category term="Debian"></category><category term="gnome"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="SimpleCV"></category></entry><entry><title>Captura de imágen desde la webcam con el framework SimpleCV. Parte 1.</title><link href="https://ecrespo.github.io/captura-de-imagen-desde-la-webcam-con-el-framework-simplecv-parte-1.html" rel="alternate"></link><published>2012-07-08T09:00:00-05:30</published><updated>2012-07-08T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-08:/captura-de-imagen-desde-la-webcam-con-el-framework-simplecv-parte-1.html</id><summary type="html">&lt;p&gt;&lt;code&gt;SimpleCV&lt;/code&gt; es una framework para la construcci&amp;oacute;n de aplicaciones de Visi&amp;oacute;n por el computador "Computer Vision", es un conjunto de librerias que permiten capturar im&amp;aacute;genes por medio de camaras (webcam) o camaras IP para obtener informaci&amp;oacute;n a partir de dichas im&amp;aacute;genes.&lt;/p&gt;
&lt;p&gt;La p&amp;aacute;gina del proyecto SimpleCV se puede visitar desde …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;SimpleCV&lt;/code&gt; es una framework para la construcci&amp;oacute;n de aplicaciones de Visi&amp;oacute;n por el computador "Computer Vision", es un conjunto de librerias que permiten capturar im&amp;aacute;genes por medio de camaras (webcam) o camaras IP para obtener informaci&amp;oacute;n a partir de dichas im&amp;aacute;genes.&lt;/p&gt;
&lt;p&gt;La p&amp;aacute;gina del proyecto SimpleCV se puede visitar desde este &lt;a href="http://www.simplecv.org/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;SimpleCV&lt;/code&gt; se usar&amp;aacute; las herramientas de instalaci&amp;oacute;n de python &lt;code&gt;easy_install&lt;/code&gt; o &lt;code&gt;pip&lt;/code&gt;.
&lt;code&gt;pip install simplecv&lt;/code&gt;
El ejemplo que se desarrollar&amp;aacute; es una simple aplicaci&amp;oacute;n que capture la im&amp;aacute;gen de la webcam, la presente en pantalla por unos segundos y la salve en un archivo con formato png.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar los modulos camera, display e image."&gt;Importar los modulos Camera, Display e Image.&lt;/h1&gt;
&lt;p&gt;from SimpleCV import Camera, Display, Image&lt;/p&gt;
&lt;h1 id="se importa sleep para darle unos segundos a la"&gt;Se importa sleep para darle unos segundos a la&lt;/h1&gt;
&lt;h1 id="aplicacion a que muestra la captura en pantalla."&gt;aplicacion a que muestra la captura en pantalla.&lt;/h1&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="se crea una instancia de camera."&gt;Se crea una instancia de Camera.&lt;/h1&gt;
&lt;h1 id="se inicializa la camara"&gt;Se inicializa la camara&lt;/h1&gt;
&lt;p&gt;camara = Camera()&lt;/p&gt;
&lt;h1 id="se crea una instancia de display"&gt;Se crea una instancia de Display&lt;/h1&gt;
&lt;h1 id="se inicializa display"&gt;se inicializa display&lt;/h1&gt;
&lt;p&gt;pantalla = Display()&lt;/p&gt;
&lt;h1 id="se captura una imagen usando la camara"&gt;Se captura una imagen usando la camara&lt;/h1&gt;
&lt;p&gt;imagen = camara.getImage()&lt;/p&gt;
&lt;h1 id="muestra la imagen en pantalla"&gt;Muestra la imagen en pantalla&lt;/h1&gt;
&lt;p&gt;imagen.save(pantalla)&lt;/p&gt;
&lt;h1 id="se salva la imagen en un archivo"&gt;Se salva la imagen en un archivo&lt;/h1&gt;
&lt;p&gt;imagen.save("captura.png")&lt;/p&gt;
&lt;p&gt;sleep(2)
```
Al ejecutar el programa se muestra una pantalla con la captura que hace la webcam y la guarda en un archivo.  &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la im&amp;aacute;gen capturada:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/capturadeimagendesdelawebcamconelframeworksimplecv1-1.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="SimpleCV"></category></entry><entry><title>Hola Mundo con Django. Parte 2.</title><link href="https://ecrespo.github.io/hola-mundo-con-django-parte-2.html" rel="alternate"></link><published>2012-07-07T09:00:00-05:30</published><updated>2012-07-07T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-07:/hola-mundo-con-django-parte-2.html</id><summary type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/framework-de-desarrollo-web-django-parte-1.html#framework-de-desarrollo-web-django-parte-1"&gt;art&amp;iacute;culo de Framework de desarrollo web con &lt;code&gt;Django&lt;/code&gt; parte 1&lt;/a&gt; se explica como instalar &lt;code&gt;Django&lt;/code&gt; 
e iniciar el servidor web que viene incorporado para realizar pruebas del desarrollo.&lt;/p&gt;
&lt;p&gt;Ahora se explicar&amp;aacute; como mostrar una p&amp;aacute;gina web con un mensaje "Hola Mundo".&lt;/p&gt;
&lt;p&gt;Dentro del directorio pruebas del proyecto pruebas …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/framework-de-desarrollo-web-django-parte-1.html#framework-de-desarrollo-web-django-parte-1"&gt;art&amp;iacute;culo de Framework de desarrollo web con &lt;code&gt;Django&lt;/code&gt; parte 1&lt;/a&gt; se explica como instalar &lt;code&gt;Django&lt;/code&gt; 
e iniciar el servidor web que viene incorporado para realizar pruebas del desarrollo.&lt;/p&gt;
&lt;p&gt;Ahora se explicar&amp;aacute; como mostrar una p&amp;aacute;gina web con un mensaje "Hola Mundo".&lt;/p&gt;
&lt;p&gt;Dentro del directorio pruebas del proyecto pruebas creado en el art&amp;iacute;culo anterior se crea una aplicaci&amp;oacute;n, La aplicaci&amp;oacute;n se llamar&amp;aacute; &lt;code&gt;todo&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
python manage.py startapp todo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Este comando crea el directorio &lt;code&gt;todo&lt;/code&gt;. Dentro de ese directorio encontrar&amp;aacute;n los siguientes archivos:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;__init__.py&lt;/code&gt;: Espec&amp;iacute;fica a python que el contenido del directorio es un paquete.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;models.py&lt;/code&gt;: Modelo de datos para la base de datos usando un ORM.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tests.py&lt;/code&gt;: Define las pruebas unitarias.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;views.py&lt;/code&gt;: Se crean las vistas de la aplicaci&amp;oacute;n por medio de funciones.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el archivo &lt;code&gt;views.py&lt;/code&gt; se crea una funci&amp;oacute;n donde devuelve un string como respuesta para la p&amp;aacute;gina web:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="se importa httpresponse, la cual sera usado para devolver una respuesta http."&gt;Se importa HttpResponse, la cual ser&amp;aacute; usado para devolver una respuesta http.&lt;/h1&gt;
&lt;p&gt;from django.http import HttpResponse&lt;/p&gt;
&lt;h1 id="se crea la funcion holamundo, se le pasa como argumento request."&gt;Se crea la funci&amp;oacute;n HolaMundo, se le pasa como argumento request.&lt;/h1&gt;
&lt;p&gt;def HolaMundo(request):&lt;/p&gt;
&lt;h1 id="se devuelve una respuesta http pasando el string que se quiere que"&gt;Se devuelve una respuesta http pasando el string que se quiere que&lt;/h1&gt;
&lt;h1 id="aparezca en la pagina web."&gt;aparezca en la p&amp;aacute;gina web.&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;return HttpResponse("Hola Mundo!")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```
Ahora que se creo la funci&amp;oacute;n en el archivo de vistas, se hace necesario definir el URL donde se podr&amp;aacute; ver la p&amp;aacute;gina de la vista.&lt;/p&gt;
&lt;p&gt;Para visualizar la pagina se crea una l&amp;iacute;nea en el archivo &lt;code&gt;urls.py&lt;/code&gt; del proyecto donde se define la expresi&amp;oacute;n regular del url que se desea mostrar la p&amp;aacute;gina, luego se coloca la ruta de la funci&amp;oacute;n del archivo &lt;code&gt;views.py&lt;/code&gt; donde se devuelve el string que se va a mostrar en la p&amp;aacute;gina.&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;urls.py&lt;/code&gt; contiene lo siguiente:
```python&lt;/p&gt;
&lt;h1 id="se importa patterns y url."&gt;Se importa  patterns y url.&lt;/h1&gt;
&lt;p&gt;from django.conf.urls import patterns,  url&lt;/p&gt;
&lt;h1 id="se importa la vista de la aplicacion todo."&gt;Se importa la vista de la aplicaci&amp;oacute;n todo.&lt;/h1&gt;
&lt;p&gt;import todo.views&lt;/p&gt;
&lt;h1 id="se define la tupla de patterns donde se lista los urls a desplegar."&gt;Se define la tupla de patterns donde se lista los urls a desplegar.&lt;/h1&gt;
&lt;h1 id="se busca que el url tenga el patron /hola, y se ejecuta holamundo del archivo views.py."&gt;Se busca que el url tenga el patr&amp;oacute;n /hola, y se ejecuta HolaMundo del archivo views.py.&lt;/h1&gt;
&lt;p&gt;urlpatterns = patterns('',&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;url(r'^hola/',todo.views.HolaMundo),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;)
```&lt;/p&gt;
&lt;p&gt;Se ejecuta el servidor de &lt;code&gt;django&lt;/code&gt;:
&lt;code&gt;python
python manage.py runserver 8080&lt;/code&gt;
La figura muestra el resultado de abrir el url http://127.0.0.1:8080/hola/&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/holamundocondjango-1.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Django"></category><category term="Linux"></category><category term="python"></category><category term="Ubuntu"></category></entry><entry><title>Framework de desarrollo web Django. Parte 1.</title><link href="https://ecrespo.github.io/framework-de-desarrollo-web-django-parte-1.html" rel="alternate"></link><published>2012-07-06T09:00:00-05:30</published><updated>2012-07-06T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-06:/framework-de-desarrollo-web-django-parte-1.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Django&lt;/code&gt; es un framework de desarrollo web hecho en python que usa el paradigma &lt;code&gt;MTV&lt;/code&gt;, Modelo, template (plantilla) y Vista.&lt;/p&gt;
&lt;p&gt;Para instalar django en Debian se puede hacer con &lt;code&gt;apt-get&lt;/code&gt;:
&lt;code&gt;apt-get install python-django&lt;/code&gt;
Si se desea instalar la &amp;uacute;ltima versi&amp;oacute;n de &lt;code&gt;Django&lt;/code&gt; se puede hacer con &lt;code&gt;easy_install&lt;/code&gt; o por &lt;code&gt;pip …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Django&lt;/code&gt; es un framework de desarrollo web hecho en python que usa el paradigma &lt;code&gt;MTV&lt;/code&gt;, Modelo, template (plantilla) y Vista.&lt;/p&gt;
&lt;p&gt;Para instalar django en Debian se puede hacer con &lt;code&gt;apt-get&lt;/code&gt;:
&lt;code&gt;apt-get install python-django&lt;/code&gt;
Si se desea instalar la &amp;uacute;ltima versi&amp;oacute;n de &lt;code&gt;Django&lt;/code&gt; se puede hacer con &lt;code&gt;easy_install&lt;/code&gt; o por &lt;code&gt;pip&lt;/code&gt;:
&lt;code&gt;python
easy_install django&lt;/code&gt;
&amp;oacute;
&lt;code&gt;python
pip install django&lt;/code&gt;
Luego de instalado &lt;code&gt;django&lt;/code&gt; se procede a crear un proyecto:
django-admin startproject pruebas&lt;/p&gt;
&lt;p&gt;Se crea el directorio pruebas.&lt;/p&gt;
&lt;p&gt;Dentro de dicho directorio se tiene lo siguiente:
1. &lt;code&gt;manage.py&lt;/code&gt; : Interfaz de l&amp;iacute;nea de comando para las aplicaciones.
2. &lt;code&gt;pruebas&lt;/code&gt;: Directorio del proyecto.&lt;/p&gt;
&lt;p&gt;Dentro del directorio se tiene lo siguiente:
1. &lt;code&gt;__init__.py&lt;/code&gt; : Define que es un paquete python.
2. &lt;code&gt;settings.py&lt;/code&gt; : Archivo de configuraci&amp;oacute;n espec&amp;iacute;fico del proyecto.
3. &lt;code&gt;urls.py&lt;/code&gt; : Configuraci&amp;oacute;n global de URLs.
4. &lt;code&gt;wsgi.py&lt;/code&gt; : Configuraci&amp;oacute;n de WSGI para el proyecto pruebas.&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;settings.py&lt;/code&gt; contiene lo siguiente:&lt;/p&gt;
&lt;p&gt;Habilita el modo debug para la aplicaci&amp;oacute;n web y la plantilla:
&lt;code&gt;DEBUG = True
TEMPLATE_DEBUG = DEBUG&lt;/code&gt;
Se define el admin del proyecto:
&lt;code&gt;ADMINS = (
    ('Ernesto Nadir Crespo Avila', 'ecrespo@gmail.com'),
)&lt;/code&gt;
Se define la base de datos a utilizar (se  puede utilizar, mysql, postgresql, sqlite3 u oracle, con alguna extensi&amp;oacute;n se puede usar mongodb ), con la configuraci&amp;oacute;n necesaria para conectarse a dicha base de datos:&lt;br/&gt;
&lt;code&gt;DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se define la zona horaria:
&lt;code&gt;TIME_ZONE = 'America/Caracas'&lt;/code&gt;
Se define el idioma de la aplicaci&amp;oacute;n:
&lt;code&gt;LANGUAGE_CODE = 'es-ve'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En otro art&amp;iacute;culo se continuar&amp;aacute; con la explicaci&amp;oacute;n de las opciones que tiene el archivo de configuraci&amp;oacute;n del proyecto en django.&lt;/p&gt;
&lt;p&gt;Para iniciar el servidor de pruebas se ejecuta el siguiente comando:&lt;/p&gt;
&lt;p&gt;Para iniciar un servidor web local.
&lt;code&gt;python manage.py runserver 127.0.0.1&lt;/code&gt;
Si se desea usar una IP y un puerto espec&amp;iacute;fico.
&lt;code&gt;python manage.py runserver ip:puerto&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;La figura muestra el servidor de pruebas de django en funcionamiento:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/frameworkdedesarrollowebdjango-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la p&amp;aacute;gina de inicio del servidor django en el navegador:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/frameworkdedesarrollowebdjango-2.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Django"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Tutorial de ZeroMQ con Python. Parte 8.</title><link href="https://ecrespo.github.io/tutorial-de-zeromq-con-python-parte-8.html" rel="alternate"></link><published>2012-07-02T09:00:00-05:30</published><updated>2012-07-02T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-07-02:/tutorial-de-zeromq-con-python-parte-8.html</id><summary type="html">&lt;p&gt;Siguiendo con los &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;ejemplos sobre ZeroMQ&lt;/a&gt;. Este art&amp;iacute;culo muestra el uso del patr&amp;oacute;n PUB/SUB como en el &lt;a href="https://www.seraph.to/tutorial-de-zeromq-con-pythonpubsub-parte-4.html#tutorial-de-zeromq-con-pythonpubsub-parte-4"&gt;art&amp;iacute;culo de zeroMQ parte 4&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;La diferencia est&amp;aacute; en la definici&amp;oacute;n del transporte, en la parte 4 se usa tcp y en este caso se usar&amp;aacute; &lt;a href="api.zeromq.org/2-1:zmq-epgm"&gt;epgm&lt;/a&gt; que se usa para multicast …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Siguiendo con los &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;ejemplos sobre ZeroMQ&lt;/a&gt;. Este art&amp;iacute;culo muestra el uso del patr&amp;oacute;n PUB/SUB como en el &lt;a href="https://www.seraph.to/tutorial-de-zeromq-con-pythonpubsub-parte-4.html#tutorial-de-zeromq-con-pythonpubsub-parte-4"&gt;art&amp;iacute;culo de zeroMQ parte 4&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;La diferencia est&amp;aacute; en la definici&amp;oacute;n del transporte, en la parte 4 se usa tcp y en este caso se usar&amp;aacute; &lt;a href="api.zeromq.org/2-1:zmq-epgm"&gt;epgm&lt;/a&gt; que se usa para multicast.&lt;/p&gt;
&lt;p&gt;El ejemplo que se mostrar&amp;aacute; se basa en el art&amp;iacute;culo de Saghul Ibarra en su blog &lt;a href="code.saghul.net/implementing-a-pubsub-based-application-with"&gt;Saghul Ibarra en su blog&lt;/a&gt;.
El productor crea una l&amp;iacute;nea de comandos donde se pasa el texto al consumidor, el consumidor recibe el texto y s&amp;oacute;lo se muestra en pantalla el texto que est&amp;aacute; definido en la subscripci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;En el productor se define unas opciones en el socket, en el sitio de ZeroMQ tiene una explicaci&amp;oacute;n de las &lt;a href="api.zeromq.org/2-1:zmq-setsockopt"&gt;opciones para crear el socket&lt;/a&gt;. LINGER con par&amp;aacute;metro cero define que se descarte mensajes que no son enviados.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del productor se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="_1"&gt;&lt;/h1&gt;
&lt;h1 id="producer"&gt;producer&lt;/h1&gt;
&lt;h1 id="se importa zeromq"&gt;Se importa ZeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia de la clase context."&gt;Se crea la instancia de la clase Context.&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se define el socket con parametro pub"&gt;Se define el socket con parametro PUB&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.PUB)&lt;/p&gt;
&lt;h1 id="se define unas opciones en el socket"&gt;Se define unas opciones en el socket&lt;/h1&gt;
&lt;h1 id="esta opcion linger con valor cero, descarta mensajes no enviados"&gt;esta opcion LINGER con valor cero, descarta mensajes no enviados&lt;/h1&gt;
&lt;p&gt;socket.setsockopt(zmq.LINGER, 0)    &lt;/p&gt;
&lt;h1 id="se conecta al socket a la ip y puerto"&gt;Se conecta al socket a la IP y puerto&lt;/h1&gt;
&lt;h1 id="por medio de multicast"&gt;por medio de multicast&lt;/h1&gt;
&lt;p&gt;socket.connect('epgm://192.168.10.96:5000')&lt;/p&gt;
&lt;h1 id="se crea un ciclo"&gt;Se crea un ciclo&lt;/h1&gt;
&lt;h1 id="si se envia el texto salir, se envia y luego finaliza el ciclo"&gt;si se envia el texto salir, se envia y luego finaliza el ciclo&lt;/h1&gt;
&lt;h1 id="si no, se envia el texto"&gt;si no, se envia el texto&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;p&gt;mensaje = raw_input("-&amp;gt;")&lt;/p&gt;
&lt;p&gt;print mensaje&lt;/p&gt;
&lt;p&gt;socket.send(mensaje)&lt;/p&gt;
&lt;p&gt;if mensaje == "salir": break&lt;/p&gt;
&lt;p&gt;socket.close()
```&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa consumidor es el siguiente: 
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar zeromq"&gt;Importar zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia de la clase contexto"&gt;Se crea la instancia de la clase contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se define el socket con parametro sub"&gt;Se define el socket con parametro SUB&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.SUB)&lt;/p&gt;
&lt;h1 id="se conecta el socket a la ip y puerto del productor"&gt;Se conecta el socket a la IP y puerto del productor&lt;/h1&gt;
&lt;h1 id="con el transporte epgm"&gt;con el transporte epgm&lt;/h1&gt;
&lt;p&gt;socket.connect('epgm://192.168.10.96:5000')&lt;/p&gt;
&lt;h1 id="se define los textos que se recibe la informacion."&gt;Se define los textos que se recibe la informacion.&lt;/h1&gt;
&lt;h1 id="prueba, hora y salir."&gt;prueba, hora y salir.&lt;/h1&gt;
&lt;p&gt;socket.setsockopt(zmq.SUBSCRIBE, 'prueba')&lt;/p&gt;
&lt;p&gt;socket.setsockopt(zmq.SUBSCRIBE, 'hora')&lt;/p&gt;
&lt;p&gt;socket.setsockopt(zmq.SUBSCRIBE, 'salir')&lt;/p&gt;
&lt;h1 id="se define un ciclo,"&gt;Se define un ciclo,&lt;/h1&gt;
&lt;h1 id="se recibe la informacion"&gt;se recibe la informacion&lt;/h1&gt;
&lt;h1 id="si el texto es salir se muestra en pantalla"&gt;Si el texto es salir se muestra en pantalla&lt;/h1&gt;
&lt;h1 id="finaliza el ciclo, si no se muestra"&gt;finaliza el ciclo, si no se muestra&lt;/h1&gt;
&lt;h1 id="el texto en pantalla"&gt;el texto en pantalla&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rcv = socket.recv()

print rcv

if rcv == "salir": break
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Las siguientes figuras muestran el resultado de la ejecuci&amp;oacute;n de ambos programas: 
Productor:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython8-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Consumidor:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython8-2.png"/&gt; &lt;/p&gt;
&lt;h2 id="_2"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="Ubuntu"></category><category term="ZeroMQ"></category></entry><entry><title>Tutorial de ZeroMQ con Python( Pipelining). Parte 7.</title><link href="https://ecrespo.github.io/tutorial-de-zeromq-con-python-pipelining-parte-7.html" rel="alternate"></link><published>2012-06-30T09:00:00-05:30</published><updated>2012-06-30T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-06-30:/tutorial-de-zeromq-con-python-pipelining-parte-7.html</id><summary type="html">&lt;p&gt;Siguiendo con los &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;ejemplos sobre ZeroMQ&lt;/a&gt;, ahora mostrar&amp;eacute; como usar diferentes tipos de transporte (antes se mostrada a tcp, ahora se usar&amp;aacute; &lt;code&gt;tcp&lt;/code&gt; e &lt;code&gt;ipc&lt;/code&gt; el cual es un modelo de comunicaci&amp;oacute;n interprocesos y puede ser de ayuda cuando se necesita baja latencia).&lt;/p&gt;
&lt;p&gt;Luego de escoger la capa de transporte …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Siguiendo con los &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;ejemplos sobre ZeroMQ&lt;/a&gt;, ahora mostrar&amp;eacute; como usar diferentes tipos de transporte (antes se mostrada a tcp, ahora se usar&amp;aacute; &lt;code&gt;tcp&lt;/code&gt; e &lt;code&gt;ipc&lt;/code&gt; el cual es un modelo de comunicaci&amp;oacute;n interprocesos y puede ser de ayuda cuando se necesita baja latencia).&lt;/p&gt;
&lt;p&gt;Luego de escoger la capa de transporte se selecciona un patr&amp;oacute;n de mensaje, en art&amp;iacute;culos anteriores se ha mostrado los patrones REQ/REP, PUB/SUB y Pair, s&amp;oacute;lo queda por explicar su funcionamiento el patr&amp;oacute;n UPSTREAM/DOWNSTREAM.&lt;/p&gt;
&lt;p&gt;El patr&amp;oacute;n UPSTREAM/DOWNSTREAM se parece al patr&amp;oacute;n REQ/REP, la diferencia es que en REQ/REP puede existir comunicaci&amp;oacute;n bidireccional en cambio con UPSTREAM/DOWNSTREAM se tiene una comunicaci&amp;oacute;n en un s&amp;oacute;lo sentido y permite paralelizar procesos. En la figura se muestra el flujo de trabajo.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython7-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Un ejemplo de su posible uso tomado del art&amp;iacute;culo de Nicholas Pi&amp;euml;l es que se tenga un sistema de reconocimiento de im&amp;aacute;genes en tiempo real, el servidor captura las im&amp;aacute;genes y se las env&amp;iacute;a a los workers para que sean procesadas, y al terminar dicho proceso se env&amp;iacute;an las im&amp;aacute;genes al colector.&lt;/p&gt;
&lt;p&gt;El servidor simplemente tiene 2 listas una de cadenas de texto que al final env&amp;iacute;a 2 "x" para que los clientes finalicen. Se crea un socket con capa de transporte tcp para env&amp;iacute;ar la lista de n&amp;uacute;meros, luego se crea el socket para ipc y se env&amp;iacute;a las cadenas de texto.&lt;/p&gt;
&lt;p&gt;Se notar&amp;aacute; que los clientes simplemente se conectan al servidor, uno de los clientes se conecta por tcp y el otro por ipc.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del servidor se muestra a continuaci&amp;oacute;n:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq y sleep de time"&gt;Se importa zeroMQ y sleep de time&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;ctx = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket con parametro downstream"&gt;Se crea el socket con parametro DOWNSTREAM&lt;/h1&gt;
&lt;p&gt;socket = ctx.socket(zmq.DOWNSTREAM)&lt;/p&gt;
&lt;h1 id="se crea una lista de textos"&gt;Se crea una lista de textos&lt;/h1&gt;
&lt;p&gt;lista1 = ("Esta es una prueba,1","Desde zeroMQ,2","Sigo probando,3","Prueba...,4","q,5","1,6","q,7","x","x")&lt;/p&gt;
&lt;h1 id="se crea una lista de un rango de numeros"&gt;Se crea una lista de un rango de numeros&lt;/h1&gt;
&lt;p&gt;lista2 = range(1,4)&lt;/p&gt;
&lt;h1 id="se asocia el socket a una ip y puerto"&gt;Se asocia el socket a una IP y puerto&lt;/h1&gt;
&lt;p&gt;socket.bind("tcp://127.0.0.1:12345")&lt;/p&gt;
&lt;h1 id="se envia la lista de numeros a los clientes"&gt;Se envia la lista de numeros a los clientes&lt;/h1&gt;
&lt;h1 id="que se conectan al servidor."&gt;que se conectan al servidor.&lt;/h1&gt;
&lt;h1 id="el envio se hace cada segundo."&gt;El envio se hace cada segundo.&lt;/h1&gt;
&lt;p&gt;for i in lista2:&lt;/p&gt;
&lt;p&gt;socket.send("%s" %i)&lt;/p&gt;
&lt;p&gt;print "Enviado %s" %i&lt;/p&gt;
&lt;p&gt;sleep(1)&lt;/p&gt;
&lt;h1 id="se asocia el socket a un archivo por"&gt;Se asocia el socket a un archivo por&lt;/h1&gt;
&lt;h1 id="medio del transporte ipc"&gt;medio del transporte ipc&lt;/h1&gt;
&lt;p&gt;socket.bind("ipc:///tmp/zmqdemo")&lt;/p&gt;
&lt;h1 id="se envia la lista de textos a los clientes conectados"&gt;Se envia la lista de textos a los clientes conectados&lt;/h1&gt;
&lt;h1 id="el envio se realiza cada segundo."&gt;el envio se realiza cada segundo.&lt;/h1&gt;
&lt;p&gt;for i in lista1:&lt;/p&gt;
&lt;p&gt;socket.send(i)&lt;/p&gt;
&lt;p&gt;print "Enviado %s" %i&lt;/p&gt;
&lt;p&gt;sleep(1)
```&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del cliente que usa tcp como transporte se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa el modulo zeromq"&gt;Se importa el modulo zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto_1"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;ctx = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket con parametro upstream"&gt;Se crea el socket con Parametro UPSTREAM&lt;/h1&gt;
&lt;p&gt;socket = ctx.socket(zmq.UPSTREAM)&lt;/p&gt;
&lt;h1 id="se conecta el socket (tcp) al servidor y su puerto"&gt;Se conecta el socket (tcp) al servidor y su puerto&lt;/h1&gt;
&lt;p&gt;socket.connect("tcp://127.0.0.1:12345")&lt;/p&gt;
&lt;h1 id="se crea un ciclo que recibe lo que envia el"&gt;Se crea un ciclo que recibe lo que envia el&lt;/h1&gt;
&lt;h1 id="servidor y lo muestra en pantalla"&gt;servidor y lo muestra en pantalla&lt;/h1&gt;
&lt;h1 id="y se recibe la letra x finaliza la conexion del cliente"&gt;y se recibe la letra x finaliza la conexion del cliente&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;p&gt;rcv =  socket.recv()&lt;/p&gt;
&lt;p&gt;if rcv == "x" :&lt;/p&gt;
&lt;p&gt;print rcv&lt;/p&gt;
&lt;p&gt;break&lt;/p&gt;
&lt;p&gt;print rcv 
```&lt;/p&gt;
&lt;p&gt;Se muestra el c&amp;oacute;digo del cliente utilizando como transporte ipc:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_2"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa el modulo zeromq_1"&gt;Se importa el modulo zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto_2"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;ctx = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket con parametro upstream_1"&gt;Se crea el socket con parametro UPSTREAM&lt;/h1&gt;
&lt;p&gt;socket = ctx.socket(zmq.UPSTREAM)&lt;/p&gt;
&lt;h1 id="se conecta el socket a un archivo temporal"&gt;Se conecta el socket a un archivo temporal&lt;/h1&gt;
&lt;h1 id="por medio de ipc como transporte"&gt;por medio de ipc como transporte&lt;/h1&gt;
&lt;p&gt;socket.connect("ipc:///tmp/zmqdemo")&lt;/p&gt;
&lt;h1 id="se crea un ciclo para recibir"&gt;Se crea un ciclo para recibir&lt;/h1&gt;
&lt;h1 id="la informacion del servidor"&gt;la informacion del servidor&lt;/h1&gt;
&lt;h1 id="se muestra en pantalla"&gt;se muestra en pantalla&lt;/h1&gt;
&lt;h1 id="si se recibe la letra x"&gt;si se recibe la letra x&lt;/h1&gt;
&lt;h1 id="finaliza la conexion con el servidor"&gt;finaliza la conexion con el servidor&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;p&gt;rcv = socket.recv()&lt;/p&gt;
&lt;p&gt;if rcv ==  'x':&lt;/p&gt;
&lt;p&gt;print rcv&lt;/p&gt;
&lt;p&gt;break&lt;/p&gt;
&lt;p&gt;print rcv&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La siguientes figuras muestran el resultado en el servidor y ambos clientes:
Servidor:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython7-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Cliente (tcp):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython7-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Cliente (ipc):  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython7-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;Como se nota en las figuras de los clientes, la informaci&amp;oacute;n que env&amp;iacute;a el servidor a los clientes se distribuye entre ambos.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="ZeroMQ"></category></entry><entry><title>Tutorial de ZeroMQ con Python( PUSH/PULL). Parte 6.</title><link href="https://ecrespo.github.io/tutorial-de-zeromq-con-python-pushpull-parte-6.html" rel="alternate"></link><published>2012-06-03T09:00:00-05:30</published><updated>2012-06-03T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-06-03:/tutorial-de-zeromq-con-python-pushpull-parte-6.html</id><summary type="html">&lt;p&gt;Siguiendo con la serie sobre &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;ZeroMQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se explica el funcionamiento de PUSH y PULL.&lt;/p&gt;
&lt;p&gt;La idea es que se tiene el emisor, quien env&amp;iacute;a a los "workers" unos string que son procesados de distinta manera o de igual manera (una forma de crear escalabilidad). Luego que los …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Siguiendo con la serie sobre &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;ZeroMQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se explica el funcionamiento de PUSH y PULL.&lt;/p&gt;
&lt;p&gt;La idea es que se tiene el emisor, quien env&amp;iacute;a a los "workers" unos string que son procesados de distinta manera o de igual manera (una forma de crear escalabilidad). Luego que los "workers" procesan la informaci&amp;oacute;n recibida del emisor se la pasan a resultado quien presenta la informaci&amp;oacute;n en pantalla.&lt;/p&gt;
&lt;p&gt;La figura muestra el proceso ya explicado:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython6-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del emisor es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/python"&gt;!/usr/bin/python&lt;/h1&gt;
&lt;h1 id="se importa zeromq y random"&gt;Se importa zeroMQ y random&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;p&gt;import random&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket con el argumento push"&gt;Se crea el socket con el argumento PUSH&lt;/h1&gt;
&lt;p&gt;envio =context.socket(zmq.PUSH)&lt;/p&gt;
&lt;h1 id="se asocia el socket a escuchar todas las ips y el puerto 5557"&gt;Se asocia el socket a escuchar todas las IPs y el puerto 5557&lt;/h1&gt;
&lt;p&gt;envio.bind("tcp://*:5557")&lt;/p&gt;
&lt;h1 id="se muestra que es necesario esperar que arranquen los workers"&gt;se muestra que es necesario esperar que arranquen los workers&lt;/h1&gt;
&lt;p&gt;print "Hay que esperar que los workers se inicien"&lt;/p&gt;
&lt;h1 id="al dar enter se inicia el proceso de transmision"&gt;Al dar enter se inicia el proceso de transmision&lt;/h1&gt;
&lt;p&gt;raw_input()&lt;/p&gt;
&lt;p&gt;print "Se inicia la transmision del trabajo..."&lt;/p&gt;
&lt;h1 id="tupla de strings que se van a enviar"&gt;tupla de strings que se van a enviar&lt;/h1&gt;
&lt;p&gt;cadenas = ['hola', 'aloha','hello','buenas noches','buenas tardes','buenos dias','bienvenido']&lt;/p&gt;
&lt;h1 id="se crea un ciclo para recorrer la tupla"&gt;Se crea un ciclo para recorrer la tupla&lt;/h1&gt;
&lt;p&gt;for i in range(len(cadenas)):&lt;/p&gt;
&lt;p&gt;cadena = cadenas[i]&lt;/p&gt;
&lt;p&gt;envio.send(cadena)&lt;/p&gt;
&lt;p&gt;print "Enviando: {0}".format(cadena)&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del worker es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/python_1"&gt;!/usr/bin/python&lt;/h1&gt;
&lt;h1 id="se importa zeromq y sleep de time"&gt;Se importa ZeroMQ y sleep de time&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto_1"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se define el socket con argumento pull"&gt;Se define el Socket con argumento PULL&lt;/h1&gt;
&lt;p&gt;recepcion = context.socket(zmq.PULL)&lt;/p&gt;
&lt;h1 id="se conecta el socket a localhost puerto 5557"&gt;Se conecta el socket a localhost puerto 5557&lt;/h1&gt;
&lt;h1 id="es el puerto donde origen envia con push los datos"&gt;Es el puerto donde origen envia con PUSH los datos&lt;/h1&gt;
&lt;p&gt;recepcion.connect("tcp://localhost:5557")&lt;/p&gt;
&lt;h1 id="se crea el socket de envio de los datos procesados con argumento push"&gt;Se crea el socket de envio de los datos procesados con argumento PUSH&lt;/h1&gt;
&lt;p&gt;envio = context.socket(zmq.PUSH)&lt;/p&gt;
&lt;h1 id="se conecta el socket a localhost y puerto 5558"&gt;Se conecta el socket a localhost y puerto 5558&lt;/h1&gt;
&lt;p&gt;envio.connect("tcp://localhost:5558")&lt;/p&gt;
&lt;h1 id="se genera un ciclo"&gt;Se genera un ciclo&lt;/h1&gt;
&lt;h1 id="donde se recive lo transmitido por origen"&gt;donde se recive lo transmitido por origen&lt;/h1&gt;
&lt;h1 id="se procesa (se coloca en mayusculas)"&gt;se procesa (se coloca en mayusculas)&lt;/h1&gt;
&lt;h1 id="se muestra en pantalla y se envia."&gt;se muestra en pantalla y se envia.&lt;/h1&gt;
&lt;h1 id="los ciclos tienen un retardo de 1 seg"&gt;los ciclos tienen un retardo de 1 seg&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;p&gt;cadena = recepcion.recv()&lt;/p&gt;
&lt;p&gt;print "Proceso:{0}".format(cadena)&lt;/p&gt;
&lt;p&gt;envio.send(cadena.upper())&lt;/p&gt;
&lt;p&gt;sleep(1)&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de resultado es el siguiente:&lt;/p&gt;
&lt;h1 id="!/usr/bin/python_2"&gt;!/usr/bin/python&lt;/h1&gt;
&lt;h1 id="se importa zeromq"&gt;Se importa ZeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto_2"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket pull que recibe los mensajes de los workers"&gt;Se crea el socket PULL que recibe los mensajes de los workers&lt;/h1&gt;
&lt;p&gt;recepcion = context.socket(zmq.PULL)&lt;/p&gt;
&lt;h1 id="se asocia el socket a escuchar todas las ips en el puerto 5558"&gt;Se asocia el socket a escuchar todas las IPs en el puerto 5558&lt;/h1&gt;
&lt;h1 id="el puerto donde los workers envian los mensajes"&gt;el puerto donde los workers envian los mensajes&lt;/h1&gt;
&lt;p&gt;recepcion.bind("tcp://*:5558")&lt;/p&gt;
&lt;h1 id="se inicia un ciclo donde se recibe los mensajes"&gt;Se inicia un ciclo donde se recibe los mensajes&lt;/h1&gt;
&lt;h1 id="de los workers y se muestra en pantalla"&gt;de los workers y se muestra en pantalla&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;p&gt;mensaje = recepcion.recv()&lt;/p&gt;
&lt;p&gt;print "Recibo: {0}".format(mensaje)&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se tiene que iniciar los scripts resultado, worker (worker1 y una copia identica llamada worker2) y origen.&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra el resultado de origen:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython6-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;La siguiente figura muestra el resultado del worker1 y worker2:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython6-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython6-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se nota que los workers se distribuyen el trabajo de forma equitativa.&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra lo que despliega en pantalla resultado:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython6-5.png"/&gt; &lt;/p&gt;
&lt;p&gt;Como se ve, los workers procesan las cadenas de texto que reciben de origen, las pasan a may&amp;uacute;sculas y se la env&amp;iacute;an a resultado para que las muestre en pantalla.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="Ubuntu"></category><category term="ZeroMQ"></category></entry><entry><title>Tutorial de ZeroMQ con Python (REP/REQ y PUB/SUB). Parte 5.</title><link href="https://ecrespo.github.io/tutorial-de-zeromq-con-python-repreq-y-pubsub-parte-5.html" rel="alternate"></link><published>2012-06-02T09:00:00-05:30</published><updated>2012-06-02T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-06-02:/tutorial-de-zeromq-con-python-repreq-y-pubsub-parte-5.html</id><summary type="html">&lt;p&gt;Continuando con los &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;art&amp;iacute;culos sobre ZeroMQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En la revista &lt;a href="http://www.linux-magazine.com/"&gt;Linux Magazine versi&amp;oacute;n en espa&amp;ntilde;ol&lt;/a&gt; publicaron un art&amp;iacute;culo sobre &lt;code&gt;ZeroMQ&lt;/code&gt; con Python.&lt;/p&gt;
&lt;p&gt;Explican el uso de 2 patrones en conjunto, &lt;code&gt;REP/REQ&lt;/code&gt; y &lt;code&gt;PUB/SUB&lt;/code&gt;. Colocan como ejemplo una simulaci&amp;oacute;n del proceso de env&amp;iacute;o de tweets de twitter.&lt;/p&gt;
&lt;p&gt;La siguiente figura …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;art&amp;iacute;culos sobre ZeroMQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En la revista &lt;a href="http://www.linux-magazine.com/"&gt;Linux Magazine versi&amp;oacute;n en espa&amp;ntilde;ol&lt;/a&gt; publicaron un art&amp;iacute;culo sobre &lt;code&gt;ZeroMQ&lt;/code&gt; con Python.&lt;/p&gt;
&lt;p&gt;Explican el uso de 2 patrones en conjunto, &lt;code&gt;REP/REQ&lt;/code&gt; y &lt;code&gt;PUB/SUB&lt;/code&gt;. Colocan como ejemplo una simulaci&amp;oacute;n del proceso de env&amp;iacute;o de tweets de twitter.&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la simulaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython5-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;El emisor genera los mensajes, el twitter los recibe y los publica, luego cada receptor se suscribe al twitter y recibe la informaci&amp;oacute;n que le interesa.&lt;/p&gt;
&lt;p&gt;EL c&amp;oacute;digo del emisor es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/python"&gt;!/usr/bin/python&lt;/h1&gt;
&lt;h1 id="se importa zeromq"&gt;Se importa zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea el contexto"&gt;Se crea el contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket con el parametro req"&gt;Se crea el socket con el parametro REQ&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.REQ)&lt;/p&gt;
&lt;h1 id="se asocia la ip y el puerto del socket."&gt;Se asocia la IP y el puerto del socket.&lt;/h1&gt;
&lt;p&gt;socket.connect("tcp://127.0.0.1:4000")&lt;/p&gt;
&lt;h1 id="se genera los mensajes estilo tuiter y se envia al socket."&gt;Se genera los mensajes estilo tuiter y se envia al socket.&lt;/h1&gt;
&lt;p&gt;for i in ['@_seraph1 Esta es una prueba','@otro viendo el juego', '@_seraph1 otra prueba','@otro otro']:&lt;/p&gt;
&lt;p&gt;socket.send(i)&lt;/p&gt;
&lt;p&gt;msg_in = socket.recv()
&lt;code&gt;El c&amp;oacute;digo del tuiter es el siguiente:&lt;/code&gt;python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq_1"&gt;Se importa zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se importa choice de random"&gt;Se importa choice de random&lt;/h1&gt;
&lt;p&gt;from random import choice&lt;/p&gt;
&lt;h1 id="se crea el contexto_1"&gt;Se crea el contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se define el socket de recepcion con argumento rep"&gt;Se define el socket de recepcion con argumento REP&lt;/h1&gt;
&lt;p&gt;socket_recv = context.socket(zmq.REP)&lt;/p&gt;
&lt;h1 id="se asocia a una ip y puerto el socket de recepcion"&gt;Se asocia a una IP y puerto el socket de recepcion&lt;/h1&gt;
&lt;p&gt;socket_recv.bind("tcp://127.0.0.1:4000")&lt;/p&gt;
&lt;h1 id="se define el socket de publicacion con argumento pub"&gt;Se define el socket de publicacion con argumento PUB&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.PUB)&lt;/p&gt;
&lt;h1 id="se asocia la ip y un puerto distinto al anterio socket"&gt;Se asocia la ip y un puerto distinto al anterio socket&lt;/h1&gt;
&lt;p&gt;socket.bind("tcp://127.0.0.1:5000")&lt;/p&gt;
&lt;h1 id="se crea un ciclo"&gt;Se crea un ciclo&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;p&gt;#Se recibe el mensaje del socket de recepcion&lt;/p&gt;
&lt;p&gt;msg = socket_recv.recv()&lt;/p&gt;
&lt;p&gt;#Se envia el mensaje de recepcion&lt;/p&gt;
&lt;p&gt;socket_recv.send(msg)&lt;/p&gt;
&lt;p&gt;#Se muestra el mensaje en pantalla&lt;/p&gt;
&lt;p&gt;print "Reenvio: {0}".format(msg)&lt;/p&gt;
&lt;p&gt;#Se envia  el mensaje al socket de publicacion&lt;/p&gt;
&lt;p&gt;socket.send(msg)
```
Se muestra ahora el c&amp;oacute;digo de los receptores:  &lt;/p&gt;
&lt;p&gt;Receptor 1:  &lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/python_1"&gt;!/usr/bin/python&lt;/h1&gt;
&lt;h1 id="se importa zeromq_2"&gt;Se importa zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea el contexto_2"&gt;Se crea el contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket de suscripcion"&gt;Se crea el socket de suscripcion&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.SUB)&lt;/p&gt;
&lt;h1 id="se asocia ese socket a la ip y puerto donde publica tuiter"&gt;Se asocia ese socket a la IP y puerto donde publica tuiter&lt;/h1&gt;
&lt;p&gt;socket.connect("tcp://127.0.0.1:5000")&lt;/p&gt;
&lt;h1 id="se suscribe a escuchar los mensajes de @_seraph1"&gt;Se suscribe a escuchar los mensajes de @_seraph1&lt;/h1&gt;
&lt;p&gt;socket.setsockopt(zmq.SUBSCRIBE, "@_seraph1")&lt;/p&gt;
&lt;h1 id="se crea un ciclo donde se recibe los mensajes"&gt;se crea un ciclo donde se recibe los mensajes&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;p&gt;print "-&amp;gt;",socket.recv()
```  &lt;/p&gt;
&lt;p&gt;Receptor 2:&lt;br/&gt;
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/python_2"&gt;!/usr/bin/python&lt;/h1&gt;
&lt;h1 id="se importa zeromq_3"&gt;Se importa zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea el contexto_3"&gt;Se crea el contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket de suscripcion_1"&gt;Se crea el socket de suscripcion&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.SUB)&lt;/p&gt;
&lt;h1 id="se asocia ese socket a la ip y puerto donde publica tuiter_1"&gt;Se asocia ese socket a la IP y puerto donde publica tuiter&lt;/h1&gt;
&lt;p&gt;socket.connect("tcp://127.0.0.1:5000")&lt;/p&gt;
&lt;h1 id="se suscribe a escuchar los mensajes de @otro"&gt;Se suscribe a escuchar los mensajes de @otro&lt;/h1&gt;
&lt;p&gt;socket.setsockopt(zmq.SUBSCRIBE, "@otro")&lt;/p&gt;
&lt;h1 id="se crea un ciclo donde se recibe los mensajes_1"&gt;se crea un ciclo donde se recibe los mensajes&lt;/h1&gt;
&lt;p&gt;while True:&lt;/p&gt;
&lt;p&gt;print "-&amp;gt;",socket.recv()
```&lt;/p&gt;
&lt;p&gt;En la figura se muestra el resultado de twitter:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython5-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra el resultado del receptor 1:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython5-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Y por &amp;uacute;ltimo el receptor 2:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython5-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;En la versi&amp;oacute;n de la revista no publicaron el c&amp;oacute;digo de los receptores.
Esto muestra el nivel de complejidad en sistema de colas que se puede lograr con &lt;code&gt;ZeroMQ&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="Ubuntu"></category><category term="ZeroMQ"></category></entry><entry><title>Tutorial de ZeroMQ con Python(PUB/SUB). Parte 4.</title><link href="https://ecrespo.github.io/tutorial-de-zeromq-con-pythonpubsub-parte-4.html" rel="alternate"></link><published>2012-06-01T09:00:00-05:30</published><updated>2012-06-01T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-06-01:/tutorial-de-zeromq-con-pythonpubsub-parte-4.html</id><summary type="html">&lt;p&gt;Continuando con los &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;tutoriales sobre ZeroMQ&lt;/a&gt; ahora se muestra como usar Publicar/Suscribir (Publish/subscribe).&lt;/p&gt;
&lt;p&gt;En el patr&amp;oacute;n pub/sub los componentes son pobremente acompladas, ser&amp;aacute; de gran ayuda para escalar ya que no hay necesidad de preocuparse por los suscriptores.  Sin embargo, este acoplamiento puede conducir a un comportamiento …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los &lt;a href="https://www.seraph.to/tag/zeromq.html"&gt;tutoriales sobre ZeroMQ&lt;/a&gt; ahora se muestra como usar Publicar/Suscribir (Publish/subscribe).&lt;/p&gt;
&lt;p&gt;En el patr&amp;oacute;n pub/sub los componentes son pobremente acompladas, ser&amp;aacute; de gran ayuda para escalar ya que no hay necesidad de preocuparse por los suscriptores.  Sin embargo, este acoplamiento puede conducir a un comportamiento inesperado cuando no se entienden completamente.&lt;/p&gt;
&lt;p&gt;El ejemplo que se va a desarrollar se basa en la publicaci&amp;oacute;n sobre la &lt;a href="http://nichol.as/zeromq-an-introduction"&gt;introducci&amp;oacute;n de ZeroMQ de Nicholas Pi&amp;euml;l&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El servidor genera una serie de mensaje de pa&amp;iacute;ses y de eventos por pa&amp;iacute;s, la idea es publicar de forma aleatoria un pa&amp;iacute;s y un evento. Se crear&amp;aacute; 2 clientes donde cada uno mostrar&amp;aacute; la informaci&amp;oacute;n de 2 pa&amp;iacute;ses, eso es gracias a PUB/SUB ya que el suscriptor s&amp;oacute;lo recibe la informaci&amp;oacute;n que necesita.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo del servidor:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq"&gt;Se importa ZeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se importa choice a partir de random"&gt;Se importa choice a partir de random&lt;/h1&gt;
&lt;p&gt;from random import choice&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket pasandole argumento de publicacion pub"&gt;Se crea el socket pasandole argumento de publicacion PUB&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.PUB)&lt;/p&gt;
&lt;h1 id="se asocia la ip y el puerto que va a escuchar."&gt;Se asocia la IP y el puerto que va a escuchar.&lt;/h1&gt;
&lt;p&gt;socket.bind("tcp://127.0.0.1:5000")&lt;/p&gt;
&lt;h1 id="se importa sleep"&gt;Se importa sleep&lt;/h1&gt;
&lt;p&gt;from time import sleep &lt;/p&gt;
&lt;h1 id="se crea una lista de paises y de eventos"&gt;Se crea una lista de paises y de eventos&lt;/h1&gt;
&lt;p&gt;paises = ['holanda','brasil','alemania','portugal','argentina','italia','rusia','venezuela']
eventos = ['tarjeta amarilla','tarjeta roja','gol','corner','falta']&lt;/p&gt;
&lt;h1 id="se crea un contador con valor inicial 1"&gt;Se crea un contador con valor inicial 1&lt;/h1&gt;
&lt;p&gt;c = 1&lt;/p&gt;
&lt;h1 id="se crea un ciclo indefinido"&gt;Se crea un ciclo indefinido&lt;/h1&gt;
&lt;p&gt;while True:
    #Se define un mensaje pasando de forma aleatoria un pais y un evento
    mensaje = choice( paises) + " " + choice(eventos)
    #Se muestra en pantalla el valor del contador y el mensaje.
    print "-&amp;gt;",c , mensaje
    #Se envia el mensaje
    socket.send(mensaje)
    #Se genera un retardo de 1 seg
    sleep(1)
    #Se incrementa el contador
    c += 1
    #Si se llega a 180 se termina el ciclo si no continua.
    if c == 180:
        break
    else:
        continue
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo de los 2 clientes(suscriptores):
Cliente1:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq_1"&gt;Se importa zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se importa sleep a partir de time"&gt;Se importa sleep a partir de time&lt;/h1&gt;
&lt;p&gt;from time import sleep &lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto de zeromq"&gt;Se crea la instancia del contexto de zeroMQ&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket del suscriptor sub"&gt;Se crea el socket del suscriptor SUB&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.SUB)&lt;/p&gt;
&lt;h1 id="se crea la conexion a la ip y puerto del servidor"&gt;Se crea la conexion a la IP y puerto del servidor&lt;/h1&gt;
&lt;p&gt;socket.connect("tcp://127.0.0.1:5000")&lt;/p&gt;
&lt;h1 id="se define una opcion del socket del suscriptor con argentina y venezuela"&gt;Se define una opcion del socket del suscriptor con argentina y venezuela&lt;/h1&gt;
&lt;p&gt;socket.setsockopt(zmq.SUBSCRIBE, "argentina")
socket.setsockopt(zmq.SUBSCRIBE, "venezuela")&lt;/p&gt;
&lt;h1 id="se define el valor inicial de un contador"&gt;Se define el valor inicial de un contador&lt;/h1&gt;
&lt;p&gt;c = 1 &lt;/p&gt;
&lt;h1 id="se crea un ciclo indefinido_1"&gt;Se crea un ciclo indefinido&lt;/h1&gt;
&lt;p&gt;while True:
    #Se muestra en pantalla el valor del contador y el mensaje recibido
    print  c, "-&amp;gt;",socket.recv()
    #Se genera un retardo de 1 seg en cada ciclo
    sleep(1)
    #Se incrementa el contador en 1
    c += 1
    #Si el contador llega a 90 se termina el ciclo, si no continua
    if c == 90:
        break
    else:
        continue
&lt;code&gt;Cliente 2:&lt;/code&gt;python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_2"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq_2"&gt;Se importa zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se importa sleep a partir de time_1"&gt;Se importa sleep a partir de time&lt;/h1&gt;
&lt;p&gt;from time import sleep &lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto de zeromq_1"&gt;Se crea la instancia del contexto de zeroMQ&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket del suscriptor sub_1"&gt;Se crea el socket del suscriptor SUB&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.SUB)&lt;/p&gt;
&lt;h1 id="se crea la conexion a la ip y puerto del servidor_1"&gt;Se crea la conexion a la IP y puerto del servidor&lt;/h1&gt;
&lt;p&gt;socket.connect("tcp://127.0.0.1:5000")&lt;/p&gt;
&lt;h1 id="se define una opcion del socket del suscriptor con brasil y alemania"&gt;Se define una opcion del socket del suscriptor con brasil y alemania&lt;/h1&gt;
&lt;p&gt;socket.setsockopt(zmq.SUBSCRIBE, "brasil")
socket.setsockopt(zmq.SUBSCRIBE, "alemania")&lt;/p&gt;
&lt;h1 id="se define el valor inicial de un contador_1"&gt;Se define el valor inicial de un contador&lt;/h1&gt;
&lt;p&gt;c = 1 &lt;/p&gt;
&lt;h1 id="se crea un ciclo indefinido_2"&gt;Se crea un ciclo indefinido&lt;/h1&gt;
&lt;p&gt;while True:
    #Se muestra en pantalla el valor del contador y el mensaje recibido
    print  c, "-&amp;gt;",socket.recv()
    #Se genera un retardo de 1 seg en cada ciclo
    sleep(1)
    #Se incrementa el contador en 1
    c += 1
    #Si el contador llega a 90 se termina el ciclo, si no continua
    if c == 90:
        break
    else:
        continue
```&lt;/p&gt;
&lt;p&gt;Es como si el servidor estuviera narrando varios juegos de futbol y los clientes s&amp;oacute;lo muestran la informaci&amp;oacute;n del partido de futbol que les interesa.&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra el resultado del servidor:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython4-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra las 2 f&amp;iacute;guras de los clientes:
Cliente 1 (Venezuela, Argentina):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython4-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Cliente 2(Brasil,Alemania):&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython4-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Ya se va mostrando cosas m&amp;aacute;s complicadas que se pueden hacer con &lt;code&gt;ZeroMQ&lt;/code&gt;, y todav&amp;iacute;a faltan...&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="ZeroMQ"></category></entry><entry><title>Tutorial de ZeroMQ con Python. Parte 3.</title><link href="https://ecrespo.github.io/tutorial-de-zeromq-con-python-parte-3.html" rel="alternate"></link><published>2012-05-28T09:00:00-05:30</published><updated>2012-05-28T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-05-28:/tutorial-de-zeromq-con-python-parte-3.html</id><summary type="html">&lt;p&gt;Tomando como base el art&amp;iacute;culo de &lt;a href="https://www.seraph.to/tutorial-de-zeromq-con-python-parte-1.html#tutorial-de-zeromq-con-python-parte-1"&gt;ZeroMQ parte 1&lt;/a&gt;, se puede crear varios servidores (como cluster de aplicaci&amp;oacute;n). &lt;/p&gt;
&lt;p&gt;Est&amp;aacute; vez se crean 3 scripts servidores, pueden estar en el mismo equipo o en equipos diferentes. Lo &amp;uacute;nico que cambi&amp;eacute; en cada script es el puerto donde escucha para el servicio …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tomando como base el art&amp;iacute;culo de &lt;a href="https://www.seraph.to/tutorial-de-zeromq-con-python-parte-1.html#tutorial-de-zeromq-con-python-parte-1"&gt;ZeroMQ parte 1&lt;/a&gt;, se puede crear varios servidores (como cluster de aplicaci&amp;oacute;n). &lt;/p&gt;
&lt;p&gt;Est&amp;aacute; vez se crean 3 scripts servidores, pueden estar en el mismo equipo o en equipos diferentes. Lo &amp;uacute;nico que cambi&amp;eacute; en cada script es el puerto donde escucha para el servicio.&lt;/p&gt;
&lt;p&gt;En el cliente, se crean 3 sockets con los puertos donde escucha los 3 servidores.&lt;/p&gt;
&lt;p&gt;La idea es pasar un mensaje por parte del cliente, los servidores los recibe y los env&amp;iacute;a de vuelta al cliente.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del script del lado del cliente es la siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar zeromq"&gt;importar zeromq&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea una instancia del contexto"&gt;Se crea una instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket con parametro peticion (req)"&gt;Se crea el socket con parametro peticion (REQ)&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.REQ)&lt;/p&gt;
&lt;h1 id="se crean 3 sockets con la ip y los 3 puertos donde escucha"&gt;Se crean 3 sockets con la IP y los 3 puertos donde escucha&lt;/h1&gt;
&lt;h1 id="los 3 servidores."&gt;los 3 servidores.&lt;/h1&gt;
&lt;p&gt;socket.connect("tcp://127.0.0.1:5000")
socket.connect("tcp://127.0.0.1:6000")
socket.connect("tcp://127.0.0.1:7000")&lt;/p&gt;
&lt;h1 id="se crea un ciclo de 100 repeticiones"&gt;Se crea un ciclo de 100 repeticiones&lt;/h1&gt;
&lt;p&gt;for i in range(100):
    #Se crea el string del mensaje
    mensaje = "mensaje %s" % i
    #Se envia el mensaje
    socket.send(mensaje)
    #Se muestra en pantalla el mensaje enviado
    print "Enviando", mensaje
    #Se recibe el mensaje de vuelta
    msg_in = socket.recv()
```  &lt;/p&gt;
&lt;p&gt;Los scripts de los servidores se muestra a continuaci&amp;oacute;n:
Servidor 1:  &lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq"&gt;Se importa zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket pasandole como parametro respuesta (rep)"&gt;Se crea el socket pasandole como parametro respuesta (REP)&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.REP)&lt;/p&gt;
&lt;h1 id="se asocia el socket a la ip y el puerto"&gt;Se asocia el socket a la IP y el puerto&lt;/h1&gt;
&lt;p&gt;socket.bind("tcp://127.0.0.1:5000")&lt;/p&gt;
&lt;h1 id="se crea un ciclo"&gt;Se crea un ciclo&lt;/h1&gt;
&lt;p&gt;while True:
    #Se recibe el mensaje
    mensaje = socket.recv()
    #Se muestra en pantalla el mensaje recibido
    print "Recibiendo", mensaje
    #Se envia el mensaje de regreso al cliente
    socket.send(mensaje)&lt;br/&gt;
```  &lt;/p&gt;
&lt;p&gt;Servidor 2:&lt;br/&gt;
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_2"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq_1"&gt;Se importa zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto_1"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket pasandole como parametro respuesta (rep)_1"&gt;Se crea el socket pasandole como parametro respuesta (REP)&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.REP)&lt;/p&gt;
&lt;h1 id="se asocia el socket a la ip y el puerto_1"&gt;Se asocia el socket a la IP y el puerto&lt;/h1&gt;
&lt;p&gt;socket.bind("tcp://127.0.0.1:6000")&lt;/p&gt;
&lt;h1 id="se crea un ciclo_1"&gt;Se crea un ciclo&lt;/h1&gt;
&lt;p&gt;while True:
    #Se recibe el mensaje
    mensaje = socket.recv()
    #Se muestra en pantalla el mensaje recibido
    print "Recibiendo", mensaje
    #Se envia el mensaje de regreso al cliente
    socket.send(mensaje)&lt;br/&gt;
```  &lt;/p&gt;
&lt;p&gt;Servidor 3:&lt;br/&gt;
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_3"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq_2"&gt;Se importa zeroMQ&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto_2"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket pasandole como parametro respuesta (rep)_2"&gt;Se crea el socket pasandole como parametro respuesta (REP)&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.REP)&lt;/p&gt;
&lt;h1 id="se asocia el socket a la ip y el puerto_2"&gt;Se asocia el socket a la IP y el puerto&lt;/h1&gt;
&lt;p&gt;socket.bind("tcp://127.0.0.1:7000")&lt;/p&gt;
&lt;h1 id="se crea un ciclo_2"&gt;Se crea un ciclo&lt;/h1&gt;
&lt;p&gt;while True:
    #Se recibe el mensaje
    mensaje = socket.recv()
    #Se muestra en pantalla el mensaje recibido
    print "Recibiendo", mensaje
    #Se envia el mensaje de regreso al cliente
    socket.send(mensaje)
```  &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se inician los 3 servidores y luego el cliente:
En la siguiente figura se muestra los env&amp;iacute;os realizados por el cliente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython3-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se muestra a continuaci&amp;oacute;n las figuras de los 3 servidores:&lt;/p&gt;
&lt;p&gt;Servidor 1:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython3-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Servidor 2:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython3-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;servidor 3:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython3-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;Al ver las 3 figuras de los servidores se nota como se distribuye de forma equitativa la recepci&amp;oacute;n de los mensajes.&lt;/p&gt;
&lt;p&gt;Luego se puede complicar algo m&amp;aacute;s este esquema agregando una cola entre los clientes y los servidores. &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category><category term="ZeroMQ"></category></entry><entry><title>Tutorial de ZeroMQ con Python. Parte 2.</title><link href="https://ecrespo.github.io/tutorial-de-zeromq-con-python-parte-2.html" rel="alternate"></link><published>2012-05-27T09:00:00-05:30</published><updated>2012-05-27T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-05-27:/tutorial-de-zeromq-con-python-parte-2.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tutorial-de-zeromq-con-python-parte-1.html#tutorial-de-zeromq-con-python-parte-1"&gt;ZeroMQ&lt;/a&gt;, en esta ocasi&amp;oacute;n se muestra el uso del patr&amp;oacute;n de mensaje PAR (comunicaci&amp;oacute;n entre compa&amp;ntilde;eros exclusivamente).&lt;/p&gt;
&lt;p&gt;Los art&amp;iacute;culos se basan en el art&amp;iacute;culo de Nicholas Pi&amp;euml;l, &lt;a href="http://nichol.as/zeromq-an-introduction"&gt;una Introducci&amp;oacute;n a ZeroMQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Socket par son muy similares a los sockets regulares. La comunicaci&amp;oacute;n es bidireccional, no …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre &lt;a href="https://www.seraph.to/tutorial-de-zeromq-con-python-parte-1.html#tutorial-de-zeromq-con-python-parte-1"&gt;ZeroMQ&lt;/a&gt;, en esta ocasi&amp;oacute;n se muestra el uso del patr&amp;oacute;n de mensaje PAR (comunicaci&amp;oacute;n entre compa&amp;ntilde;eros exclusivamente).&lt;/p&gt;
&lt;p&gt;Los art&amp;iacute;culos se basan en el art&amp;iacute;culo de Nicholas Pi&amp;euml;l, &lt;a href="http://nichol.as/zeromq-an-introduction"&gt;una Introducci&amp;oacute;n a ZeroMQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Socket par son muy similares a los sockets regulares. La comunicaci&amp;oacute;n es bidireccional, no hay un espec&amp;iacute;fico estado almacenado dentro del socket y solamente se puede conectar con un compa&amp;ntilde;ero.&lt;/p&gt;
&lt;p&gt;La figura representa la estructura de sockets pares, el servidor escucha en un puerto seguro y un cliente se conecta a el. Las l&amp;iacute;neas rojas muestran el flujo de los mensajes, en este patr&amp;oacute;n ambos extremos usan el patr&amp;oacute;n par, y los mensajes fluyen de manera bidireccional.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython2-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se muestra a continuaci&amp;oacute;n el c&amp;oacute;digo del servidor:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar zmq"&gt;Importar zmq&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket del tipo par"&gt;Se crea el socket del tipo PAR&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.PAIR)&lt;/p&gt;
&lt;h1 id="se asocia a una ip y puerto donde escucha el servidor."&gt;Se asocia a una IP y puerto donde escucha el servidor.&lt;/h1&gt;
&lt;p&gt;socket.bind("tcp://127.0.0.1:5555")&lt;/p&gt;
&lt;h1 id="se crea un ciclo."&gt;Se crea un ciclo.&lt;/h1&gt;
&lt;p&gt;while True:
    #Se recibe un mensaje del cliente
    mensaje = socket.recv()
    #Se muestra en pantalla
    print "Recivo", mensaje
    #Se envia de vuelta el mensaje
    socket.send(mensaje)
&lt;code&gt;El c&amp;oacute;digo del cliente es el siguiente:&lt;/code&gt;&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zmq"&gt;Se importa zmq&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto_1"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket con argumento del tipo de mensaje par."&gt;Se crea el socket con argumento del tipo de mensaje Par.&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.PAIR)&lt;/p&gt;
&lt;h1 id="se conecta al servidor dado la ip y puerto."&gt;Se conecta al servidor dado la IP y puerto.&lt;/h1&gt;
&lt;p&gt;socket.connect("tcp://127.0.0.1:5555")&lt;/p&gt;
&lt;h1 id="se crea un cilo de 100 repeticiones."&gt;Se crea un cilo de 100 repeticiones.&lt;/h1&gt;
&lt;p&gt;for i in range(100):
    #Se define el mensaje a pasar
    mensaje = "mensaje %s" % i
    #Se pasa el mensaje al servidor
    socket.send(mensaje)
    #Se presenta en pantalla el mensaje
    print "Enviando", mensaje
    #Se recibe el mensaje de vuelta
    msg_in = socket.recv()
    #Se presenta en pantalla el mensaje de vuelta
    print "Recibido:", msg_in
```  &lt;br/&gt;
El resultado del lado del servidor se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython2-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;El resultado del lado del cliente se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython2-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Al intentar ejecutar 2 clientes al mismo tiempo el servidor termina con un mensaje de error por que s&amp;oacute;lo maneja una comunicaci&amp;oacute;n bidireccional con un s&amp;oacute;lo compa&amp;ntilde;ero.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="ZeroMQ"></category></entry><entry><title>Tutorial de ZeroMQ con python . Parte 1.</title><link href="https://ecrespo.github.io/tutorial-de-zeromq-con-python-parte-1.html" rel="alternate"></link><published>2012-05-26T09:00:00-05:30</published><updated>2012-05-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-05-26:/tutorial-de-zeromq-con-python-parte-1.html</id><summary type="html">&lt;p&gt;&lt;a href="http://zeromq.org/"&gt;ZeroMQ&lt;/a&gt; es una librer&amp;iacute;a de mensajes, permite crear complejos sistemas de comunicaci&amp;oacute;n con poco esfuerzo (sistemas de cola).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ZeroMQ&lt;/code&gt; es m&amp;aacute;s r&amp;aacute;pido que otros sistemas de mensajes basados en el protocolo &lt;code&gt;AMQP&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; un uso sencillo de zeroMQ al estilo cliente y servidor. Se usar&amp;aacute; el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://zeromq.org/"&gt;ZeroMQ&lt;/a&gt; es una librer&amp;iacute;a de mensajes, permite crear complejos sistemas de comunicaci&amp;oacute;n con poco esfuerzo (sistemas de cola).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ZeroMQ&lt;/code&gt; es m&amp;aacute;s r&amp;aacute;pido que otros sistemas de mensajes basados en el protocolo &lt;code&gt;AMQP&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; un uso sencillo de zeroMQ al estilo cliente y servidor. Se usar&amp;aacute; el puerto 5000 para la comunicaci&amp;oacute;n entre el cliente y servidor. En el cliente se genera de forma aleatoria 2 n&amp;uacute;meros que se le pasan al servidor que sacar&amp;aacute; una cuenta y devuelve el resultado al cliente quien muestra el resultado en pantalla. La generaci&amp;oacute;n de n&amp;uacute;meros se realiza 1000 veces, luego le pasa al servidor la letra q la cual es la se&amp;ntilde;al para terminar el servidor.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;zeroMQ&lt;/code&gt; para python se tiene que instalar &lt;a href="http://zeromq.org/bindings:python"&gt;python-zmq&lt;/a&gt; y/o &lt;code&gt;python3-zmq&lt;/code&gt; para python3:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="apt-get install python3-zmq python-zmq"&gt;apt-get install python3-zmq python-zmq&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Servidor: El c&amp;oacute;digo del servidor es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq"&gt;Se importa zeromq&lt;/h1&gt;
&lt;p&gt;import zmq&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto de zmq."&gt;Se crea la instancia del contexto de zmq.&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se define el socket con parametro respuesta rep."&gt;Se define el socket con par&amp;aacute;metro respuesta REP.&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.REP)&lt;/p&gt;
&lt;h1 id="se asocia la direccion ip y el puerto donde el servidor escucha las peticiones."&gt;Se asocia la direcci&amp;oacute;n IP y el puerto donde el servidor escucha las peticiones.&lt;/h1&gt;
&lt;p&gt;socket.bind("tcp://127.0.0.1:5000")&lt;/p&gt;
&lt;h1 id="se define un contados"&gt;Se define un contados&lt;/h1&gt;
&lt;p&gt;c = 1&lt;/p&gt;
&lt;h1 id="se genera un ciclo que solo finaliza si se recibe la letra q."&gt;Se genera un ciclo que s&amp;oacute;lo finaliza si se recibe la letra q.&lt;/h1&gt;
&lt;p&gt;while True:
    #Se recibe los mensajes.
    msg = socket.recv()
    #Se consulta si la longitud del mensaje es 1 y es la letra q se termina el ciclo
    if len(msg) == 1 and msg == "q":
        break
    #Se separa los datos que viene en un string separados por :
    datos = msg.split(":")
    #se realiza una suma con los datos recibidos.
    resultado = int(datos[0]) + int(datos[1])
    #Se muestra en pantalla el resultado
    print "Iteracion: %s ,He recibido: %s, el resultado es: %s "  %(c,msg,resultado)
    #Se env&amp;iacute;a el resultado al cliente
    socket.send(str(resultado))
    #Se incrementa el contador.
    c += 1
```&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del cliente es el siguiente:
```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa zeromq y random"&gt;Se importa zeromq y random&lt;/h1&gt;
&lt;p&gt;import zmq
import random&lt;/p&gt;
&lt;h1 id="se crea la instancia del contexto"&gt;Se crea la instancia del contexto&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()&lt;/p&gt;
&lt;h1 id="se crea el socket y se para el argumento de peticion req"&gt;Se crea el socket y se para el argumento de petici&amp;oacute;n REQ&lt;/h1&gt;
&lt;p&gt;socket = context.socket(zmq.REQ)&lt;/p&gt;
&lt;h1 id="se coencta a la ip y puerto donde escucha el servidor"&gt;Se coencta a la IP y puerto donde escucha el servidor&lt;/h1&gt;
&lt;p&gt;socket.connect("tcp://127.0.0.1:5000")&lt;/p&gt;
&lt;h1 id="se genera un ciclo de 1000 repeticiones"&gt;Se genera un ciclo de 1000 repeticiones&lt;/h1&gt;
&lt;p&gt;for i in range(1000):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se crea el string con el mensaje, se pasa 2 aargumentos aleatorios
msg = "%s:%s" %(random.randint(1, 1000),random.randint(1, 1000))


#Se envia el mensaje al servidor
socket.send(msg)


#Se recibe el mensaje del servidor
msg_in = socket.recv()


#Se muestra en patalla los datos y el resultado
print "Iteracion: %s, Enviado: %s, Recibido: %s" %(i,msg,msg_in)


#Si se llea a la iteraci&amp;oacute;n 999 se env&amp;iacute;a la letra q para finalizar
if i ==  999: socket.send("q")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```
El resultado del lado del cliente y del servidor es el siguiente:&lt;/p&gt;
&lt;p&gt;La figura muestra la ejecuci&amp;oacute;n del script servidor:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython1-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;La figura muestra la ejecuci&amp;oacute;n del script cliente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/tutorialdezeromqconpython1-2.png"/&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="ZeroMQ"></category></entry><entry><title>Sqlalchemy y Elixir: Abstracción de Bases de Datos en Python</title><link href="https://ecrespo.github.io/sqlalchemy-y-elixir-abstraccion-de-bases-de-datos-en-python.html" rel="alternate"></link><published>2012-04-08T08:30:00-05:30</published><updated>2012-04-08T08:30:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-04-08:/sqlalchemy-y-elixir-abstraccion-de-bases-de-datos-en-python.html</id><summary type="html">&lt;p&gt;En el art&amp;iacute;culo &lt;a href="https://www.seraph.to/sqlite-con-python.html"&gt;anterior&lt;/a&gt; se explica como usar &lt;code&gt;Sqlalchemy&lt;/code&gt; para acceder y manipular una base de datos abstrayendo el motor de la base de datos a utilizar.&lt;/p&gt;
&lt;p&gt;Existe una herramienta que facilita aun m&amp;aacute;s el trabajo de crear tablas, insertar, consultar o remover datos de dichas tablas; &lt;a href="http://elixir.ematia.de/trac/wiki"&gt;Elixir&lt;/a&gt; crea una …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el art&amp;iacute;culo &lt;a href="https://www.seraph.to/sqlite-con-python.html"&gt;anterior&lt;/a&gt; se explica como usar &lt;code&gt;Sqlalchemy&lt;/code&gt; para acceder y manipular una base de datos abstrayendo el motor de la base de datos a utilizar.&lt;/p&gt;
&lt;p&gt;Existe una herramienta que facilita aun m&amp;aacute;s el trabajo de crear tablas, insertar, consultar o remover datos de dichas tablas; &lt;a href="http://elixir.ematia.de/trac/wiki"&gt;Elixir&lt;/a&gt; crea una capa declarativa sobre &lt;code&gt;slqalchemy&lt;/code&gt; que permite usar la declaraci&amp;oacute;n de clases directamente a las tablas de entidad relaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Igual que en el ejemplo anterior se usar&amp;aacute; las tablas Grupos y Contactos, la diferencia ser&amp;aacute; que no ser&amp;aacute; necesario definir un campo id para cada tabla, adem&amp;aacute;s la forma de declarar cual campo es primary key o foreign key es con la declaraci&amp;oacute;n de uno a muchos o de muchos a uno.&lt;/p&gt;
&lt;p&gt;Este ejemplo crea las tablas, se realiza una inserci&amp;oacute;n de datos a ambas tablas, se realiza unas consultas de datos y al final se elimina y dato de la tabla Contactos y se muestra que ya se elimino de dicha tabla.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo python se muestra a continuaci&amp;oacute;n:&lt;br/&gt;
```&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;from elixir import metadata, Entity, Field
from elixir import Unicode, UnicodeText
from elixir import *&lt;/p&gt;
&lt;h1 id="se asocia el metadato con la base de datos sqlite"&gt;Se asocia el metadato con la base de datos sqlite&lt;/h1&gt;
&lt;p&gt;metadata.bind = "sqlite:///prueba.db"&lt;/p&gt;
&lt;h1 id="se activa el echo de los resultados de los comandos."&gt;Se activa el echo de los resultados de los comandos.&lt;/h1&gt;
&lt;p&gt;metadata.bind.echo = False&lt;/p&gt;
&lt;h1 id="se crea la clase grupos que hereda entity,"&gt;Se crea la clase Grupos que hereda Entity,&lt;/h1&gt;
&lt;h1 id="se crea los campos grupo (unicode 150),"&gt;se crea los campos grupo (unicode 150),&lt;/h1&gt;
&lt;h1 id="descripcion (unicode 200) y"&gt;descripcion (unicode 200) y&lt;/h1&gt;
&lt;h1 id="contactos que es una referencia uno a muchos de la"&gt;contactos que es una referencia uno a muchos de la&lt;/h1&gt;
&lt;h1 id="clase contactos."&gt;clase Contactos.&lt;/h1&gt;
&lt;p&gt;class Grupos(Entity):
grupo = Field(Unicode(150))
descripcion = Field(Unicode(200))
contactos = OneToMany('Contactos')&lt;/p&gt;
&lt;h1 id="devuelve la informacion de los grupos"&gt;Devuelve la informacion de los grupos&lt;/h1&gt;
&lt;p&gt;def &lt;strong&gt;repr&lt;/strong&gt;(self):
return '&lt;grupos "%s"="" (%s)=""&gt;' % (self.grupo,self.descripcion)&lt;/grupos&gt;&lt;/p&gt;
&lt;h1 id="se crea la clase contactos que hereda de entity."&gt;Se crea la clase contactos que hereda de Entity.&lt;/h1&gt;
&lt;h1 id="se tiene el campo nombre (unicode 100),"&gt;se tiene el campo nombre (unicode 100),&lt;/h1&gt;
&lt;h1 id="telefono (string 11) y el campo grupo muchos a uno de grupos."&gt;telefono (string 11) y el campo grupo muchos a uno de grupos.&lt;/h1&gt;
&lt;p&gt;class Contactos(Entity):
nombre = Field(Unicode(100))
telefono = Field(String(11))
grupo = ManyToOne('Grupos')&lt;/p&gt;
&lt;h1 id="devuelve la informacion de los contactos"&gt;Devuelve la informacion de los contactos&lt;/h1&gt;
&lt;p&gt;def &lt;strong&gt;repr&lt;/strong&gt;(self):
return '&lt;contactos- "%s"="" "%s",="" grupo:="" nombre:="" telefono:=""&gt;' % (self.nombre,self.telefono,self.grupo)&lt;/contactos-&gt;&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":&lt;/p&gt;
&lt;h1 id="se importa create_all, setup_all y session de elixir."&gt;Se importa create_all, setup_all y session de elixir.&lt;/h1&gt;
&lt;p&gt;from elixir import create_all, setup_all, session&lt;/p&gt;
&lt;h1 id="se crea las clases segun los modelos."&gt;Se crea las clases segun los modelos.&lt;/h1&gt;
&lt;p&gt;setup_all()&lt;/p&gt;
&lt;h1 id="se crea las tablas en la base de datos segun los modelos definidos"&gt;Se crea las tablas en la base de datos segun los modelos definidos&lt;/h1&gt;
&lt;p&gt;create_all()&lt;/p&gt;
&lt;h1 id="se insertan datos en la tabla grupos"&gt;Se insertan datos en la tabla grupos&lt;/h1&gt;
&lt;h1 id="en este caso se agregan ciudades del pais."&gt;En este caso se agregan ciudades del pais.&lt;/h1&gt;
&lt;p&gt;Guacara = Grupos(grupo='Guacara',descripcion='Ciudad del Estado Carabobo')
Valencia = Grupos(grupo="Valencia",descripcion="Capital del Estado Carabobo")
Barquisimeto = Grupos(grupo="Barquisimeto",descripcion="Capital del Estado Lara")
Caracas = Grupos(grupo="Caracas",descripcion="Distrito Capital")
Maracaibo = Grupos(grupo="Maracaibo",descripcion="Capital del Estado Zulia")
Merida = Grupos(grupo="Merida",descripcion="Capital del Estado Merida")
Barcelona = Grupos(grupo="Barcelona",descripcion="Capital de Anzoategui")
PuertoOrdaz = Grupos(grupo="Puerto Ordaz",descripcion="Ciudad del Estado Bolivar")
Barinas = Grupos(grupo="Barinas",descripcion="Capital del Estado Barinas")
Maracay = Grupos(grupo="Maracay",descripcion="Capital del Estado Aragua")
LosTeques = Grupos(grupo="Los Teques",descripcion="Capital del Estado Miranda")&lt;/p&gt;
&lt;h1 id="se hace el commit para insertar los datos de la tabla grupos en la base de datos."&gt;Se hace el commit para insertar los datos de la tabla grupos en la base de datos.&lt;/h1&gt;
&lt;p&gt;session.commit()&lt;/p&gt;
&lt;h1 id="se insertan datos en la tabla contactos, cada contacto hace referencia a un grupo de"&gt;Se insertan datos en la tabla contactos, cada contacto hace referencia a un grupo de&lt;/h1&gt;
&lt;h1 id="la tabla grupos."&gt;la tabla grupos.&lt;/h1&gt;
&lt;p&gt;Contactos(nombre='Ernesto Nadir Crespo Avila',telefono='04205873118',grupo=Guacara)
Contactos(nombre='Jhon Doe',telefono='04295333131',grupo=Valencia)
Contactos(nombre='Jane Doe',telefono='04399991919',grupo=Caracas)
Contactos(nombre='Pedro Perez',telefono='04596661617',grupo=Caracas)
Contactos(nombre='Maria Perez',telefono='04194445445',grupo=Barquisimeto)&lt;/p&gt;
&lt;h1 id="se hace el commit para insertar los datos en la tabla contactos en la base de datos."&gt;Se hace el commit para insertar los datos en la tabla contactos en la base de datos.&lt;/h1&gt;
&lt;p&gt;session.commit()&lt;/p&gt;
&lt;h1 id="se realiza una consulta buscando los contactos del grupo caracas"&gt;Se realiza una consulta buscando los contactos del grupo Caracas&lt;/h1&gt;
&lt;h1 id="y se presentan en pantalla"&gt;Y se presentan en pantalla&lt;/h1&gt;
&lt;p&gt;registros = Contactos.query.filter(Contactos.grupo == Caracas).all()
print "Contactos de Caracas"
for registro in registros:
print "-" * 20
print registro.nombre
print registro.telefono
print registro.grupo
print "&lt;em&gt;-" &lt;/em&gt;20&lt;/p&gt;
&lt;h1 id="se muestra en pantalla todos los contactos."&gt;Se muestra en pantalla todos los contactos.&lt;/h1&gt;
&lt;p&gt;registros = Contactos.query.all()
print "Todos los Contactos"
for registro in registros:
print "-" * 20
print registro.nombre
print registro.telefono
print registro.grupo
print "&lt;em&gt;-" &lt;/em&gt;20&lt;/p&gt;
&lt;h1 id="se muestra en pantalla todos los grupos, con sus contactos"&gt;Se muestra en pantalla todos los grupos, con sus contactos&lt;/h1&gt;
&lt;h1 id="asociados."&gt;asociados.&lt;/h1&gt;
&lt;p&gt;registros = Grupos.query.all()
for registro in registros:
print "-" * 20
print registro.grupo
print registro.descripcion
print registro.contactos
print "&lt;em&gt;-" &lt;/em&gt;20&lt;/p&gt;
&lt;h1 id="se consulta la tabla contactos buscando al usuario maria perez"&gt;Se consulta la tabla contactos buscando al usuario Maria Perez&lt;/h1&gt;
&lt;h1 id="se muestra en pantalla la informacion de ese contacto"&gt;Se muestra en pantalla la informacion de ese contacto&lt;/h1&gt;
&lt;p&gt;consulta = Contactos.query.filter_by(nombre=u'Maria Perez')
registro = consulta.first()
print "%s , %s :(%s)" % (registro.nombre,registro.telefono, registro.grupo)&lt;/p&gt;
&lt;h1 id="se borra ese contacto de la tabla contactos y se actualiza la base de datos."&gt;Se borra ese contacto de la tabla contactos y se actualiza la base de datos.&lt;/h1&gt;
&lt;p&gt;registro.delete()
session.commit()&lt;/p&gt;
&lt;h1 id="se muestra en pantalla todos los contactos"&gt;Se muestra en pantalla todos los contactos&lt;/h1&gt;
&lt;h1 id="para hacer notar que ya el contacto maria perez no existe"&gt;para hacer notar que ya el contacto Maria Perez no existe&lt;/h1&gt;
&lt;h1 id="en la base de datos."&gt;en la base de datos.&lt;/h1&gt;
&lt;p&gt;registros = Contactos.query.all()
print "Contactos, luego de eliminar a Maria Perez"
for registro in registros:
print "-" * 20
print registro.nombre
print registro.telefono
print registro.grupo
```&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo SQL generado a partir del modelo es el siguiente:
```
CREATE TABLE __main___grupos (
id INTEGER NOT NULL, 
grupo VARCHAR(150), 
descripcion VARCHAR(200), 
PRIMARY KEY (id)
)&lt;/p&gt;
&lt;p&gt;CREATE TABLE __main&lt;strong&gt;&lt;em&gt;contactos (
id INTEGER NOT NULL, 
nombre VARCHAR(100), 
telefono VARCHAR(11), 
grupo&lt;/em&gt;id INTEGER, 
PRIMARY KEY (id), 
CONSTRAINT &lt;/strong&gt;main&lt;strong&gt;&lt;em&gt;contactos&lt;/em&gt;grupo_id_fk FOREIGN KEY(grupo_id) REFERENCES &lt;/strong&gt;main___grupos (id)
)
&lt;code&gt;``
Con respecto al modelo el c&amp;oacute;digo&lt;/code&gt;SQL&lt;code&gt;si tiene los campos&lt;/code&gt;id&lt;code&gt;como&lt;/code&gt;PRIMARY KEY&lt;code&gt;en cada tabla y se define cuales son&lt;/code&gt;FOREIGN KEY&lt;code&gt;, gracias a&lt;/code&gt;Elixir&lt;code&gt;se ahorra trabajo en la definici&amp;oacute;n de campos y al usar&lt;/code&gt;OneToMany&lt;code&gt;o&lt;/code&gt;ManyToOne` se est&amp;aacute; definiendo quienes son primary o foreign key.&lt;/p&gt;
&lt;p&gt;El resultado del script se muestra a continuaci&amp;oacute;n:&lt;br/&gt;
```
Contactos de Caracas&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Jane Doe
04399991919
&lt;grupos "caracas"="" (distrito="" capital)=""&gt;&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Pedro Perez
04596661617
&lt;grupos "caracas"="" (distrito="" capital)=""&gt;
&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-
Todos los Contactos&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Ernesto Nadir Crespo Avila
04205873118
&lt;grupos "guacara"="" (ciudad="" carabobo)="" del="" estado=""&gt;&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Jhon Doe
04295333131
&lt;grupos "valencia"="" (capital="" carabobo)="" del="" estado=""&gt;&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Jane Doe
04399991919
&lt;grupos "caracas"="" (distrito="" capital)=""&gt;&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Pedro Perez
04596661617
&lt;grupos "caracas"="" (distrito="" capital)=""&gt;&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Maria Perez
04194445445
&lt;grupos "barquisimeto"="" (capital="" del="" estado="" lara)=""&gt;
&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Guacara
Ciudad del Estado Carabobo
[&lt;contactos- "04205873118",="" "&lt;grupos="" "ernesto="" "guacara"="" (ciudad="" avila",="" carabobo)="" crespo="" del="" estado="" grupo:="" nadir="" nombre:="" telefono:=""&gt;"&amp;gt;]&lt;/contactos-&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Valencia
Capital del Estado Carabobo
[&lt;contactos- "04295333131",="" "&lt;grupos="" "jhon="" "valencia"="" (capital="" carabobo)="" del="" doe",="" estado="" grupo:="" nombre:="" telefono:=""&gt;"&amp;gt;]&lt;/contactos-&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Barquisimeto
Capital del Estado Lara
[&lt;contactos- "04194445445",="" "&lt;grupos="" "barquisimeto"="" "maria="" (capital="" del="" estado="" grupo:="" lara)="" nombre:="" perez",="" telefono:=""&gt;"&amp;gt;]&lt;/contactos-&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Caracas
Distrito Capital
[&lt;contactos- "04399991919",="" "&lt;grupos="" "caracas"="" "jane="" (distrito="" capital)="" doe",="" grupo:="" nombre:="" telefono:=""&gt;"&amp;gt;,&lt;br/&gt;
&lt;contactos- "04596661617",="" "&lt;grupos="" "caracas"="" "pedro="" (distrito="" capital)="" grupo:="" nombre:="" perez",="" telefono:=""&gt;"&amp;gt;]&lt;/contactos-&gt;&lt;/contactos-&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Maracaibo
Capital del Estado Zulia
[]&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Merida
Capital del Estado Merida
[]&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Barcelona
Capital de Anzoategui
[]&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Puerto Ordaz
Ciudad del Estado Bolivar
[]&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Barinas
Capital del Estado Barinas
[]&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Maracay
Capital del Estado Aragua
[]&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Los Teques
Capital del Estado Miranda
[]
&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-&lt;em&gt;-&lt;/em&gt;-
Maria Perez , 04194445445 :(&lt;grupos "barquisimeto"="" (capital="" del="" estado="" lara)=""&gt;)
Contactos, luego de eliminar a Maria Perez&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Ernesto Nadir Crespo Avila
04205873118
&lt;grupos "guacara"="" (ciudad="" carabobo)="" del="" estado=""&gt;&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Jhon Doe
04295333131
&lt;grupos "valencia"="" (capital="" carabobo)="" del="" estado=""&gt;&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Jane Doe
04399991919
&lt;grupos "caracas"="" (distrito="" capital)=""&gt;&lt;/grupos&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Pedro Perez
04596661617
&lt;grupos "caracas"="" (distrito="" capital)=""&gt;
```&lt;/grupos&gt;&lt;/p&gt;
&lt;p&gt;Las herramientas &lt;code&gt;sqlalchemy&lt;/code&gt; y &lt;code&gt;Elixir&lt;/code&gt; facilitan el trabajo de abstraer el motor de base de datos y la creaci&amp;oacute;n de las tablas con sus respectivos campos en dichas base de datos.  De est&amp;aacute; forma se puede crear aplicaciones donde se puede facilitar el uso de varios motores de base de datos realizando cambios m&amp;iacute;nimos en la aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Abstracción del motor de Base de Datos con el ORM Sqlalchemy y python</title><link href="https://ecrespo.github.io/abstraccion-del-motor-de-base-de-datos-con-el-orm-sqlalchemy-y-python.html" rel="alternate"></link><published>2012-04-07T09:00:00-05:30</published><updated>2012-04-07T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-04-07:/abstraccion-del-motor-de-base-de-datos-con-el-orm-sqlalchemy-y-python.html</id><summary type="html">&lt;p&gt;&lt;code&gt;ORM&lt;/code&gt; o Mapeo de Objeto Relacional es una t&amp;eacute;cnica de programaci&amp;oacute;n para convertir datos entre el sistema de tipos utilizando lenguajes de programaci&amp;oacute;n orientado a objetos y el utilizado en una Base de Datos Relacional (tomado de la &lt;a href="https://es.wikipedia.org/wiki/ORM"&gt;wikipedia&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Sqlalchemy&lt;/code&gt; es una herramienta &lt;code&gt;ORM&lt;/code&gt; para python que da flexibilidad en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;ORM&lt;/code&gt; o Mapeo de Objeto Relacional es una t&amp;eacute;cnica de programaci&amp;oacute;n para convertir datos entre el sistema de tipos utilizando lenguajes de programaci&amp;oacute;n orientado a objetos y el utilizado en una Base de Datos Relacional (tomado de la &lt;a href="https://es.wikipedia.org/wiki/ORM"&gt;wikipedia&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Sqlalchemy&lt;/code&gt; es una herramienta &lt;code&gt;ORM&lt;/code&gt; para python que da flexibilidad en el desarrollo con SQL.&lt;/p&gt;
&lt;p&gt;Tomando el art&amp;iacute;culo anterior de &lt;a href="https://ecrespo.github.io/sqlite-con-python.html"&gt;sqlite con python&lt;/a&gt;, se cambiar&amp;aacute; el m&amp;oacute;dulo de &lt;code&gt;sqlite3&lt;/code&gt; para python por el &lt;code&gt;ORM Sqlalchemy&lt;/code&gt;, de esa forma se abstrae las distintas instrucciones existentes para diferentes motores de base de datos como &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;sqlite&lt;/code&gt; y se puede as&amp;iacute; utilizar cualquier motor de base de datos realizando m&amp;iacute;nimos cambios en el programa.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo donde se muestra el uso de &lt;code&gt;sqlalchemy&lt;/code&gt; en una base de datos &lt;code&gt;sqlite3&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa sqlalchemy"&gt;Se importa sqlalchemy&lt;/h1&gt;
&lt;p&gt;from sqlalchemy import *&lt;/p&gt;
&lt;h1 id="se crea la instancia del motor de la base de datos y se asocia con un"&gt;Se crea la instancia del motor de la base de datos y se asocia con un&lt;/h1&gt;
&lt;h1 id="archivo"&gt;archivo&lt;/h1&gt;
&lt;p&gt;db = create_engine('sqlite:///tutorial.db')&lt;/p&gt;
&lt;h1 id="se coloca la base de datos en modo no mostrar resultados"&gt;se coloca la base de datos en modo no mostrar resultados&lt;/h1&gt;
&lt;h1 id="de las instrucciones en pantalla."&gt;de las instrucciones en pantalla.&lt;/h1&gt;
&lt;p&gt;db.echo = False&lt;/p&gt;
&lt;h1 id="se asocia el archivo de la base de datos a la instancia de metadatos."&gt;Se asocia el archivo de la base de datos a la instancia de metadatos.&lt;/h1&gt;
&lt;p&gt;metadata = MetaData(db)&lt;/p&gt;
&lt;h1 id="se crea la tabla contactos tal cual el mismo ejemplo de"&gt;Se crea la tabla contactos tal cual el mismo ejemplo de&lt;/h1&gt;
&lt;h1 id="sqlite."&gt;sqlite.&lt;/h1&gt;
&lt;p&gt;contactos = Table(
'contactos',metadata,
Column('id',Integer,primary_key=True),
Column('nombre', Unicode(100)),
Column('telefono',String(11)),
Column('grupo_id', ForeignKey('grupos.id')))&lt;/p&gt;
&lt;h1 id="se crea la tabla de grupos tal cual el mismo ejemplo de"&gt;Se crea la tabla de grupos tal cual el mismo ejemplo de&lt;/h1&gt;
&lt;h1 id="sqlite"&gt;sqlite&lt;/h1&gt;
&lt;p&gt;grupos = Table(
'grupos',metadata,
Column('id',Integer,primary_key=True),
Column('grupo',Unicode(300)),
Column('descripcion',Unicode(500)))&lt;/p&gt;
&lt;h1 id="se crea todas las tablas."&gt;Se crea todas las tablas.&lt;/h1&gt;
&lt;p&gt;metadata.create_all()&lt;/p&gt;
&lt;h1 id="se inserta datos en la tabla grupos."&gt;Se inserta datos en la tabla grupos.&lt;/h1&gt;
&lt;p&gt;i = grupos.insert()
i.execute(grupo='Guacara',descripcion='Ciudad de Carabobo')
i.execute({'grupo':'Valencia','descripcion':'Capital de Carabobo'},
{'grupo':'Maracay','descripcion':'Capital de Aragua'},
{'grupo':'Merida','descripcion':'Capital de Merida'})&lt;/p&gt;
&lt;h1 id="se inserta datos en la tabla contactos"&gt;Se inserta datos en la tabla contactos&lt;/h1&gt;
&lt;p&gt;u = contactos.insert()
u.execute(nombre='Ernesto Crespo',telefono='04155673029',grupo_id=1)
u.execute(nombre='Pedro Perez',telefono='0295212223',grupo_id=2)
u.execute(nombre='Jhon Doe',telefono='04184488484',grupo_id=2)
u.execute(nombre='Jane Doe',telefono='04184488482',grupo_id=1)
u.execute(nombre='Pepito de los palotes',telefono='04184588484',grupo_id=3)&lt;/p&gt;
&lt;h1 id="se hace consulta de la tabla contactos"&gt;Se hace consulta de la tabla contactos&lt;/h1&gt;
&lt;p&gt;s = contactos.select()
rs = s.execute()&lt;/p&gt;
&lt;h1 id="se hace consultas de la tabla grupos."&gt;Se hace consultas de la tabla grupos.&lt;/h1&gt;
&lt;p&gt;t = grupos.select()
ts = t.execute()&lt;/p&gt;
&lt;h1 id="se muestra la tabla grupos"&gt;Se muestra la tabla grupos&lt;/h1&gt;
&lt;p&gt;print "GRUPOS"
print "-------------------------------------"
for fila in ts:
print "id: %s,Grupo: %s, Descripcion:%s" %(fila[0],fila[1],fila[2])
print "--------------------------------------"&lt;/p&gt;
&lt;p&gt;del fila&lt;/p&gt;
&lt;h1 id="se muestra la tabla contactos."&gt;Se muestra la tabla contactos.&lt;/h1&gt;
&lt;p&gt;print "CONTACTOS"
print "-------------------------------------"
for fila in rs:
print "Nombre: %s, telefono %s, Grupo %s" %(fila[1],fila[2],fila[3]) 
print "--------------------------------------"&lt;/p&gt;
&lt;h1 id="se borra la fila del id 1 de la tabla grupos"&gt;Se borra la fila del id 1 de la tabla grupos&lt;/h1&gt;
&lt;p&gt;t = grupos.delete(text("id=1"))
t.execute()&lt;/p&gt;
&lt;h1 id="se realiza una consulta de la tabla grupos"&gt;Se realiza una consulta de la tabla grupos&lt;/h1&gt;
&lt;p&gt;q = grupos.select()
qs = q.execute()&lt;/p&gt;
&lt;h1 id="se muestra la tabla grupos,"&gt;Se muestra la tabla grupos,&lt;/h1&gt;
&lt;h1 id="ahora no tiene la fila del grupo guacara."&gt;ahora no tiene la fila del grupo Guacara.&lt;/h1&gt;
&lt;p&gt;print "GRUPOS"
print "-------------------------------------"
for fila in qs:
print "id: %s,Grupo: %s, Descripcion:%s" %(fila[0],fila[1],fila[2])
print "--------------------------------------"&lt;/p&gt;
&lt;h1 id="se muestra los contactos del grupo 2."&gt;Se muestra los contactos del grupo 2.&lt;/h1&gt;
&lt;p&gt;print "Mostrar contactos del grupo 2"
del q
del qs
q = contactos.select(text("grupo_id=2"))
qs = q.execute()
print "-------------------------------------"
for fila in qs:
print "Nombre: %s, telefono %s, Grupo %s" %(fila[1],fila[2],fila[3]) 
print "--------------------------------------"
```    &lt;/p&gt;
&lt;p&gt;El resultado de ejecutar el script se muestra a continuaci&amp;oacute;n:&lt;br/&gt;
```
GRUPOS&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;id: 1,Grupo: Guacara, Descripcion:Ciudad de Carabobo
id: 2,Grupo: Valencia, Descripcion:Capital de Carabobo
id: 3,Grupo: Maracay, Descripcion:Capital de Aragua
id: 4,Grupo: Merida, Descripcion:Capital de Merida&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="contactos"&gt;CONTACTOS&lt;/h2&gt;
&lt;p&gt;Nombre: Ernesto Crespo, telefono 04155673029, Grupo 1
Nombre: Pedro Perez, telefono 0295212223, Grupo 2
Nombre: Jhon Doe, telefono 04184488484, Grupo 2
Nombre: Jane Doe, telefono 04184488482, Grupo 1
Nombre: Pepito de los palotes, telefono 04184588484, Grupo 3&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="grupos"&gt;GRUPOS&lt;/h2&gt;
&lt;p&gt;id: 2,Grupo: Valencia, Descripcion:Capital de Carabobo
id: 3,Grupo: Maracay, Descripcion:Capital de Aragua
id: 4,Grupo: Merida, Descripcion:Capital de Merida&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="mostrar contactos del grupo 2"&gt;Mostrar contactos del grupo 2&lt;/h2&gt;
&lt;p&gt;Nombre: Pedro Perez, telefono 0295212223, Grupo 2
Nombre: Jhon Doe, telefono 04184488484, Grupo 2&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;De est&amp;aacute; manera se facilita el trabajo de acceder a una base de datos sin estar usando directamente su API y facilita tambi&amp;eacute;n poder utilizar cualquier motor de base de datos en la aplicaci&amp;oacute;n que se est&amp;eacute; desarrollando.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Simulación de circuitos eléctricos con python eispice</title><link href="https://ecrespo.github.io/simulacion-de-circuitos-electricos-con-python-eispice.html" rel="alternate"></link><published>2012-04-06T10:00:00-05:30</published><updated>2012-04-06T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-04-06:/simulacion-de-circuitos-electricos-con-python-eispice.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Eispice&lt;/code&gt; es un simulador de circuitos clone del Motor de simulaci&amp;oacute;n de &lt;code&gt;Berkley Spice 3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Lo interesante es que se puede usar el lenguaje de programaci&amp;oacute;n Python para realizar simulaci&amp;oacute;n de circuitos.&lt;/p&gt;
&lt;p&gt;Tiene documentaci&amp;oacute;n de distintos &lt;a href="http://www.thedigitalmachine.net/eispice.examples.html"&gt;ejemplos&lt;/a&gt; y un &lt;a href="https://www.thedigitalmachine.net/eispice.manual.html"&gt;manual&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalarlo se descarga la fuente del &lt;code&gt;eispice&lt;/code&gt;. Se descomprime …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Eispice&lt;/code&gt; es un simulador de circuitos clone del Motor de simulaci&amp;oacute;n de &lt;code&gt;Berkley Spice 3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Lo interesante es que se puede usar el lenguaje de programaci&amp;oacute;n Python para realizar simulaci&amp;oacute;n de circuitos.&lt;/p&gt;
&lt;p&gt;Tiene documentaci&amp;oacute;n de distintos &lt;a href="http://www.thedigitalmachine.net/eispice.examples.html"&gt;ejemplos&lt;/a&gt; y un &lt;a href="https://www.thedigitalmachine.net/eispice.manual.html"&gt;manual&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalarlo se descarga la fuente del &lt;code&gt;eispice&lt;/code&gt;. Se descomprime y luego se compila e instala:&lt;br/&gt;
&lt;code&gt;tar -xvjf eispice-0.11.6.tar.bz2
cd eispice-0.11.6/
sudo python setup.py install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Un ejemplo sencillo muestra un circuito RC con una fuente sinusoidal, se muestra la gr&amp;aacute;fica de la tensi&amp;oacute;n y la corriente.&lt;/p&gt;
&lt;p&gt;La fuente estar&amp;aacute; entre el nodo de tierra y el nodo 1, la resistencia entre el nodo 1 y el nodo 2, el condensador estar&amp;aacute; entr el nodo 2 y el nodo tierra.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo python de la definici&amp;oacute;n del circuito:&lt;br/&gt;
```&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar modulo eispice"&gt;Importar modulo eispice&lt;/h1&gt;
&lt;p&gt;import eispice&lt;/p&gt;
&lt;h1 id="se crea el circuito con el titulo"&gt;Se crea el circuito con el titulo&lt;/h1&gt;
&lt;p&gt;cct = eispice.Circuit("Prueba de circuito RC")&lt;/p&gt;
&lt;h1 id="se crea la fuente de tension, con valor, se define un"&gt;Se crea la fuente de tension, con valor, se define un&lt;/h1&gt;
&lt;h1 id="valor dc de 10, y una segnal senosoidal de valor offset, amplitud,"&gt;valor DC de 10, y una segnal senosoidal de valor offset, amplitud,&lt;/h1&gt;
&lt;h1 id="frecuencia, retardo, amortiguacion."&gt;frecuencia, retardo, amortiguacion.&lt;/h1&gt;
&lt;p&gt;cct.Vx = eispice.V(1, eispice.GND,10,eispice.Sin(10,10,'10M'))&lt;/p&gt;
&lt;h1 id="resistencia de 20 k ohm."&gt;Resistencia de 20 K ohm.&lt;/h1&gt;
&lt;p&gt;cct.R1 = eispice.R(1,2,'20kOhm')&lt;/p&gt;
&lt;h1 id="capacitor de 10 nano faradio."&gt;Capacitor de 10 nano faradio.&lt;/h1&gt;
&lt;p&gt;cct.C1 = eispice.C(2,eispice.GND, '10n')&lt;/p&gt;
&lt;h1 id="se ejecuta el analisis definiendo el tiempo de analisis."&gt;Se ejecuta el analisis definiendo el tiempo de analisis.&lt;/h1&gt;
&lt;p&gt;cct.tran('0.5n', '100n')&lt;/p&gt;
&lt;h1 id="se captura los resultados"&gt;Se captura los resultados&lt;/h1&gt;
&lt;p&gt;resultados = cct.results
print "Se muestra los resultados"
print resultados&lt;/p&gt;
&lt;h1 id="se crea la grafica"&gt;Se crea la grafica&lt;/h1&gt;
&lt;p&gt;eispice.plot(cct)
```&lt;/p&gt;
&lt;p&gt;El resultado de la ejecuci&amp;oacute;n y luego las gr&amp;aacute;ficas:
Se muestran los resultados:&lt;br/&gt;
&lt;code&gt;[[  0.00000000e+00   1.00000000e+01  -1.35525272e-20   1.00000000e+01]
 [  5.00000000e-12   1.00031416e+01  -1.57079626e-07   1.00000000e+01]
 [  5.50000000e-12   1.00034558e+01  -1.72787588e-07   1.00000000e+01]
 [  6.50000000e-12   1.00040841e+01  -2.04203512e-07   1.00000000e+01]
 [  8.50000000e-12   1.00053407e+01  -2.67035355e-07   1.00000000e+01]
 [  1.25000000e-11   1.00078540e+01  -3.92699027e-07   1.00000000e+01]
 [  2.05000000e-11   1.00128805e+01  -6.44026281e-07   1.00000000e+01]
 [  3.65000000e-11   1.00229336e+01  -1.14668021e-06   1.00000000e+01]
 [  6.85000000e-11   1.00430397e+01  -2.15198395e-06   1.00000000e+01]
 [  1.32500000e-10   1.00832512e+01  -4.16256080e-06   1.00000000e+01]
 [  2.60500000e-10   1.01636697e+01  -8.18347813e-06   1.00000001e+01]
 [  5.16500000e-10   1.03244696e+01  -1.62234571e-05   1.00000004e+01]
 [  1.01650000e-09   1.06382517e+01  -3.19125016e-05   1.00000016e+01]
 [  1.51650000e-09   1.09514039e+01  -4.75700131e-05   1.00000036e+01]
 [  2.01650000e-09   1.12636172e+01  -6.31805394e-05   1.00000064e+01]
 [  2.51650000e-09   1.15745834e+01  -7.87286750e-05   1.00000099e+01]
 [  3.01650000e-09   1.18839958e+01  -9.41990756e-05   1.00000142e+01]
 [  3.51650000e-09   1.21915488e+01  -1.09576474e-04   1.00000193e+01]
 [  4.01650000e-09   1.24969391e+01  -1.24845694e-04   1.00000252e+01]
 [  4.51650000e-09   1.27998652e+01  -1.39991667e-04   1.00000318e+01]
 [  5.01650000e-09   1.31000281e+01  -1.54999446e-04   1.00000392e+01]
 [  5.51650000e-09   1.33971317e+01  -1.69854221e-04   1.00000473e+01]
 [  6.01650000e-09   1.36908828e+01  -1.84541330e-04   1.00000562e+01]
 [  6.51650000e-09   1.39809914e+01  -1.99046280e-04   1.00000658e+01]
 [  7.01650000e-09   1.42671712e+01  -2.13354756e-04   1.00000761e+01]
 [  7.51650000e-09   1.45491398e+01  -2.27452637e-04   1.00000871e+01]
 [  8.01650000e-09   1.48266190e+01  -2.41326011e-04   1.00000988e+01]
 [  8.51650000e-09   1.50993350e+01  -2.54961186e-04   1.00001112e+01]
 [  9.01650000e-09   1.53670184e+01  -2.68344706e-04   1.00001243e+01]
 [  9.51650000e-09   1.56294053e+01  -2.81463363e-04   1.00001381e+01]
 [  1.00165000e-08   1.58862366e+01  -2.94304210e-04   1.00001524e+01]
 [  1.05165000e-08   1.61372590e+01  -3.06854575e-04   1.00001675e+01]
 [  1.10165000e-08   1.63822246e+01  -3.19102073e-04   1.00001831e+01]
 [  1.15165000e-08   1.66208917e+01  -3.31034616e-04   1.00001994e+01]
 [  1.20165000e-08   1.68530248e+01  -3.42640428e-04   1.00002162e+01]
 [  1.25165000e-08   1.70783948e+01  -3.53908057e-04   1.00002336e+01]
 [  1.30165000e-08   1.72967792e+01  -3.64826381e-04   1.00002516e+01]
 [  1.35165000e-08   1.75079627e+01  -3.75384627e-04   1.00002701e+01]
 [  1.40165000e-08   1.77117366e+01  -3.85572374e-04   1.00002891e+01]
 [  1.45165000e-08   1.79079000e+01  -3.95379569e-04   1.00003087e+01]
 [  1.50165000e-08   1.80962593e+01  -4.04796533e-04   1.00003287e+01]
 [  1.55165000e-08   1.82766286e+01  -4.13813972e-04   1.00003491e+01]
 [  1.60165000e-08   1.84488298e+01  -4.22422987e-04   1.00003700e+01]
 [  1.65165000e-08   1.86126930e+01  -4.30615082e-04   1.00003914e+01]
 [  1.70165000e-08   1.87680566e+01  -4.38382173e-04   1.00004131e+01]
 [  1.75165000e-08   1.89147671e+01  -4.45716595e-04   1.00004352e+01]
 [  1.80165000e-08   1.90526798e+01  -4.52611109e-04   1.00004576e+01]
 [  1.85165000e-08   1.91816587e+01  -4.59058911e-04   1.00004804e+01]
 [  1.90165000e-08   1.93015763e+01  -4.65053638e-04   1.00005035e+01]
 [  1.95165000e-08   1.94123144e+01  -4.70589374e-04   1.00005269e+01]
 [  2.00165000e-08   1.95137637e+01  -4.75660656e-04   1.00005506e+01]
 [  2.05165000e-08   1.96058241e+01  -4.80262479e-04   1.00005745e+01]
 [  2.10165000e-08   1.96884046e+01  -4.84390302e-04   1.00005986e+01]
 [  2.15165000e-08   1.97614239e+01  -4.88040050e-04   1.00006229e+01]
 [  2.20165000e-08   1.98248099e+01  -4.91208123e-04   1.00006474e+01]
 [  2.25165000e-08   1.98784999e+01  -4.93891394e-04   1.00006720e+01]
 [  2.30165000e-08   1.99224410e+01  -4.96087214e-04   1.00006968e+01]
 [  2.35165000e-08   1.99565899e+01  -4.97793416e-04   1.00007216e+01]
 [  2.40165000e-08   1.99809129e+01  -4.99008317e-04   1.00007465e+01]
 [  2.45165000e-08   1.99953859e+01  -4.99730718e-04   1.00007715e+01]
 [  2.50165000e-08   1.99999946e+01  -4.99959906e-04   1.00007965e+01]
 [  2.55165000e-08   1.99947346e+01  -4.99695655e-04   1.00008215e+01]
 [  2.55665000e-08   1.99936659e+01  -4.99642097e-04   1.00008240e+01]
 [  2.56665000e-08   1.99912327e+01  -4.99520185e-04   1.00008290e+01]
 [  2.58665000e-08   1.99851830e+01  -4.99217203e-04   1.00008390e+01]
 [  2.62665000e-08   1.99683546e+01  -4.98374783e-04   1.00008589e+01]
 [  2.67665000e-08   1.99384666e+01  -4.96879139e-04   1.00008838e+01]
 [  2.72665000e-08   1.98987705e+01  -4.94893095e-04   1.00009086e+01]
 [  2.77665000e-08   1.98493055e+01  -4.92418613e-04   1.00009333e+01]
 [  2.82665000e-08   1.97901205e+01  -4.89458134e-04   1.00009578e+01]
 [  2.87665000e-08   1.97212738e+01  -4.86014579e-04   1.00009822e+01]
 [  2.92665000e-08   1.96428334e+01  -4.82091348e-04   1.00010064e+01]
 [  2.97665000e-08   1.95548766e+01  -4.77692311e-04   1.00010304e+01]
 [  3.02665000e-08   1.94574904e+01  -4.72821810e-04   1.00010542e+01]
 [  3.07665000e-08   1.93507707e+01  -4.67484652e-04   1.00010777e+01]
 [  3.12665000e-08   1.92348230e+01  -4.61686104e-04   1.00011009e+01]
 [  3.17665000e-08   1.91097616e+01  -4.55431888e-04   1.00011238e+01]
 [  3.22665000e-08   1.89757100e+01  -4.48728177e-04   1.00011464e+01]
 [  3.27665000e-08   1.88328004e+01  -4.41581585e-04   1.00011687e+01]
 [  3.32665000e-08   1.86811739e+01  -4.33999167e-04   1.00011906e+01]
 [  3.37665000e-08   1.85209802e+01  -4.25988405e-04   1.00012121e+01]
 [  3.42665000e-08   1.83523773e+01  -4.17557205e-04   1.00012332e+01]
 [  3.47665000e-08   1.81755316e+01  -4.08713886e-04   1.00012538e+01]
 [  3.52665000e-08   1.79906176e+01  -3.99467177e-04   1.00012740e+01]
 [  3.57665000e-08   1.77978178e+01  -3.89826203e-04   1.00012938e+01]
 [  3.62665000e-08   1.75973226e+01  -3.79800478e-04   1.00013130e+01]
 [  3.67665000e-08   1.73893297e+01  -3.69399897e-04   1.00013317e+01]
 [  3.72665000e-08   1.71740444e+01  -3.58634724e-04   1.00013499e+01]
 [  3.77665000e-08   1.69516792e+01  -3.47515582e-04   1.00013676e+01]
 [  3.82665000e-08   1.67224536e+01  -3.36053445e-04   1.00013847e+01]
 [  3.87665000e-08   1.64865937e+01  -3.24259624e-04   1.00014012e+01]
 [  3.92665000e-08   1.62443323e+01  -3.12145759e-04   1.00014171e+01]
 [  3.97665000e-08   1.59959085e+01  -2.99723805e-04   1.00014324e+01]
 [  4.02665000e-08   1.57415675e+01  -2.87006020e-04   1.00014471e+01]
 [  4.07665000e-08   1.54815602e+01  -2.74004956e-04   1.00014611e+01]
 [  4.12665000e-08   1.52161433e+01  -2.60733442e-04   1.00014745e+01]
 [  4.17665000e-08   1.49455787e+01  -2.47204577e-04   1.00014872e+01]
 [  4.22665000e-08   1.46701334e+01  -2.33431712e-04   1.00014992e+01]
 [  4.27665000e-08   1.43900793e+01  -2.19428438e-04   1.00015105e+01]
 [  4.32665000e-08   1.41056926e+01  -2.05208576e-04   1.00015211e+01]
 [  4.37665000e-08   1.38172542e+01  -1.90786158e-04   1.00015310e+01]
 [  4.42665000e-08   1.35250486e+01  -1.76175418e-04   1.00015402e+01]
 [  4.47665000e-08   1.32293641e+01  -1.61390776e-04   1.00015486e+01]
 [  4.52665000e-08   1.29304927e+01  -1.46446820e-04   1.00015563e+01]
 [  4.57665000e-08   1.26287293e+01  -1.31358300e-04   1.00015633e+01]
 [  4.62665000e-08   1.23243716e+01  -1.16140106e-04   1.00015695e+01]
 [  4.67665000e-08   1.20177200e+01  -1.00807257e-04   1.00015749e+01]
 [  4.72665000e-08   1.17090772e+01  -8.53748836e-05   1.00015795e+01]
 [  4.77665000e-08   1.13987477e+01  -6.98582163e-05   1.00015834e+01]
 [  4.82665000e-08   1.10870379e+01  -5.42725681e-05   1.00015865e+01]
 [  4.87665000e-08   1.07742552e+01  -3.86333202e-05   1.00015888e+01]
 [  4.92665000e-08   1.04607085e+01  -2.29559067e-05   1.00015904e+01]
 [  4.97665000e-08   1.01467071e+01  -7.25579914e-06   1.00015911e+01]
 [  5.02665000e-08   9.83256094e+00   8.45150824e-06   1.00015911e+01]
 [  5.07665000e-08   9.51858000e+00   2.41505143e-05   1.00015903e+01]
 [  5.12665000e-08   9.20507417e+00   3.98257259e-05   1.00015887e+01]
 [  5.17665000e-08   8.89235283e+00   5.54616736e-05   1.00015863e+01]
 [  5.22665000e-08   8.58072461e+00   7.10429265e-05   1.00015831e+01]
 [  5.27665000e-08   8.27049704e+00   8.65541080e-05   1.00015792e+01]
 [  5.32665000e-08   7.96197628e+00   1.01979910e-04   1.00015745e+01]
 [  5.37665000e-08   7.65546681e+00   1.17305110e-04   1.00015690e+01]
 [  5.42665000e-08   7.35127111e+00   1.32514583e-04   1.00015628e+01]
 [  5.47665000e-08   7.04968938e+00   1.47593319e-04   1.00015558e+01]
 [  5.52665000e-08   6.75101925e+00   1.62526438e-04   1.00015480e+01]
 [  5.57665000e-08   6.45555548e+00   1.77299202e-04   1.00015395e+01]
 [  5.62665000e-08   6.16358964e+00   1.91897032e-04   1.00015303e+01]
 [  5.67665000e-08   5.87540988e+00   2.06305522e-04   1.00015203e+01]
 [  5.72665000e-08   5.59130059e+00   2.20510453e-04   1.00015097e+01]
 [  5.77665000e-08   5.31154215e+00   2.34497806e-04   1.00014983e+01]
 [  5.82665000e-08   5.03641065e+00   2.48253778e-04   1.00014862e+01]
 [  5.87665000e-08   4.76617762e+00   2.61764792e-04   1.00014735e+01]
 [  5.92665000e-08   4.50110974e+00   2.75017515e-04   1.00014600e+01]
 [  5.97665000e-08   4.24146860e+00   2.87998868e-04   1.00014460e+01]
 [  6.02665000e-08   3.98751044e+00   3.00696040e-04   1.00014312e+01]
 [  6.07665000e-08   3.73948588e+00   3.13096501e-04   1.00014159e+01]
 [  6.12665000e-08   3.49763969e+00   3.25188013e-04   1.00013999e+01]
 [  6.17665000e-08   3.26221054e+00   3.36958643e-04   1.00013834e+01]
 [  6.22665000e-08   3.03343078e+00   3.48396774e-04   1.00013663e+01]
 [  6.27665000e-08   2.81152618e+00   3.59491119e-04   1.00013486e+01]
 [  6.32665000e-08   2.59671573e+00   3.70230729e-04   1.00013303e+01]
 [  6.37665000e-08   2.38921144e+00   3.80605005e-04   1.00013115e+01]
 [  6.42665000e-08   2.18921807e+00   3.90603710e-04   1.00012923e+01]
 [  6.47665000e-08   1.99693300e+00   4.00216975e-04   1.00012725e+01]
 [  6.52665000e-08   1.81254600e+00   4.09435313e-04   1.00012523e+01]
 [  6.57665000e-08   1.63623902e+00   4.18249627e-04   1.00012316e+01]
 [  6.62665000e-08   1.46818606e+00   4.26651219e-04   1.00012104e+01]
 [  6.67665000e-08   1.30855298e+00   4.34631797e-04   1.00011889e+01]
 [  6.72665000e-08   1.15749730e+00   4.42183484e-04   1.00011670e+01]
 [  6.77665000e-08   1.01516811e+00   4.49298830e-04   1.00011447e+01]
 [  6.82665000e-08   8.81705858e-01   4.55970811e-04   1.00011221e+01]
 [  6.87665000e-08   7.57242264e-01   4.62192843e-04   1.00010991e+01]
 [  6.92665000e-08   6.41900155e-01   4.67958785e-04   1.00010759e+01]
 [  6.97665000e-08   5.35793362e-01   4.73262948e-04   1.00010523e+01]
 [  7.02665000e-08   4.39026598e-01   4.78100097e-04   1.00010285e+01]
 [  7.07665000e-08   3.51695360e-01   4.82465459e-04   1.00010045e+01]
 [  7.12665000e-08   2.73885834e-01   4.86354724e-04   1.00009803e+01]
 [  7.17665000e-08   2.05674809e-01   4.89764055e-04   1.00009559e+01]
 [  7.22665000e-08   1.47129600e-01   4.92690087e-04   1.00009313e+01]
 [  7.27665000e-08   9.83079844e-02   4.95129933e-04   1.00009067e+01]
 [  7.32665000e-08   5.92581435e-02   4.97081185e-04   1.00008818e+01]
 [  7.37665000e-08   3.00186147e-02   4.98541917e-04   1.00008570e+01]
 [  7.42665000e-08   1.06182539e-02   4.99510688e-04   1.00008320e+01]
 [  7.47665000e-08   1.07620677e-03   4.99986541e-04   1.00008070e+01]
 [  7.52665000e-08   1.40189027e-03   4.99969006e-04   1.00007820e+01]
 [  7.53165000e-08   1.97725580e-03   4.99940113e-04   1.00007795e+01]
 [  7.54165000e-08   3.42400955e-03   4.99867526e-04   1.00007745e+01]
 [  7.56165000e-08   7.50138747e-03   4.99663157e-04   1.00007645e+01]
 [  7.60165000e-08   2.03890444e-02   4.99017775e-04   1.00007446e+01]
 [  7.65165000e-08   4.53613489e-02   4.97767914e-04   1.00007196e+01]
 [  7.70165000e-08   8.01576799e-02   4.96026855e-04   1.00006948e+01]
 [  7.75165000e-08   1.24743698e-01   4.93796317e-04   1.00006700e+01]
 [  7.80165000e-08   1.79075401e-01   4.91078501e-04   1.00006454e+01]
 [  7.85165000e-08   2.43099172e-01   4.87876089e-04   1.00006209e+01]
 [  7.90165000e-08   3.16751825e-01   4.84192241e-04   1.00005966e+01]
 [  7.95165000e-08   3.99960675e-01   4.80030593e-04   1.00005725e+01]
 [  8.00165000e-08   4.92643606e-01   4.75395252e-04   1.00005487e+01]
 [  8.05165000e-08   5.94709149e-01   4.70290793e-04   1.00005250e+01]
 [  8.10165000e-08   7.06056578e-01   4.64722253e-04   1.00005016e+01]
 [  8.15165000e-08   8.26576008e-01   4.58695127e-04   1.00004785e+01]
 [  8.20165000e-08   9.56148500e-01   4.52215364e-04   1.00004558e+01]
 [  8.25165000e-08   1.09464618e+00   4.45289358e-04   1.00004333e+01]
 [  8.30165000e-08   1.24193237e+00   4.37923944e-04   1.00004113e+01]
 [  8.35165000e-08   1.39786172e+00   4.30126392e-04   1.00003896e+01]
 [  8.40165000e-08   1.56228033e+00   4.21904396e-04   1.00003683e+01]
 [  8.45165000e-08   1.73502596e+00   4.13266071e-04   1.00003474e+01]
 [  8.50165000e-08   1.91592812e+00   4.04219941e-04   1.00003269e+01]
 [  8.55165000e-08   2.10480829e+00   3.94774934e-04   1.00003070e+01]
 [  8.60165000e-08   2.30148005e+00   3.84940371e-04   1.00002875e+01]
 [  8.65165000e-08   2.50574932e+00   3.74725958e-04   1.00002685e+01]
 [  8.70165000e-08   2.71741452e+00   3.64141775e-04   1.00002500e+01]
 [  8.75165000e-08   2.93626674e+00   3.53198267e-04   1.00002321e+01]
 [  8.80165000e-08   3.16209002e+00   3.41906234e-04   1.00002147e+01]
 [  8.85165000e-08   3.39466149e+00   3.30276820e-04   1.00001979e+01]
 [  8.90165000e-08   3.63375163e+00   3.18321502e-04   1.00001817e+01]
 [  8.95165000e-08   3.87912449e+00   3.06052079e-04   1.00001661e+01]
 [  9.00165000e-08   4.13053792e+00   2.93480658e-04   1.00001511e+01]
 [  9.05165000e-08   4.38774380e+00   2.80619647e-04   1.00001367e+01]
 [  9.10165000e-08   4.65048829e+00   2.67481737e-04   1.00001230e+01]
 [  9.15165000e-08   4.91851211e+00   2.54079894e-04   1.00001100e+01]
 [  9.20165000e-08   5.19155074e+00   2.40427344e-04   1.00000976e+01]
 [  9.25165000e-08   5.46933473e+00   2.26537561e-04   1.00000859e+01]
 [  9.30165000e-08   5.75158994e+00   2.12424252e-04   1.00000750e+01]
 [  9.35165000e-08   6.03803782e+00   1.98101344e-04   1.00000647e+01]
 [  9.40165000e-08   6.32839568e+00   1.83582975e-04   1.00000552e+01]
 [  9.45165000e-08   6.62237697e+00   1.68883470e-04   1.00000464e+01]
 [  9.50165000e-08   6.91969156e+00   1.54017336e-04   1.00000383e+01]
 [  9.55165000e-08   7.22004605e+00   1.38999246e-04   1.00000310e+01]
 [  9.60165000e-08   7.52314401e+00   1.23844019e-04   1.00000244e+01]
 [  9.65165000e-08   7.82868634e+00   1.08566612e-04   1.00000186e+01]
 [  9.70165000e-08   8.13637148e+00   9.31821027e-05   1.00000135e+01]
 [  9.75165000e-08   8.44589581e+00   7.77056729e-05   1.00000093e+01]
 [  9.80165000e-08   8.75695384e+00   6.21525962e-05   1.00000058e+01]
 [  9.85165000e-08   9.06923862e+00   4.65382217e-05   1.00000031e+01]
 [  9.90165000e-08   9.38244194e+00   3.08779588e-05   1.00000011e+01]
 [  9.95165000e-08   9.69625472e+00   1.51872623e-05   9.99999996e+00]
 [  1.00000000e-07   1.00000000e+01  -2.02048261e-11   9.99999960e+00]]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/simulaciondecircuitoselectricosconpythoneispice-1.png"/&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Sqlite con python</title><link href="https://ecrespo.github.io/sqlite-con-python.html" rel="alternate"></link><published>2012-04-04T09:00:00-05:30</published><updated>2012-04-04T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-04-04:/sqlite-con-python.html</id><summary type="html">&lt;p&gt;El programa &lt;code&gt;pysms-send&lt;/code&gt; tendr&amp;aacute; algunas mejoras, entre ellas manejar&amp;aacute; libreta de contactos.&lt;/p&gt;
&lt;p&gt;Para ello se probar&amp;aacute; con &lt;code&gt;sqlite3&lt;/code&gt; o con &lt;code&gt;mongoDB&lt;/code&gt;. Para est&amp;eacute; art&amp;iacute;culo se trabajar&amp;aacute; con &lt;code&gt;sqlite3&lt;/code&gt;. Se crear&amp;aacute;n 2 tablas, una de contactos y otra de grupos. La de contactos tiene los campos de id, nombre del contacto …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El programa &lt;code&gt;pysms-send&lt;/code&gt; tendr&amp;aacute; algunas mejoras, entre ellas manejar&amp;aacute; libreta de contactos.&lt;/p&gt;
&lt;p&gt;Para ello se probar&amp;aacute; con &lt;code&gt;sqlite3&lt;/code&gt; o con &lt;code&gt;mongoDB&lt;/code&gt;. Para est&amp;eacute; art&amp;iacute;culo se trabajar&amp;aacute; con &lt;code&gt;sqlite3&lt;/code&gt;. Se crear&amp;aacute;n 2 tablas, una de contactos y otra de grupos. La de contactos tiene los campos de id, nombre del contacto, telefono y grupo. La tabla grupo tendr&amp;aacute; los campos id, nombre del grupo y descripci&amp;oacute;n del grupo.&lt;/p&gt;
&lt;p&gt;En la tabla contactos el campo grupo es una referencia al id de la tabla grupo de esa forma cada contacto est&amp;aacute; relacionado a un grupo.&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;contactos.sql&lt;/code&gt; contiene lo siguiente:&lt;br/&gt;
```
create table contactos (
id integer primary key,
nombre text not null,
grupo integer references grupos(id)
on delete restrict
deferrable initially deferred,
telefono text not null default 'Desconocido',
unique (nombre,telefono));&lt;/p&gt;
&lt;p&gt;create table grupos (
id integer primary key,
nombre text not null,&lt;br/&gt;
descripcion text not null CHECK(descripcion !=''),
unique (nombre)); 
```&lt;/p&gt;
&lt;p&gt;En la tabla &lt;code&gt;contactos&lt;/code&gt; se tiene el campo id que es entero y clave primaria, luego el campo nombre es no nulo, el campo grupo hace referencia a la tabla grupos al campo id, el campo telefono es un texto no nulo con valor por defecto desconocido, los valores &amp;uacute;nicos son el nombre y el tel&amp;eacute;fono, con eso se evita que existan n&amp;uacute;meros de tel&amp;eacute;fonos repetidos.&lt;/p&gt;
&lt;p&gt;En la tabla &lt;code&gt;grupos&lt;/code&gt; tiene el campo id es un entero y es clave primaria, el campo nombre es texto no nulo, el campo descripci&amp;oacute;n es no nulo y se verifica que no sea un string vacio, el campo &amp;uacute;nico es el nombre.&lt;/p&gt;
&lt;p&gt;Para generar la base de datos se ejecuta la siguiente instrucci&amp;oacute;n:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlite3 sms.db &amp;lt; sms.sql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;De est&amp;aacute; manera se crea la base de datos &lt;code&gt;sqlite&lt;/code&gt; en el archivo &lt;code&gt;sms.db&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Si se desea interactuar con la base de datos se ejecuta &lt;code&gt;sqlite3&lt;/code&gt; con el nombre de la base de datos, se abrir&amp;aacute; un interprete:
&lt;code&gt;ecrespo@jewel:~/bin/python$ sqlite3 sms.db 
SQLite version 3.7.11 2012-03-20 11:35:50
Enter ".help" for instructions
Enter SQL statements terminated with a ";"
sqlite&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se agrega un grupo a la tabla &lt;code&gt;grupos&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlite&amp;gt; insert into grupos (nombre,descripcion) values ('Guacara','Ciudad del Estado Carabobo');&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se agrega un contacto a la tabla &lt;code&gt;contactos&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;insert into contactos (nombre,grupo,telefono) values ('Ernesto Crespo',1,'04315633119');&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se consulta a la tabla &lt;code&gt;grupos&lt;/code&gt; y luego a la tabla &lt;code&gt;contactos&lt;/code&gt;:&lt;br/&gt;
&lt;code&gt;sqlite&amp;gt; select * from grupos;
1|Guacara|Ciudad del Estado Carabobo
sqlite&amp;gt; select * from contactos ;
1|Ernesto Crespo|1|04315633119&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para eliminar el &lt;code&gt;contacto&lt;/code&gt; se ejecuta:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlite&amp;gt; delete from contactos where id=1;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se uso el id para eliminar el contacto.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n  se crear&amp;aacute;n una serie de scripts en python que permitir&amp;aacute;n insertar datos a la base de datos, consultar datos y eliminarlos (las acciones b&amp;aacute;sicas en una base de datos).
```&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo sqlite3"&gt;Se importa el modulo sqlite3&lt;/h1&gt;
&lt;p&gt;import sqlite3&lt;/p&gt;
&lt;h1 id="se crea la funcion main"&gt;Se crea la funcion main&lt;/h1&gt;
&lt;p&gt;def main():&lt;/p&gt;
&lt;h1 id="se establece la instancia connect a la base de datos sms.db"&gt;Se establece la instancia connect a la base de datos sms.db&lt;/h1&gt;
&lt;p&gt;con = sqlite3.connect("sms.db")&lt;/p&gt;
&lt;h1 id="se crea el cursor que permite la ejecucion de instrucciones sql"&gt;Se crea el cursor que permite la ejecucion de instrucciones sql&lt;/h1&gt;
&lt;p&gt;cur = con.cursor()&lt;/p&gt;
&lt;h1 id="se crea una lista con tuplas como sus elementos."&gt;Se crea una lista con tuplas como sus elementos.&lt;/h1&gt;
&lt;h1 id="las tuplas contienen los datos a insertar en la tabla grupos."&gt;Las tuplas contienen los datos a insertar en la tabla grupos.&lt;/h1&gt;
&lt;p&gt;datos =[('valencia' ,'Capital Estado Carabobo'),
('Maracay','Capital Estado Aragua'),
('Barquisimeto','Capital del Estado Lara'),]&lt;/p&gt;
&lt;h1 id="se recorre la lista"&gt;Se recorre la lista&lt;/h1&gt;
&lt;p&gt;for t in datos:
cur.execute('insert into grupos (nombre,descripcion) values (?,?)',t)&lt;/p&gt;
&lt;h1 id="se realiza la transaccion."&gt;Se realiza la transaccion.&lt;/h1&gt;
&lt;p&gt;con.commit()&lt;/p&gt;
&lt;h1 id="ahora se lista los datos de la tabla grupos"&gt;Ahora se lista los datos de la tabla grupos&lt;/h1&gt;
&lt;p&gt;cur.execute('select * from grupos')&lt;/p&gt;
&lt;h1 id="se captura uno"&gt;Se captura uno&lt;/h1&gt;
&lt;p&gt;fila = cur.fetchone()&lt;/p&gt;
&lt;h1 id="se recorre cada fila"&gt;Se recorre cada fila&lt;/h1&gt;
&lt;p&gt;while fila:&lt;/p&gt;
&lt;h1 id="se muestra los elementos nombre y descripcion."&gt;Se muestra los elementos nombre y descripcion.&lt;/h1&gt;
&lt;p&gt;print fila[1],fila[2]&lt;/p&gt;
&lt;h1 id="se pasa a la siguiente fila"&gt;Se pasa a la siguiente fila&lt;/h1&gt;
&lt;p&gt;fila = cur.fetchone()&lt;/p&gt;
&lt;h1 id="se cierra el cursor"&gt;Se cierra el cursor&lt;/h1&gt;
&lt;p&gt;cur.close()&lt;/p&gt;
&lt;h1 id="se cierra la conexion."&gt;Se cierra la conexion.&lt;/h1&gt;
&lt;p&gt;con.close()&lt;/p&gt;
&lt;h1 id="se sale de la funcion ."&gt;Se sale de la funcion .&lt;/h1&gt;
&lt;p&gt;return 0&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
main()
```&lt;/p&gt;
&lt;p&gt;Al ejecutar el script devuelve la lista de &lt;code&gt;grupos&lt;/code&gt; con su descripci&amp;oacute;n:
&lt;code&gt;ecrespo@jewel:~/bin/python$ python grupos-sms.py 
Guacara Ciudad del Estado Carabobo
valencia Capital Estado Carabobo
Maracay Capital Estado Aragua
Barquisimeto Capital del Estado Lara&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;===
&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category><category term="Python"></category></entry><entry><title>Emulando la navegación en python con mechanize (parte 1)</title><link href="https://ecrespo.github.io/emulando-la-navegacion-en-python-con-mechanize-parte-1.html" rel="alternate"></link><published>2012-03-10T09:00:00-05:30</published><updated>2012-03-10T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-03-10:/emulando-la-navegacion-en-python-con-mechanize-parte-1.html</id><summary type="html">&lt;p&gt;En estos d&amp;iacute;as me ha tocado programar una aplicaci&amp;oacute;n que permita interactuar de manera autom&amp;aacute;tica con otra, para ello utilic&amp;eacute; la librer&amp;iacute;a &lt;code&gt;python-mechanize&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; librer&amp;iacute;a permite la interacci&amp;oacute;n con aplicaciones web para automatizar dicha interacci&amp;oacute;n o cuando se quiere realizar pruebas de estr&amp;eacute;s a una aplicaci&amp;oacute;n se usa &lt;code&gt;multi-mechanize&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En estos d&amp;iacute;as me ha tocado programar una aplicaci&amp;oacute;n que permita interactuar de manera autom&amp;aacute;tica con otra, para ello utilic&amp;eacute; la librer&amp;iacute;a &lt;code&gt;python-mechanize&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; librer&amp;iacute;a permite la interacci&amp;oacute;n con aplicaciones web para automatizar dicha interacci&amp;oacute;n o cuando se quiere realizar pruebas de estr&amp;eacute;s a una aplicaci&amp;oacute;n se usa &lt;code&gt;multi-mechanize&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La p&amp;aacute;gina de mechanize la pueden revisar en el siguiente &lt;a href="http://wwwsearch.sourceforge.net/mechanize/"&gt;enlace&lt;/a&gt;. Hay una gu&amp;iacute;a en &lt;a href="http://stockrt.github.io/p/emulating-a-browser-in-python-with-mechanize/"&gt;Ingl&amp;eacute;s&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En estos d&amp;iacute;a he estado practicando con django (framework de desarrollo web en python) donde espero pronto poder publicar art&amp;iacute;culos al respecto.&lt;/p&gt;
&lt;p&gt;La aplicaci&amp;oacute;n en Django es la de manejo de bookmarks, se tiene un inicio de sesi&amp;oacute;n, una p&amp;aacute;gina de bienvenida al usuario registrado, luego se puede listar los bookmarks y cerrar la sesi&amp;oacute;n (aplicaci&amp;oacute;n en desarrollo).&lt;/p&gt;
&lt;p&gt;Pues todo esos pasos se van a automatizar con &lt;code&gt;python-mechanize&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para instalar mechanize se puede hacer a lo Debian:  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="apt-get install python-mechanize"&gt;apt-get install python-mechanize&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la aplicaci&amp;oacute;n en django sin mucho adorno.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/emulandolanavegacionenpythonconmechanizeparte1-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Al darle click en sesi&amp;oacute;n o Inicio de Sesi&amp;oacute;n aparece la solicitud de usuario y clave como lo muestra la figura:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/emulandolanavegacionenpythonconmechanizeparte1-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Al darle bot&amp;oacute;n derecho sobre la entrada de Usuario selecciona Inspeccionar elemento (esto en google chrome o chromium) y aparece una secci&amp;oacute;n donde se muestra el c&amp;oacute;digo del formulario.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/emulandolanavegacionenpythonconmechanizeparte1-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;De esa forma se puede averiguar los nombres de los elementos del formulario para luego utilizarlo en el c&amp;oacute;digo python con &lt;code&gt;mechanize&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se inicia el interprete de comandos de python:&lt;br/&gt;
```
ecrespo@jewel:~$ python
Python 2.7.2+ (default, Dec  1 2011, 01:55:02)
[GCC 4.6.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Se importa mechanize y el manejo de cookies:&lt;/code&gt;python 
import mechanize
import cookielib
&lt;code&gt;Se crea la instancia browser de `mechanize`:&lt;/code&gt;python 
br = mechanize.Browser()
&lt;code&gt;Se crea la instancia del cookie:&lt;/code&gt;python 
cj = cookielib.LWPCookieJar()
&lt;code&gt;Se asocia la instancia del cookie con el navegador:&lt;/code&gt;python 
br.set_cookiejar(cj)
&lt;code&gt;Se define que no se maneja robots:&lt;/code&gt;python 
br.set_handle_robots(False)
&lt;code&gt;Se define el tiempo de refrescamiento:&lt;/code&gt;python 
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
&lt;code&gt;Se define las cabeceras del navegador, en este caso se le est&amp;aacute; diciendo que el navegador es un firefox desde Linux Debian:&lt;/code&gt;python 
br.addheaders = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; es-VE; rv:1.9.0.1)Gecko/2008071615 Debian/6.0 Firefox/9')]
&lt;code&gt;Se abre la aplicaci&amp;oacute;n web que se encuentra en localhost y puerto 8050:&lt;/code&gt;python 
r = br.open('http://localhost:8050/')
&lt;code&gt;Se muestra el resultado de la p&amp;aacute;gina:&lt;/code&gt;python 
print r.read()
```
En la siguiente figura se muestra el resultado (el c&amp;oacute;digo html de la p&amp;aacute;gina) del comando anterior:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="./images/emulandolanavegacionenpythonconmechanizeparte1-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;Ahora se revisar&amp;aacute;n los links que maneja la p&amp;aacute;gina para darle click a sesi&amp;oacute;n o Inicio de sesi&amp;oacute;n para ingresar el usuario y clave:&lt;/p&gt;
&lt;p&gt;Se crea un ciclo con los enlaces existentes en la p&amp;aacute;gina, luego se consulta el texto de cada enlace, si es sesi&amp;oacute;n se abre el enlace pasado el url del mismo, luego finaliza el ciclo.&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for link in br.links():
...     if link.text == "sesion":
...         r= br.open("%s" %link.absolute_url)
...         break
...     else:
...         continue
&lt;code&gt;Ya en este momento se encuentra en la p&amp;aacute;gina de ingreso de usuario y clave:&lt;/code&gt;python 
print br.geturl()
http://localhost:8050/sesion/
&lt;code&gt;Se puede mostrar el c&amp;oacute;digo html de la p&amp;aacute;gina de Inicio de sesi&amp;oacute;n con el comando `br.response().read()`:&lt;/code&gt;python 
print br.response().read()
```
En la figura se muestra el resultado del comando:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="./images/emulandolanavegacionenpythonconmechanizeparte1-5.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se puede mostrar los campos del formulario con el comando &lt;code&gt;br.forms()&lt;/code&gt;:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for form in br.forms():
...     print form
...
&lt;post (readonly)="" &lt;hiddencontrol(csrfmiddlewaretoken="d3c9e6c2e06f5014647a1711ee3d4908)" application="" http:="" localhost:8050="" sesion="" x-www-form-urlencoded=""&gt;
&lt;textcontrol(username=)&gt;
&lt;passwordcontrol(password=)&gt;
&lt;submitcontrol(&lt;none&gt;=login) (readonly)&amp;gt;
  &lt;hiddencontrol(next= (readonly)="" )=""&gt;&amp;gt;
```
Se nota que se tienen dos campos de entrada de datos username y password y el bot&amp;oacute;n de login para enviar los datos.&lt;/hiddencontrol(next=&gt;&lt;/submitcontrol(&lt;none&gt;&lt;/passwordcontrol(password=)&gt;&lt;/textcontrol(username=)&gt;&lt;/post&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Como se tiene un s&amp;oacute;lo formulario se usa el par&amp;aacute;metro &lt;code&gt;nr=0&lt;/code&gt;, en el caso que existan varios formularios en dicha p&amp;aacute;gina sigue con los n&amp;uacute;meros consecutivos o se le pasa el nombre del formulario si existe &lt;code&gt;name="nombre"&lt;/code&gt;:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;br.select_form(nr=0)
&lt;code&gt;Ahora se le pasa los datos de usuario y clave, luego se le da click al bot&amp;oacute;n de env&amp;iacute;o:&lt;/code&gt;python 
br.form['username'] = 'usuario'
br.form['password'] = 'clave'
br.submit()
&lt;response_seek_wrapper 0xb6eff5ac="" 0xb6f0a06cl="" 0xb6f0d4ccl="" at="" fp="&amp;lt;socket._fileobject" object="" whose="" wrapped=""&gt;&amp;gt;&amp;gt;
&lt;code&gt;Al ejecutar `response().read()` se mostrar&amp;aacute; la p&amp;aacute;gina de bienvenida del usuario que ingreso a la aplicaci&amp;oacute;n:&lt;/code&gt;python 
print br.response().read()
```
En la siguiente figura se muestra el resultado del comando:  &lt;/response_seek_wrapper&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="./images/emulandolanavegacionenpythonconmechanizeparte1-6.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se muestran los enlaces disponibles y se selecciona el de publicar:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for enlace in br.links():
...     if enlace.text == "Publicar":
...         s = br.open("%s" %enlace.absolute_url)
...         break
...     else:
...         continue
&lt;code&gt;Se muestra el url de la p&amp;aacute;gina:&lt;/code&gt;python 
print br.geturl()
http://localhost:8050/salvar/
``` 
Ahora se ingresar&amp;aacute; un URL de un sitio, por ejemplo www.python.org:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Primero se despliega el formulario:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for form in br.forms():
...     print form
...
&lt;post (readonly)="" &lt;hiddencontrol(csrfmiddlewaretoken="d3c9e6c2e06f5014647a1711ee3d4908)" application="" http:="" localhost:8050="" salvar="" x-www-form-urlencoded=""&gt;
&lt;textcontrol(url=)&gt;
&lt;textcontrol(title=)&gt;
&lt;textcontrol(tags=)&gt;
&lt;submitcontrol(&lt;none&gt;=save) (readonly)&amp;gt;&amp;gt;
&lt;code&gt;Se tiene que pasar el url, luego el t&amp;iacute;tulo del url y etiquetas:&lt;/code&gt;python 
br.select_form(nr=0)
br.form['url'] = "www.python.org"
br.form['title'] = "Python"
br.form['tags'] = "Python Programacion"
br.submit()
&lt;response_seek_wrapper 0xb6efee0cl="" 0xb6eff86c="" 0xb6f12aacl="" at="" fp="&amp;lt;socket._fileobject" object="" whose="" wrapped=""&gt;&amp;gt;&amp;gt;
&lt;code&gt;Se muestra el contenido de la p&amp;aacute;gina luego de ingresar los datos:&lt;/code&gt;python 
print br.response().read()
```
En la siguiente figura se muestra el resultado:  &lt;/response_seek_wrapper&gt;&lt;/submitcontrol(&lt;none&gt;&lt;/textcontrol(tags=)&gt;&lt;/textcontrol(title=)&gt;&lt;/textcontrol(url=)&gt;&lt;/post&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="./images/emulandolanavegacionenpythonconmechanizeparte1-7.png"/&gt; &lt;/p&gt;
&lt;p&gt;Para finalizar se presenta los enlaces disponibles para luego cerrar la sesi&amp;oacute;n del usuario:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for link in br.links():
...     if  link.text == "Cerrar Sesion":
...         r = br.open("%s" %link.absolute_url)
...         break
...     else:
...         continue
&lt;code&gt;Se muestra el c&amp;oacute;digo html de la p&amp;aacute;gina resultante luego de dar click en cerrar sesi&amp;oacute;n y la figura donde aparece dicho c&amp;oacute;digo:&lt;/code&gt;python 
print br.response().read()
``` 
&lt;img alt="" src="./images/emulandolanavegacionenpythonconmechanizeparte1-8.png"/&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;En el siguiente art&amp;iacute;culo sobre &lt;code&gt;mechanize&lt;/code&gt; se explicar&amp;aacute; el uso de formularios m&amp;aacute;s complejos que s&amp;oacute;lo entrar datos.  &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content></entry><entry><title>Cálculo de direcciones IP con python</title><link href="https://ecrespo.github.io/calculo-de-direcciones-ip-con-python.html" rel="alternate"></link><published>2012-03-04T09:00:00-05:30</published><updated>2012-03-04T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-03-04:/calculo-de-direcciones-ip-con-python.html</id><summary type="html">&lt;p&gt;Recuerdo cuando vi la materia de redes de computadoras que a uno le tocaba calcular los segmentos de redes, hacer &lt;code&gt;subnetting&lt;/code&gt;, &lt;code&gt;supernetting&lt;/code&gt;, &lt;code&gt;NAT&lt;/code&gt;, etc y  todos los c&amp;aacute;culos se ten&amp;iacute;an que hacer con l&amp;aacute;piz y papel  convirtiendo las direcciones IP en 4  bytes separados por punto, incluso en las clases …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recuerdo cuando vi la materia de redes de computadoras que a uno le tocaba calcular los segmentos de redes, hacer &lt;code&gt;subnetting&lt;/code&gt;, &lt;code&gt;supernetting&lt;/code&gt;, &lt;code&gt;NAT&lt;/code&gt;, etc y  todos los c&amp;aacute;culos se ten&amp;iacute;an que hacer con l&amp;aacute;piz y papel  convirtiendo las direcciones IP en 4  bytes separados por punto, incluso en las clases del postgrado no se permit&amp;iacute;a el uso de calculadoras IP.&lt;/p&gt;
&lt;p&gt;Para python existe una librer&amp;iacute;a que permite realizar los c&amp;aacute;lculos para definir una red, un segmento de red, o reconocer cuando una IP es de un segmento de red dado.&lt;/p&gt;
&lt;p&gt;La librer&amp;iacute;a se llama &lt;code&gt;ipcalc&lt;/code&gt;, se puede ver la descripci&amp;oacute;n y un ejemplo en el siguiente &lt;a href="pypi.python.org/pypi/ipcalc/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalarlo desde la paqueteria de python se puede usar &lt;code&gt;pip&lt;/code&gt; o &lt;code&gt;easy_install&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="pip install ipcalc"&gt;pip install ipcalc&lt;/h1&gt;
&lt;p&gt;```  &lt;/p&gt;
&lt;p&gt;&amp;Oacute;  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="easy_install ipcalc"&gt;easy_install ipcalc&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Para el caso de Debian se ejecuta &lt;code&gt;apt-get&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="apt-get install python-ipcalc"&gt;apt-get install python-ipcalc&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Desde la consola se ejecuta python:&lt;br/&gt;
```
ecrespo@jewel:~$ python
Python 2.7.2+ (default, Dec  1 2011, 01:55:02)
[GCC 4.6.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;`` 
Se importa de&lt;/code&gt;ipcalc` a IP y Network:  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from ipcalc import IP, Network
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se presenta el segmento de IPs de la red 192.168.10.0 con bits en 1 de la mascara 30 (mascara 255.255.255.252):  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for x in Network('192.168.10.0/30'): print str(x)
...
192.168.10.0
192.168.10.1
192.168.10.2
192.168.10.3
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Como se nota se tiene 4 direcciones IP las cuales la primera (192.168.10.0) es la direcci&amp;oacute;n de sub red y la &amp;uacute;ltima (192.168.10.3) es la direcci&amp;oacute;n de broadcast de esa sub red.&lt;/p&gt;
&lt;p&gt;Si se cambia los bits de la mascara a 29 aumenta el rango de IPs de dicha sub red de 4 a 8 IPs:  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;for x in Network('192.168.10.0/29'): print str(x)
...
192.168.10.0
192.168.10.1
192.168.10.2
192.168.10.3
192.168.10.4
192.168.10.5
192.168.10.6
192.168.10.7
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tambi&amp;eacute;n se puede consultar si una IP dada se encuentra en un segmento de red o sub red, como ejemplo se consultar&amp;aacute; si la IP 192.168.10.8 se encuentra en la sub red 192.168.10.0/29 (obvio que no):  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;'192.168.10.8' in Network('192.168.10.0/29')
False
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Si se prueba con la IP 192.168.10.1 devuelve True la consulta:  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;'192.168.10.1' in Network('192.168.10.0/29')
True
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;El &amp;uacute;ltimo ejemplo es el caso de una red 192.68.10.0/22 &amp;oacute; 192.168.10.0/255.255.252.0, se quiere averiguar la IP inicial y la IP final de dicho segmento de red:  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;'192.168.9.1' in Network('192.168.10.0/22')
False
'192.168.9.255' in Network('192.168.10.0/22')
False
'192.168.10.0' in Network('192.168.10.0/22')
True
'192.168.10.1' in Network('192.168.10.0/22')
True
'192.168.11.1' in Network('192.168.10.0/22')
True
'192.168.12.1' in Network('192.168.10.0/22')
True
'192.168.13.1' in Network('192.168.10.0/22')
True
'192.168.14.1' in Network('192.168.10.0/22')
False
'192.168.13.255' in Network('192.168.10.0/22')
True
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Con este resultado se tiene que la IP inicial es la 192.168.10.0 hasta la IP 192.168.13.255.&lt;/p&gt;
&lt;p&gt;Se puede usar tambi&amp;eacute;n para calcular IPs de IPv6.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="Seguridad"></category><category term="Ubuntu"></category></entry><entry><title>Crear llave gpg desde Python</title><link href="https://ecrespo.github.io/crear-llave-gpg-desde-python.html" rel="alternate"></link><published>2012-03-03T09:00:00-05:30</published><updated>2012-03-03T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-03-03:/crear-llave-gpg-desde-python.html</id><summary type="html">&lt;p&gt;Existen varias herramientas para crear, manipular llaves &lt;code&gt;gpg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Quienes no conozcan de &lt;code&gt;GPG&lt;/code&gt; pueden leer el siguiente &lt;a href="http://personales.upv.es/%7Ealalbiol/pages/Mini_Tutorial_GPG.html"&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El paquete para python que permite manejar  las llaves &lt;code&gt;gpg&lt;/code&gt; es &lt;code&gt;python-pyme&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="apt-get install python-pyme python-pyme-doc"&gt;apt-get install python-pyme python-pyme-doc&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n de la librer&amp;iacute;a pyme la encuentran en el siguiente &lt;a href="http://pyme.sourceforge.net/doc/pyme/index.html"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En la documentaci&amp;oacute;n se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Existen varias herramientas para crear, manipular llaves &lt;code&gt;gpg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Quienes no conozcan de &lt;code&gt;GPG&lt;/code&gt; pueden leer el siguiente &lt;a href="http://personales.upv.es/%7Ealalbiol/pages/Mini_Tutorial_GPG.html"&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El paquete para python que permite manejar  las llaves &lt;code&gt;gpg&lt;/code&gt; es &lt;code&gt;python-pyme&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="apt-get install python-pyme python-pyme-doc"&gt;apt-get install python-pyme python-pyme-doc&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n de la librer&amp;iacute;a pyme la encuentran en el siguiente &lt;a href="http://pyme.sourceforge.net/doc/pyme/index.html"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En la documentaci&amp;oacute;n se tiene una lista de ejemplos, se copia el archivo de &lt;code&gt;genkey.py&lt;/code&gt; al home del usuario:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp /usr/share/doc/python-pyme-doc/examples/genkey.py ~/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se edita el archivo &lt;code&gt;genkey.py&lt;/code&gt;, se modifica el tipo de llave a RSA, se define la longitud de la llave (1024,2048 o 4096), longitud de la subllave (el mismo valor de la l&amp;ntilde;ongitud de la llave), el nombre real, comentario del nombre, correo, frase de la llave, fecha de expiraci&amp;oacute;n de la llave.&lt;br/&gt;
```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="$id: genkey.py,v 1.6 2008/03/08 18:21:08 belyi exp $"&gt;$Id: genkey.py,v 1.6 2008/03/08 18:21:08 belyi Exp $&lt;/h1&gt;
&lt;h1 id="copyright (c) 2004 igor belyi belyi@users.sourceforge.net"&gt;Copyright (C) 2004 Igor Belyi &lt;a href="mailto:belyi@users.sourceforge.net"&gt;belyi@users.sourceforge.net&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id="copyright (c) 2002 john goerzen jgoerzen@complete.org"&gt;Copyright (C) 2002 John Goerzen &lt;a href="mailto:jgoerzen@complete.org"&gt;jgoerzen@complete.org&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id="_1"&gt;&lt;/h1&gt;
&lt;h1 id="this program is free software; you can redistribute it and/or #modify"&gt;This program is free software; you can redistribute it and/or #modify&lt;/h1&gt;
&lt;h1 id="it under the terms of the gnu general public license as #published by"&gt;it under the terms of the GNU General Public License as #published by&lt;/h1&gt;
&lt;h1 id="the free software foundation; either version 2 of the license, or"&gt;the Free Software Foundation; either version 2 of the License, or&lt;/h1&gt;
&lt;h1 id="(at your option) any later version."&gt;(at your option) any later version.&lt;/h1&gt;
&lt;h1 id="_2"&gt;&lt;/h1&gt;
&lt;h1 id="this program is distributed in the hope that it will be useful,"&gt;This program is distributed in the hope that it will be useful,&lt;/h1&gt;
&lt;h1 id="but without any warranty; without even the implied warranty #of"&gt;but WITHOUT ANY WARRANTY; without even the implied warranty #of&lt;/h1&gt;
&lt;h1 id="merchantability or fitness for a particular purpose. #see the"&gt;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  #See the&lt;/h1&gt;
&lt;h1 id="gnu general public license for more details."&gt;GNU General Public License for more details.&lt;/h1&gt;
&lt;h1 id="_3"&gt;&lt;/h1&gt;
&lt;h1 id="you should have received a copy of the gnu general public #license"&gt;You should have received a copy of the GNU General Public #License&lt;/h1&gt;
&lt;h1 id="along with this program; if not, write to the free software"&gt;along with this program; if not, write to the Free Software&lt;/h1&gt;
&lt;h1 id="foundation, inc., 59 temple place, suite 330, boston, ma #02111-1307 #usa"&gt;Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  #02111-1307  #USA&lt;/h1&gt;
&lt;h1 id="importar pyme"&gt;Importar pyme&lt;/h1&gt;
&lt;p&gt;from pyme import core, callbacks&lt;/p&gt;
&lt;h1 id="initialize our context."&gt;Initialize our context.&lt;/h1&gt;
&lt;h1 id="inicializa el contexto."&gt;Inicializa el contexto.&lt;/h1&gt;
&lt;p&gt;core.check_version(None)
c = core.Context()&lt;/p&gt;
&lt;h1 id="se define algunas configuraciones"&gt;Se define algunas configuraciones&lt;/h1&gt;
&lt;p&gt;c.set_armor(1)
c.set_progress_cb(callbacks.progress_stdout, None)&lt;/p&gt;
&lt;h1 id="this example from the gpgme manual"&gt;This example from the GPGME manual&lt;/h1&gt;
&lt;h1 id="este es un ejemplo desde el manual gpgme."&gt;Este es un ejemplo desde el manual gpgme.&lt;/h1&gt;
&lt;p&gt;parms = """&lt;gnupgkeyparms format="internal"&gt;
Key-Type: RSA
Key-Length: 2048
Subkey-Type: ELG-E
Subkey-Length: 2048
Name-Real: Ernesto Nadir Crespo Avila
Name-Comment: seraph1
Name-Email: ecrespo@gmail.com
Passphrase: frasedelallave
Expire-Date: 2020-08-15
&lt;/gnupgkeyparms&gt;
"""&lt;/p&gt;
&lt;h1 id="se genera la llave pasandole los parametros."&gt;Se genera la llave pasandole los par&amp;aacute;metros.&lt;/h1&gt;
&lt;p&gt;c.op_genkey(parms, None, None)&lt;/p&gt;
&lt;h1 id="se imprime en patanalla el resultado de la generacion."&gt;Se imprime en patanalla el resultado de la generaci&amp;oacute;n.&lt;/h1&gt;
&lt;p&gt;print c.op_genkey_result().fpr
``` &lt;/p&gt;
&lt;p&gt;Para crear la llave se ejecuta el archivo &lt;code&gt;genkey.py&lt;/code&gt;:&lt;br/&gt;
&lt;code&gt;python 
$python genkey.py
......
PROGRESS UPDATE: what = primegen, type = 46, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 46, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 43, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 43, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 43, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 43, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 43, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 94, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 94, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 94, current = 0, total = 0
PROGRESS UPDATE: what = primegen, type = 94, current = 0, total = 0
FFF598686F3ADE35C52BF65E4478C8341643F0EB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al desplegar la lista de llaves se tiene lo siguiente:&lt;br/&gt;
&lt;code&gt;python 
$gpg --list-keys
...
pub   2048R/1643F0EB 2012-03-04 [caduca: 2020-08-15]
uid                  Ernesto Nadir Crespo Avila (seraph1) &amp;lt;ecrespo@gmail.com&amp;gt;
sub   2048g/9F8E9C20 2012-03-04 [caduca: 2020-08-15]&lt;/code&gt;
Los &amp;uacute;ltimos 8 n&amp;uacute;meros hexagecimales es el identificador de la llave &lt;code&gt;gpg&lt;/code&gt;. Luego se exporta a un servidor de llaves y se puede compartir la llave p&amp;uacute;blica para firmar o cifrar correos.&lt;/p&gt;
&lt;h2 id="_4"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="Seguridad"></category><category term="Ubuntu"></category></entry><entry><title>Geolocalización de direcciones IP y dominios de Internet con GeoIP en python</title><link href="https://ecrespo.github.io/geolocalizacion-de-direcciones-ip-y-dominios-de-internet-con-geoip-en-python.html" rel="alternate"></link><published>2012-02-26T09:00:00-05:30</published><updated>2012-02-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-02-26:/geolocalizacion-de-direcciones-ip-y-dominios-de-internet-con-geoip-en-python.html</id><summary type="html">&lt;p&gt;A nivel mundial se crearon varios grupos de direcciones IP de IPv4 (Clases A,B o C) la cual permiten definir redes y rango de equipos para dichas redes.&lt;/p&gt;
&lt;p&gt;Claro actualmente se est&amp;aacute; migrando a IPv6 ya que las direcciones IPv4 se agotaron hace un par de a&amp;ntilde;os aproximadamente (aunque …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A nivel mundial se crearon varios grupos de direcciones IP de IPv4 (Clases A,B o C) la cual permiten definir redes y rango de equipos para dichas redes.&lt;/p&gt;
&lt;p&gt;Claro actualmente se est&amp;aacute; migrando a IPv6 ya que las direcciones IPv4 se agotaron hace un par de a&amp;ntilde;os aproximadamente (aunque existan soluciones como NAT, Subnetting o Supernetting que permiten utilizar m&amp;aacute;s eficientemente las IPs).&lt;/p&gt;
&lt;p&gt;Con GeoIP para python se puede averiguar de cual Pa&amp;iacute;s proviene una IP, tambi&amp;eacute;n se puede conocer un dominio o sitio en espec&amp;iacute;fico donde se encuentra alojado, conocer el rango de IPs de una clase de IPv4.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;python-geoip&lt;/code&gt; a lo Debian (Debian, Canaima, Ubuntu, LinuxMint), se convierte el usuario en superusuario y ejecuta:  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="apt-get install python-geoip"&gt;apt-get install python-geoip&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se ejecuta el interprete de comandos de python:&lt;br/&gt;
```
ecrespo@jewel:~$ python
Python 2.7.2+ (default, Dec  1 2011, 01:55:02)
[GCC 4.6.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Se importa el m&amp;oacute;dulo `geoip`:&lt;/code&gt;python 
import GeoIP
&lt;code&gt;Se crea el objeto de la Instancia de GeoIP, asociandole la informaci&amp;oacute;n de GeoIP de la memoria Cache:&lt;/code&gt;python 
gi = GeoIP.new(GeoIP.GEOIP_MEMORY_CACHE)
&lt;code&gt;Se busca en cual Pa&amp;iacute;s se encuentra alojado yahoo.com:&lt;/code&gt;python 
print gi.country_code_by_name("yahoo.com")
US
print gi.country_name_by_name("yahoo.com")
United States
```
En el primer caso se devuelve el c&amp;oacute;digo del Pa&amp;iacute;s, en el segundo se devuelve el nombre del Pa&amp;iacute;s.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ahora se probar&amp;aacute; con yahoo.es:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;print gi.country_code_by_name("www.yahoo.es")
IE
print gi.country_name_by_name("www.yahoo.es")
Ireland
```
Se nota que yahoo.com est&amp;aacute; alojado en Estados Unidos y yahoo.es se encuentra alojado en Irlanda.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ahora se buscar&amp;aacute; en cual Pa&amp;iacute;s se encuentra alojado www.cantv.net (es obvio):&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;print gi.country_code_by_name("www.cantv.net")
VE
print gi.country_name_by_name("www.cantv.net")
Venezuela
&lt;code&gt;Aunque es posible que dominios de Venezuela se encuentren alojados en otros Pa&amp;iacute;ses, un ejemplo ser&amp;iacute;a www.crespo.org.ve:&lt;/code&gt;python 
print gi.country_name_by_name("www.crespo.org.ve")
Sweden
&lt;code&gt;Para terminar se probar&amp;aacute; averiguar el Pa&amp;iacute;s seg&amp;uacute;n la IP que se le pase:&lt;/code&gt;python 
print gi.country_name_by_addr("24.24.24.24")
United States
print gi.country_name_by_addr("150.186.32.0")
Venezuela
```
La primera IP se encuentra en Estados Unidos y la segunda en Venezuela.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para averiguar el rango de IPs de la IP de Venezuela se ejecuta &lt;code&gt;geoip&lt;/code&gt; solicitando que devuelva el rango de IPs:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;print gi.range_by_ip("150.186.32.0")
('150.185.0.0', '150.189.255.255'
```
Est&amp;aacute; Ip por el rango de direcciones que maneja es una clase B.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Con esta herramienta se puede usar para aplicaciones Web con Django por ejemplo y dicha aplicaciones puede mostrar informaci&amp;oacute;n del Pa&amp;iacute;s donde se conectan los usuarios.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Linux"></category><category term="Python"></category><category term="Redes"></category><category term="Ubuntu"></category></entry><entry><title>Cifrar el tráfico de DNS en Linux con DNSCrypt y OpenDNS</title><link href="https://ecrespo.github.io/cifrar-el-trafico-de-dns-en-linux-con-dnscrypt-y-opendns.html" rel="alternate"></link><published>2012-02-20T09:00:00-05:30</published><updated>2012-02-20T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-02-20:/cifrar-el-trafico-de-dns-en-linux-con-dnscrypt-y-opendns.html</id><summary type="html">&lt;p&gt;&lt;code&gt;DNSCrypt&lt;/code&gt; permite cifrar las consultas de DNS entre el Computador y los servidores de DNS de OpenDNS, de esa forma se puede proteger al equipo de los ataques de Hombre en el Medio.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo donde se basa este tutorial se encuentra en el siguiente &lt;a href="http://www.webupd8.org/2014/08/encrypt-dns-traffic-in-ubuntu-with.html"&gt;enlace&lt;/a&gt;.
Para instalar &lt;code&gt;dnscrypt&lt;/code&gt; para …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;DNSCrypt&lt;/code&gt; permite cifrar las consultas de DNS entre el Computador y los servidores de DNS de OpenDNS, de esa forma se puede proteger al equipo de los ataques de Hombre en el Medio.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo donde se basa este tutorial se encuentra en el siguiente &lt;a href="http://www.webupd8.org/2014/08/encrypt-dns-traffic-in-ubuntu-with.html"&gt;enlace&lt;/a&gt;.
Para instalar &lt;code&gt;dnscrypt&lt;/code&gt; para Debian se baja el paquete desde el repositorio de &lt;a href="https://github.com/opendns/dnscrypt-proxy/downloads"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se ejecuta &lt;code&gt;dpkg&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="dpkg -i dnscrypt-proxy_0.9_i386.deb"&gt;dpkg -i dnscrypt-proxy_0.9_i386.deb&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se inicia el proxy dns como demonio:  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="dnscrypt-proxy --daemonize"&gt;dnscrypt-proxy --daemonize&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se edita las conexiones inal&amp;aacute;mbricas en este caso en la red que se conecta el equipo es inal&amp;aacute;mbrica:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/cifrareltraficodednsenlinuxcondnscryptyopendns-1.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se selecciona la red inal&amp;aacute;mbrica y se edita su configuraci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/cifrareltraficodednsenlinuxcondnscryptyopendns-2.png"/&gt; &lt;/p&gt;
&lt;p&gt;Se selecciona la pesta&amp;ntilde;a de Ajuste de IPv4, en el m&amp;eacute;todo se selecciona S&amp;oacute;lo direcciones autom&amp;aacute;ticas (DHCP) y se coloca la IP 127.0.0.1 en Servidor de DNS:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/cifrareltraficodednsenlinuxcondnscryptyopendns-3.png"/&gt; &lt;/p&gt;
&lt;p&gt;Para verificar que se est&amp;eacute; usando los servidores de DNS de &lt;code&gt;OpenDNS&lt;/code&gt; se abre el navegador a la URL http://www.opendns.com/welcome :  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/cifrareltraficodednsenlinuxcondnscryptyopendns-4.png"/&gt; &lt;/p&gt;
&lt;p&gt;Ya se tiene cifrado la comunicaci&amp;oacute;n a los servidores de &lt;code&gt;OpenDNS&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="DNS"></category><category term="gnome"></category><category term="Linux"></category><category term="Redes"></category><category term="Seguridad"></category><category term="Ubuntu"></category></entry><entry><title>Conectarse al repositorio de bitbucket desde python</title><link href="https://ecrespo.github.io/conectarse-al-repositorio-de-bitbucket-desde-python.html" rel="alternate"></link><published>2012-02-19T09:00:00-05:30</published><updated>2012-02-19T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-02-19:/conectarse-al-repositorio-de-bitbucket-desde-python.html</id><summary type="html">&lt;p&gt;Para tener un proyecto con control de versiones mercurial s&amp;oacute;lo veo 2 opciones usar &lt;a href="https://code.google.com/"&gt;Google Code &lt;/a&gt; o &lt;a href="https://bitbucket.org/product/"&gt;Bitbucket&lt;/a&gt;.  Para el caso de Google Code se puede acceder v&amp;iacute;a el api para usar mercurial con python como se explico en art&amp;iacute;culo &lt;a href="https://ecrespo.github.io/api-de-mercurial-para-python.html#api-de-mercurial-para-python"&gt;anterior&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para Bitbucket se tiene un API para acceder a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Para tener un proyecto con control de versiones mercurial s&amp;oacute;lo veo 2 opciones usar &lt;a href="https://code.google.com/"&gt;Google Code &lt;/a&gt; o &lt;a href="https://bitbucket.org/product/"&gt;Bitbucket&lt;/a&gt;.  Para el caso de Google Code se puede acceder v&amp;iacute;a el api para usar mercurial con python como se explico en art&amp;iacute;culo &lt;a href="https://ecrespo.github.io/api-de-mercurial-para-python.html#api-de-mercurial-para-python"&gt;anterior&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para Bitbucket se tiene un API para acceder a la informaci&amp;oacute;n del repositorio que en python se llama &lt;a href="https://bitbucket.org/jmoiron/python-bitbucket/"&gt;python-bitbucket.&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Para instalarlo se sigue los siguientes pasos:  &lt;/p&gt;
&lt;p&gt;A lo Debian/Canaima/Ubuntu/LinuxMint:  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="apt-get install python-bitbucket"&gt;apt-get install python-bitbucket&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Con la herramienta &lt;code&gt;easy_install&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="easy_install bitbucket"&gt;easy_install bitbucket&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Con la herramienta &lt;code&gt;pip&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="pip install bitbucket"&gt;pip install bitbucket&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Usar el API de bitbucket:  &lt;/p&gt;
&lt;p&gt;Desde la consola de python, se importa el m&amp;oacute;dulo &lt;code&gt;bitbucket&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;```python 
$python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import bitbucket
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se crea la instancia de bitbucket.&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;bb = bitbucket.BitBucket()
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se establece conexi&amp;oacute;n a la cuenta de &lt;code&gt;bitbucket&lt;/code&gt; :  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;bb = bitbucket.BitBucket('ecrespo', 'clave')
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se verifica que se autentic&amp;oacute; en el servicio:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;bb
&lt;bitbucket (auth:="" api="" ecrespo)=""&gt;
```&lt;/bitbucket&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se asocia la cuenta:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ecrespo = bb.user('ecrespo')
ecrespo
&lt;user: ecrespo=""&gt;
```&lt;/user:&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se lista los repositorios del usuario (se devuelve una lista con los repositorios del usuario, cada elemento de la lista es un diccionario con la informaci&amp;oacute;n del repositorio):&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ecrespo.repositories()
[{u'scm': u'hg', u'has_wiki': True, u'last_updated': u'2011-09-12   03:56:37', u'created_on': u'2009-04-09 22:42:58', u'owner': u'ecrespo',     u'logo': None, u'email_mailinglist': u'', u'is_mq': False, u'size': 747499, u'read_only': False, u'fork_of': None, u'mq_of': None, u'state': u'available', u'utc_created_on': u'2009-04-09 20:42:58+00:00', u'website': u'', u'description': u'Script que automatiza el proceso de conversi\xf3n de un sistema Debian/Ubuntu para que sea accesible para las personas con discapacidad visual', u'has_issues': True, u'is_fork': False, u'slug': u'automatizar-accesibilidad', u'is_private': False, u'name': u'automatizar-accesibilidad', u'language': u'', u'utc_last_updated': u'2011-09-12 01:56:37+00:00', u'email_writers': True, u'main_branch': u'default', u'no_public_forks': False, u'resource_uri': u'/api/1.0/repositories/ecrespo/automatizar-accesibilidad'}, {u'scm': u'hg', u'has_wiki': True, u'last_updated': u'2011-09-08 13:09:06', u'created_on': u'2011-08-04 05:02:06', u'owner': u'ecrespo', u'logo': None, u'email_mailinglist': u'', u'is_mq': False, u'size': 545, u'read_only': False, u'fork_of': None, u'mq_of': None, u'state': u'available', u'utc_created_on': u'2011-08-04 03:02:06+00:00', u'website': u'', u'description': u'Lista de paquetes para la accesibilidad con una descripci\xf3n y pruebas de los mismos', u'has_issues': False, u'is_fork': False, u'slug': u'accesibilidad', u'is_private': True, u'name': u'accesibilidad', u'language': u'', u'utc_last_updated': u'2011-09-08 11:09:06+00:00', u'email_writers': True, u'main_branch': None, u'no_public_forks': False, u'resource_uri': u'/api/1.0/repositories/ecrespo/accesibilidad'}]
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se captura la descripci&amp;oacute;n del repositorio y la ruta del mismo:&lt;br/&gt;
```python &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ecrespo.repositories()[0]['description']
u'Script que automatiza el proceso de conversi\xf3n de un sistema Debian/Ubuntu para que sea accesible para las personas con discapacidad visual'&lt;/p&gt;
&lt;p&gt;ecrespo.repositories()[0]['resource_uri']
u'/api/1.0/repositories/ecrespo/automatizar-accesibilidad'
&lt;code&gt;Se asocia a uno de los repositorios, en este caso el de accesibilidad.&lt;/code&gt;python 
pyaccesibilidad=ecrespo.repository('accesibilidad')&lt;/p&gt;
&lt;p&gt;pyaccesibilidad
&lt;repository: accesibilidad="" ecrespo's=""&gt;
&lt;code&gt;Se lista los tags o branches (para el caso del repositorio accesibilidad devuelve diccionarios vac&amp;iacute;os):&lt;/code&gt;python 
pyaccesibilidad.tags()
{}&lt;/repository:&gt;&lt;/p&gt;
&lt;p&gt;pyaccesibilidad.branches()
{}
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Control de versiones"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Mercurial"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Obtener información de las interfaces de red con python(netifaces)</title><link href="https://ecrespo.github.io/obtener-informacion-de-las-interfaces-de-red-con-pythonnetifaces.html" rel="alternate"></link><published>2012-02-07T09:00:00-05:30</published><updated>2012-02-07T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-02-07:/obtener-informacion-de-las-interfaces-de-red-con-pythonnetifaces.html</id><summary type="html">&lt;p&gt;Existe un m&amp;oacute;dulo en python que permite obtener la informaci&amp;oacute;n de las interfaces de red.&lt;/p&gt;
&lt;p&gt;Dicho m&amp;oacute;dulo se llama &lt;code&gt;netifaces&lt;/code&gt;, con &amp;eacute;l se puede obtener la lista de interfaces de su equipo, obtener la informaci&amp;oacute;n de Enlace de Red de cada interfaz, su direcci&amp;oacute;n IPv4 y su Direcci&amp;oacute;n IPv6.&lt;/p&gt;
&lt;p&gt;Para …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Existe un m&amp;oacute;dulo en python que permite obtener la informaci&amp;oacute;n de las interfaces de red.&lt;/p&gt;
&lt;p&gt;Dicho m&amp;oacute;dulo se llama &lt;code&gt;netifaces&lt;/code&gt;, con &amp;eacute;l se puede obtener la lista de interfaces de su equipo, obtener la informaci&amp;oacute;n de Enlace de Red de cada interfaz, su direcci&amp;oacute;n IPv4 y su Direcci&amp;oacute;n IPv6.&lt;/p&gt;
&lt;p&gt;Para instalar el m&amp;oacute;dulo se ejecuta &lt;code&gt;apt-get&lt;/code&gt; para el caso de Debian/Canaima/Ubuntu.  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="apt-get install python-netifaces"&gt;apt-get install python-netifaces&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La idea es crear un script que capture la lista de interfaces del equipo y muestre la informaci&amp;oacute;n de cada una de dichas interfaces.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa se muestra a continuaci&amp;oacute;n:  &lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa el modulo netifaces"&gt;Se importa el modulo netifaces&lt;/h1&gt;
&lt;p&gt;import netifaces&lt;/p&gt;
&lt;h1 id="se captura la lista de interfaces en el equipo"&gt;Se captura la lista de interfaces en el equipo&lt;/h1&gt;
&lt;p&gt;interfaces = netifaces.interfaces()&lt;/p&gt;
&lt;h1 id="se muestra las interfaces"&gt;Se muestra las interfaces&lt;/h1&gt;
&lt;p&gt;print "interfaces: ", interfaces&lt;/p&gt;
&lt;h1 id="se recorre la lista de interfaces"&gt;Se recorre la lista de interfaces&lt;/h1&gt;
&lt;p&gt;for interface in interfaces:&lt;/p&gt;
&lt;h1 id="se captura la informacion de cada interfaz"&gt;Se captura la informacion de cada interfaz&lt;/h1&gt;
&lt;p&gt;datos = netifaces.ifaddresses(interface)
print "--------------------------"&lt;/p&gt;
&lt;h1 id="se muestra el nombre de la interface"&gt;Se muestra el nombre de la interface&lt;/h1&gt;
&lt;p&gt;print "Interface: %s" %interface&lt;/p&gt;
&lt;h1 id="se captura la lista de parametros que tiene la interface"&gt;Se captura la lista de parametros que tiene la interface&lt;/h1&gt;
&lt;p&gt;variables = datos.keys()&lt;/p&gt;
&lt;h1 id="se muestra la direccion de la capa de enlace de red de la interface"&gt;Se muestra la direccion de la capa de enlace de red de la interface&lt;/h1&gt;
&lt;p&gt;print "Capa de enlace de red: ", datos[netifaces.AF_LINK][0]['addr']&lt;/p&gt;
&lt;h1 id="si esta presente la informacion de ipv4 se muestra"&gt;Si esta presente la informacion de IPV4 se muestra&lt;/h1&gt;
&lt;p&gt;if netifaces.AF_INET in variables:
print "IPv4: IP: %s, Mascara: %s" %(datos[netifaces.AF_INET][0]['addr'], datos[netifaces.AF_INET][0]['netmask'])&lt;/p&gt;
&lt;h1 id="si esta presente la informacion de ipv6 se muestra"&gt;Si esta presente la informacion de IPv6 se muestra&lt;/h1&gt;
&lt;p&gt;if netifaces.AF_INET in variables:
print "IPv6: IP: %s, Mascara: %s " %(datos[netifaces.AF_INET6][0]   ['addr'], datos[netifaces.AF_INET6][0]['netmask'])
&lt;code&gt;El resultado del programa se muestra a continuaci&amp;oacute;n:&lt;/code&gt;python 
interfaces: ['lo', 'eth0', 'wlan0']&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Interface: lo
Capa de enlace de red: 00:00:00:00:00:00
IPv4: IP: 127.0.0.1, Mascara: 255.0.0.0
IPv6: IP: ::1, Mascara: ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Interface: eth0
Capa de enlace de red: 71:6a:b7:77:46:5f&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Interface: wlan0
Capa de enlace de red: 00:26:85:74:fe:89
IPv4: IP: 192.168.10.108, Mascara: 255.255.255.0
IPv6: IP: fe80::236:92ff:fa54:fe89%wlan0, Mascara: ffff:ffff:ffff:ffff::
```
Para m&amp;aacute;s informaci&amp;oacute;n sobre el m&amp;oacute;dulo pueden visitar la informaci&amp;oacute;n en la p&amp;aacute;gina de &lt;a href="https://pypi.org/project/netifaces/"&gt;Python&lt;/a&gt; o el sitio de la &lt;a href="https://alastairs-place.net/projects/netifaces/"&gt;aplicaci&amp;oacute;n&lt;/a&gt;. &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Python"></category><category term="Redes"></category><category term="Ubuntu"></category></entry><entry><title>WebService con Soappy</title><link href="https://ecrespo.github.io/webservice-con-soappy.html" rel="alternate"></link><published>2012-02-06T09:30:00-05:30</published><updated>2012-02-06T09:30:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-02-06:/webservice-con-soappy.html</id><summary type="html">&lt;p&gt;Hace ya mucho tiempo escrib&amp;iacute; un ejemplo de como usar &lt;a href="https://ecrespo.github.io/ejemplo-xml-rpc-en-python.html"&gt;xml-rpc &lt;/a&gt; desde python como webservice.
En este caso se explicar&amp;aacute; el uso de otro protocolo que deriva de &lt;code&gt;xml-rpc&lt;/code&gt; que se llama &lt;code&gt;SOAP&lt;/code&gt; (Simple Object Access Protocol).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SOAP&lt;/code&gt; es un protocolo est&amp;aacute;ndar que define c&amp;oacute;mo dos objetos en diferentes procesos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hace ya mucho tiempo escrib&amp;iacute; un ejemplo de como usar &lt;a href="https://ecrespo.github.io/ejemplo-xml-rpc-en-python.html"&gt;xml-rpc &lt;/a&gt; desde python como webservice.
En este caso se explicar&amp;aacute; el uso de otro protocolo que deriva de &lt;code&gt;xml-rpc&lt;/code&gt; que se llama &lt;code&gt;SOAP&lt;/code&gt; (Simple Object Access Protocol).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SOAP&lt;/code&gt; es un protocolo est&amp;aacute;ndar que define c&amp;oacute;mo dos objetos en diferentes procesos pueden comunicarse por medio del intercambio de datos &lt;code&gt;XML&lt;/code&gt;. Pueden conseguir m&amp;aacute;s informaci&amp;oacute;n en la p&amp;aacute;gina de &lt;a href="https://es.wikipedia.org/wiki/SOAP"&gt;wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En python existe un m&amp;oacute;dulo para trabajar con SOAP que se llama &lt;a href="https://pypi.org/project/SOAPpy/"&gt;soappy&lt;/a&gt;. Lo primero que se har&amp;aacute; es instalarlo.  &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="apt-get install python-soappy"&gt;apt-get install python-soappy&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La idea es crear 4 funciones, de suma, resta, multiplicaci&amp;oacute;n y divisi&amp;oacute;n, registrarlas en el servicio &lt;code&gt;SOAP&lt;/code&gt;, levantar el servidor y realizar las llamadas desde el cliente.&lt;/p&gt;
&lt;p&gt;El programa servidor de &lt;code&gt;SOAP&lt;/code&gt; es el siguiente:&lt;br/&gt;
```&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;import SOAPpy&lt;/p&gt;
&lt;h1 id="funciones que devuelven la suma, resta, multiplicacion y division de 2 numeros"&gt;Funciones que devuelven la suma, resta, multiplicacion y division de 2 numeros&lt;/h1&gt;
&lt;p&gt;def suma(a,b):
    return a+b&lt;/p&gt;
&lt;p&gt;def resta(a,b):
    return a-b&lt;/p&gt;
&lt;p&gt;def multiplicacion(a,b):
    return a*b&lt;/p&gt;
&lt;p&gt;def division(a,b):
    return a/b&lt;/p&gt;
&lt;h1 id="se crea la instancia del servicio soap en el equipo por el puerto 8080."&gt;Se crea la instancia del servicio SOAP en el equipo por el puerto 8080.&lt;/h1&gt;
&lt;p&gt;server = SOAPpy.SOAPServer(("localhost", 8080))&lt;/p&gt;
&lt;h1 id="registro de las funciones suma,resta, multiplicacion y division"&gt;Registro de las funciones suma,resta, multiplicacion y division&lt;/h1&gt;
&lt;h1 id="en el servicio soap."&gt;en el servicio SOAP.&lt;/h1&gt;
&lt;p&gt;server.registerFunction(suma)
server.registerFunction(resta)
server.registerFunction(multiplicacion)
server.registerFunction(division)&lt;/p&gt;
&lt;h1 id="levantar el servicio soap."&gt;Levantar el servicio SOAP.&lt;/h1&gt;
&lt;p&gt;server.serve_forever()
&lt;code&gt;El programa cliente de `SOAP` es el siguiente:&lt;/code&gt;&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa el modulo soappy"&gt;Se importa el modulo SOAPpy&lt;/h1&gt;
&lt;p&gt;import SOAPpy&lt;/p&gt;
&lt;h1 id="se crea la instancia del proxy soap"&gt;Se crea la instancia del proxy SOAP&lt;/h1&gt;
&lt;h1 id="a el servidor soap"&gt;a el servidor SOAP&lt;/h1&gt;
&lt;p&gt;server = SOAPpy.SOAPProxy("http://localhost:8080/")&lt;/p&gt;
&lt;h1 id="se llama las funciones registradas en el servidor soap"&gt;Se llama las funciones registradas en el servidor SOAP&lt;/h1&gt;
&lt;p&gt;print "El resultado de la suma es: ", server.suma(5,10)
print "El resultado de la resta es: ",server.resta(20,5)
print "El resultado de la multiplicacion es: ", server.multiplicacion(10,5)
print "El resultado de la division es: ", server.division(10,3)
```&lt;/p&gt;
&lt;p&gt;Se le da permisos de ejecuci&amp;oacute;n a ambos archivos, se ejecuta primero el servidor y luego el cliente que devuelve el siguiente resultado:&lt;/p&gt;
&lt;p&gt;Se ejecuta cada programa en una consola distinta.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@jewel:~/bin$ ./soapservidor.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@jewel:~/bin$ ./soapcliente.py
El resultado de la suma es:  15
El resultado de la resta es:  15
El resultado de la multiplicacion es:  50
El resultado de la division es:  3&lt;/code&gt; &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>API de Mercurial para Python</title><link href="https://ecrespo.github.io/api-de-mercurial-para-python.html" rel="alternate"></link><published>2012-01-24T09:00:00-05:30</published><updated>2012-01-24T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-01-24:/api-de-mercurial-para-python.html</id><summary type="html">&lt;p&gt;Mercurial, como ya se ha explicado es un sistema de control de versiones distribu&amp;iacute;do desarrollado en python, otros sistemas de control de versiones tienen API o m&amp;oacute;dulos para python, pero para el caso de mercurial no hab&amp;iacute;a visto una API para usarlo desde python.&lt;/p&gt;
&lt;p&gt;Revisando los art&amp;iacute;culos que publican en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mercurial, como ya se ha explicado es un sistema de control de versiones distribu&amp;iacute;do desarrollado en python, otros sistemas de control de versiones tienen API o m&amp;oacute;dulos para python, pero para el caso de mercurial no hab&amp;iacute;a visto una API para usarlo desde python.&lt;/p&gt;
&lt;p&gt;Revisando los art&amp;iacute;culos que publican en los sparks de python  en Google+ me encuentro con que existe un API que se llama &lt;a href="https://bitbucket.org/haard/hgapi"&gt;hgapi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El API soporta lo siguiente:
&lt;code&gt;hg init
hg id
hg add &amp;lt;file&amp;gt;
hg commit [files] [-u name] [--close-branch]
hg update &amp;lt;rev&amp;gt;
hg heads
hg log
hg remove
hg status
hg merge (fails on conflict)
hg revert&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El procedimiento para instalarlo es el siguiente:&lt;br/&gt;
```python &lt;/p&gt;
&lt;h1 id="pip install hgapi"&gt;pip install hgapi&lt;/h1&gt;
&lt;p&gt;Downloading/unpacking hgapi
Downloading hgapi-1.1.0.tar.gz
Running setup.py egg_info for package hgapi&lt;/p&gt;
&lt;p&gt;Installing collected packages: hgapi
Running setup.py install for hgapi&lt;/p&gt;
&lt;p&gt;Successfully installed hgapi
Cleaning up...
```
Se crea el directorio pruebas:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$mkdir pruebas&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Dentro del directorio pruebas se crea el archivo &lt;code&gt;hora.txt&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd pruebas
touch hora.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ya est&amp;aacute; todo listo para probar el API.&lt;/p&gt;
&lt;h6 id="1. se importa el modulo hgapi:"&gt;1.  Se importa el m&amp;oacute;dulo &lt;code&gt;hgapi&lt;/code&gt;:&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;python 
import hgapi&lt;/code&gt; &lt;/p&gt;
&lt;h6 id="2. fuera del directorio pruebas se crea la instancia del repositorio:"&gt;2. Fuera del directorio &lt;code&gt;pruebas&lt;/code&gt; se crea la instancia del repositorio:&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;python 
repo = hgapi.Repo("pruebas")&lt;/code&gt; &lt;/p&gt;
&lt;h6 id="3. se inicializa el repositorio:"&gt;3. Se inicializa el repositorio:&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;python 
repo.hg_init()&lt;/code&gt; &lt;/p&gt;
&lt;h6 id="4. se agrega el archivo hora.txt:"&gt;4. Se agrega el archivo hora.txt:&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;python 
repo.hg_add("hora.txt")&lt;/code&gt; &lt;/p&gt;
&lt;h6 id="5. se realiza el commit colocando la descripcion y el usuario quien realiza el commit:"&gt;5. Se realiza el commit colocando la descripci&amp;oacute;n y el usuario quien realiza el commit:&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;python 
repo.hg_commit("Agregando archivo hora.txt",user="ernesto")&lt;/code&gt; &lt;/p&gt;
&lt;h6 id="6. se captura la descripcion:"&gt;6. Se captura la descripci&amp;oacute;n:&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;python 
str(repo['tip'].desc)
'Agregando archivo hora.txt'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Esto es lo b&amp;aacute;sico que explica el sitio de hgapi. Lo interesante es que ya se puede automatizar procesos de mercurial desde python.&lt;/p&gt;
&lt;p&gt;La documentaci&amp;oacute;n de hgapi la pueden revisar &lt;a href="https://pythonhosted.org/hgapi/"&gt;aqu&amp;iacute;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="_2"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Control de versiones"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Mercurial"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Crear metapaquete con equivs (incorporando archivos postinst y prerm)</title><link href="https://ecrespo.github.io/crear-metapaquete-con-equivs-incorporando-archivos-postinst-y-prerm.html" rel="alternate"></link><published>2012-01-23T09:00:00-05:30</published><updated>2012-01-23T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-01-23:/crear-metapaquete-con-equivs-incorporando-archivos-postinst-y-prerm.html</id><summary type="html">&lt;p&gt;Para continuar con los art&amp;iacute;culos de metaempaquetado para Debian/Canaima, el &amp;uacute;ltimo art&amp;iacute;culo sobre la herramienta &lt;code&gt;equivs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Lo que faltaba por hacer era crear un metapaquete de configuraci&amp;oacute;n que copie archivos de configuraci&amp;oacute;n del escritorio cuando se instala y que se guarde dichas configuraciones en el directorio &lt;code&gt;/etc/skel&lt;/code&gt; para …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Para continuar con los art&amp;iacute;culos de metaempaquetado para Debian/Canaima, el &amp;uacute;ltimo art&amp;iacute;culo sobre la herramienta &lt;code&gt;equivs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Lo que faltaba por hacer era crear un metapaquete de configuraci&amp;oacute;n que copie archivos de configuraci&amp;oacute;n del escritorio cuando se instala y que se guarde dichas configuraciones en el directorio &lt;code&gt;/etc/skel&lt;/code&gt; para cuando se cree un nuevo usuario en el sistema.&lt;/p&gt;
&lt;p&gt;En el tutorial de Ubuntu Forums explican como crear el &lt;a href="https://ubuntuforums.org/showthread.php?t=726317"&gt;metapaquete con archivos postinst y prerm&lt;/a&gt;, el problema es que los archivos de ejemplo no se encuentran en los enlaces que hacen referencia.&lt;/p&gt;
&lt;p&gt;La idea es agregar el applet del programa &lt;code&gt;radiotray&lt;/code&gt; en el escritorio de gnome para todos los usuarios. Como normalmente ya se tiene usuarios en el equipo, se tendr&amp;aacute; que copiar los archivos de configuraci&amp;oacute;n de &lt;code&gt;radiotray&lt;/code&gt; al directorio &lt;code&gt;home&lt;/code&gt; de cada usuario; para los usuarios que se creen luego de la instalaci&amp;oacute;n del metapaquete el sistema copiar&amp;aacute; los archivos de configuraci&amp;oacute;n que se encuentran en el directorio &lt;code&gt;/etc/skel/&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita hacer es crear el archivo control para metaempaquetado de &lt;code&gt;equivs&lt;/code&gt; con el comando &lt;code&gt;equivs-control&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$equivs-control canaima-radiotray-conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Este archivo contendr&amp;aacute;:&lt;/p&gt;
&lt;p&gt;```
Section: misc
Priority: optional
Homepage: http://canaima.softwarelibre.gob.ve
Standards-Version: 3.9.1&lt;/p&gt;
&lt;p&gt;Package: canaima-radiotray-conf
Version: 0.1
Maintainer: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;
Pre-Depends: radiotray
Depends: ${misc:Depends}
Architecture: all
Copyright: copyright
Changelog: changelog
Files: ./radiotray/radiotray.desktop /etc/skel/.config/autostart/radiotray.desktop
       ./radiotray/bookmarks.xml   /etc/skel/.local/share/radiotray/bookmarks.xml
File: postinst
 #!/bin/sh -e
 # preinst for main-package-config. Divert some configuration file of main-package.
 .
 set -e
 .
 PKG=canaima-radiotray-conf
 .
     if [ "$1" = configure ] ; then
 .
    for usuario in  /home/&lt;em&gt;? ; do
 .
        usuario_min=$(basename $usuario)
 .
        case $(grep "${usuario_min}:.&lt;/em&gt;:.&lt;em&gt;:.&lt;/em&gt;:.&lt;em&gt;:.&lt;/em&gt;:::" /etc/shadow ) in
 .
                '')
                #no se hace nada
                ;;
 .
                *)
                usuario=${usuario_min}
 .
                if [ -f  /home/${usuario}/.config/autostart/radiotray.desktop ];
 .
                then
 .
                        cp -r /etc/skel/.config/autostart/radiotray.desktop /home/${usuario}/.config/autostart/radiotray.desktop
 .
                        chown ${usuario}.${usuario} /home/${usuario}/.config/autostart/radiotray.desktop&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;            else
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.
                        mkdir -p  /home/${usuario}/.config; chown -R ${usuario}.${usuario} /home/${usuario}/.config
 .
                        mkdir -p /home/${usuario}/.config/autostart; chown -R ${usuario}.${usuario} /home/${usuario}/.config/autostart
 .
                        cp -r /etc/skel/.config/autostart/radiotray.desktop /home/${usuario}/.config/autostart/radiotray.desktop
 .
                        chown ${usuario}.${usuario} /home/${usuario}/.config/autostart/radiotray.desktop
 .
                fi
 .
                if [ -f /home/${usuario}/.local/share/radiotray/bookmarks.xml ];
 .
                then
 .
                        cp -r /etc/skel/.local/share/radiotray/bookmarks.xml /home/${usuario}/.local/share/radiotray/bookmarks.xml
 .
                        chown ${usuario}.${usuario} /home/${usuario}/.local/share/radiotray/bookmarks.xml
 .
                else
 .
                        mkdir -p /home/${usuario}/.local; chown -R ${usuario}.${usuario} /home/${usuario}/.local
 .
                        mkdir -p /home/${usuario}/.local/share; chown -R ${usuario}.${usuario} /home/${usuario}/.local/share
 .
                        mkdir -p /home/${usuario}/.local/share/radiotray; chown -R ${usuario}.${usuario} /home/${usuario}/.local/share/radiotray
 .
                        cp -r /etc/skel/.local/share/radiotray/bookmarks.xml /home/${usuario}/.local/share/radiotray/bookmarks.xml
 .
                        chown ${usuario}.${usuario} /home/${usuario}/.local/share/radiotray/bookmarks.xml
 .
                fi
 .
        esac
 .
    done
 .
     fi
 .
    exit 0
File: prerm
 #!/bin/sh -e
 .
 set -e
 .
 PKG=canaima-radiotray-conf
 .
    if [ "$1" = configure ] ; then
 .
        for usuario in  /home/&lt;em&gt;? ; do
 .
            usuario_min=$(basename $usuario)
 .
             case $(grep "${usuario_min}:.&lt;/em&gt;:.&lt;em&gt;:.&lt;/em&gt;:.&lt;em&gt;:.&lt;/em&gt;:::" /etc/shadow ) in
 .
                '')
                    #no se hace nada
                    ;;
 .
                    *)
                    usuario=${usuario_min}
 .
                    if [ -f  /home/${usuario}/.config/autostart/radiotray.desktop ];
 .
                        then
 .
                            rm -f /home/${usuario}/.config/autostart/radiotray.desktop
 .
                    fi
 .
                    if [ -f /home/${usuario}/.local/share/radiotray/bookmarks.xml ];
 .
                        then
 .
                            rm -f /home/${usuario}/.local/share/radiotray/bookmarks.xml
 .
                fi
 .
            esac
 .
        done
 .
    fi
 .
     exit 0
Description: Radiotray bookmarks to Venezuelan radio streaming
Radiotray config to autostart in gnome and radio stream bookmark
``` &lt;/p&gt;
&lt;p&gt;Se define la secci&amp;oacute;n y prioridad del programa, se define el sitio del programa, la versi&amp;oacute;n del &lt;code&gt;policy&lt;/code&gt; a utilizar; el nombre del programa, su versi&amp;oacute;n, el mantenedor del programa, la predependencia en este caso es el programa &lt;code&gt;radiotray&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La dependencia es &lt;code&gt;${misc:Depends}&lt;/code&gt;, esta variable se define ya que se est&amp;aacute; usando &lt;code&gt;debhelper&lt;/code&gt; para empaquetar. La arquitectura es all&amp;iacute;, se definen los archivos &lt;code&gt;copyright&lt;/code&gt; y &lt;code&gt;changelog&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Luego con la opci&amp;oacute;n &lt;code&gt;Files&lt;/code&gt; se definen los archivos que se van a copiar en el directorio &lt;code&gt;/etc/skel/&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Con la opci&amp;oacute;n &lt;code&gt;File&lt;/code&gt; se define cada script que se desea agregar al paquete, en este caso los archivos &lt;code&gt;postinst&lt;/code&gt; y &lt;code&gt;prerm&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Lo que hace &lt;code&gt;postinst&lt;/code&gt; es averiguar las cuentas de los usuarios del equipo y copiar los archivos de configuraci&amp;oacute;n en los directorios que usa gnome para manejar las configuraciones. En el caso de &lt;code&gt;prerm&lt;/code&gt; lo que hace es borrar dichos archivos de cada usuario del equipo.&lt;/p&gt;
&lt;p&gt;Por &amp;uacute;ltimo se da una descripci&amp;oacute;n corta y luego larga del programa.&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;changelog&lt;/code&gt; tendr&amp;aacute; los cambios realizados en el metapaquete:
```
canaima-radiotray-conf (1:0.1) unstable; urgency=low&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-- Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;  Fri, 23 Dec 2011 10:57:05 -0430&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;copyright&lt;/code&gt; contendr&amp;aacute; lo siguiente:
```
Authors:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copyright (C) 2011 Ernesto Nadir Crespo Avila &amp;lt;ecrespo@cenditel.gob.ve&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;License:&lt;/p&gt;
&lt;p&gt;This package is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; version 2 dated June, 1991.&lt;/p&gt;
&lt;p&gt;This package is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.&lt;/p&gt;
&lt;p&gt;You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;On Debian GNU/Linux systems, the complete text of the GNU General
Public License can be found in `/usr/share/common-licenses/GPL-2'.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se crea el directorio &lt;code&gt;radiotray&lt;/code&gt; que contendr&amp;aacute; los archivos de configuraci&amp;oacute;n:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$mkdir radiotray&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se crean los archivos &lt;code&gt;bookmarks.xml&lt;/code&gt; y &lt;code&gt;radiotray.desktop&lt;/code&gt;. El primero define las radios por Internet que se quieren tener en los favoritos y el segundo archivo define que el programa &lt;code&gt;radiotray&lt;/code&gt; se coloque como un applet en el escritorio Gnome.&lt;/p&gt;
&lt;p&gt;Archivo &lt;code&gt;bookmarks.xml&lt;/code&gt;. El contenido de este archivo se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/crearmetapaqueteconequivsincorporandoarchivospostinstyprerm-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Archivo &lt;code&gt;radiotray.desktop&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;[Desktop Entry]
Type=Application
Exec=radiotray
Hidden=false
X-GNOME-Autostart-enabled=true
Name[es_VE]=radiotray
Name=radiotray
Comment[es_VE]=Cliente de radio por internet
Comment=Cliente de radio por internet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Equivs&lt;/code&gt; toma la definici&amp;oacute;n de archivos (File) y crea los archivos para el proceso de instalaci&amp;oacute;n. En la siguiente figura se muestra la estructura de archivos del directorio DEBIAN dentro del paquete deb:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/crearmetapaqueteconequivsincorporandoarchivospostinstyprerm-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al subir el metapaquete a un repositorio e instalar se puede ver en la siguiente figura las radios que aparecen en favoritos de &lt;code&gt;radiotray&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/crearmetapaqueteconequivsincorporandoarchivospostinstyprerm-3.png"/&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content></entry><entry><title>No a SOPA y PIPA</title><link href="https://ecrespo.github.io/no-a-sopa-y-pipa.html" rel="alternate"></link><published>2012-01-17T09:00:00-05:30</published><updated>2012-01-17T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-01-17:/no-a-sopa-y-pipa.html</id><summary type="html">&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/noasopaypipa-1.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/noasopaypipa-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Gracias e1th0r por las imagenes en contra de SOPA.&lt;/p&gt;
&lt;p&gt;El d&amp;iacute;a de hoy fue publicado un art&amp;iacute;culo que escrib&amp;iacute; en el diario &lt;a href="http://www.ciudadccs.info/?p=250335"&gt;Ciudad Caracas&lt;/a&gt; . Ah&amp;iacute; hago un resumen de lo que es SOPA y PIPA y  como nos afectar&amp;iacute;a a todos si son aprobadas.&lt;/p&gt;
&lt;p&gt;Presentar&amp;eacute; tres v&amp;iacute;deos donde se explica …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/noasopaypipa-1.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/noasopaypipa-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Gracias e1th0r por las imagenes en contra de SOPA.&lt;/p&gt;
&lt;p&gt;El d&amp;iacute;a de hoy fue publicado un art&amp;iacute;culo que escrib&amp;iacute; en el diario &lt;a href="http://www.ciudadccs.info/?p=250335"&gt;Ciudad Caracas&lt;/a&gt; . Ah&amp;iacute; hago un resumen de lo que es SOPA y PIPA y  como nos afectar&amp;iacute;a a todos si son aprobadas.&lt;/p&gt;
&lt;p&gt;Presentar&amp;eacute; tres v&amp;iacute;deos donde se explica con m&amp;aacute;s detalle lo que es SOPA y PIPA, como nos afectar&amp;aacute; si son aprobadas dichas propuestas de Ley.&lt;/p&gt;
&lt;p&gt;V&amp;iacute;deo sobre ACTA:
&lt;a href="https://youtu.be/5fvwoHKj6cs"&gt;https://youtu.be/5fvwoHKj6cs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;V&amp;iacute;deo sobre SOPA:
&lt;a href="https://youtu.be/VKOwpIOX1rA"&gt;https://youtu.be/VKOwpIOX1rA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;V&amp;iacute;deo sobre PIPA:
&lt;a href="https://youtu.be/D9FnaygIXZA"&gt;https://youtu.be/D9FnaygIXZA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Otro v&amp;iacute;deo que trata sobre los derechos de autor:
&lt;a href="https://youtu.be/D9FnaygIXZA"&gt;https://youtu.be/D9FnaygIXZA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Por esa raz&amp;oacute;n el sitio de Debian Venezuela tendr&amp;aacute; una p&amp;aacute;gina como protesta como lo muestra la figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/noasopaypipa-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Este blog estar&amp;aacute; en protesta el d&amp;iacute;a de ma&amp;ntilde;ana desde las 8am hasta las 8am del d&amp;iacute;a siguiente como lo muestra la figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/noasopaypipa-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Y esto por que? pues para evitar que muchos sitios tengan un mensaje de que est&amp;aacute; censurado:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/noasopaypipa-5.png"/&gt;&lt;/p&gt;
&lt;p&gt;Hasta ahora los sitios que estar&amp;aacute;n protestando son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wikipedia&lt;/li&gt;
&lt;li&gt;Identi.ca&lt;/li&gt;
&lt;li&gt;Mozilla&lt;/li&gt;
&lt;li&gt;FreeSoftware Fundation&lt;/li&gt;
&lt;li&gt;Reddit&lt;/li&gt;
&lt;li&gt;Tucows&lt;/li&gt;
&lt;li&gt;XDA Developers &lt;/li&gt;
&lt;li&gt;Cuevana&lt;/li&gt;
&lt;li&gt;Anonymous&lt;/li&gt;
&lt;li&gt;Diaspora&lt;/li&gt;
&lt;li&gt;Twicpic&lt;/li&gt;
&lt;li&gt;Wordpress&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Y sigue sumando, si quiere conocer la lista completa la pueden ver &lt;a href="http://nlb-creations.com/2012/01/13/websites-confirmed-for-the-jan-18-blackout-protesting-sopa/"&gt;aqu&amp;iacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;De latinoamerica se suma Hipatia, Solar, Solve Colibris, Debian-ve, etc.&lt;/p&gt;
&lt;p&gt;Los que quieran apoyar la protesta colocando banners o quieren tener una infograf&amp;iacute;a lo pueden ver en los siguientes enlaces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Infograf&amp;iacute;a: La pueden encontrar en la p&amp;aacute;gina de &lt;a href="http://derechoaleer.org/blog/"&gt;Derecho a Leer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Plantilla de protesta para sus sitios lo pueden encontrar en art&amp;iacute;culo de &lt;a href="https://hipertextual.com/archivo/2012/01/sopa-plantilla-para-sumar-tu-sitio-web-a-la-protesta-del-18j/"&gt;alt1040&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Si sus sitios o blogs usan Drupal, Wordpress o Blogger, tienen una gu&amp;iacute;a de como protestar en el sitio de  &lt;a href="https://ciberlatino.wordpress.com/2012/01/16/sopa-pipa-como-poner-tu-sitio-web-en-modo-blackout/"&gt;Cibernauta Latino&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Ubuntu"></category></entry><entry><title>Servidor Proxy DNS con pdnsd</title><link href="https://ecrespo.github.io/servidor-proxy-dns-con-pdnsd.html" rel="alternate"></link><published>2012-01-10T09:00:00-05:30</published><updated>2012-01-10T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-01-10:/servidor-proxy-dns-con-pdnsd.html</id><summary type="html">&lt;p&gt;Ya hace un tiempo hab&amp;iacute;a explicado como se instala un servidor proxy DNS con &lt;code&gt;dnsmasq&lt;/code&gt;, ahora explicar&amp;eacute; la configuraci&amp;oacute;n de &lt;code&gt;PDNSD&lt;/code&gt; utilizando como servidor de DNS los servidores ra&amp;iacute;z de &lt;a href="https://es.wikipedia.org/wiki/OpenNIC"&gt;OpenNIC&lt;/a&gt; debido a los posibles problemas que nos genere la aprobaci&amp;oacute;n de la Ley SOPA y la Censura en Internet …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ya hace un tiempo hab&amp;iacute;a explicado como se instala un servidor proxy DNS con &lt;code&gt;dnsmasq&lt;/code&gt;, ahora explicar&amp;eacute; la configuraci&amp;oacute;n de &lt;code&gt;PDNSD&lt;/code&gt; utilizando como servidor de DNS los servidores ra&amp;iacute;z de &lt;a href="https://es.wikipedia.org/wiki/OpenNIC"&gt;OpenNIC&lt;/a&gt; debido a los posibles problemas que nos genere la aprobaci&amp;oacute;n de la Ley SOPA y la Censura en Internet.&lt;/p&gt;
&lt;p&gt;Si quiere utilizar los servidores de DNS de &lt;code&gt;OpenNIC&lt;/code&gt;  m&amp;aacute;s cercanos puede visitar el siguiente &lt;a href="http://wiki.opennicproject.org/ClosestT2Servers"&gt;enlace&lt;/a&gt;. Si desea m&amp;aacute;s informaci&amp;oacute;n sobre &lt;code&gt;OpenNIC&lt;/code&gt; puede revisar el siguiente &lt;a href="http://ww1.linuxerz.org/"&gt;art&amp;iacute;culo&lt;/a&gt; y la p&amp;aacute;gina del &lt;a href="http://www.opennicproject.org/"&gt;proyecto&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En mi caso luego de consultar los servidores de &lt;code&gt;OpenNIC&lt;/code&gt; m&amp;aacute;s cercanos usar&amp;eacute; el siguiente servidor de DNS 192.121.86.100.&lt;/p&gt;
&lt;p&gt;Instalaci&amp;oacute;n de &lt;code&gt;pdnsd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En Debian simplemente se ejecuta un &lt;code&gt;apt-get install&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;#apt-get install pdnsd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;La aplicaci&amp;oacute;n muestra una ventana de dialogo donde menciona 3 m&amp;eacute;todos de configuraci&amp;oacute;n (resolvconf, servidores de DNS ra&amp;iacute;z o manual).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/servidorproxydnsconpdnsd-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;En este caso se usar&amp;aacute; el m&amp;eacute;todo manual y se selecciona en la ventana de dialogo.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/servidorproxydnsconpdnsd-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se edita el archivo &lt;code&gt;/etc/pdnsd.conf&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;Se agrega la siguiente informaci&amp;oacute;n:&lt;br/&gt;
&lt;code&gt;server {
    label = "OpenNIC";
    ip = 192.121.86.100; //IP del servidor DNS
    uptest = query;     //Lrealiza consultas  DNS de una solicitud DNS.
    interface=wlan0;     //La interface conectada a la red.
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se modifica a &lt;code&gt;yes&lt;/code&gt; el par&amp;aacute;metro &lt;code&gt;START_DAEMON&lt;/code&gt; del archivo &lt;code&gt;/etc/default/pdnsd&lt;/code&gt; para iniciar autom&amp;aacute;ticamente el servicio &lt;code&gt;pdnsd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;START_DAEMON=yes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al editar el archivo &lt;code&gt;/etc/resolv.conf&lt;/code&gt; y agregar el servidor de DNS 127.0.0.1.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nameserver 127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se reinicia el servicio &lt;code&gt;pdnsd&lt;/code&gt;:&lt;br/&gt;
```&lt;/p&gt;
&lt;h1 id="invoke-rc.d pdnsd restart"&gt;invoke-rc.d pdnsd restart&lt;/h1&gt;
&lt;p&gt;Stopping pdnsd.
Starting pdnsd.
&lt;code&gt;Se hace una consulta con `dig`:&lt;/code&gt;
dig www.barrapunto.com|grep "Query time"
;; Query time: 316 msec&lt;/p&gt;
&lt;p&gt;dig www.barrapunto.com|grep "Query time"
;; Query time: 2 msec
&lt;code&gt;Para verificar el funcionamiento del servidor se ejecuta el siguiente comando:&lt;/code&gt;&lt;/p&gt;
&lt;h1 id="pdnsd-ctl status"&gt;pdnsd-ctl status&lt;/h1&gt;
&lt;p&gt;Opening socket /var/cache/pdnsd/pdnsd.status&lt;/p&gt;
&lt;p&gt;pdnsd-1.2.8-par running on jewel.&lt;/p&gt;
&lt;h1 id="cache status:"&gt;Cache status:&lt;/h1&gt;
&lt;p&gt;2048 kB maximum disk cache size.
56894 of 2107392 bytes (2.7%) memory cache used in 216 entries.&lt;/p&gt;
&lt;h1 id="thread status:"&gt;Thread status:&lt;/h1&gt;
&lt;p&gt;server status thread is running.
pdnsd control thread is running.
tcp server thread is running.
udp server thread is running.
19 query threads spawned in total (0 queries dropped).
10 running query threads (10 active, 0 queued).&lt;/p&gt;
&lt;h1 id="configuration:"&gt;Configuration:&lt;/h1&gt;
&lt;h2 id="global:"&gt;Global:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Cache size: 2048 kB
Server directory: /var/cache/pdnsd
Scheme file (for Linux pcmcia support): /var/lib/pcmcia/scheme
Server port: 53
Server ip (0.0.0.0=any available one): 127.0.0.1
Ignore cache when link is down: off
Maximum ttl: 604800
Minimum ttl: 900
Negative ttl: 900
Negative RRS policy: default
Negative domain policy: auth
Run as: pdnsd
Strict run as: on
Use NSS: on
Paranoid mode (cache pollution prevention): on
Ignore CD ('checking disabled') flag in queries: on
Control socket permissions (mode): 600
Maximum parallel queries served: 40
Maximum queries queued for serving: 60
Global timeout setting: 10
Parallel queries increment: 2
Randomize records in answer: on
Query method: udp_only
Query port start: 1024
Query port end: 65535
TCP server thread: on
TCP query timeout: 30
Delegation-only zones: (none)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="server 0:"&gt;Server 0:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;label: OpenNIC
ip: 192.121.86.100
server assumed available: yes
port: 53
uptest: query
timeout: 120
uptest interval: 900
ping timeout: 600
ping ip: (using server ip)
interface: wlan0
device (for special Linux ppp device support):
uptest command:
uptest user: (process owner)
force cache purging: off
server is cached: on
lean query: on
Use only proxy?: off
Assumed root server: no
Randomize server query order: no
Default policy: included
Policies: (none)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Succeeded
```&lt;/p&gt;
&lt;p&gt;Se pueden agregar tantas IPS como se quiera.&lt;/p&gt;
&lt;p&gt;Si desea m&amp;aacute;s informaci&amp;oacute;n para configurar pdnsd revise los siguientes enlaces:  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/Pdnsd_(Espa%C3%B1ol)"&gt;https://wiki.archlinux.org/index.php/Pdnsd_(Espa%C3%B1ol)&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="http://manualinux.heliohost.org/pdnsd.html"&gt;http://manualinux.heliohost.org/pdnsd.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="DNS"></category><category term="General"></category><category term="Linux"></category><category term="Ubuntu"></category></entry><entry><title>Feliz año 2012</title><link href="https://ecrespo.github.io/feliz-ano-2012.html" rel="alternate"></link><published>2012-01-09T09:00:00-05:30</published><updated>2012-01-09T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2012-01-09:/feliz-ano-2012.html</id><summary type="html">&lt;p&gt;Les deseo a todos un Feliz a&amp;ntilde;o 2012 y que todas sus metas se cumplan. Este correo deb&amp;iacute; enviarlo los primeros d&amp;iacute;as del a&amp;ntilde;o pero por motivos de viaje fue hasta ahorita que pude sentarme a escribir.&lt;/p&gt;
&lt;p&gt;Entre las metas de este blog fue el escribir para el a&amp;ntilde;o 2011 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Les deseo a todos un Feliz a&amp;ntilde;o 2012 y que todas sus metas se cumplan. Este correo deb&amp;iacute; enviarlo los primeros d&amp;iacute;as del a&amp;ntilde;o pero por motivos de viaje fue hasta ahorita que pude sentarme a escribir.&lt;/p&gt;
&lt;p&gt;Entre las metas de este blog fue el escribir para el a&amp;ntilde;o 2011 por lo menos m&amp;aacute;s de 36 art&amp;iacute;culos que fue logrado el a&amp;ntilde;o 2009, en el 2011  se publicaron 49 art&amp;iacute;culos que da un promedio por mes de 4 art&amp;iacute;culos.&lt;/p&gt;
&lt;p&gt;Adicional a esto en el mes de Diciembre se logr&amp;oacute; superar la cantidad de visitas mensuales del blog de 3800 que fue el m&amp;aacute;ximo a 4160 para ese mes seg&amp;uacute;n lo muestra la siguiente figura.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/felizano2012-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La distribuci&amp;oacute;n por pa&amp;iacute;ses de las visitas al blog en toda su vida es la siguiente:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Espa&amp;ntilde;a 11.440  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Venezuela 6.697  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M&amp;eacute;xico 5.927  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Argentina 4.261     &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Estados Unidos 3.230  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chile 2.799  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Colombia 2.042  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Per&amp;uacute; 757  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alemania 674  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pa&amp;iacute;ses Bajos 509  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Muchas gracias a todos por leer el blog.&lt;/p&gt;
&lt;p&gt;Para este a&amp;ntilde;o espero terminar con los art&amp;iacute;culos sobre &lt;code&gt;PyQt&lt;/code&gt;, &lt;code&gt;PyGTK&lt;/code&gt;, gr&amp;aacute;ficos con python, android con python y seguir con art&amp;iacute;culos sobre empaquetado para Python y Debian, de administraci&amp;oacute;n de servidores, mercurial, monitoreo entre otros temas. Posiblemente empezar a escribir sobre programaci&amp;oacute;n de Python con &lt;code&gt;wxwidget&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Es m&amp;aacute;s, siguiendo el ejemplo de Blogeros como el sitio Orsai, dejo abierta la posibilidad de quienes leen este blog propongan temas, claro sobre software Libre y Linux.&lt;/p&gt;
&lt;p&gt;Por lo pronto aspiro que este a&amp;ntilde;o pueda escribir m&amp;aacute;s de 50 art&amp;iacute;culos. Espero tener el tiempo y los temas preparados para lograrlo.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="Ubuntu"></category></entry><entry><title>Generar una gráfica en python con PyQwt. Parte 1</title><link href="https://ecrespo.github.io/generar-una-grafica-en-python-con-pyqwt-parte-1.html" rel="alternate"></link><published>2011-12-11T09:00:00-05:30</published><updated>2011-12-11T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-12-11:/generar-una-grafica-en-python-con-pyqwt-parte-1.html</id><summary type="html">&lt;p&gt;Continuando con las librer&amp;iacute;as para generar gr&amp;aacute;ficos en Python ahora explicar&amp;eacute; como usar la librer&amp;iacute;as &lt;code&gt;PyQwt&lt;/code&gt; de Qt para crear gr&amp;aacute;ficas.&lt;/p&gt;
&lt;p&gt;Este ejemplo se baja en la introducci&amp;oacute;n que tiene la p&amp;aacute;gina oficial de &lt;a href="http://pyqwt.sourceforge.net/doc5/introduction.html"&gt;PyQwt&lt;/a&gt;. En este caso se cambi&amp;oacute; el rango del arreglo y las funciones a graficar.&lt;/p&gt;
&lt;p&gt;En …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con las librer&amp;iacute;as para generar gr&amp;aacute;ficos en Python ahora explicar&amp;eacute; como usar la librer&amp;iacute;as &lt;code&gt;PyQwt&lt;/code&gt; de Qt para crear gr&amp;aacute;ficas.&lt;/p&gt;
&lt;p&gt;Este ejemplo se baja en la introducci&amp;oacute;n que tiene la p&amp;aacute;gina oficial de &lt;a href="http://pyqwt.sourceforge.net/doc5/introduction.html"&gt;PyQwt&lt;/a&gt;. En este caso se cambi&amp;oacute; el rango del arreglo y las funciones a graficar.&lt;/p&gt;
&lt;p&gt;En el ejemplo se crea el rango de valores con &lt;code&gt;numpy&lt;/code&gt;, luego se crea la instancia de la Clase QApplication para crear las 2 curvas y luego salvarla en un archivo con formato &lt;code&gt;.png&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar numpy"&gt;Importar numpy&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="importar las librerias qt"&gt;Importar las librerias Qt&lt;/h1&gt;
&lt;p&gt;from PyQt4.Qt import *&lt;/p&gt;
&lt;h1 id="importar las librerias qwt5"&gt;Importar las librerias Qwt5&lt;/h1&gt;
&lt;p&gt;from PyQt4.Qwt5 import *&lt;/p&gt;
&lt;h1 id="de qwt5 importar qplt"&gt;De Qwt5 importar qplt&lt;/h1&gt;
&lt;p&gt;from PyQt4.Qwt5.qplt import *&lt;/p&gt;
&lt;h1 id="importar sleep"&gt;Importar sleep&lt;/h1&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="instanciar la clase qapplication"&gt;Instanciar la clase QApplication&lt;/h1&gt;
&lt;p&gt;application = QApplication([])&lt;/p&gt;
&lt;h1 id="crea un arreglo desde -4pi a 4pi en incrementos de 0.01"&gt;Crea un arreglo desde -4PI a 4Pi en incrementos de 0.01&lt;/h1&gt;
&lt;p&gt;x = np.arange(-4&lt;em&gt;np.pi, 4&lt;/em&gt;np.pi, 0.01)&lt;/p&gt;
&lt;h1 id="crea 2 curvas con el eje vertical en escala logaritmica."&gt;Crea 2 curvas con el eje vertical en escala logaritmica.&lt;/h1&gt;
&lt;p&gt;p = Plot(Curve(x, np.cos(x), Pen(Blue, 2), "cos(x)"),
Curve(x, np.exp(x)+4+4&lt;em&gt;np.sin(x), Pen(Magenta,2), "exp(x)+4&lt;/em&gt;sin(x)+4",Y2),
Axis(Y2, Log),"PyQwt usando Qwt-%s " % QWT_VERSION_STR)&lt;/p&gt;
&lt;h1 id="hace una captura de pantalla de la imagen y lo guarda en un archivo con formato png"&gt;Hace una captura de pantalla de la imagen y lo guarda en un archivo con formato PNG&lt;/h1&gt;
&lt;p&gt;QPixmap.grabWidget(p).save('cli-plot-1.png', 'PNG')
```&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica generada se muestra en la siguiente figura:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/generarunagraficaenpythonconpyqwt-1.png"/&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="General"></category><category term="gnome"></category><category term="Linux"></category><category term="numpy"></category><category term="pyQwt"></category><category term="Python"></category><category term="Ubuntu"></category></entry><entry><title>Compartir repositorios Mercurial por ssh</title><link href="https://ecrespo.github.io/compartir-repositorios-mercurial-por-ssh.html" rel="alternate"></link><published>2011-12-08T09:00:00-05:30</published><updated>2011-12-08T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-12-08:/compartir-repositorios-mercurial-por-ssh.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.seraph.to/compartir-repositorios-de-mercurial-con-mercurial-server.html"&gt;En art&amp;iacute;culo anterior&lt;/a&gt; se explica como compartir un repositorio mercurial con &lt;code&gt;mercurial-server&lt;/code&gt;, ahora se explicar&amp;aacute; como hacerlo usando &lt;code&gt;ssh&lt;/code&gt; con claves p&amp;uacute;blicas.&lt;/p&gt;
&lt;p&gt;Lo que primero se va a hacer es crear la clave p&amp;uacute;blica para &lt;code&gt;ssh&lt;/code&gt; y distribuirlo al equipo o los equipos, luego se verifica el funcionamiento del &lt;code&gt;ssh …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.seraph.to/compartir-repositorios-de-mercurial-con-mercurial-server.html"&gt;En art&amp;iacute;culo anterior&lt;/a&gt; se explica como compartir un repositorio mercurial con &lt;code&gt;mercurial-server&lt;/code&gt;, ahora se explicar&amp;aacute; como hacerlo usando &lt;code&gt;ssh&lt;/code&gt; con claves p&amp;uacute;blicas.&lt;/p&gt;
&lt;p&gt;Lo que primero se va a hacer es crear la clave p&amp;uacute;blica para &lt;code&gt;ssh&lt;/code&gt; y distribuirlo al equipo o los equipos, luego se verifica el funcionamiento del &lt;code&gt;ssh&lt;/code&gt; con la clave p&amp;uacute;blica.&lt;/p&gt;
&lt;p&gt;La idea es mantener respaldado la configuraci&amp;oacute;n de un equipo que est&amp;aacute; con control de versiones con mercurial usando &lt;a href="https://www.seraph.to/gestionar-los-archivos-de-configuracion-en-etc-con-etckeeper-y-mercurial.html"&gt;etckeeper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En el servidor es necesario instalar &lt;code&gt;etckeeper&lt;/code&gt;, &lt;code&gt;mercurial&lt;/code&gt; y &lt;code&gt;ssh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install etckeeper mercurial openssh-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Configurar &lt;code&gt;etckeeper&lt;/code&gt; y &lt;code&gt;mercurial&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /etc/etckeeper/etckeeper.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se descomenta y agrega lo siguiente en el archivo:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="the vcs to use."&gt;The VCS to use.&lt;/h1&gt;
&lt;p&gt;VCS="hg"&lt;/p&gt;
&lt;h1 id='vcs="git"'&gt;VCS="git"&lt;/h1&gt;
&lt;h1 id='vcs="bzr"'&gt;VCS="bzr"&lt;/h1&gt;
&lt;h1 id='vcs="darcs"'&gt;VCS="darcs"&lt;/h1&gt;
&lt;h1 id="options passed to git commit when run by etckeeper."&gt;Options passed to git commit when run by etckeeper.&lt;/h1&gt;
&lt;h1 id='git_commit_options=""'&gt;GIT_COMMIT_OPTIONS=""&lt;/h1&gt;
&lt;h1 id="options passed to hg commit when run by etckeeper."&gt;Options passed to hg commit when run by etckeeper.&lt;/h1&gt;
&lt;p&gt;HG_COMMIT_OPTIONS="-u ecrespo@gmail.com"&lt;/p&gt;
&lt;h1 id="options passed to bzr commit when run by etckeeper."&gt;Options passed to bzr commit when run by etckeeper.&lt;/h1&gt;
&lt;h1 id='bzr_commit_options=""'&gt;BZR_COMMIT_OPTIONS=""&lt;/h1&gt;
&lt;h1 id="options passed to darcs record when run by etckeeper."&gt;Options passed to darcs record when run by etckeeper.&lt;/h1&gt;
&lt;h1 id='darcs_commit_options="-a"'&gt;DARCS_COMMIT_OPTIONS="-a"&lt;/h1&gt;
&lt;h1 id="uncomment to avoid etckeeper committing existing changes"&gt;Uncomment to avoid etckeeper committing existing changes&lt;/h1&gt;
&lt;h1 id="to /etc automatically once per day."&gt;to /etc automatically once per day.&lt;/h1&gt;
&lt;p&gt;AVOID_DAILY_AUTOCOMMITS=1&lt;/p&gt;
&lt;h1 id="uncomment to avoid etckeeper committing existing changes to"&gt;Uncomment to avoid etckeeper committing existing changes to&lt;/h1&gt;
&lt;h1 id="/etc before installation. it will cancel the installation,"&gt;/etc before installation. It will cancel the installation,&lt;/h1&gt;
&lt;h1 id="so you can commit the changes by hand."&gt;so you can commit the changes by hand.&lt;/h1&gt;
&lt;h1 id="avoid_commit_before_install=1"&gt;AVOID_COMMIT_BEFORE_INSTALL=1&lt;/h1&gt;
&lt;h1 id="the high-level package manager that's being used."&gt;The high-level package manager that's being used.&lt;/h1&gt;
&lt;h1 id="(apt, pacman-g2, yum etc)"&gt;(apt, pacman-g2, yum etc)&lt;/h1&gt;
&lt;p&gt;HIGHLEVEL_PACKAGE_MANAGER=apt&lt;/p&gt;
&lt;h1 id="the low-level package manager that's being used."&gt;The low-level package manager that's being used.&lt;/h1&gt;
&lt;h1 id="(dpkg, rpm, pacman-g2, etc)"&gt;(dpkg, rpm, pacman-g2, etc)&lt;/h1&gt;
&lt;p&gt;LOWLEVEL_PACKAGE_MANAGER=dpkg&lt;br/&gt;
```&lt;/p&gt;
&lt;p&gt;Luego:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /etc/mercurial/hgrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```
[ui]
username = "Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@gmail.com"&gt;ecrespo@gmail.com&lt;/a&gt;"
editor = vim&lt;/p&gt;
&lt;h1 id="pedir indicacion de archivos cambiados:"&gt;pedir indicaci&amp;oacute;n de archivos cambiados:&lt;/h1&gt;
&lt;p&gt;verbose=True
```&lt;/p&gt;
&lt;p&gt;Inicializar &lt;code&gt;etckeeper&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;etckeeper init
...
adding ssl/certs/f950ccc2.0
adding ssl/certs/facacbc6.0
adding ssl/certs/ff783690.0
adding ssl/certs/signet_ca1_pem.pem
adding ssl/certs/signet_ca2_pem.pem
adding ssl/certs/signet_ca3_pem.pem
adding ssl/certs/signet_ocspklasa2_pem.pem
adding ssl/certs/signet_ocspklasa3_pem.pem
adding ssl/certs/signet_pca2_pem.pem
adding ssl/certs/signet_pca3_pem.pem
adding ssl/certs/signet_rootca_pem.pem
adding ssl/certs/signet_tsa1_pem.pem
adding ssl/certs/spi-ca-2003.pem
adding ssl/certs/spi-cacert-2008.pem
adding ssl/certs/ssl-cert-snakeoil.pem
adding ssl/certs/thawte_Primary_Root_CA.pem
adding ssl/openssl.cnf
adding ssl/private/ssl-cert-snakeoil.key
adding subversion/config
adding subversion/servers
adding sudoers
adding sudoers.d/README
adding sysctl.conf
adding sysctl.d/README.sysctl
adding sysctl.d/bindv6only.conf
adding terminfo/README
adding timezone
adding ts.conf
adding ucf.conf
adding ufw/applications.d/bind9
adding ufw/applications.d/openssh-server
adding ufw/applications.d/postfix
adding vga/dvorak-us.keymap
adding vga/libvga.config
adding vga/libvga.et4000
adding vga/null.keymap
adding vim/vimrc
adding vim/vimrc.tiny
adding w3m/config
adding w3m/mailcap
adding wgetrc
adding xml/catalog
adding xml/xml-core.xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Este comando agregar&amp;aacute; todos los archivos de configuraci&amp;oacute;n dentro del directorio &lt;code&gt;/etc&lt;/code&gt; a un control de versiones, en este caso &lt;code&gt;mercurial&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Al ejecutar el comando de mercurial para ver el estatus muestra los archivos que fueron agregados:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg status /etc/
...
A sudoers
A sudoers.d/README
A sysctl.conf
A sysctl.d/README.sysctl
A sysctl.d/bindv6only.conf
A terminfo/README
A timezone
A ts.conf
A ucf.conf
A ufw/applications.d/bind9
A ufw/applications.d/openssh-server
A ufw/applications.d/postfix
A vga/dvorak-us.keymap
A vga/libvga.config
A vga/libvga.et4000
A vga/null.keymap
A vim/vimrc
A vim/vimrc.tiny
A w3m/config
A w3m/mailcap
A wgetrc
A xml/catalog
A xml/xml-core.xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se hace el primer commit.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;etckeeper commit "Inicializacion del control de versiones"
...
sysctl.conf
sysctl.d/README.sysctl
sysctl.d/bindv6only.conf
terminfo/README
timezone
ts.conf
ucf.conf
ufw/applications.d/bind9
ufw/applications.d/openssh-server
ufw/applications.d/postfix
vga/dvorak-us.keymap
vga/libvga.config
vga/libvga.et4000
vga/null.keymap
vim/vimrc
vim/vimrc.tiny
w3m/config
w3m/mailcap
wgetrc
xml/catalog
xml/xml-core.xml
committed changeset 0:10c12e9f2889&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se crear&amp;aacute; la clave ssh y se copiar&amp;aacute; en el servidor.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh-keygen -t rsa -C "ecrespo@gmail.com" -f hgernesto-identity
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in hgernesto-identity.
Your public key has been saved in hgernesto-identity.pub.
The key fingerprint is:
ca:7a:09:57:77:85:9c:05:d8:73:ca:d0:b1:41:5c:11 ecrespo@gmail.com
The key's randomart image is:
+--[ RSA 2048]----+
|           B=BEo |
|          o Ooo  |
|           o.=   |
|        . . +    |
|       .S. .     |
|    ....         |
|     oo.         |
|     .o          |
|    ..           |
+-----------------+&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se copia la clave p&amp;uacute;blica al servidor.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scp hgernesto-identity.pub ernesto@www.crespo.org.ve:.ssh/
ernesto@www.crespo.org.ve's password:
hgernesto-identity.pub           100%  399     0.4KB/s   00:00&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;Se accede al servidor:&lt;/p&gt;
&lt;p&gt;```
ssh ernesto@www.crespo.org.ve
ernesto@www.crespo.org.ve's password:
Linux crespo.org.ve 2.6.26-2-vserver-amd64 #1 SMP Fri Aug 14 09:21:21 UTC 2009 x86_64&lt;/p&gt;
&lt;p&gt;The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.&lt;/p&gt;
&lt;p&gt;Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Thu Dec  8 18:58:20 2011 from 190.75.37.237&lt;/p&gt;
&lt;p&gt;ernesto@crespo:~$
```&lt;/p&gt;
&lt;p&gt;Se agrega la llave publica al archivo &lt;code&gt;authorized_keys&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd .ssh
cat hgernesto-identity.pub &amp;amp;gt;&amp;amp;gt;  authorized_keys&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se regresa al equipo que se conectar&amp;aacute; al servidor.&lt;/p&gt;
&lt;p&gt;Se crea el archivo &lt;code&gt;~/.ssh/config&lt;/code&gt; Se agrega el host, el usuario y la clave privada que se va a usar para la conexi&amp;oacute;n ssh.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Host www.crespo.org.ve
    user ernesto
    IdentityFile ~/.ssh/hgernesto-identity&lt;/code&gt;
Se verifica que se conecte al servidor usando la llave p&amp;uacute;blica.&lt;/p&gt;
&lt;p&gt;```
ssh www.crespo.org.ve -i ~/.ssh/hgernesto-identity -l ernesto
Linux crespo.org.ve 2.6.26-2-vserver-amd64 #1 SMP Fri Aug 14 09:21:21 UTC 2009 x86_64&lt;/p&gt;
&lt;p&gt;The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.&lt;/p&gt;
&lt;p&gt;Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Thu Dec  8 19:20:08 2011 from 190.75.37.237&lt;/p&gt;
&lt;p&gt;ernesto@crespo:~$
```&lt;/p&gt;
&lt;p&gt;Esta vez el servidor no pidi&amp;oacute; clave para el usuario.&lt;/p&gt;
&lt;p&gt;Ahora se va a clonar el directorio etc para tener la configuraci&amp;oacute;n en el home del usuario.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo hg clone /etc conf-www.respo.org.ve
...
getting subversion/servers
getting sudoers
getting sudoers.d/README
getting sysctl.conf
getting sysctl.d/README.sysctl
getting sysctl.d/bindv6only.conf
getting terminfo/README
getting timezone
getting ts.conf
getting ucf.conf
getting ufw/applications.d/bind9
getting ufw/applications.d/openssh-server
getting ufw/applications.d/postfix
getting vga/dvorak-us.keymap
getting vga/libvga.config
getting vga/libvga.et4000
getting vga/null.keymap
getting vim/vimrc
getting vim/vimrc.tiny
getting w3m/config
getting w3m/mailcap
getting wgetrc
getting xml/catalog
getting xml/xml-core.xml
1775 files updated, 0 files merged, 0 files removed, 0 files unresolved&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se cambia el due&amp;ntilde;o y el grupo del repositorio ya que pertenece a root y no se va  a poder clonar con ese due&amp;ntilde;o.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo chown -R ernesto.ecrespo conf-www.respo.org.ve/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se prueba realizar la clonaci&amp;oacute;n del repositorio del servidor en la m&amp;aacute;quina local.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@zeath:~$ hg clone ssh://ernesto@www.crespo.org.ve/repo/conf-www.respo.org.ve
destination directory: conf-www.respo.org.ve
requesting all changes
adding changesets
adding manifests
adding file changes
added 1 changesets with 1775 changes to 1775 files
updating to branch default
1775 files updated, 0 files merged, 0 files removed, 0 files unresolved
remote: 1 changesets found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se verifica el repositorio local.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@zeath:~$ hg log conf-www.respo.org.ve/
changeset:   0:10c12e9f2889
tag:         tip
user:        ecrespo@gmail.com
date:        Thu Dec 08 19:11:24 2011 +0000
summary:     Inicializacion del control de versiones&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ya se tiene respaldada la configuraci&amp;oacute;n del servidor por medio de control de versiones, si se desea tener automatizado el proceso se puede crear scripts que se coloquen en el cron de manera que diariamente se tenga actualizado el respaldo de la configuraci&amp;oacute;n del servidor por medio de control de versiones distribuido (mercurial).&lt;/p&gt;
&lt;p&gt;Es recomendable sacar del control de versiones los archivos &lt;code&gt;shadow&lt;/code&gt;, &lt;code&gt;passwd&lt;/code&gt; y &lt;code&gt;group&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Control de versiones"></category><category term="Debian"></category><category term="Linux"></category><category term="mercurial"></category><category term="ssh"></category><category term="Ubuntu"></category></entry><entry><title>Creación de paquete Debian que contiene un archivo cron con config-package-dev</title><link href="https://ecrespo.github.io/creacion-de-paquete-debian-que-contiene-un-archivo-cron-con-config-package-dev.html" rel="alternate"></link><published>2011-11-14T09:00:00-05:30</published><updated>2011-11-14T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-11-14:/creacion-de-paquete-debian-que-contiene-un-archivo-cron-con-config-package-dev.html</id><summary type="html">&lt;p&gt;El paquete &lt;code&gt;config-package-dev&lt;/code&gt; facilita la creaci&amp;oacute;n de un paquete Debian que contenga un archivo de configuraci&amp;oacute;n de cron.&lt;/p&gt;
&lt;p&gt;Para este caso se crear&amp;aacute; un archivo cron para el programa &lt;code&gt;logcheck&lt;/code&gt;. Este programa estar&amp;aacute; como Pre-Depends para que est&amp;eacute; instalado y configurado antes de instalar el paquete con la configuraci&amp;oacute;n de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El paquete &lt;code&gt;config-package-dev&lt;/code&gt; facilita la creaci&amp;oacute;n de un paquete Debian que contenga un archivo de configuraci&amp;oacute;n de cron.&lt;/p&gt;
&lt;p&gt;Para este caso se crear&amp;aacute; un archivo cron para el programa &lt;code&gt;logcheck&lt;/code&gt;. Este programa estar&amp;aacute; como Pre-Depends para que est&amp;eacute; instalado y configurado antes de instalar el paquete con la configuraci&amp;oacute;n de &lt;code&gt;logcheck&lt;/code&gt; en el cron.&lt;/p&gt;
&lt;p&gt;Instalar &lt;code&gt;logcheck&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install logcheck&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El archivo cron para &lt;code&gt;logcheck&lt;/code&gt; contendr&amp;aacute; lo siguiente:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="/etc/cron.d/logcheck: crontab entries for the logcheck package"&gt;/etc/cron.d/logcheck: crontab entries for the logcheck package&lt;/h1&gt;
&lt;p&gt;PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root&lt;/p&gt;
&lt;p&gt;@reboot logcheckif [ -x /usr/sbin/logcheck ]; then nice -n10 /usr/sbin/logcheck -R; fi
* &lt;em&gt; * &lt;/em&gt; *   logcheckif [ -x /usr/sbin/logcheck ]; then nice -n10 /usr/sbin/logcheck; fi&lt;/p&gt;
&lt;h1 id="eof"&gt;EOF&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h2 id="procedimiento para la creacion del paquete:"&gt;Procedimiento para la creaci&amp;oacute;n del paquete:&lt;/h2&gt;
&lt;h4 id="1. creacion del directorio de trabajo y del directorio debian"&gt;1. Creaci&amp;oacute;n del directorio de trabajo y del directorio Debian&lt;/h4&gt;
&lt;p&gt;``` 
mkdir -p canaima-cron-logcheck-0.1&lt;/p&gt;
&lt;p&gt;mkdir -p canaima-cron-logcheck-0.1/debian
```&lt;/p&gt;
&lt;h4 id="2. se crea el archivo debian/changelog."&gt;2. Se crea el archivo &lt;code&gt;debian/changelog&lt;/code&gt;.&lt;/h4&gt;
&lt;p&gt;```
canaima-cron-logcheck (0.1) unstable; urgency=low&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Initial release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-- Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@gmail.com"&gt;ecrespo@gmail.com&lt;/a&gt;  Mon, 14 Nov 2011 21:48:20 -0430
```&lt;/p&gt;
&lt;h4 id="3. se crea el archivo compat con el valor de 7."&gt;3. Se crea el archivo &lt;code&gt;compat&lt;/code&gt; con el valor de 7.&lt;/h4&gt;
&lt;h4 id="4. se crea el archivo control y control.in con lo siguiente:"&gt;4. Se crea el archivo &lt;code&gt;control&lt;/code&gt; y &lt;code&gt;control.in&lt;/code&gt; con lo siguiente:&lt;/h4&gt;
&lt;p&gt;Se coloca &lt;code&gt;logcheck&lt;/code&gt; como predependencia, se define el &lt;code&gt;standar version&lt;/code&gt; con valor &lt;code&gt;3.9.2&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;```
Source: canaima-cron-logcheck
Section: config
Priority: extra
Maintainer: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@gmail.com"&gt;ecrespo@gmail.com&lt;/a&gt;
Build-Depends: cdbs (&amp;gt;= 0.4.23-1.1), debhelper (&amp;gt;= 4.2.0), config-package-dev (&amp;gt;= 4.5~)
Standards-Version: 3.9.2&lt;/p&gt;
&lt;p&gt;Package: canaima-cron-logcheck
Architecture: all
Depends: cdbs, ${misc:Depends}
Pre-Depends: logcheck
Provides: ${diverted-files}
Conflicts: ${diverted-files}
Description: Configuracion de cron para logcheck
Configuracion de cron para logcheck.
```&lt;/p&gt;
&lt;h4 id="5. se crea el archivo debian/copyright:"&gt;5. Se crea el archivo &lt;code&gt;debian/copyright&lt;/code&gt;:&lt;/h4&gt;
&lt;p&gt;Se mantiene el autor del paquete ya que se est&amp;aacute; usando tal cual el ejemplo de cron para logcheck de &lt;code&gt;config-package-dev&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;```
canaima-cron-logcheck.
Example config-package-dev package.&lt;/p&gt;
&lt;p&gt;Author: Tim Abbott &lt;a href="mailto:tabbott@mit.edu"&gt;tabbott@mit.edu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright &amp;copy; 2008 Tim Abbott &lt;a href="mailto:tabbott@mit.edu"&gt;tabbott@mit.edu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
```&lt;/p&gt;
&lt;h4 id="6. se crea el archivo debian/canaima-cron-logcheck.cron.d con el contenido del cron para logcheck:"&gt;6. Se crea el archivo &lt;code&gt;debian/canaima-cron-logcheck.cron.d&lt;/code&gt; con el contenido del cron para &lt;code&gt;logcheck&lt;/code&gt;:&lt;/h4&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="/etc/cron.d/logcheck: crontab entries for the logcheck package_3"&gt;/etc/cron.d/logcheck: crontab entries for the logcheck package&lt;/h1&gt;
&lt;p&gt;PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root&lt;/p&gt;
&lt;p&gt;@reboot logcheckif [ -x /usr/sbin/logcheck ]; then nice -n10 /usr/sbin/logcheck -R; fi
* &lt;em&gt; * &lt;/em&gt; *   logcheckif [ -x /usr/sbin/logcheck ]; then nice -n10 /usr/sbin/logcheck; fi&lt;/p&gt;
&lt;h1 id="eof_1"&gt;EOF&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h4 id="7. se crea el archivo debian/rules con el siguiente contenido:"&gt;7. Se crea el archivo &lt;code&gt;debian/rules&lt;/code&gt; con el siguiente contenido:&lt;/h4&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="!/usr/bin/make -f_1"&gt;!/usr/bin/make -f&lt;/h1&gt;
&lt;p&gt;DEB_DIVERT_EXTENSION = .canaima&lt;/p&gt;
&lt;p&gt;# This will remove /etc/cron.d/logcheck
  DEB_REMOVE_FILES_canaima-cron-logcheck += \
/etc/cron.d/logcheck&lt;/p&gt;
&lt;p&gt;# We will install (using dh_installcron, by placing the new cron job
 # at debian/canaima-cron-logcheck.cron.d) a new version that runs
 # every minute, rather than every 30 minutes.  This will generate a
 # lot of mail.  Note that we cannot install a new file to the path
 # /etc/cron.d/logcheck from which a file was removed using
 # DEB_REMOVE_FILES.&lt;/p&gt;
&lt;p&gt;include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/rules/config-package.mk
```&lt;/p&gt;
&lt;h4 id="8. se le agrega permiso de ejecucion al archivo debian/rules:"&gt;8. Se le agrega permiso de ejecuci&amp;oacute;n al archivo &lt;code&gt;debian/rules&lt;/code&gt;:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;chmod a+x debian/rules&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="9. al final se tienen los siguientes archivos:"&gt;9. Al final se tienen los siguientes archivos:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ecrespo@jewel:~/canaima/canaima-cron-logcheck-0.1$ ls -l debian/
total 28
-rw-r--r-- 1 ecrespo ecrespo  347 nov 14 22:02 canaima-cron-logcheck.cron.d
-rw-r--r-- 1 ecrespo ecrespo  157 nov 14 21:50 changelog
-rw-r--r-- 1 ecrespo ecrespo2 nov 14 21:50 compat
-rw-r--r-- 1 ecrespo ecrespo  481 nov 14 21:55 control
-rw-r--r-- 1 ecrespo ecrespo  481 nov 14 21:55 control.in
-rw-r--r-- 1 ecrespo ecrespo 1169 nov 14 22:01 copyright
-rwxr-xr-x 1 ecrespo ecrespo  612 nov 14 22:06 rules&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="10. se crea y se firma el paquete canaima-cron-logcheck-0.1:"&gt;10. Se crea y se firma el paquete &lt;code&gt;canaima-cron-logcheck-0.1&lt;/code&gt;:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;dpkg-buildpackage -rfakeroot -kC97E7015&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="11. al final se crean los siguientes archivos:"&gt;11. Al final se cre&amp;aacute;n los siguientes archivos:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ls -l canaima-cron-logcheck*
-rw-r--r-- 1 ecrespo ecrespo 2902 nov 14 22:08 canaima-cron-logcheck_0.1_all.deb
-rw-r--r-- 1 ecrespo ecrespo  876 nov 14 22:08 canaima-cron-logcheck_0.1.dsc
-rw-r--r-- 1 ecrespo ecrespo 1551 nov 14 22:09 canaima-cron-logcheck_0.1_i386.changes
-rw-r--r-- 1 ecrespo ecrespo 1807 nov 14 22:08 canaima-cron-logcheck_0.1.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="12. se verifica si el paquete cumple con las politicas de debian con lintian:"&gt;12. Se verifica si el paquete cumple con las pol&amp;iacute;ticas de Debian con &lt;code&gt;lintian&lt;/code&gt;:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;lintian -i canaima-cron-logcheck_0.1.dsc&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="13. se instala el paquete:"&gt;13. Se instala el paquete:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;dpkg -i canaima-cron-logcheck_0.1_all.deb&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="14. el archivo del cron se encuentra ya instalado:"&gt;14. El archivo del cron se encuentra ya instalado:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ls -l /etc/cron.d
total 12
-rw-r--r-- 1 root root 244 nov  1  2009 anacron
-rw-r--r-- 1 root root 347 nov 14 22:08 canaima-cron-logcheck
-rw-r--r-- 1 root root 544 sep 13 05:59 php5&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_2"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Empaquetado"></category><category term="General"></category><category term="Ubuntu"></category></entry><entry><title>Como crear un metapaquete de configuración con config-package-dev</title><link href="https://ecrespo.github.io/como-crear-un-metapaquete-de-configuracion-con-config-package-dev.html" rel="alternate"></link><published>2011-11-13T09:00:00-05:30</published><updated>2011-11-13T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-11-13:/como-crear-un-metapaquete-de-configuracion-con-config-package-dev.html</id><summary type="html">&lt;p&gt;Anteriormente se explic&amp;oacute; como crear un metapaquete con &lt;code&gt;equivs&lt;/code&gt;, se tiene tambi&amp;eacute;n el paquete &lt;code&gt;config-package-dev&lt;/code&gt; el cual permite crear paquetes de configuraci&amp;oacute;n donde se puede cambiar la configuraci&amp;oacute;n de otros archivos dentro del directorio &lt;code&gt;/etc/&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el &lt;a href="https://debathena.mit.edu/config-package-dev/"&gt;tutorial del MIT sobre creaci&amp;oacute;n de paquetes de configuraci&amp;oacute;n …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Anteriormente se explic&amp;oacute; como crear un metapaquete con &lt;code&gt;equivs&lt;/code&gt;, se tiene tambi&amp;eacute;n el paquete &lt;code&gt;config-package-dev&lt;/code&gt; el cual permite crear paquetes de configuraci&amp;oacute;n donde se puede cambiar la configuraci&amp;oacute;n de otros archivos dentro del directorio &lt;code&gt;/etc/&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo se basa en el &lt;a href="https://debathena.mit.edu/config-package-dev/"&gt;tutorial del MIT sobre creaci&amp;oacute;n de paquetes de configuraci&amp;oacute;n para Debian y una gu&amp;iacute;a en el wiki de Debian&lt;/a&gt; y una gu&amp;iacute;a en el &lt;a href="https://wiki.debian.org/ConfigPackages"&gt;wiki de Debian&lt;/a&gt;. El proceso de como adoptar un paquete y empaquetar se explica en una gu&amp;iacute;a que se encuentra en el &lt;a href="https://wiki.debian.org/AdoptarUnPaquete"&gt;wiki de Debian&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Como ejemplo se usar&amp;aacute; el paquete &lt;code&gt;openssh-server&lt;/code&gt; que crea un archivo con el nombre  &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; . Este archivo contiene la configuraci&amp;oacute;n necesaria para arrancar un servidor &lt;code&gt;ssh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Instalando &lt;code&gt;openssh-server&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install openssh-server config-package-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El contenido del archivo es el siguiente:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Port 22
Protocol 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
UsePrivilegeSeparation yes
KeyRegenerationInterval 3600
ServerKeyBits 768
SyslogFacility AUTH
LogLevel INFO
LoginGraceTime 120
PermitRootLogin yes
StrictModes yes
RSAAuthentication yes
PubkeyAuthentication yes
IgnoreRhosts yes
RhostsRSAAuthentication no
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication no
X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
AcceptEnv LANG LC_*
Subsystem sftp /usr/lib/openssh/sftp-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Este archivo tiene el siguiente hash md5.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;8caefdd9e251b7cc1baa37874149a870  /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;La idea es modificar este archivo para que no permita que el usuario &lt;code&gt;root&lt;/code&gt; se conecte por &lt;code&gt;ssh&lt;/code&gt; y no permitir reenv&amp;iacute;o de aplicaciones gr&amp;aacute;ficas.&lt;/p&gt;
&lt;h4 id="procedimiento para crear paquete de configuracion sshd-config:"&gt;Procedimiento para crear paquete de configuraci&amp;oacute;n &lt;code&gt;sshd-config&lt;/code&gt;:&lt;/h4&gt;
&lt;h5 id="1.crear el directorio de trabajo"&gt;1.Crear el directorio de trabajo&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;mkdir canaima-sshd-config-0.1&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="2. cambiarse a dicho directorio"&gt;2. Cambiarse a dicho directorio&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;cd canaima-sshd-config-0.1&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="3. crear los directorios debian y files"&gt;3. Crear los directorios debian y files&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;mkdir -p debian files&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="4. en files crear el directorio etc, luego dentro de el, el directorio ssh y copiar el archivo sshd_config de /etc/ssh/ al directorio creado."&gt;4. En &lt;code&gt;files&lt;/code&gt; crear el directorio &lt;code&gt;etc&lt;/code&gt;, luego dentro de &amp;eacute;l, el directorio &lt;code&gt;ssh&lt;/code&gt; y copiar el archivo &lt;code&gt;sshd_config&lt;/code&gt; de &lt;code&gt;/etc/ssh/&lt;/code&gt; al directorio creado.&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;mkdir -p files/etc
mkdir -p files/etc/ssh
cp /etc/ssh/sshd_config ./files/etc/ssh/sshd_config.canaima&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="5. modificar el archivo para que el usuario root no pueda acceder al servidor ssh y que no se pueda reenviar paquetes de x11. las lineas son:"&gt;5. Modificar el archivo para que el usuario root no pueda acceder al servidor &lt;code&gt;ssh&lt;/code&gt; y que no se pueda reenviar paquetes de &lt;code&gt;X11&lt;/code&gt;. Las l&amp;iacute;neas son:&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;PermitRootLogin no
X11Forwarding no&lt;/code&gt; &lt;/p&gt;
&lt;h5 id="6. dentro del directorio debian se creo el archivo changelog con el siguiente contenido:"&gt;6. Dentro del directorio debian se cre&amp;oacute; el archivo &lt;code&gt;changelog&lt;/code&gt; con el siguiente contenido:&lt;/h5&gt;
&lt;p&gt;```
canaima-sshd-config (0.1) unstable; urgency=low&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Initial release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-- Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@gmail.com"&gt;ecrespo@gmail.com&lt;/a&gt;  Sun, 13 Nov 2011 10:22:48 -0430
```&lt;/p&gt;
&lt;h5 id="7. se crea el archivo debian/compat con el valor 7."&gt;7. Se crea el archivo &lt;code&gt;debian/compat&lt;/code&gt;  con el valor 7.&lt;/h5&gt;
&lt;h5 id="8. se crea el archivo debian/control y debian/control.in con la siguiente informacion:"&gt;8. Se crea el archivo &lt;code&gt;debian/control&lt;/code&gt; y &lt;code&gt;debian/control.in&lt;/code&gt; con la siguiente informaci&amp;oacute;n:&lt;/h5&gt;
&lt;p&gt;```
Source: canaima-sshd-config
Section: config
Priority: extra
Maintainer: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@gmail.com"&gt;ecrespo@gmail.com&lt;/a&gt;
Build-Depends: cdbs (&amp;gt;= 0.4.23-1.1), debhelper (&amp;gt;= 4.2.0), config-package-dev (&amp;gt;= 4.5~)
Standards-Version: 3.9.2&lt;/p&gt;
&lt;p&gt;Package: canaima-sshd-config
Architecture: all
Pre-Depends: openssh-server
Depends: cdbs, ${misc:Depends}
Provides: ${diverted-files}
Conflicts: ${diverted-files}
Description: Archivo de configuracion de ssh
Archivo de configuracion del servidor ssh.
```&lt;/p&gt;
&lt;p&gt;En este caso se coloca el par&amp;aacute;metro &lt;code&gt;Pre-Depends&lt;/code&gt; ya que se necesita tener el servidor &lt;code&gt;openssh&lt;/code&gt; instalado y bien configurado para poder agregarle cambios al archivo &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; .&lt;/p&gt;
&lt;h5 id="9. se crea el archivo debian/copyright, en este caso se esta usando el mismo copyright de los archivos de ejemplo de config-package-dev:"&gt;9. Se crea el archivo &lt;code&gt;debian/copyright&lt;/code&gt;, en este caso se est&amp;aacute; usando el mismo copyright de los archivos de ejemplo de &lt;code&gt;config-package-dev&lt;/code&gt;:&lt;/h5&gt;
&lt;p&gt;```
canaima-ssh-config package.&lt;/p&gt;
&lt;p&gt;Author: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@gmail.com"&gt;ecrespo@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright &amp;copy; 2011 Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@gmail.com"&gt;ecrespo@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
```&lt;/p&gt;
&lt;h5 id="10. se crea el archivo debian/canaima-sshd-config.install . este archivo define donde se va a tomar los archivos de configuracion y a donde se van a copiar."&gt;10. Se crea el archivo &lt;code&gt;debian/canaima-sshd-config.install&lt;/code&gt; . Este archivo define donde se va a tomar los archivos de configuraci&amp;oacute;n y a donde se van a copiar.&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;files/* /&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="11. se crea el archivo debian/rules. en este archivo se define la extension .canaima, la cual permite diferenciar de los paquetes base de debian de la meta distribucion canaima, ademas se define el archivo a modificar y luego los include de los cdbs:"&gt;11. Se crea el archivo &lt;code&gt;debian/rules&lt;/code&gt;. En este archivo se define la extensi&amp;oacute;n &lt;code&gt;.canaima&lt;/code&gt;, la cual permite diferenciar de los paquetes base de Debian de la meta distribuci&amp;oacute;n canaima, adem&amp;aacute;s se define el archivo a modificar y luego los include de los &lt;code&gt;cdbs&lt;/code&gt;:&lt;/h5&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="!/usr/bin/make -f_2"&gt;!/usr/bin/make -f&lt;/h1&gt;
&lt;p&gt;DEB_DIVERT_EXTENSION = .canaima&lt;/p&gt;
&lt;h1 id="replace some base files with simple replacements."&gt;Replace some base files with simple replacements.&lt;/h1&gt;
&lt;p&gt;DEB_DIVERT_FILES_canaima-sshd-config += \
/etc/ssh/sshd_config.canaima &lt;/p&gt;
&lt;h1 id="these files are installed via dh_install from the files/ directory"&gt;These files are installed via dh_install from the files/ directory&lt;/h1&gt;
&lt;h1 id="(see debian/canaima-sshd-config.install)"&gt;(see debian/canaima-sshd-config.install)&lt;/h1&gt;
&lt;p&gt;include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/rules/config-package.mk
```&lt;/p&gt;
&lt;h5 id="12. crear el paquete debian y firmarlo con la llave gpg:"&gt;12. Crear el paquete debian y firmarlo con la llave &lt;code&gt;gpg&lt;/code&gt;:&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;dpkg-buildpackage -rfakeroot -kC97E7015&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al ejectuar un &lt;code&gt;ls&lt;/code&gt;  se pueden ver los archivos creados:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls -l canaima-sshd*
-rw-r--r-- 1 ecrespo ecrespo 3948 nov 13 16:09 canaima-sshd-config_0.1_all.deb
-rw-r--r-- 1 ecrespo ecrespo  864 nov 13 16:09 canaima-sshd-config_0.1.dsc
-rw-r--r-- 1 ecrespo ecrespo 1521 nov 13 16:09 canaima-sshd-config_0.1_i386.changes
-rw-r--r-- 1 ecrespo ecrespo 2745 nov 13 16:09 canaima-sshd-config_0.1.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="13. se verifica que el paquete debian cumple con el policy de debian:"&gt;13. Se verifica que el paquete Debian cumple con el policy de Debian:&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;lintian -i canaima-sshd-config_0.1.dsc&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="14. verificar la instalacion del paquete debian."&gt;14. Verificar la instalaci&amp;oacute;n del paquete Debian.&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;sudo dpkg -i canaima-sshd-config_0.1_all.deb 
[sudo] password for ecrespo: 
Selecting previously unselected package canaima-sshd-config.
(Leyendo la base de datos ... 418546 ficheros o directorios instalados actualmente.)
Desempaquetando canaima-sshd-config (de canaima-sshd-config_0.1_all.deb) ...
Configurando canaima-sshd-config (0.1) ...
A&amp;ntilde;adiendo `desviaci&amp;oacute;n de /etc/ssh/sshd_config a /etc/ssh/sshd_config.canaima-orig por canaima-sshd-config'&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="15. al ejecutar un ls -l en el directorio /etc/ssh/sshd_config* se vera que se crea un enlace al archivo original y se muestra los archivos agregados de la extension canaima:"&gt;15. Al ejecutar un &lt;code&gt;ls -l&lt;/code&gt; en el directorio &lt;code&gt;/etc/ssh/sshd_config*&lt;/code&gt; se ver&amp;aacute; que se crea un enlace al archivo original y se muestra los archivos agregados de la extensi&amp;oacute;n canaima:&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;root@jewel:/etc/ssh# ls -l sshd_config*
lrwxrwxrwx 1 root root   19 nov 13 16:16 sshd_config -&amp;gt; sshd_config.canaima
-rw-r--r-- 1 root root 2487 nov 13 10:15 sshd_config.canaima
-rw-r--r-- 1 root root 2489 nov 13 13:20 sshd_config.canaima-orig&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="16. al revisar el archivo se nota que el campo para permitir a root conectarse al servidor ssh se encuentra en no, igual caso para el parametro de reenvio de x11. se revisa el hash md5 del archivo y se nota que del archivo original al actual son diferentes:"&gt;16. Al revisar el archivo se nota que el campo para permitir a root conectarse al servidor ssh se encuentra en no, igual caso para el par&amp;aacute;metro de reenv&amp;iacute;o de &lt;code&gt;X11&lt;/code&gt;. Se revisa el hash &lt;code&gt;md5&lt;/code&gt; del archivo y se nota que del archivo original al actual son diferentes:&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;a358d423fa6b8bf640a7fd1e06731ea3  sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al crear paquetes de configuraci&amp;oacute;n de esta forma (una forma limpia de modificar archivos de configuraci&amp;oacute;n) y al eliminar el paquete de configuraci&amp;oacute;n los archivos originales se vuelven a usar:&lt;/p&gt;
&lt;p&gt;```
apt-get remove -f canaima-sshd-config&lt;/p&gt;
&lt;p&gt;root@jewel:/etc/ssh# md5sum sshd_config
8caefdd9e251b7cc1baa37874149a870  sshd_config
``` &lt;/p&gt;
&lt;p&gt;Se tienen varios ejemplos para usar &lt;code&gt;config-package-dev&lt;/code&gt; como por ejemplo paquetes binarios, configuraci&amp;oacute;n de cron, etc.&lt;/p&gt;
&lt;h2 id="_2"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Empaquetado"></category><category term="General"></category><category term="ssh"></category><category term="Ubuntu"></category></entry><entry><title>Como crear un metapaquete (metapaquete con archivos de configuración)</title><link href="https://ecrespo.github.io/como-crear-un-metapaquete-metapaquete-con-archivos-de-configuracion.html" rel="alternate"></link><published>2011-09-23T09:00:00-05:30</published><updated>2011-09-23T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-09-23:/como-crear-un-metapaquete-metapaquete-con-archivos-de-configuracion.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos de empaquetados, ahora se explicar&amp;aacute; como agregar archivos de configuraci&amp;oacute;n al metapaquete.&lt;/p&gt;
&lt;p&gt;La idea es agregar los archivos de configuraci&amp;oacute;n de orca que se guardan en &lt;code&gt;.orca&lt;/code&gt; en el home de los usuarios. Para ello se va a copiar el directorio &lt;code&gt;.orca&lt;/code&gt; con los archivos que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos de empaquetados, ahora se explicar&amp;aacute; como agregar archivos de configuraci&amp;oacute;n al metapaquete.&lt;/p&gt;
&lt;p&gt;La idea es agregar los archivos de configuraci&amp;oacute;n de orca que se guardan en &lt;code&gt;.orca&lt;/code&gt; en el home de los usuarios. Para ello se va a copiar el directorio &lt;code&gt;.orca&lt;/code&gt; con los archivos que contenga el directorio a &lt;code&gt;/etc/skell/&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;Se ejecuta el comando &lt;code&gt;equivs-control&lt;/code&gt; :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;equivs-control canaima-accesibilidad-escritorio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El archivo va a contener lo siguiente:&lt;/p&gt;
&lt;p&gt;```
Section: misc
Priority: optional
Homepage: http://canaima.softwarelibre.gob.ve
Standards-Version: 3.9.1&lt;/p&gt;
&lt;p&gt;Package: canaima-accesibilidad-visual-escritorio
Version: 1:0.1
Maintainer: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@centitel.gob.ve"&gt;ecrespo@centitel.gob.ve&lt;/a&gt;
Depends: at-spi, brltty, brltty-flite, brltty-speechd, brltty-x11, listen, espeak, festival, festvox-sflpc16k, festvox-palpc16k,&lt;br/&gt;
gnome-orca, gnome-accessibility-themes, gnome-accessibility, libcolorblind0, gnome-mag, libgail-common, mousetweaks, dots,&lt;br/&gt;
${misc:Depends}
Architecture: any
Copyright: copyright
Changelog: changelog
Files: ./conf/.orca/user-settings.py /etc/skell/.orca/user-settings.py
       ./conf/.orca/app-settings/&lt;strong&gt;init&lt;/strong&gt;.py /etc/skell/.orca/app-settings/&lt;strong&gt;init&lt;/strong&gt;.py
       ./conf/.orca/orca-scripts/&lt;strong&gt;init&lt;/strong&gt;.py /etc/skell/.orca/orca-scripts/&lt;strong&gt;init&lt;/strong&gt;.py
       ./conf/.orca/user-settings.pyc /etc/skell/.orca/user-settings.pyc
       ./conf/.orca/app-settings/&lt;strong&gt;init&lt;/strong&gt;.pyc /etc/skell/.orca/app-settings/&lt;strong&gt;init&lt;/strong&gt;.pyc
       ./conf/.orca/orca-scripts/&lt;strong&gt;init&lt;/strong&gt;.pyc /etc/skell/.orca/orca-scripts/&lt;strong&gt;init&lt;/strong&gt;.pyc
Description: Programas de Accesibilidad para Canaima GNU/Linux
Este metapaquete provee los programas de accesibilidad y configuraciones para que las personas con discapacidad puedan utilizar&lt;br/&gt;
canaima GNU/Linux.
```&lt;/p&gt;
&lt;p&gt;Ahora se tiene el p&amp;aacute;rametro &lt;code&gt;Files&lt;/code&gt; donde el primer archivo es el origen donde se encuentra el archivo y el segundo es la ruta donde se va a copiar. Cada ruta se separa por la siguiente l&amp;iacute;nea.&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;changelog&lt;/code&gt; contiene lo siguiente:&lt;/p&gt;
&lt;p&gt;```
canaima-accesibilidad-visual-escritorio (1.0:0.1) unstable; urgency=low&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-- Ernesto Nadir Crespo Avila  &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;  Thu, 22 Sep 2011 22:33:15 -0430
```&lt;/p&gt;
&lt;p&gt;El archivo copyright contiene:&lt;/p&gt;
&lt;p&gt;```
Authors:&lt;/p&gt;
&lt;p&gt;Copyright (C) 2011 Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License:&lt;/p&gt;
&lt;p&gt;This package is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; version 2 dated June, 1991.&lt;/p&gt;
&lt;p&gt;This package is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.&lt;/p&gt;
&lt;p&gt;You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA&lt;/p&gt;
&lt;p&gt;On Debian GNU/Linux systems, the complete text of the GNU General
Public License can be found in `usr/share/common-licenses/GPL-2'
```&lt;/p&gt;
&lt;p&gt;Ahora s&amp;oacute;lo queda  ejecutar el comando &lt;code&gt;equivs-build&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;equivs-build -f canaima-accesibilidad-visual-escritorio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar &lt;code&gt;ls -l&lt;/code&gt; se tiene los archivos creados y el &lt;code&gt;.deb&lt;/code&gt;:
&lt;code&gt;total 40
-rw-r--r-- 1 ernesto ernesto 1275 sep 23 08:40 canaima-accesibilidad-visual-escritorio
-rw-r--r-- 1 ernesto ernesto 1824 sep 23 08:41 canaima-accesibilidad-visual-escritorio_0.1_amd64.changes
-rw-r--r-- 1 ernesto ernesto 6836 sep 23 08:41 canaima-accesibilidad-visual-escritorio_0.1_amd64.deb
-rw-r--r-- 1 ernesto ernesto  909 sep 23 08:41 canaima-accesibilidad-visual-escritorio_0.1.dsc
-rw-r--r-- 1 ernesto ernesto 6378 sep 23 08:41 canaima-accesibilidad-visual-escritorio_0.1.tar.gz
-rw-r--r-- 1 ernesto ernesto  184 sep 23 08:41 changelog
drwxr-xr-x 3 ernesto ernesto 4096 sep 23 08:15 conf
 -rw-r--r-- 1 ernesto ernesto  896 sep 23 08:41 copyright&lt;/code&gt;
Al ejecutar &lt;code&gt;dpkg -c&lt;/code&gt; del archivo &lt;code&gt;.deb&lt;/code&gt; se tiene lo que se va a instalar con el metapaquete:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dpkg -c canaima-accesibilidad-visual-escritorio_0.1_amd64.deb
drwxr-xr-x root/root 0 2011-09-23 08:41 ./
drwxr-xr-x root/root 0 2011-09-23 08:41 ./usr/
drwxr-xr-x root/root 0 2011-09-23 08:41 ./usr/share/
drwxr-xr-x root/root 0 2011-09-23 08:41 ./usr/share/doc/
drwxr-xr-x root/root 0 2011-09-23 08:41 ./usr/share/doc/canaima-accesibilidad-visual-escritorio/
-rw-r--r-- root/root  1044 2011-09-23 08:41 ./usr/share/doc/canaima-accesibilidad-visual-escritorio/README.Debian
-rw-r--r-- root/root   171 2011-09-23 08:41 ./usr/share/doc/canaima-accesibilidad-visual-escritorio/changelog.gz
-rw-r--r-- root/root   896 2011-09-23 08:41 ./usr/share/doc/canaima-accesibilidad-visual-escritorio/copyright
drwxr-xr-x root/root 0 2011-09-23 08:41 ./etc/
drwxr-xr-x root/root 0 2011-09-23 08:41 ./etc/skell/
drwxr-xr-x root/root 0 2011-09-23 08:41 ./etc/skell/.orca/
drwxr-xr-x root/root 0 2011-09-23 08:41 ./etc/skell/.orca/app-settings/
-rwxr-xr-x root/root 0 2011-09-23 08:41 ./etc/skell/.orca/app-settings/__init__.py
-rw-r--r-- root/root   111 2011-09-23 08:41 ./etc/skell/.orca/app-settings/__init__.pyc
-rw-r--r-- root/root  7291 2011-09-23 08:41 ./etc/skell/.orca/user-settings.py
-rw-r--r-- root/root  6193 2011-09-23 08:41 ./etc/skell/.orca/user-settings.pyc
drwxr-xr-x root/root 0 2011-09-23 08:41 ./etc/skell/.orca/orca-scripts/
-rwxr-xr-x root/root 0 2011-09-23 08:41 ./etc/skell/.orca/orca-scripts/__init__.py
-rw-r--r-- root/root   111 2011-09-23 08:41 ./etc/skell/.orca/orca-scripts/__init__.pyc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se nota que se crea el directorio &lt;code&gt;.orca&lt;/code&gt; dentro de &lt;code&gt;/etc/skell&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se ejcuta &lt;code&gt;lintian&lt;/code&gt; para verificar que el metapaquete no tenga errores o alertas:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;lintian -i canaima-accesibilidad-visual-escritorio_0.1.dsc&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Accesibilidad"></category><category term="Debian"></category><category term="Empaquetado"></category><category term="General"></category><category term="Linux"></category><category term="tiflotecnologia"></category><category term="Ubuntu"></category></entry><entry><title>Corrigiendo los reportes generados por lintian de un metapaquete</title><link href="https://ecrespo.github.io/corrigiendo-los-reportes-generados-por-lintian-de-un-metapaquete.html" rel="alternate"></link><published>2011-09-22T09:00:00-05:30</published><updated>2011-09-22T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-09-22:/corrigiendo-los-reportes-generados-por-lintian-de-un-metapaquete.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como corregir los mensajes generados por &lt;code&gt;lintian&lt;/code&gt;, estos mensajes son debido a que el programa empaquetado o metapaquete no cumple con el &lt;a href="http://www.debian.org/doc/debian-policy/"&gt;policy de Debian&lt;/a&gt; y para subir dicho programa es necesario que est&amp;eacute; sin errores ni warning.&lt;/p&gt;
&lt;p&gt;El archivo que se va a verificar es el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como corregir los mensajes generados por &lt;code&gt;lintian&lt;/code&gt;, estos mensajes son debido a que el programa empaquetado o metapaquete no cumple con el &lt;a href="http://www.debian.org/doc/debian-policy/"&gt;policy de Debian&lt;/a&gt; y para subir dicho programa es necesario que est&amp;eacute; sin errores ni warning.&lt;/p&gt;
&lt;p&gt;El archivo que se va a verificar es el &lt;a href="https://gitorious.org/sierra-nevada/canaima-caribay-radio/blobs/master/canaima-caribay-radio_1.0.dsc"&gt;.dsc del metapaquete creado al empaquetar canaima-caribay-radio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Al ejecutar &lt;code&gt;lintian&lt;/code&gt; con el archivo &lt;code&gt;dsc&lt;/code&gt; devuelve el siguiente mensaje:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lintian -i canaima-caribay-radio_1.0.dsc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;W: canaima-caribay-radio source: debhelper-but-no-misc-depends canaima-caribay-radio
N: 
N:The source package uses debhelper, but it does not include
N:${misc:Depends} in the given binary package's debian/control entry. Any
N:debhelper command may add dependencies to ${misc:Depends} that are
N:required for the work that it does, so recommended best practice is to
N:always add ${misc:Depends} to the dependencies of each binary package if
N:debhelper is in use.
N:
N:Refer to the debhelper(7) manual page for details.
N:
N:Severity: normal, Certainty: possible
N: 
W: canaima-caribay-radio source: package-uses-deprecated-debhelper-compat-version 4
N: 
N:The debhelper compatibility version used by this package is marked as
N:deprecated by the debhelper developer. You should really consider using
N:a newer compatibility version.
N:
N:The compatibility version can be set in (preferred) debian/compat or by
N:setting and exporting DH_COMPAT in debian/rules. If it is not set in
N:either place, debhelper defaults to the deprecated compatibility version
N:1.
N:
N:Refer to the debhelper(7) manual page for details.
N:
N:Severity: normal, Certainty: certain
N: 
W: canaima-caribay-radio source: binary-arch-rules-but-pkg-is-arch-indep
N: 
N:It looks like you try to run code in the binary-arch target of
N:debian/rules, even though your package is architecture- independent.
N:
N:Severity: normal, Certainty: certain
N:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El primer warning es que hace falta agregar &lt;code&gt;${misc:Depends]&lt;/code&gt; en las dependencias.  Adicionalmente se tiene que cambiar el par&amp;aacute;metro &lt;code&gt;Standards-Version&lt;/code&gt; a la versi&amp;oacute;n &lt;code&gt;3.9.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;```
Section: misc
Priority: optional
Homepage: http://canaima.softwarelibre.gob.ve
Standards-Version: 3.9.1&lt;/p&gt;
&lt;p&gt;Package: canaima-caribay-radio
Version: 1.0
Maintainer: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;
Depends: ${misc:Depends},jackd2, libjack-jackd2-0, libjack-jackd2-dev, pulseaudio-module-jack, qjackctl,&lt;br/&gt;
libjack-jackd2-0, libjack-jackd2-dev, vorbis-tools, libvorbis-dev, libogg-dev, libmad0-dev, libsamplerate0-dev,&lt;br/&gt;
libflac-dev, libsndfile1-dev, libavcodec-dev, libavformat-dev, libspeex-dev, python-gtk2-dev,&lt;br/&gt;
python-mutagen, libdbus-1-dev, ffmpeg, libshout3-dev, libtwolame-dev, twolame,
idjc, audacity, audacity-data, audacity-dbg, icecast2, easytag
Architecture: all
Copyright: copyright
Changelog: changelog 
Description: Metapaquete para la instalacion de radio streaming
Metapaquete para la instalacion de radio streaming con icecast2 e idjc.
```&lt;/p&gt;
&lt;p&gt;El segundo warning menciona que el archivo &lt;code&gt;debian/compat&lt;/code&gt; tiene dentro el n&amp;uacute;mero 4 y es necesario que se actualice a la versi&amp;oacute;n de &lt;code&gt;debhelper&lt;/code&gt; que se est&amp;aacute; usando para empaquetar, en este caso debe cambiar a 8. Esto se tiene que cambiar en la plantilla de &lt;code&gt;equivs&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /usr/share/equivs/template/debian/compat&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;Cambiar 4 por 8.&lt;/p&gt;
&lt;p&gt;El siguiente warning menciona un problema en la definici&amp;oacute;n de la arquitectura, que es necesario quitar &lt;code&gt;binary-arch&lt;/code&gt; y nuestro paquete es independiente de la plataforma. Esto se resuelve modificando &lt;code&gt;canaima-caribay-radio&lt;/code&gt; cambian el par&amp;aacute;metro &lt;code&gt;Architecture: all&lt;/code&gt; por &lt;code&gt;any&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Luego de realizar esos cambios se vuelve a crear el metapaquete y a ejecutar &lt;code&gt;lintian&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lintian -i canaima-caribay-radio_1.0.dsc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;W: canaima-caribay-radio source: dh-clean-k-is-deprecated
N: 
N:This package calls dh_clean -k in its debian/rules file and declares a
N:debhelper compatibility version of at least 7.
N:
N:debhelper 7 deprecated dh_clean -k in favour of dh_prep.
N:
N:Refer to the dh_clean(1) manual page for details.
N:
N:Severity: normal, Certainty: certain
N: 
W: canaima-caribay-radio source: package-lacks-versioned-build-depends-on-debhelper 8
N: 
N:The package either doesn't declare a versioned build dependency on
N:debhelper or does not declare a versioned build dependency on a new
N:enough version of debhelper to satisfy the declared compatibility level.
N:
N:Recommended practice is to always declare an explicit versioned
N:dependency on debhelper equal to or greater than the compatibility level
N:used by the package, even if the versioned dependency isn't strictly
N:necessary. Having a versioned dependency also helps with backports to
N:older releases and correct builds on partially updated systems.
N:
N:Refer to the debhelper(7) manual page for details.
N:
N:Severity: minor, Certainty: certain
N:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego de cambiar el archivo &lt;code&gt;compat&lt;/code&gt; y la versi&amp;oacute;n del &lt;code&gt;standards-version&lt;/code&gt; aparece un warning sobre el comando &lt;code&gt;dh_clean -k&lt;/code&gt; que se tiene que sustituir por &lt;code&gt;dh_prep&lt;/code&gt; en el archivo &lt;code&gt;debian/rules&lt;/code&gt; de la plantilla:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /usr/share/equivs/template/debian/rules&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;install: build
dh_testdir
dh_testroot
dh_prep&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El otro warning menciona que &lt;code&gt;debhelper&lt;/code&gt; tiene un n&amp;uacute;mero de versi&amp;oacute;n viejo. Para cambiarlo se busca el archivo &lt;code&gt;control.in&lt;/code&gt; en las plantillas y se modifica la &lt;code&gt;dep&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /usr/share/equivs/template/debian/control.in&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se modifica la siguiente l&amp;iacute;nea:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Build-Depends: debhelper (&amp;gt;= 8)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se vuelve a empaquetar y a ejecutar &lt;code&gt;lintian&lt;/code&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;lintian -i canaima-caribay-radio_1.0.dsc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Listo, no m&amp;aacute;s mensajes de error o warnings.  &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Empaquetado"></category><category term="General"></category><category term="Linux"></category><category term="Ubuntu"></category></entry><entry><title>Como crear un metapaquete (versión 2)</title><link href="https://ecrespo.github.io/como-crear-un-metapaquete-version-2.html" rel="alternate"></link><published>2011-09-21T09:00:00-05:30</published><updated>2011-09-21T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-09-21:/como-crear-un-metapaquete-version-2.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo es una actualizaci&amp;oacute;n del art&amp;iacute;culo sobre &lt;strong&gt;como crear un metapaquete&lt;/strong&gt; que lo pueden leer &lt;a href="http://blog.crespo.org.ve/2009/03/como-crear-un-metapaquete.html"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se agregar&amp;aacute; el archivo &lt;code&gt;changelog&lt;/code&gt; y &lt;code&gt;copyright&lt;/code&gt; para el metapaquete &lt;code&gt;canaima-caribay-radio&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se crea un directorio de trabajo:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir canaima-caribay-radio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se crea el archivo &lt;code&gt;control&lt;/code&gt; con el comando &lt;code&gt;equivs-control&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;equivs-control …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo es una actualizaci&amp;oacute;n del art&amp;iacute;culo sobre &lt;strong&gt;como crear un metapaquete&lt;/strong&gt; que lo pueden leer &lt;a href="http://blog.crespo.org.ve/2009/03/como-crear-un-metapaquete.html"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se agregar&amp;aacute; el archivo &lt;code&gt;changelog&lt;/code&gt; y &lt;code&gt;copyright&lt;/code&gt; para el metapaquete &lt;code&gt;canaima-caribay-radio&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se crea un directorio de trabajo:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir canaima-caribay-radio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se crea el archivo &lt;code&gt;control&lt;/code&gt; con el comando &lt;code&gt;equivs-control&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;equivs-control canaima-caribay-radio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se modificar&amp;aacute; el archivo para que tenga las dependencias para &lt;code&gt;jackd2, icecast2, audacity, easytag&lt;/code&gt; e &lt;code&gt;idjc&lt;/code&gt;. Se agrega el mantenedor del paquete, el &lt;code&gt;homepage&lt;/code&gt; del mismo y una descripci&amp;oacute;n corta y larga del metapquete.&lt;/p&gt;
&lt;p&gt;El archivo modificado:&lt;/p&gt;
&lt;p&gt;```
Section: misc
Priority: optional
Homepage: http://canaima.softwarelibre.gob.ve
Standards-Version: 3.6.2&lt;/p&gt;
&lt;p&gt;Package: canaima-caribay-radio
Version: 1.0
Maintainer: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;
Depends: jackd2, libjack-jackd2-0, libjack-jackd2-dev, pulseaudio-module-jack, qjackctl, libjack-jackd2-0,&lt;br/&gt;
libjack-jackd2-dev, vorbis-tools, libvorbis-dev, libogg-dev, libmad0-dev, libsamplerate0-dev, libflac-dev, &lt;br/&gt;
libsndfile1-dev, libavcodec-dev, libavformat-dev, libspeex-dev, python-gtk2-dev, python-mutagen, libdbus-1-dev, ffmpeg,&lt;br/&gt;
libshout3-dev, libtwolame-dev, twolame, idjc, audacity, audacity-data, audacity-dbg, icecast2, easytag
Architecture: all
Copyright: copyright
Changelog: changelog 
Description: Metapaquete para la instalacion de radio streaming
Metapaquete para la instalacion de radio streaming con icecast2 e idjc.
```&lt;/p&gt;
&lt;p&gt;Del art&amp;iacute;culo anterior se agrego el campo &lt;code&gt;Copyright&lt;/code&gt; y &lt;code&gt;Changelog&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Estos archivos contienen lo siguiente:&lt;/p&gt;
&lt;p&gt;Copyright:&lt;/p&gt;
&lt;p&gt;```
Authors:&lt;/p&gt;
&lt;p&gt;Copyright (C) 2011 Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;
Copyright (C) 2011 David Hern&amp;aacute;ndez &lt;a href="mailto:david.vzla@gmail.com"&gt;david.vzla@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License:&lt;/p&gt;
&lt;p&gt;This package is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; version 2 dated June, 1991.&lt;/p&gt;
&lt;p&gt;This package is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.&lt;/p&gt;
&lt;p&gt;You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA&lt;/p&gt;
&lt;p&gt;On Debian GNU/Linux systems, the complete text of the GNU General
Public License can be found in `/usr/share/common-licenses/GPL-2'.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Changelog:&lt;/p&gt;
&lt;p&gt;```
canaima-caribay-radio (1:1.0) unstable; urgency=low&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-- Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;  Tue, 20 Sep 2011 16:12:45 -0430
```&lt;/p&gt;
&lt;p&gt;Ahora para crear y firmar el metapaquete se usa el comando &lt;code&gt;equivs-build&lt;/code&gt; con la opci&amp;oacute;n &lt;code&gt;-f&lt;/code&gt; que permite ejecutar &lt;code&gt;debuild&lt;/code&gt; completo y firmar el metapaquete.&lt;/p&gt;
&lt;p&gt;Es importante notar que en la llave &lt;code&gt;gpg&lt;/code&gt; debe estar el nombre del mantenedor que aparece en el control y changelog para poder firmar el metapaquete.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la llave gpg:
&lt;code&gt;gpg --list-keys | less&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="```"&gt;```&lt;/h2&gt;
&lt;p&gt;pub   1024D/C97E7015 2005-08-15
uid  Ernesto Nadir Crespo Avila (seraph1) &lt;a href="mailto:ecrespo@debian.org.ve"&gt;ecrespo@debian.org.ve&lt;/a&gt;
uid  Ernesto Nadir Crespo Avila (seraph1) &lt;a href="mailto:ecrespo@debianvenezuela.org"&gt;ecrespo@debianvenezuela.org&lt;/a&gt;
uid  Ernesto Nadir Crespo Avila (seraph1) &lt;a href="mailto:ecrespo@uc.edu.ve"&gt;ecrespo@uc.edu.ve&lt;/a&gt;
uid  Ernesto Nadir Crespo Avila (seraph1) &lt;a href="mailto:ecrespo@cantv.net"&gt;ecrespo@cantv.net&lt;/a&gt;
uid  Ernesto Nadir Crespo Avila (seraph1) &lt;a href="mailto:ecrespo@gmail.com"&gt;ecrespo@gmail.com&lt;/a&gt;
uid  Ernesto Crespo (seraph1) &lt;a href="mailto:ecrespoa@yahoo.es"&gt;ecrespoa@yahoo.es&lt;/a&gt;
uid  Ernesto Nadir Crespo Avila (seraph) &lt;a href="mailto:ernesto@crespo.info.ve"&gt;ernesto@crespo.info.ve&lt;/a&gt;
uid  [jpeg image of size 11184]
uid  Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;
uid  Ernesto Nadir Crespo Avila &lt;a href="mailto:ernesto@crespo.org.ve"&gt;ernesto@crespo.org.ve&lt;/a&gt;
```&lt;/p&gt;
&lt;p&gt;Ahora se crear&amp;aacute; el &lt;code&gt;metapaquete&lt;/code&gt;: El procedimiento pedir&amp;aacute; 2 veces escribir la frase de la llave &lt;code&gt;gpg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;equivs-build -f canaima-caribay-radio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;``
dpkg-buildpackage: exportar &amp;laquo;CFLAGS&amp;raquo; de dpkg-buildflags (origen: &amp;laquo;vendor&amp;raquo;): &amp;laquo;-g -O2&amp;raquo;
dpkg-buildpackage: exportar &amp;laquo;CPPFLAGS&amp;raquo; de dpkg-buildflags (origen: &amp;laquo;vendor&amp;raquo;): &amp;laquo;&amp;raquo;
dpkg-buildpackage: exportar &amp;laquo;CXXFLAGS&amp;raquo; de dpkg-buildflags (origen: &amp;laquo;vendor&amp;raquo;): &amp;laquo;-g -O2&amp;raquo;
dpkg-buildpackage: exportar &amp;laquo;FFLAGS&amp;raquo; de dpkg-buildflags (origen: &amp;laquo;vendor&amp;raquo;): &amp;laquo;-g -O2&amp;raquo;
dpkg-buildpackage: exportar &amp;laquo;LDFLAGS&amp;raquo; de dpkg-buildflags (origen: &amp;laquo;vendor&amp;raquo;): &amp;laquo;&amp;raquo;
dpkg-buildpackage: paquete fuente canaima-caribay-radio
dpkg-buildpackage: versi&amp;oacute;n de las fuentes 1:1.0
dpkg-buildpackage: fuentes modificadas por Ernesto Nadir Crespo Avila &amp;lt;ecrespo@cenditel.gob.ve&amp;gt;
dpkg-buildpackage: arquitectura del sistema amd64
dpkg-source --before-build equivs.nAXaSZ
fakeroot debian/rules clean
dh_testdir
dh_testroot
dh_clean
dh_clean: Compatibility levels before 5 are deprecated.
dpkg-source -b equivs.nAXaSZ
dpkg-source: aviso: no se ha definido un formato de fuentes en &amp;laquo;debian/source/format&amp;raquo;, consulte dpkg-source(1)
dpkg-source: informaci&amp;oacute;n: usando el formato de fuente &amp;laquo;1.0&amp;raquo;
dpkg-source: aviso: el directorio de fuentes &amp;laquo;equivs.nAXaSZ&amp;raquo; no es &amp;lt;paquete-fuente&amp;gt;-&amp;lt;versi&amp;oacute;n-desarrollador-original&amp;gt; &amp;laquo;canaima-caribay-radio-1.0&amp;raquo;
dpkg-source: informaci&amp;oacute;n: construyendo canaima-caribay-radio en canaima-caribay-radio_1.0.tar.gz
dpkg-source: informaci&amp;oacute;n: construyendo canaima-caribay-radio en canaima-caribay-radio_1.0.dsc
debian/rules build
make: No se hace nada para&lt;/code&gt;build'.
fakeroot debian/rules binary
dh_testdir
dh_testroot
dh_clean -k
dh_clean: dh_clean -k is deprecated; use dh_prep instead
dh_clean: Compatibility levels before 5 are deprecated.
dh_testdir
dh_testroot
dh_install
dh_install: Compatibility levels before 5 are deprecated.
dh_installdocs
dh_installdocs: Compatibility levels before 5 are deprecated.
dh_installchangelogs
dh_installchangelogs: Compatibility levels before 5 are deprecated.
dh_compress
dh_compress: Compatibility levels before 5 are deprecated.
dh_fixperms
dh_fixperms: Compatibility levels before 5 are deprecated.
dh_installdeb
dh_installdeb: Compatibility levels before 5 are deprecated.
dh_gencontrol
dh_gencontrol: Compatibility levels before 5 are deprecated.
dh_md5sums
dh_md5sums: Compatibility levels before 5 are deprecated.
dh_builddeb
dh_builddeb: Compatibility levels before 5 are deprecated.
dpkg-deb: construyendo el paquete &lt;code&gt;canaima-caribay-radio' en&lt;/code&gt;../canaima-caribay-radio_1.0_all.deb'.
signfile canaima-caribay-radio_1.0.dsc&lt;/p&gt;
&lt;p&gt;Necesita una frase contrase&amp;ntilde;a para desbloquear la clave secreta
del usuario: "Ernesto Nadir Crespo Avila (seraph1) &lt;a href="mailto:ecrespo@debian.org.ve"&gt;ecrespo@debian.org.ve&lt;/a&gt;"
clave DSA de 1024 bits, ID C97E7015, creada el 2005-08-15&lt;/p&gt;
&lt;p&gt;dpkg-genchanges  &amp;gt;../canaima-caribay-radio_1.0_amd64.changes
dpkg-genchanges: incluyendo el c&amp;oacute;digo fuente completo en la subida
signfile canaima-caribay-radio_1.0_amd64.changes&lt;/p&gt;
&lt;p&gt;Necesita una frase contrase&amp;ntilde;a para desbloquear la clave secreta
del usuario: "Ernesto Nadir Crespo Avila (seraph1) &lt;a href="mailto:ecrespo@debian.org.ve"&gt;ecrespo@debian.org.ve&lt;/a&gt;"
clave DSA de 1024 bits, ID C97E7015, creada el 2005-08-15&lt;/p&gt;
&lt;p&gt;dpkg-source --after-build equivs.nAXaSZ
dpkg-buildpackage: subida completa; paquete nativo de Debian (se incluye la fuente completa)&lt;/p&gt;
&lt;p&gt;The package has been created.
Attention, the package has been created in the current directory,
not in ".." as indicated by the message above!
```&lt;/p&gt;
&lt;p&gt;Ahora se ejecuta un &lt;code&gt;ls -l&lt;/code&gt; y se tiene lo siguiente:
&lt;code&gt;ernesto@zeath:~/canaima/canaima-caribay-radio$ ls -l
total 28
-rw-r--r-- 1 ernesto ernesto  849 sep 20 17:03 canaima-caribay-radio
-rw-r--r-- 1 ernesto ernesto 2528 sep 21 08:48 canaima-caribay-radio_1.0_all.deb
-rw-r--r-- 1 ernesto ernesto 1583 sep 21 08:49 canaima-caribay-radio_1.0_amd64.changes
-rw-r--r-- 1 ernesto ernesto  819 sep 21 08:49 canaima-caribay-radio_1.0.dsc
-rw-r--r-- 1 ernesto ernesto 2170 sep 21 08:48 canaima-caribay-radio_1.0.tar.gz
-rw-r--r-- 1 ernesto ernesto  164 sep 20 17:03 changelog
-rw-r--r-- 1 ernesto ernesto  957 sep 20 17:03 copyright&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;canaima-caribay-radio_1.0_amd64.changes&lt;/code&gt;  contiene lo siguiente:  &lt;/p&gt;
&lt;p&gt;```
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1&lt;/p&gt;
&lt;p&gt;Format: 1.8
Date: Tue, 20 Sep 2011 16:12:45 -0430
Source: canaima-caribay-radio
Binary: canaima-caribay-radio
Architecture: source all
Version: 1:1.0
Distribution: unstable
Urgency: low
Maintainer: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;
Changed-By: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;
Description: 
 canaima-caribay-radio - Metapaquete para la instalacion de radio streaming
Changes: 
 canaima-caribay-radio (1:1.0) unstable; urgency=low
 .
   * First release.
Checksums-Sha1: 
 2234f6f5d8808e0ae425eb3164632b01bc94251a 819 canaima-caribay-radio_1.0.dsc
 8851015c0174d5126127328776e35174e361cc21 2170 canaima-caribay-radio_1.0.tar.gz
 104312d9eb56eb623ad1f901a2801e096f4021be 2528 canaima-caribay-radio_1.0_all.deb
Checksums-Sha256: 
 3be03f102f6ef9dab2525ac384a265e9761ca2f5f4fb7d48fdbd0b38fee4e22f 819 canaima-caribay-radio_1.0.dsc
 75cb5c5b95d14d995776a035925c2cfe5ee77873d091ef9e238b000fb4b1375b 2170 canaima-caribay-radio_1.0.tar.gz
 74540c21659c774a12d5162886f59b974b155c47d5471fac40ff7fece11cd282 2528 canaima-caribay-radio_1.0_all.deb
Files: 
 3f563e110433652011cf0d32fe96a0f6 819 misc optional canaima-caribay-radio_1.0.dsc
 e53b6a60fd0961a6b161a61b5a107e77 2170 misc optional canaima-caribay-radio_1.0.tar.gz
 4ac58a93d2e4160f378093909d687967 2528 misc optional canaima-caribay-radio_1.0_all.deb&lt;/p&gt;
&lt;p&gt;-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)&lt;/p&gt;
&lt;p&gt;iEYEARECAAYFAk555EYACgkQh+iQYcl+cBW/kQCeOZzpeHCAYomqczO7kkR6+nvT
fWIAniK+uWLpndvqEJmz2IUA7JNe8Nng
=qVVe
 -----END PGP SIGNATURE-----
```&lt;/p&gt;
&lt;p&gt;El archivo &lt;code&gt;canaima-caribay-radio_1.0.dsc&lt;/code&gt; contiene lo siguiente:&lt;/p&gt;
&lt;p&gt;```
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1&lt;/p&gt;
&lt;p&gt;Format: 1.0
Source: canaima-caribay-radio
Binary: canaima-caribay-radio
Architecture: all
Version: 1:1.0
Maintainer: Ernesto Nadir Crespo Avila &lt;a href="mailto:ecrespo@cenditel.gob.ve"&gt;ecrespo@cenditel.gob.ve&lt;/a&gt;
Homepage: http://canaima.softwarelibre.gob.ve
Standards-Version: 3.6.2
Build-Depends: debhelper (&amp;gt;= 4)
Checksums-Sha1: 
 8851015c0174d5126127328776e35174e361cc21 2170 canaima-caribay-radio_1.0.tar.gz
Checksums-Sha256: 
 75cb5c5b95d14d995776a035925c2cfe5ee77873d091ef9e238b000fb4b1375b 2170 canaima-caribay-radio_1.0.tar.gz
Files: 
 e53b6a60fd0961a6b161a61b5a107e77 2170 canaima-caribay-radio_1.0.tar.gz&lt;/p&gt;
&lt;p&gt;-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)&lt;/p&gt;
&lt;p&gt;iEYEARECAAYFAk555EIACgkQh+iQYcl+cBVLqgCdGA+DXaVjyDrcGNfxcITL9sCP
oY0An1hC/e7UIQiiTZ4DQUysYHs8sTS9
=6NcI
-----END PGP SIGNATURE-----
```&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Debian"></category><category term="Empaquetado"></category><category term="General"></category><category term="Linux"></category><category term="Ubuntu"></category></entry><entry><title>Crear llave ssh para la autenticación en Github, gitorius y bitbucket.</title><link href="https://ecrespo.github.io/crear-llave-ssh-para-la-autenticacion-en-github-gitorius-y-bitbucket.html" rel="alternate"></link><published>2011-09-20T09:00:00-05:30</published><updated>2011-09-20T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-09-20:/crear-llave-ssh-para-la-autenticacion-en-github-gitorius-y-bitbucket.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como crear una llave p&amp;uacute;blica RSA para usarla en los sitios github, gitorius y bitbucket y as&amp;iacute; poder subir c&amp;oacute;digo con git y mercurial a dichos repositorios.&lt;/p&gt;
&lt;p&gt;Lo primero que se tiene que hacer es generar la llave ssh. El comando para hacerlo es &lt;code&gt;ssh-keygen&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh-keygen -t …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como crear una llave p&amp;uacute;blica RSA para usarla en los sitios github, gitorius y bitbucket y as&amp;iacute; poder subir c&amp;oacute;digo con git y mercurial a dichos repositorios.&lt;/p&gt;
&lt;p&gt;Lo primero que se tiene que hacer es generar la llave ssh. El comando para hacerlo es &lt;code&gt;ssh-keygen&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh-keygen -t rsa -C "ecrespo@cenditel.gob.ve&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Generating public/private rsa key pair.
Enter file in which to save the key (/home/ernesto/.ssh/id_rsa):  &amp;lt;Ruta donde se va a guardar la llave RSA&amp;gt;
Enter passphrase (empty for no passphrase): &amp;lt;colocar la frase a usar con la llave&amp;gt;
Enter same passphrase again:  &amp;lt;colocar la frase a usar con la llave&amp;gt;
Your identification has been saved in /home/ernesto/.ssh/id_rsa.
Your public key has been saved in /home/ernesto/.ssh/id_rsa.pub.
The key fingerprint is:
f2:09:cf:fe:53:1d:d3:d9:25:96:c9:11:68:5e:3e:bc ecrespo@cenditel.gob.ve
The key's randomart image is:
+--[ RSA 2048]----+
|             .o. |
|            o..+ |
|        o  o +* .|
|         C  ..+o+|
|        S +   o+o|
|         .   .Do |
|          . o .  |
|           +     |
|            .    |
+-----------------+&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Agregar la llave a github:&lt;/p&gt;
&lt;p&gt;En github seleccione &lt;strong&gt;Account settings&lt;/strong&gt;, luego seleccione &lt;strong&gt;ssh public keys&lt;/strong&gt; y luego &lt;strong&gt;Add another public key&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Despliegue el contenido del archivo  &lt;code&gt;id_rsa.pub&lt;/code&gt;:&lt;br/&gt;
&lt;code&gt;cat less id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPW48GvjuwVMHdlU6kRqniKDNwDrz  
12YPL1Sdi9AEn4uuRxs34+NH3UfarjweKFXMqkFRZaR9woV21GxvfF+eRnAfCWFI0Unzpxh1LaaLaDcBfNZ  
x1PwkaR6zmaNKjwhAS2N4K3Rd+gCtPl57CoFQPNY7ZsZSJcn0iTn1jtQi3I3JpeQDTq0yf1nsjJFTSC/n23TROj2mvaHVsUB86ezAsia  
JXJd8aZWJsyAEdBxn6dAxxxAtGRzQCq8oNqhWhqmbzf6C3zKARwCbbdo7UB  
M/StTkb3aYnBbTLhHGnY8vm5n/aP7/1GZNqTbWxfmH5hm/2mDfT8hPK2eCCklGsnF+qlxpPu7 ecrespo@cenditel.gob.ve&lt;/code&gt;
La siguiente imagen muestra la informaci&amp;oacute;n desplegada en github:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/crearllavesshparalaautenticacionengithubgitoriusybitbucket-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Validar la comunicaci&amp;oacute;n con github.
Para validar la comunicaci&amp;oacute;n con la llave p&amp;uacute;blica se ejecuta lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh -T git@github.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Aparecer&amp;aacute; la siguiente informaci&amp;oacute;n:&lt;br/&gt;
&lt;code&gt;The authenticity of host 'github.com (207.97.227.239)' can't be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,207.97.227.239' (RSA) to the list of known hosts.
Hi ecrespo! You've successfully authenticated, but GitHub does not provide shell access.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Configurar la informaci&amp;oacute;n del usuario y correo en git:&lt;br/&gt;
&lt;code&gt;git config --global user.name "Ernesto Crespo"  
git config --global user.email "ecrespo@cenditel.gob.ve"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Configurar el token github.&lt;/p&gt;
&lt;p&gt;Seleccione &lt;strong&gt;Account settings&lt;/strong&gt;, luego &lt;strong&gt;Account Admin&lt;/strong&gt;. Ah&amp;iacute; aparecer&amp;aacute; lo que se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/crearllavesshparalaautenticacionengithubgitoriusybitbucket-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Agregar al usuario github y el token:&lt;br/&gt;
&lt;code&gt;git config --global github.user ecrespo
git config --global github.token cf0fe21f4ff7fb51b686bb712347043e&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ya se tiene github configurado con la llave RSA del equipo asociado al correo.&lt;/p&gt;
&lt;p&gt;Para el caso de &lt;strong&gt;gitorius&lt;/strong&gt; se selecciona el &lt;strong&gt;dashboard&lt;/strong&gt;, luego se le da click a &lt;strong&gt;Manage SSH keys&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/crearllavesshparalaautenticacionengithubgitoriusybitbucket-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Le dan click a &lt;strong&gt;Add ssh keys&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/crearllavesshparalaautenticacionengithubgitoriusybitbucket-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Agregar la llave en &lt;strong&gt;bitbucket&lt;/strong&gt;.
Le dan click al &lt;strong&gt;Account&lt;/strong&gt; al ingresar a su cuenta en bitbucket.org: 
Se va al campo de &lt;strong&gt;ssh keys&lt;/strong&gt; y se agrega la llave como lo muestra la figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Texto alternativo" src="./images/crearllavesshparalaautenticacionengithubgitoriusybitbucket-5.png"/&gt;&lt;/p&gt;
&lt;p&gt;En el siguiente art&amp;iacute;culo se explicar&amp;aacute; como usar los comandos para clonar, hacer commit  y actualizar los controles de versiones distribuidos de github, gitorius y bitbucket.&lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;/h2&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde la billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Canaima"></category><category term="Control de versiones"></category><category term="Debian"></category><category term="General"></category><category term="Linux"></category><category term="Mercurial"></category><category term="ssh"></category></entry><entry><title>Día Debian en Mérida.</title><link href="https://ecrespo.github.io/dia-debian-en-merida.html" rel="alternate"></link><published>2011-08-27T10:00:00-05:30</published><updated>2011-08-27T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-08-27:/dia-debian-en-merida.html</id><summary type="html">&lt;p&gt;El d&amp;iacute;a de hoy se celebrar&amp;aacute; en Fundacite M&amp;eacute;rida el D&amp;iacute;a Debian por motivo del cumplea&amp;ntilde;os n&amp;uacute;mero 18.&lt;/p&gt;
&lt;p&gt;Lugas: Av. Alberto Carnevali v&amp;iacute;a La Hechicera, detr&amp;aacute;s del MINFRA, Edificio B de Fundacite M&amp;eacute;rida. &lt;/p&gt;
&lt;p&gt;Adicionalmente como en esta semana se cumplio los 20 a&amp;ntilde;os de Linux lo celebraremos tambi&amp;eacute;n.&lt;/p&gt;
&lt;p&gt;Ac&amp;aacute; un …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El d&amp;iacute;a de hoy se celebrar&amp;aacute; en Fundacite M&amp;eacute;rida el D&amp;iacute;a Debian por motivo del cumplea&amp;ntilde;os n&amp;uacute;mero 18.&lt;/p&gt;
&lt;p&gt;Lugas: Av. Alberto Carnevali v&amp;iacute;a La Hechicera, detr&amp;aacute;s del MINFRA, Edificio B de Fundacite M&amp;eacute;rida. &lt;/p&gt;
&lt;p&gt;Adicionalmente como en esta semana se cumplio los 20 a&amp;ntilde;os de Linux lo celebraremos tambi&amp;eacute;n.&lt;/p&gt;
&lt;p&gt;Ac&amp;aacute; un v&amp;iacute;deo en conmemoraci&amp;oacute;n de la fecha.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=MTBX0j86Ca4"&gt;20mo aniversario de Linux - Subtitulado a Espa&amp;ntilde;ol&lt;/a&gt;&lt;/p&gt;
&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/MTBX0j86Ca4" width="560"&gt;&lt;/iframe&gt;
&lt;p&gt;Las charlas pautadas son las siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Se presentar&amp;aacute; un video en conmemoraci&amp;oacute;n a los 20 a&amp;ntilde;os de Linux.&lt;/li&gt;
&lt;li&gt;Hacer un distro Debian a la medida. (Franklin G. Mendoza).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/ecrespo/colaborar-en-debian"&gt;Como colaborar en Debian&lt;/a&gt; (Ernesto Crespo). &lt;/li&gt;
&lt;li&gt;Entornos gr&amp;aacute;ficos en Debian (Marie Matos).&lt;/li&gt;
&lt;li&gt;Configurar Plone para Alta Disponibilidad en Servidores de producci&amp;oacute;n Debian (Leonardo Caballero).&lt;/li&gt;
&lt;li&gt;OpenLDAP en Debian (Daniela Matos).&lt;/li&gt;
&lt;li&gt;Servidores web para necesidades espec&amp;iacute;ficas (Hector Colina).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/ecrespo/gestin-de-configuracin-con-mercurial-y-etckeeper"&gt;Gesti&amp;oacute;n de configuraci&amp;oacute;n en Debian&lt;/a&gt; (Ernesto Crespo).&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe allowfullscreen="" frameborder="0" height="485" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/1hfjb7gjuApsKK" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" width="595"&gt; &lt;/iframe&gt;
&lt;p&gt;&lt;div style="margin-bottom:5px"&gt; &lt;strong&gt; &lt;a href="//www.slideshare.net/ecrespo/colaborar-en-debian" target="_blank" title="Colaborar en Debian"&gt;Colaborar en Debian&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href="https://www.slideshare.net/ecrespo" target="_blank"&gt;Ernesto Crespo&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;
&lt;iframe allowfullscreen="" frameborder="0" height="485" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/JeTnQHWWkyt8N1" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" width="595"&gt; &lt;/iframe&gt;
&lt;p&gt;&lt;div style="margin-bottom:5px"&gt; &lt;strong&gt; &lt;a href="//www.slideshare.net/ecrespo/gestin-de-configuracin-con-mercurial-y-etckeeper" target="_blank" title="Gesti&amp;oacute;n de configuraci&amp;oacute;n con mercurial y etckeeper"&gt;Gesti&amp;oacute;n de configuraci&amp;oacute;n con mercurial y etckeeper&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href="https://www.slideshare.net/ecrespo" target="_blank"&gt;Ernesto Crespo&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Dia Debian"></category></entry><entry><title>Como cifrar directorios/particiones con eCryptfs</title><link href="https://ecrespo.github.io/como-cifrar-directoriosparticiones-con-ecryptfs.html" rel="alternate"></link><published>2011-08-21T09:00:00-05:30</published><updated>2011-08-21T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-08-21:/como-cifrar-directoriosparticiones-con-ecryptfs.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo de HowtoForge sobre el mismo &lt;a href="http://www.howtoforge.net/how-to-encrypt-directories-partitions-with-ecryptfs-on-debian-squeeze"&gt;tema&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La idea es cifrar el directorio home del usuario,se monte el directorio cifrado autom&amp;aacute;ticamente al arrancar el equipo.&lt;/p&gt;
&lt;p&gt;Es necesario tener un respaldo de la carpeta del usuario para evitar perdida de datos si olvida la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo se basa en el art&amp;iacute;culo de HowtoForge sobre el mismo &lt;a href="http://www.howtoforge.net/how-to-encrypt-directories-partitions-with-ecryptfs-on-debian-squeeze"&gt;tema&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La idea es cifrar el directorio home del usuario,se monte el directorio cifrado autom&amp;aacute;ticamente al arrancar el equipo.&lt;/p&gt;
&lt;p&gt;Es necesario tener un respaldo de la carpeta del usuario para evitar perdida de datos si olvida la clave.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instalar eCryptfs:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se ejecuta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install ecryptfs-utils&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cifrar un directorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Respaldar los archivos y directorios del home del usuario:&lt;/p&gt;
&lt;p&gt;```
cp -pfr /home/ecrespo /tmp/&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Cifrar el directorio /home/ecrespo/ al montar el sistema de archivos ecryptfs:&lt;/p&gt;
&lt;p&gt;Se selecciona aes, 16, no se habilita frase plana, no se habilita cifrado del nombre del archivo, as&amp;iacute; que con estas opciones s&amp;oacute;lo hay que presionar enter a la informaci&amp;oacute;n que solicite al montar la partici&amp;oacute;n cifrada.&lt;/p&gt;
&lt;p&gt;```
mount -t ecryptfs /home/ecrespo /home/ecrespo&lt;/p&gt;
&lt;p&gt;Passphrase:
Select cipher:
 1) aes: blocksize = 16; min keysize = 16; max keysize = 32 (not loaded)
 2) blowfish: blocksize = 16; min keysize = 16; max keysize = 56 (not loaded)
 3) des3_ede: blocksize = 8; min keysize = 24; max keysize = 24 (not loaded)
 4) twofish: blocksize = 16; min keysize = 16; max keysize = 32 (not loaded)
 5) cast6: blocksize = 16; min keysize = 16; max keysize = 32 (not loaded)
 6) cast5: blocksize = 8; min keysize = 5; max keysize = 16 (not loaded)
Selection [aes]:
Select key bytes:
 1) 16
 2) 32
 3) 24
Selection [16]:
Enable plaintext passthrough (y/n) [n]: Enter
Enable filename encryption (y/n) [n]: Enter
Attempting to mount with the following options:
  ecryptfs_unlink_sigs
  ecryptfs_key_bytes=16
  ecryptfs_cipher=aes
  ecryptfs_sig=162827f20fdadf4e
Mounted eCryptfs
```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Verificar que la partici&amp;oacute;n se ha montado.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;El comando mount s&amp;oacute;lo devuelve las particiones que se encuentran montadas en el Linux.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mount /home/ecrespo on /home/ecrespo type ecryptfs (rw,ecryptfs_sig=162827f20fdadf4e,ecryptfs_cipher=aes,ecryptfs_key_bytes=16,ecryptfs_unlink_sigs)&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Recuperar el respaldo y borrar el respaldo del directorio /tmp/&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;cp -pfr /tmp/ecrespo /home/
rm -fr /tmp/ecrespo&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Verificar el funcionamiento del cifrado de archivos.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Para prop&amp;oacute;sitos de prueba se copia un archivo de /etc/ al home del usuario.
Mostrar la informaci&amp;oacute;n que contiene el archivo hostname en /etc/&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat /etc/hostname 
canaima-popular&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Copiar el archivo hostname al home del usuario:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp /etc/hostname /home/ecrespo/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Mientras la partici&amp;oacute;n cifrada se encuentra montada se puede visualizar los archivos:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat /home/ecrespo/hostname 
canaima-popular&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Desmontar la partici&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;umount /home/ecrespo/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Verificar que el archivo est&amp;aacute; cifrado:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat /home/ecrespo/hostname
4��ˉ�s|| � "3DUfw`�6���D �̬�����{� _CONSOLE ('��N�pD���-� \ٛn�Ś/��TD��xҝD[:�$] �wq�V��
�n /�k�a:�H.�{ USj�@u)�c ������T� �� �m�иや� � Z�&amp;amp;��0�Q��B�� /��q�e��E��li�"dx�tDs���k����h�J��20��&amp;amp;T�?R�x� �W�$�
                                                                                                                   �$�@ �&amp;amp;
                                                                                                                           ��� �G� /�.L���1d�� j����{cYRꄙZ`��t 8�4ԬZ~ ,)H
eb �� f ��?��
          �_' ��K&amp;amp;�d)����{y�z����ֆ�2x��h�� &amp;amp;j���tuq��a�JeJ�� ���\"~
                                                                   ��5`� V RCB`��������PU�&amp;amp;������X�
                                                                                                    9Ԥ[� 4O.� �� ̔�;/ �����#j V`Sf^��&amp;lt;�uB8 �ЭIx�4PR�� dml��`&amp;amp;c �
! ҟ&amp;amp;`�~�U?u�� �����쵮 @�)�8�Q U��杞M�e��="�}�V# ��&amp;gt;������ �&amp;gt;�F�� R�#ZgI���^J�� ,��0ݼR�rO�f��AxS��3�\�M���o�D �u�Av)�qq%�(F�/���%tL��w�U�k6~c��` &amp;ldquo;=�4N��E�= #� � a7�����v�(V�p�HlR�Y5����#^���K �~ :h��Z�Q�J�{�FC�N;*� 0Bő*���=�
�ՙ��R�mќet ���7B�_�Dz.[�6&amp;gt;�ĸؓ�� �Nc��#��NR��@� 4 �/���M?Om �|;/�Oe9�6��&amp;amp;6D*U�A�e��� �V
�ZM�&amp;lt;ɝ��"�0��0�W&amp;Yuml;L�H�,r
                        �&amp;gt;��f��4�$�wA�rѫ� �0H�����CP�i��&amp;amp;���!b���-#
$ލ;�X!y�� ~� I5e��V|Y�\� �H^&amp;pound;�7�0�Z��{�}"!��͡�� 6�M�!LNȆXvF         )� ��G�Nuɍ� � ӧ��s���t ���t��o&amp;amp;� C������W�#��Cpk�&amp;gt;&amp;lt;&amp;bdquo;&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Montar autom&amp;aacute;ticamente  la partici&amp;oacute;n o directorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Conecte un pendrive y ejecute el comando fdisk -l donde aparecer&amp;aacute; la partici&amp;oacute;n del pendrive:&lt;/p&gt;
&lt;p&gt;```
fdisk -l
 Disk /dev/sdb: 16.0 GB, 16011542528 bytes
32 heads, 63 sectors/track, 15512 cylinders, 31272544 sectores en total
Units = sectores of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Identificador del disco: 0x59a4123d&lt;/p&gt;
&lt;p&gt;Disposit. Inicio    Comienzo      Fin      Bloques  Id  Sistema
/dev/sdb1   *          63    31272191    15636064+   b  W95 FAT32
```&lt;/p&gt;
&lt;p&gt;Montar el pendrive:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir /mnt/usb
mount /dev/sdb1 /mnt/usb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar mount s&amp;oacute;lo mostrar&amp;aacute; las particiones montadas en el equipo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mount /dev/sdb1 on /mnt/usb type vfat (rw)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A diferencia del art&amp;iacute;culo original el pendrive y la partici&amp;oacute;n cifrada no se monta automaticamente.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Ubuntu"></category><category term="Canaima"></category><category term="Seguridad"></category><category term="eCryptfs"></category></entry><entry><title>Compartir repositorios de Mercurial con mercurial-server</title><link href="https://ecrespo.github.io/compartir-repositorios-de-mercurial-con-mercurial-server.html" rel="alternate"></link><published>2011-08-20T09:00:00-05:30</published><updated>2011-08-20T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-08-20:/compartir-repositorios-de-mercurial-con-mercurial-server.html</id><summary type="html">&lt;p&gt;Se tienen varios art&amp;iacute;culos sobre mercurial en este blog, un &lt;a href="https://www.seraph.to/control-de-versiones-con-mercurial.html"&gt;tutorial de mercurial&lt;/a&gt; (viene una actualizaci&amp;oacute;n), &lt;a href="https://www.seraph.to/manteniendo-un-paquete-debian-con-mercurial.html"&gt;como empaquetar para Debian con mercurial&lt;/a&gt; (viene una actualizaci&amp;oacute;n) y el &amp;uacute;ltimo &lt;a href="https://www.seraph.to/gestionar-los-archivos-de-configuracion-en-etc-con-etckeeper-y-mercurial.html"&gt;como gestionar la configuraci&amp;oacute;n con mercurial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como compartir repositorios de Mercurial con mercurial-server, este art&amp;iacute;culo se basa en el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Se tienen varios art&amp;iacute;culos sobre mercurial en este blog, un &lt;a href="https://www.seraph.to/control-de-versiones-con-mercurial.html"&gt;tutorial de mercurial&lt;/a&gt; (viene una actualizaci&amp;oacute;n), &lt;a href="https://www.seraph.to/manteniendo-un-paquete-debian-con-mercurial.html"&gt;como empaquetar para Debian con mercurial&lt;/a&gt; (viene una actualizaci&amp;oacute;n) y el &amp;uacute;ltimo &lt;a href="https://www.seraph.to/gestionar-los-archivos-de-configuracion-en-etc-con-etckeeper-y-mercurial.html"&gt;como gestionar la configuraci&amp;oacute;n con mercurial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como compartir repositorios de Mercurial con mercurial-server, este art&amp;iacute;culo se basa en el &lt;a href="http://dev.lshift.net/paul/mercurial-server/docbook.html"&gt;tutorial en ingl&amp;eacute;s&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mercurial-server no se autentica usando claves pero si llaves p&amp;uacute;blicas con ssh. Todos los usuarios que quieran acceder al repositorio mercurial necesitan una llave p&amp;uacute;blica. &lt;/p&gt;
&lt;p&gt;En el siguiente enlace tienen una gu&amp;iacute;a de como crear las &lt;a href="http://rafael.bonifaz.ec/blog/2011/01/ssh-con-claves-publicas-y-privadas/"&gt;llaves p&amp;uacute;blicas&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="acceso inicial al mercurial-server."&gt;Acceso inicial al mercurial-server.&lt;/h3&gt;
&lt;p&gt;Instalar mercurial-server:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install mercurial-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Conectarse al servidor grievous habilitando el forwarding.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@jewel:~$ ssh -A grievous&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Agregar llave privada al agente de autenticaci&amp;oacute;n. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@grievous:~$ ssh-add -L &amp;gt; my-key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Crear el directorio para el usuario ernesto en el mercurial-server, copiar la llave y actualizar el repositorio de autenticaci&amp;oacute;n. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@grievous:~$ sudo mkdir -p /etc/mercurial-server/keys/root/ernesto
ernesto@grievous:~$ sudo cp my-key /etc/mercurial-server/keys/root/ernesto/jewel
ernesto@grievous:~$ sudo -u hg /usr/share/mercurial-server/refresh-auth
ernesto@grievous:~$ exit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Crear un repositorio.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd proyectos/pysms-send&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Clonar el proyecto en el servidor grievous: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@jewel:~/proyectos/pysms-send$ hg clone . ssh://hg@grievous/ernesto/pysms-send
searching for changes
27 changesets found
remote: adding changesets
remote: adding manifests
remote: adding file changes
remote: added 27 changesets with 52 changes to 24 files&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Revisar si hay cambios en el repositorio.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@jewel:~/proyectos/pysms-send$ hg pull ssh://hg@grievous/ernesto/pysms-send
pulling from ssh://hg@grievous/ernesto/pysms-send
searching for changes
no changes found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Siguiente art&amp;iacute;culo se explicar&amp;aacute; como agregar usuarios al repositorio, controlar el acceso al repositorio&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Ubuntu"></category><category term="Canaima"></category><category term="mercurial"></category></entry><entry><title>Usar dnsmasq como servidor DNS cache y local</title><link href="https://ecrespo.github.io/usar-dnsmasq-como-servidor-dns-cache-y-local.html" rel="alternate"></link><published>2011-08-20T09:00:00-05:30</published><updated>2011-08-20T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-08-20:/usar-dnsmasq-como-servidor-dns-cache-y-local.html</id><summary type="html">&lt;p&gt;En el &lt;a href="https://ecrespo.github.io/mejorando-la-velocidad-de-consultas-de-dns-con-dnsmasq-y-probar-pruebas-de-diagnostico.html"&gt;art&amp;iacute;culo anterior&lt;/a&gt; explicaba como mejorar las consultas de DNS del equipo con dnsmaq.&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n se puede agregar equipos con su IP como de un servidor de DNS con Bind9 en funcionamiento.&lt;/p&gt;
&lt;p&gt;Se tiene una m&amp;aacute;quina virtual de nombre grievous e IP 192.168.10.53.&lt;/p&gt;
&lt;p&gt;Para instalr dnsmasq …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el &lt;a href="https://ecrespo.github.io/mejorando-la-velocidad-de-consultas-de-dns-con-dnsmasq-y-probar-pruebas-de-diagnostico.html"&gt;art&amp;iacute;culo anterior&lt;/a&gt; explicaba como mejorar las consultas de DNS del equipo con dnsmaq.&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n se puede agregar equipos con su IP como de un servidor de DNS con Bind9 en funcionamiento.&lt;/p&gt;
&lt;p&gt;Se tiene una m&amp;aacute;quina virtual de nombre grievous e IP 192.168.10.53.&lt;/p&gt;
&lt;p&gt;Para instalr dnsmasq se ejecuta apt-get.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install dnsmasq&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Configurar dnsmasq como DNS cache y local.&lt;/p&gt;
&lt;p&gt;Se define la ruta del archivo resolv.conf que hace consultas al servidor de DNS externo.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;resolv-file=/etc/resolv-orig.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Definir respuestas de peticiones locales dadas por el archivo /etc/hosts.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;local=/localnet/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Y eso es todo lo que hay que cambiarse en el archivo /etc/dnsmasq.conf para resolver nombres de equipos locales por medio de /etc/hosts.&lt;/p&gt;
&lt;p&gt;Agregar los equipos en el archivo /etc/hosts.&lt;/p&gt;
&lt;p&gt;En este caso se tiene el equipo grievous:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;192.168.10.53   grievous        grievous&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Si se necesita agregar m&amp;aacute;s equipos al servidor de DNS simplemente se edita el archivo /etc/hosts agregando los equipos en dicho archivo.&lt;/p&gt;
&lt;p&gt;Se crea el archivo /etc/resolv-orig.conf donde se encuentra las IPs de los servidores de DNS externos.
En este caso se est&amp;aacute; usando los servidores de DNS de Google, OpenDNS y de la red del trabajo.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nameserver 8.8.8.8 
nameserver 8.8.4.4
nameserver 208.67.222.222
nameserver 208.67.220.220
nameserver 192.168.32.254&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ya se tiene configurado el servidor de DNS, s&amp;oacute;lo falta que el equipo realice las consultas por medio del archivo /etc/resolv.conf, el cual debe apuntar al servidor local de DNS (127.0.0.1).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nameserver 127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se puede probar la resoluci&amp;oacute;n de nombres en el equipo.&lt;/p&gt;
&lt;p&gt;Probar que devuelve respuestas el servidor DNS al consultar el nombre del equipo grievous:&lt;/p&gt;
&lt;p&gt;```
host grievous
grievous has address 192.168.10.53&lt;/p&gt;
&lt;p&gt;dig grievous&lt;/p&gt;
&lt;p&gt;; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.7.3 &amp;lt;&amp;lt;&amp;gt;&amp;gt; grievous
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 19819
;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
&lt;p&gt;;; QUESTION SECTION:
;grievous.          IN  A&lt;/p&gt;
&lt;p&gt;;; ANSWER SECTION:
grievous.       0   IN  A   192.168.10.53&lt;/p&gt;
&lt;p&gt;;; Query time: 6 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Sat Aug 20 10:06:45 2011
;; MSG SIZE  rcvd: 42
```&lt;/p&gt;
&lt;p&gt;Ahora se puede verificar los rendimientos de los servidores de DNS con NameBench. Para instalarlo se ejecuta apt-get.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install  namebench&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la ejecuci&amp;oacute;n de namebench donde se le define el servidor de Nombres a utilizar.&lt;/p&gt;
&lt;p&gt;&lt;img alt="namebench" src="./images/namebench.png"/&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra las figuras del resultado de Namebench.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultado namebench 1" src="./images/namebench1.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultado namebench 2" src="./images/namebench2.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultado namebench 3" src="./images/namebench3.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultado namebench 4" src="./images/namebench4.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Ubuntu"></category><category term="Canaima"></category><category term="dnsmasq"></category></entry><entry><title>Manejando contactos y realizando una llamada con python en Android</title><link href="https://ecrespo.github.io/manejando-contactos-y-realizando-una-llamada-con-python-en-android.html" rel="alternate"></link><published>2011-08-15T09:10:00-05:30</published><updated>2011-08-15T09:10:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-08-15:/manejando-contactos-y-realizando-una-llamada-con-python-en-android.html</id><summary type="html">&lt;p&gt;Retornando a los art&amp;iacute;culos sobre Android.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo toca el tema de como capturar la informaci&amp;oacute;n del telefono y contacto del celular. Se crea una lista de contactos y telefonos, se despliega la informaci&amp;oacute;n en un widget de selecci&amp;oacute;n simple, luego de seleccionar al contacto se captura la selecci&amp;oacute;n, se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Retornando a los art&amp;iacute;culos sobre Android.&lt;/p&gt;
&lt;p&gt;Este art&amp;iacute;culo toca el tema de como capturar la informaci&amp;oacute;n del telefono y contacto del celular. Se crea una lista de contactos y telefonos, se despliega la informaci&amp;oacute;n en un widget de selecci&amp;oacute;n simple, luego de seleccionar al contacto se captura la selecci&amp;oacute;n, se despliega la informaci&amp;oacute;n del contacto y al final se realiza la llamada a dicho contacto.&lt;/p&gt;
&lt;p&gt;Las clases nuevas utilizadas en el programa son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;queryContent:Realiza una busqueda dentro de un contenido. En este caso se busca los contactos.&lt;/li&gt;
&lt;li&gt;phoneCallNumber: Permite realizar una llamada pasando el n&amp;uacute;mero de telefono como un string.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El c&amp;oacute;digo del programa se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="importar el modulo android"&gt;Importar el modulo android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="importar la funcion sleep del modulo time"&gt;importar la funcion sleep del modulo time&lt;/h1&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="crea la instancia droid del objeto android."&gt;Crea la instancia droid del objeto Android.&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se captura los contactos"&gt;Se captura los contactos&lt;/h1&gt;
&lt;p&gt;contactos = droid.queryContent('content://com.android.contacts/data/phones',\&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    ['display_name','data1'],None,None,None).result
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se crean la lista nombres y telefonos"&gt;Se crean la lista nombres y telefonos&lt;/h1&gt;
&lt;p&gt;nombres = []
telefonos = []&lt;/p&gt;
&lt;h1 id="se agrega la informacion de los contactos a las listas."&gt;Se agrega la informacion de los contactos a las listas.&lt;/h1&gt;
&lt;p&gt;for i in range(len(contacts)):
    nombres.append(contacts[i][u'display_name'])
    telefonos.append(contacts[i][u'data1'])&lt;/p&gt;
&lt;h1 id="se despliega la lista de contactos"&gt;Se despliega la lista de contactos&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateAlert("Contactos")
droid.dialogSetItems(nombres)
droid.dialogShow()&lt;/p&gt;
&lt;h1 id="se captura el resultado de la seleccion simple"&gt;Se captura el resultado de la seleccion simple&lt;/h1&gt;
&lt;p&gt;respuesta  = droid.dialogGetResponse().result&lt;/p&gt;
&lt;h1 id="se muestra la informacion del contacto seleccionado"&gt;Se muestra la informacion del contacto seleccionado&lt;/h1&gt;
&lt;p&gt;droid.makeToast('El contacto seleccionado es: %s, su numero es: %s'
                %(nombres[respuesta['item']],telefonos[respuesta['item']]))
sleep(5)
droid.makeToast("Realizando la llamada")
sleep(2)&lt;/p&gt;
&lt;h1 id="se realiza la llamada al contacto seleccioando."&gt;Se realiza la llamada al contacto seleccioando.&lt;/h1&gt;
&lt;p&gt;droid.phoneCallNumber("%s" %telefonos[respuesta['item']])
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la figura de la lista de contactos:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Contactos" src="./images/contactos.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra el contacto seleccionado:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Contactos" src="./images/contactos2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La &amp;uacute;ltima figura muestra la realizaci&amp;oacute;n de la llamada del contacto seleccionado:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Llamada" src="./images/llamada.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo QR del programa se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo QR" src="./images/contactos1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category><category term="Reproductor Música"></category></entry><entry><title>Tutorial de PyQt. Editor de archivos sencillo. Parte 10.</title><link href="https://ecrespo.github.io/tutorial-de-pyqt-editor-de-archivos-sencillo-parte-10.html" rel="alternate"></link><published>2011-08-14T09:00:00-05:30</published><updated>2011-08-14T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-08-14:/tutorial-de-pyqt-editor-de-archivos-sencillo-parte-10.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se explica como crear un editor de texto sencillo. &lt;/p&gt;
&lt;p&gt;Se tendr&amp;aacute; una barra de men&amp;uacute; con la opci&amp;oacute;n Archivo, dentro de ella se despliega la opci&amp;oacute;n abrir y cerrar aplicaci&amp;oacute;n; al abrir la aplicaci&amp;oacute;n en la ventana del editor aparecer&amp;aacute; el nombre del archivo.&lt;/p&gt;
&lt;p&gt;Se utilizar&amp;aacute;n las …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se explica como crear un editor de texto sencillo. &lt;/p&gt;
&lt;p&gt;Se tendr&amp;aacute; una barra de men&amp;uacute; con la opci&amp;oacute;n Archivo, dentro de ella se despliega la opci&amp;oacute;n abrir y cerrar aplicaci&amp;oacute;n; al abrir la aplicaci&amp;oacute;n en la ventana del editor aparecer&amp;aacute; el nombre del archivo.&lt;/p&gt;
&lt;p&gt;Se utilizar&amp;aacute;n las siguientes clases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QTextEdit: Define el editor de textos.&lt;/li&gt;
&lt;li&gt;QAction: Permite definir acciones en el men&amp;uacute;.&lt;/li&gt;
&lt;li&gt;menuBar: Se define la barra de men&amp;uacute;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El c&amp;oacute;digo del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;import sys
from PyQt4 import QtGui
from PyQt4 import QtCore&lt;/p&gt;
&lt;p&gt;class App(QtGui.QMainWindow):
    def &lt;strong&gt;init&lt;/strong&gt;(self,parent=None):
        QtGui.QWidget.&lt;strong&gt;init&lt;/strong&gt;(self, parent)
        #Se define el tamano de la ventana
        self.setGeometry(0, 50, 600, 400)
        #Se le coloca un titulo a la ventana y se asocia un icono.
        self.setWindowTitle('Editor de Texto:')
        self.setWindowIcon(QtGui.QIcon('./openlogo-50.png'))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se define el widget de edicion de texto
    self.textEdit = QtGui.QTextEdit()
    #Se coloca en el centro
    self.setCentralWidget(self.textEdit)
    #Se define la barra de estatus y se le asigna foco
    self.statusBar()
    self.setFocus()
    #Se define la accion abrir archivo, con
    #evento de teclado y mensaje
    openFile = QtGui.QAction('Abrir', self)
    openFile.setShortcut('Ctrl+a')
    openFile.setStatusTip('Abrir archivo nuevo')
    #Se define la accion cerrar aplicacion
    #con evento de teclado y mensaje
    closeApp = QtGui.QAction('Cerrar',self)
    closeApp.setShortcut('Ctrl+w')
    closeApp.setStatusTip('Cerrar aplicacion')

    #Se define la barra de menu
    menubar = self.menuBar()
    #Nombre archivo y se agrega abrir y cerrar aplicacion
    fileMenu = menubar.addMenu('&amp;amp;Archivo')
    fileMenu.addAction(openFile)
    fileMenu.addAction(closeApp)

    #se asocia los eventos a la accion abrir archivo y cerrar aplicacion. 
    self.connect(closeApp, QtCore.SIGNAL('triggered()'),QtGui.qApp, QtCore.SLOT('quit()'))
    self.connect(openFile, QtCore.SIGNAL('triggered()'), self.showDialog)



def showDialog(self):
    #Se captura el nombre del archivo a abrir
    filename = QtGui.QFileDialog.getOpenFileName(self, 'Abrir archivo',
                '/home')
    #Se define un neuvo titulo a la ventan de la aplicacion
    self.setWindowTitle('Editor de Texto:%s' %filename)
    #Se abre el archivo y se
    #desplega la informacion en el widget de
    #edicion de texto
    fname = open(filename)
    data = fname.read()
    self.textEdit.setText(data)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se ejecuta el programa principal"&gt;Se ejecuta el programa principal&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":  &lt;br/&gt;
   #Se instancia la clase QApplication  &lt;br/&gt;
   app = QtGui.QApplication(sys.argv)  &lt;br/&gt;
   #Se instancia el objeto QuitButton  &lt;br/&gt;
   qb = App()  &lt;br/&gt;
   #Se muestra la aplicacion  &lt;br/&gt;
   qb.show()  &lt;br/&gt;
   #Se sale de la aplicacion  &lt;br/&gt;
   sys.exit(app.exec_())
```&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la aplicaci&amp;oacute;n al inicio.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Editor de archivos - pyqt" src="./images/pyqt10-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra las opciones de la barra de men&amp;uacute;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Editor de archivos, opciones del men&amp;uacute; - pyqt" src="./images/pyqt10-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la ventana de dialogo de abrir archivo:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Editor de archivos, abrir archivo - pyqt" src="./images/pyqt10-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;La &amp;uacute;ltima figura muestra ya la informaci&amp;oacute;n del archivo en el editor de texto:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Editor de archivos, editando archivo - pyqt" src="./images/pyqt10-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;
*&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Python"></category><category term="PyQt"></category></entry><entry><title>Tutorial de PyQt. Barra de progreso. Parte 9.</title><link href="https://ecrespo.github.io/tutorial-de-pyqt-barra-de-progreso-parte-9.html" rel="alternate"></link><published>2011-08-13T09:00:00-05:30</published><updated>2011-08-13T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-08-13:/tutorial-de-pyqt-barra-de-progreso-parte-9.html</id><summary type="html">&lt;p&gt;Continuando con la serie de art&amp;iacute;culos sobre PyQt en este caso se tratar&amp;aacute; sobre el widget de la barra de progreso.&lt;/p&gt;
&lt;p&gt;Se utilizar&amp;aacute;n los siguientes widgets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qbutton: Bot&amp;oacute;n de iniciar y detener la barra de progreso y el bot&amp;oacute;n salir.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.riverbankcomputing.co.uk/static/Docs/PyQt4/html/qprogressbar.html"&gt;QProgressBar&lt;/a&gt;: Es el widget de la barra de progreso.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.riverbankcomputing.co.uk/static/Docs/PyQt4/html/qtimer.html"&gt;QTimer …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Continuando con la serie de art&amp;iacute;culos sobre PyQt en este caso se tratar&amp;aacute; sobre el widget de la barra de progreso.&lt;/p&gt;
&lt;p&gt;Se utilizar&amp;aacute;n los siguientes widgets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qbutton: Bot&amp;oacute;n de iniciar y detener la barra de progreso y el bot&amp;oacute;n salir.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.riverbankcomputing.co.uk/static/Docs/PyQt4/html/qprogressbar.html"&gt;QProgressBar&lt;/a&gt;: Es el widget de la barra de progreso.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.riverbankcomputing.co.uk/static/Docs/PyQt4/html/qtimer.html"&gt;QTimer&lt;/a&gt;: Provee un timer que es quien maneja el progreso de la barra.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se tiene la barra de progreso que se inicia cuando se le da clip al bot&amp;oacute;n, se incrementa la barra hasta llegar a 100, el bot&amp;oacute;n que inicia la barra sirve tambi&amp;eacute;n para detenerlo, volver a arrancar el progreso, cuando se llega a 100 el bot&amp;oacute;n se coloca otra vez para iniciar la barra, colocando el contador en cero para poder iniciar de cero el incremento. Se tiene un bot&amp;oacute;n para salir de la aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;import sys
from PyQt4 import QtGui
from PyQt4 import QtCore&lt;/p&gt;
&lt;p&gt;class App(QtGui.QWidget):
    def &lt;strong&gt;init&lt;/strong&gt;(self,parent=None):
        QtGui.QWidget.&lt;strong&gt;init&lt;/strong&gt;(self, parent)
        #Se define el tamano de la ventana
        self.setGeometry(400, 400, 250, 150)
        #Se le coloca un titulo a la ventana y se asocia un icono.
        self.setWindowTitle('Barra de progreso')
        self.setWindowIcon(QtGui.QIcon('./openlogo-50.png'))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se definen los widgets a utilizar en la ventana.
    #Se crea la instancia de la barra de progreso.
    self.pbar = QtGui.QProgressBar(self)
    #Se crea el boton que inicia/detiene la barra de progreso
    self.button = QtGui.QPushButton('Iniciar', self)
    #Se define una politica al boton de no foco
    self.button.setFocusPolicy(QtCore.Qt.NoFocus)
    #Se define el boton salir.
    self.quit = QtGui.QPushButton('Salir', self)

    #Se crea la instancia timer con el contador en cero
    self.timer = QtCore.QBasicTimer()
    self.step = 0

    #se asocia los eventos de los 2 botones. 
    self.connect(self.button, QtCore.SIGNAL('clicked()'),self.Accion)
    self.connect(self.quit, QtCore.SIGNAL('clicked()'),QtGui.qApp, QtCore.SLOT('quit()'))

    #Se define como empaquetar los widgets.
    #En este caso se usa grilla.
    #Se crea la instancia
    grid = QtGui.QGridLayout()
    grid.setSpacing(10)
    #Se agrupan los widgets pasando el
    #objeto luego el orden en vertical, el orden en
    #horizontal.
    grid.addWidget(self.pbar, 1, 0)
    grid.addWidget(self.button, 2, 0)
    grid.addWidget(self.quit, 3, 1)
    #Se define el layout pasando la grilla
    self.setLayout(grid)



def timerEvent(self, event):
    #funcion asociada al timer.
    #Si el contador llega a 100
    #Se detiene el timer, se cambia el titulo
    #del boton, se coloca el contador en cero
    #y se sale de la funcion.
    #Si no llega a 100, se incrementa en 1 el contador y
    #se le asigna un nuevo valor a la barra de progreso.
    if self.step &amp;gt;= 100:
        self.timer.stop()
        self.button.setText('Iniciar')
        self.step = 0
        return
    self.step = self.step + 1
    self.pbar.setValue(self.step)

def Accion(self):
    #Si el timer esta activo se detiene y se
    #le cambia el titulo al boton con Iniciar.
    if self.timer.isActive():
        self.timer.stop()
        self.button.setText('Iniciar')
    else:
        #Si no esta activo el timer, se inicia con valor de 100
        #se coloca el titulo detener al boton.
        self.timer.start(100, self)
        self.button.setText('Detener')
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se ejecuta el programa principal"&gt;Se ejecuta el programa principal&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":  &lt;br/&gt;
   #Se instancia la clase QApplication  &lt;br/&gt;
   app = QtGui.QApplication(sys.argv)  &lt;br/&gt;
   #Se instancia el objeto QuitButton  &lt;br/&gt;
   qb = App()  &lt;br/&gt;
   #Se muestra la aplicacion  &lt;br/&gt;
   qb.show()  &lt;br/&gt;
   #Se sale de la aplicacion  &lt;br/&gt;
   sys.exit(app.exec_())&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;
*&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Python"></category><category term="PyQt"></category></entry><entry><title>Gestionar los archivos de configuración en /etc con etckeeper y mercurial</title><link href="https://ecrespo.github.io/gestionar-los-archivos-de-configuracion-en-etc-con-etckeeper-y-mercurial.html" rel="alternate"></link><published>2011-07-27T09:00:00-05:30</published><updated>2011-07-27T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-27:/gestionar-los-archivos-de-configuracion-en-etc-con-etckeeper-y-mercurial.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos de control de versiones distribuido con Mercurial ahora toca el respaldo y guardar las versiones de los archivos de configuraci&amp;oacute;n en /etc con etckeeper.&lt;/p&gt;
&lt;p&gt;La mayoria de los art&amp;iacute;culos que se consiguen sobre etckeeper es usando git o bazaar.&lt;/p&gt;
&lt;p&gt;Para esta gu&amp;iacute;a es necesario tener conocimientos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos de control de versiones distribuido con Mercurial ahora toca el respaldo y guardar las versiones de los archivos de configuraci&amp;oacute;n en /etc con etckeeper.&lt;/p&gt;
&lt;p&gt;La mayoria de los art&amp;iacute;culos que se consiguen sobre etckeeper es usando git o bazaar.&lt;/p&gt;
&lt;p&gt;Para esta gu&amp;iacute;a es necesario tener conocimientos b&amp;aacute;sicos de mercurial, pueden leer el art&amp;iacute;culo de control de &lt;a href="https://ecrespo.github.io/control-de-versiones-con-mercurial.html"&gt;versiones con mercurial de este blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Es necesario llevar un hist&amp;oacute;rico de los archivos dentro del directorio /etc/, es esencial para un sistema saludable. Los beneficios rastrear cambios en los archivos dentro de /etc incluye:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentaci&amp;oacute;n: Los mensajes de log quedan atados a los cambios de configuraci&amp;oacute;n de los archivos que sirven como documentaci&amp;oacute;n.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Resoluci&amp;oacute;n de problemas: Permite devolver cambios en las configuraciones que han dado problemas y as&amp;iacute; mantener la estabilidad del sistema.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instalaci&amp;oacute;n de etckeeper:
 Es necesario tener mercurial instalado.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;aptitude install mercurial etckeeper&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configuraci&amp;oacute;n de etckeeper:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se edita el archivo /etc/etckeeper/etckeeper.conf se comenta los distintos sistemas de control de versiones y se deja hg, adicionalmente se deja la opci&amp;oacute;n de env&amp;iacute;o de correo a un usuario.&lt;/p&gt;
&lt;p&gt;```
VCS="hg"&lt;/p&gt;
&lt;h1 id="options passed to hg commit when run by etckeeper."&gt;Options passed to hg commit when run by etckeeper.&lt;/h1&gt;
&lt;p&gt;HG_COMMIT_OPTIONS="-u ecrespo@gmail.com"
```&lt;/p&gt;
&lt;p&gt;Luego se edita el archivo /etc/mercurial/hgrc&lt;/p&gt;
&lt;p&gt;Se agrega el correo del usuario:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[ui]
username = ecrespo@gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Se inicializa el control de versiones:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;etckeeper init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra como se ha agregado los archivos dentro de /etc en el control de versiones:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;adding xdg/xfce4/Xft.xrdb
adding xdg/xfce4/helpers.rc
adding xdg/xfce4/mount.rc
adding xdg/xfce4/panel/clock-14.rc
adding xdg/xfce4/panel/launcher-10.rc
adding xdg/xfce4/panel/launcher-7.rc
adding xdg/xfce4/panel/launcher-9.rc
adding xdg/xfce4/panel/panels.xml
adding xdg/xfce4/panel/systray-4.rc
adding xdg/xfce4/panel/xfce4-menu-5.rc
adding xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml
adding xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-session.xml
adding xdg/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml
adding xdg/xfce4/xinitrc
adding xml/catalog
adding xml/docbook-xml.xml
adding xml/docbook-xsl.xml
adding xml/rarian-compat.xml
adding xml/sgml-data.xml
adding xml/xml-core.xml&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Se hace el primer commit:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;etckeeper commit "Inicializacion del control de versiones"&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Usando etckeeper.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Al realizar la instalaci&amp;oacute;n de un programa se ejecutar&amp;aacute; autom&amp;aacute;ticamente el agregado de los archivos de configuraci&amp;oacute;n en el control de versiones.
Se instalar&amp;aacute; el paquete lighttpd para mostar el proceso de agregar los archivos al control de versiones:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install lighttpd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al final aparece una serie de archivos agregados:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;adding lighttpd/conf-available/15-fastcgi-php.conf
adding lighttpd/conf-available/90-debian-doc.conf
adding lighttpd/conf-available/README
adding lighttpd/lighttpd.conf
adding logrotate.d/lighttpd
adding rc0.d/K01lighttpd
adding rc1.d/K01lighttpd
adding rc2.d/S20lighttpd
adding rc3.d/S20lighttpd
adding rc4.d/S20lighttpd
adding rc5.d/S20lighttpd
adding rc6.d/K01lighttpd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se revisa el estatus de mercurial en el directorio /etc:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg status /etc/
M ../etc/.etckeeper&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al revisar el log de mercurial en el directorio /etc/ muestra los cambios realizados (commit):&lt;/p&gt;
&lt;p&gt;```
hg log /etc/&lt;/p&gt;
&lt;p&gt;changeset:   1:ba22869a3179
tag:         tip
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:02:27 2011 -0430
summary:     committing changes in /etc after apt run&lt;/p&gt;
&lt;p&gt;changeset:   0:f2a3f337ecc0
user:        ecrespo@gmail.com
date:        Wed Jul 27 21:54:21 2011 -0430
summary:     Inicializacion del control de versiones
```&lt;/p&gt;
&lt;p&gt;Se tiene una descripci&amp;oacute;n de los cambios en el changeset 0 se muestra la inicializaci&amp;oacute;n del control de versiones, en el changeset 1 se muestra el cambio luego de instalar lighttpd.&lt;/p&gt;
&lt;p&gt;Se modifica un archivo de configuraci&amp;oacute;n /etc/hosts :&lt;/p&gt;
&lt;p&gt;```
etckeeper commit "Se elimina el dominio  del host jewel en /etc/hosts" /etc/hosts&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Al volver a revisar el log de mercurial sobre el directorio /etc/ aparece el commit del cambio del archivo hosts:&lt;/p&gt;
&lt;p&gt;```
hg log /etc/
changeset:   2:6efc1189bd8b
tag:         tip
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:08:25 2011 -0430
summary:     Se elimina el dominio del host jewel en /etc/hosts&lt;/p&gt;
&lt;p&gt;changeset:   1:ba22869a3179
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:02:27 2011 -0430
summary:     committing changes in /etc after apt run&lt;/p&gt;
&lt;p&gt;changeset:   0:f2a3f337ecc0
user:        ecrespo@gmail.com
date:        Wed Jul 27 21:54:21 2011 -0430
summary:     Inicializacion del control de versiones
```&lt;/p&gt;
&lt;p&gt;Se puede ver las diferencias entre los cambios realizados en archivos dentro del directorio /etc:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg diff /etc/
diff -r 6efc1189bd8b hosts
--- a/hosts    Wed Jul 27 22:08:25 2011 -0430
+++ b/hosts    Wed Jul 27 22:13:41 2011 -0430
@@ -1,6 +1,6 @@
 127.0.0.1    localhost
 127.0.1.1    jewel    jewel
-
+127.0.0.1    sofia   sofia
 # The following lines are desirable for IPv6 capable hosts
 ::1     ip6-localhost ip6-loopback
 fe00::0 ip6-localnet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al realizar el commit y volver a hacer el diff est&amp;aacute; vez no muestra informaci&amp;oacute;n por que ya los cambios se subieron al control de versiones:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;etckeeper commit "Agregado el nombre sofia al host 127.0.0.1 en el archivo /etc/hosts" /etc/hosts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al revisar los logs ahora aparece el cambio de agreado el nombre sofia al host 127.0.0.1:&lt;/p&gt;
&lt;p&gt;```
hg log /etc/
changeset:   3:452065708a7e
tag:         tip
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:16:13 2011 -0430
summary:     Agregado el nombre sofia al host 127.0.0.1 en el archivo /etc/hosts&lt;/p&gt;
&lt;p&gt;changeset:   2:6efc1189bd8b
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:08:25 2011 -0430
summary:     Se elimina pdvsa.com del host jewel en /etc/hosts&lt;/p&gt;
&lt;p&gt;changeset:   1:ba22869a3179
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:02:27 2011 -0430
summary:     committing changes in /etc after apt run&lt;/p&gt;
&lt;p&gt;changeset:   0:f2a3f337ecc0
user:        ecrespo@gmail.com
date:        Wed Jul 27 21:54:21 2011 -0430
summary:     Inicializacion del control de versiones
```&lt;/p&gt;
&lt;p&gt;Para ver el tip de cada repo se ejecuta hg tip dentro del repositorio:&lt;/p&gt;
&lt;p&gt;```
root@jewel:/etc# hg tip
changeset:   3:452065708a7e
tag:         tip
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:16:13 2011 -0430
summary:     Agregado el nombre sofia al host 127.0.0.1 en el archivo /etc/hosts&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora se mostrar&amp;aacute; todas las revisiones con los logs y luego se revertir&amp;aacute; un cambio:&lt;/p&gt;
&lt;p&gt;```
hg log 
changeset:   3:452065708a7e
tag:         tip
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:16:13 2011 -0430
summary:     Agregado el nombre sofia al host 127.0.0.1 en el archivo /etc/hosts&lt;/p&gt;
&lt;p&gt;changeset:   2:6efc1189bd8b
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:08:25 2011 -0430
summary:     Se elimina pdvsa.com del host jewel en /etc/hosts&lt;/p&gt;
&lt;p&gt;changeset:   1:ba22869a3179
user:        ecrespo@gmail.com
date:        Wed Jul 27 22:02:27 2011 -0430
summary:     committing changes in /etc after apt run&lt;/p&gt;
&lt;p&gt;changeset:   0:f2a3f337ecc0
user:        ecrespo@gmail.com
date:        Wed Jul 27 21:54:21 2011 -0430
summary:     Inicializacion del control de versiones
```&lt;/p&gt;
&lt;p&gt;Se pueden ver los cambios con respecto a cada revisi&amp;oacute;n, en el siguiente comando se revisa la revisi&amp;oacute;n 1 con respecto a la 2 en /etc/hosts:&lt;/p&gt;
&lt;p&gt;```
hg diff -r 1 -r 2 /etc/hosts
diff -r ba22869a3179 -r 6efc1189bd8b hosts
--- a/hosts    Wed Jul 27 22:02:27 2011 -0430
+++ b/hosts    Wed Jul 27 22:08:25 2011 -0430
@@ -1,5 +1,5 @@
 127.0.0.1    localhost
-127.0.1.1    jewel.dst.pdvsa.com    jewel
+127.0.1.1    jewel    jewel&lt;/p&gt;
&lt;p&gt;# The following lines are desirable for IPv6 capable hosts
 ::1     ip6-localhost ip6-loopback&lt;/p&gt;
&lt;p&gt;Ahora se mostrar&amp;aacute; la 1 con respecto a la 3:
hg diff -r 1 -r 3 /etc/hosts
diff -r ba22869a3179 -r 452065708a7e hosts
--- a/hosts    Wed Jul 27 22:02:27 2011 -0430
+++ b/hosts    Wed Jul 27 22:16:13 2011 -0430
@@ -1,6 +1,6 @@
 127.0.0.1    localhost
-127.0.1.1    jewel.dst.pdvsa.com    jewel
-
+127.0.1.1    jewel    jewel
+127.0.0.1    sofia   sofia
 # The following lines are desirable for IPv6 capable hosts
 ::1     ip6-localhost ip6-loopback
 fe00::0 ip6-localnet
```&lt;/p&gt;
&lt;p&gt;Ahora se revierte el cambio de la revisi&amp;oacute;n 3 a la 2 en el archivo /etc/hosts.&lt;/p&gt;
&lt;p&gt;```
hg revert -r 2 /etc/hosts&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora el host sofia ya no aparece en el archivo /etc/hosts:&lt;/p&gt;
&lt;p&gt;```
127.0.0.1       localhost
127.0.1.1       jewel   jewel&lt;/p&gt;
&lt;h1 id="the following lines are desirable for ipv6 capable hosts"&gt;The following lines are desirable for IPv6 capable hosts&lt;/h1&gt;
&lt;p&gt;::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Si se desea respaldar los archivos en un servidor se puede usar bitbucket como ejemplo, se crea el proyecto configuracion-jewel y se sube el contenido del directorio /etc/ con el comando hg push:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg push https://bitbucket.org/ecrespo/configuracion-jewel
http authorization required
realm: Bitbucket.org HTTP
user: ecrespo
password: 
pushing to https://bitbucket.org/ecrespo/configuracion-jewel
searching for changes
remote: adding changesets
remote: adding manifests
remote: adding file changes
remote: added 4 changesets with 5764 changes to 5759 files
remote: bb/acl: ecrespo is allowed. accepted payload.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra una captura de pantalla de los cambios del proyecto en bitbucket.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Web mercurial" src="./images/mercurial-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Web mercurial" src="./images/mercurial-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Con esta gu&amp;iacute;a ya se puede llevar un control de los cambios realizados en el directorio /etc/ con un control de versiones distribuido como mercurial.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Ubuntu"></category><category term="Canaima"></category><category term="etckeeper"></category><category term="mercurial"></category></entry><entry><title>Iniciar sesión de usuario autenticando vía pendrive</title><link href="https://ecrespo.github.io/iniciar-sesion-de-usuario-autenticando-via-pendrive.html" rel="alternate"></link><published>2011-07-26T09:00:00-05:30</published><updated>2011-07-26T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-26:/iniciar-sesion-de-usuario-autenticando-via-pendrive.html</id><summary type="html">&lt;p&gt;Cuando no se pasa uno a modo paranoico se le ocurren ideas de como validar usuarios al ingresar en una sesi&amp;oacute;n de escritorio v&amp;iacute;a GDM.&lt;/p&gt;
&lt;p&gt;En Debian/Ubuntu/Canaima existe los paquetes libpam-usb y pamusb-tools, estos permiten crear una llave, dicha llave se guarda en el pendrive. Luego se configura …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cuando no se pasa uno a modo paranoico se le ocurren ideas de como validar usuarios al ingresar en una sesi&amp;oacute;n de escritorio v&amp;iacute;a GDM.&lt;/p&gt;
&lt;p&gt;En Debian/Ubuntu/Canaima existe los paquetes libpam-usb y pamusb-tools, estos permiten crear una llave, dicha llave se guarda en el pendrive. Luego se configura pam para que se pida la llave al momento de ingresar usuario y clave en el GDM del equipo; si no se conecta el pendrive el GDM colocar&amp;aacute; un mensaje que clave invalida.&lt;/p&gt;
&lt;p&gt;Para instalar estos paquetes se ejecuta aptitude:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install libpam-usb pamusb-tools&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego se conecta el pendrive en el equipo y se agrega el dispositivo en /etc/pamusb.conf con el comando pamusb-conf:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pamusb-conf --add-device /media/F060-785C/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Donde /media/F060-785C/ es la ruta del pendrive.&lt;/p&gt;
&lt;p&gt;Se agrega el usuario en /etc/pamusb.conf el cual iniciar&amp;aacute; sesi&amp;oacute;n en el equipo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pamusb-conf --add-user ecrespo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se verifica la configuraci&amp;oacute;n de pamusb con el usuario agregado:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pamusb-check ecrespo
* Authentication request for user "ecrespo" (pamusb-check)
* Device "/media/F060-785C/" is connected (good).
* Performing one time pad verification...
* Regenerating new pads...
* Unable to update pads.
* Access granted.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al devolver el programa acceso garantizado ya se tiene todo listo para usar el pendrive en el momento de inicio de sesi&amp;oacute;n, s&amp;oacute;lo falta modificar pam para que permita la autenticaci&amp;oacute;n con el pendrive.&lt;/p&gt;
&lt;p&gt;Se edita el archivo /etc/pam.d/common-aut y se agrega la siguiente l&amp;iacute;nea:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auth sufficient pam_usb.so&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Con esta l&amp;iacute;nea el GDM verifica el token de la llave, si se quiere que pida tanto la contrase&amp;ntilde;a como el token se cambia sufficient a required.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auth required pam_usb.so&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A partir de ahora al iniciar sesi&amp;oacute;n se necesita la contrase&amp;ntilde;a y el token.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el mensaje que env&amp;iacute;a la consola al ejecutar sudo -s :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[sudo] password for ecrespo: 
* pam_usb v0.4.2
* Authentication request for user "ecrespo" (sudo)
* Device "/media/F060-785C/" is connected (good).
* Performing one time pad verification...
* Regenerating new pads...
* Unable to update pads.
* Access granted.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Ubuntu"></category><category term="Canaima"></category><category term="libpam"></category><category term="gnome"></category><category term="usb"></category></entry><entry><title>Tutorial de PyQt. checkbutton, pixmap, QFileDialog y Código QR. Parte 8.</title><link href="https://ecrespo.github.io/tutorial-de-pyqt-checkbutton-pixmap-qfiledialog-y-codigo-qr-parte-8.html" rel="alternate"></link><published>2011-07-23T09:00:00-05:30</published><updated>2011-07-23T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-23:/tutorial-de-pyqt-checkbutton-pixmap-qfiledialog-y-codigo-qr-parte-8.html</id><summary type="html">&lt;p&gt;Este post trata de un formulario en PyQt que se ingresa los datos, una foto, los d&amp;iacute;as que desea por ejemplo apoyar en un evento y genera un c&amp;oacute;digo QR con dicha informaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Los widgets nuevos que se utilizar&amp;aacute;n son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QCheckButton: Permite crear botones check, se pueden seleccionar varios opciones …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Este post trata de un formulario en PyQt que se ingresa los datos, una foto, los d&amp;iacute;as que desea por ejemplo apoyar en un evento y genera un c&amp;oacute;digo QR con dicha informaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Los widgets nuevos que se utilizar&amp;aacute;n son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QCheckButton: Permite crear botones check, se pueden seleccionar varios opciones.&lt;/li&gt;
&lt;li&gt;QPixmap: Permite agregar una imagen a una etiqueta.&lt;/li&gt;
&lt;li&gt;QFileDialog: Abre una ventana de dialogo para abrir o salvar  un archivo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El c&amp;oacute;digo del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="modulo qrencode"&gt;modulo qrencode&lt;/h1&gt;
&lt;p&gt;from qrencode import encode&lt;/p&gt;
&lt;h1 id="se importa el modulo sys"&gt;Se importa el modulo sys&lt;/h1&gt;
&lt;p&gt;import sys &lt;/p&gt;
&lt;h1 id="de pyqt4 importar qtgui y qtcore"&gt;De PyQt4 importar QtGui y QtCore&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui, QtCore&lt;/p&gt;
&lt;h1 id="import os"&gt;Import os&lt;/h1&gt;
&lt;p&gt;import os &lt;/p&gt;
&lt;p&gt;class App(QtGui.QWidget):
    def &lt;strong&gt;init&lt;/strong&gt;(self, parent=None):
        QtGui.QWidget.&lt;strong&gt;init&lt;/strong&gt;(self, parent)
        #Se define el tamagno y posicion de la ventana
        self.setGeometry(0, 50, 600, 400)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se le coloca un titulo a la ventana y se asocia un icono.
    self.setWindowTitle('Generacion de codigo QR')
    self.setWindowIcon(QtGui.QIcon('./openlogo-50.png'))

    #Se crea la etiqueta para la foto
    foto = QtGui.QLabel("Foto: ")
    self.imagen = QtGui.QLabel("")

    #Se crea el boton para cargar la foton
    cargar = QtGui.QPushButton("Cargar Foto",self)

    #Etiqueta nombre
    self.nombre = QtGui.QLabel('Nombre: ')
    #Entrada de datos del nombre
    self.nombreEdit = QtGui.QLineEdit()

    #Se crea la etiqueta y etrada de datos de la cedula        
    self.etiquetaCedula = QtGui.QLabel("Cedula")
    self.cedula = QtGui.QLineEdit()

    #Se crea la etiqueta y el widget para la fecha
    #de nacimiento        
    fechaEtiqueta = QtGui.QLabel("Fecha de Nacimiento")
    self.fecha = QtGui.QDateEdit(self)
    #Se define el formato dia/mes/agno
    self.fecha.setDisplayFormat("dd/MM/yyyy")
    #Se fija la fecha inicial a la fecha actual
    self.fecha.setDate(QtCore.QDate.currentDate())

    #Se define la etiqueta que pregunta por el sexo
    etiquetaSexo = QtGui.QLabel("Sexo:")
    #Se definen los botones de radio para masculino y femenino
    self.botonradio1 = QtGui.QRadioButton("&amp;amp;Masculino",self)
    self.botonradio2 = QtGui.QRadioButton("&amp;amp;Femenino",self)

    #Etiqueta ciudad.
    self.ciudadEtiqueta = QtGui.QLabel("Ciudad de Nacimiento:")
    #Se define el comboBox con las ciudades
    self.combo = QtGui.QComboBox(self)
    ciudades = ["Maracaibo",
    "Valencia","Maracay","Barquisimeto","Merida","Caracas",
    "San Cristobal","Barinas","El vigia","Ciudad Bolivar",
    "Puerto Ordaz","Coro","Puerto Cabello","Margarita"]
    for ciudad in ciudades:
        self.combo.addItem(ciudad)

    #Se crea la etiqueta de dia de la semana
    diasemana = QtGui.QLabel("Dia semana")
    #Se define los botones de check para los dias de la semana
    self.lunes = QtGui.QCheckBox("Lunes",self)
    self.martes = QtGui.QCheckBox("Martes",self)
    self.miercoles = QtGui.QCheckBox("Miercoles",self)
    self.jueves = QtGui.QCheckBox("Jueves",self)
    self.viernes = QtGui.QCheckBox("Viernes",self)

    #Se define el boton salir
    quit = QtGui.QPushButton('Salir', self)

    #Se define el boton procesar la informacion
    okButton = QtGui.QPushButton("Procesar",self)

    #Se crea la etiqueta que mostrara el codigo QR
    self.label = QtGui.QLabel(self)

    #Se define un timer
    self.timer = QtCore.QBasicTimer()
    self.step = 0

    #Se empaquetan los widgets en la ventana.
    grid = QtGui.QGridLayout()
    grid.setSpacing(10)
    grid.addWidget(foto,1,0)
    grid.addWidget(self.imagen,1,1)
    grid.addWidget(cargar,1,2)
    grid.addWidget(self.nombre, 2, 0)
    grid.addWidget(self.nombreEdit, 2, 1)
    grid.addWidget(etiquetaSexo,3,0)
    grid.addWidget(self.botonradio1,3,1)
    grid.addWidget(self.botonradio2,3,2)
    grid.addWidget(self.etiquetaCedula,4,0)
    grid.addWidget(self.cedula,4,1)
    grid.addWidget(fechaEtiqueta,5,0)
    grid.addWidget(self.fecha,5,1)
    grid.addWidget(self.ciudadEtiqueta,6,0)
    grid.addWidget(self.combo,6,1)
    grid.addWidget(diasemana,7,0)
    grid.addWidget(self.lunes,7,1)
    grid.addWidget(self.martes,7,2)
    grid.addWidget(self.miercoles,7,3)
    grid.addWidget(self.jueves,7,4)
    grid.addWidget(self.viernes,7,5)
    grid.addWidget(okButton, 8, 0)
    grid.addWidget(self.label,9,1)
    grid.addWidget(quit, 10, 1)
    self.setLayout(grid)

    #Se definen las segnales de los widgets.
    #boton salir, procesar y cargar foto
    self.connect(quit, QtCore.SIGNAL('clicked()'),QtGui.qApp, QtCore.SLOT('quit()'))
    self.connect(okButton,QtCore.SIGNAL('clicked()'),self.Procesar)
    self.connect(cargar, QtCore.SIGNAL('clicked()'), self.showDialog)


def showDialog(self):
    #Muestra una ventana de dialogo para abrir un archivo
    #guarda la ruta del archivo.
    self.filename = QtGui.QFileDialog.getOpenFileName(self, 'Open file',
                '/home')

    #Se define la imagen en la etiqueta
    pixmap = QtGui.QPixmap("%s" %self.filename)
    self.imagen.setPixmap(pixmap)



def Procesar(self):
    #Captura la informacion y genera el codigo QR

    #Define el resultado de los botones de radio
    if self.botonradio1.isChecked() == True:
        sexo = "Masculino"
    elif self.botonradio2.isChecked() == True:
        sexo = "Femenino"

    #Se procesa la informacion de los botones de check
    lista = {}
    dias = ("Lunes","Martes","Miercoles","Jueves","Viernes")
    lista["Lunes"] = self.lunes.isChecked()
    lista["Martes"] = self.martes.isChecked()
    lista["Miercoles"] = self.miercoles.isChecked()
    lista["Jueves"] = self.jueves.isChecked()
    lista["Viernes"] = self.viernes.isChecked()
    resultado = ""
    flag = 0
    for dia in lista.keys():
        for i in dias:
            if dia == i:
                if lista[dia] == True:
                    if flag == 0:
                        resultado = dia
                        flag = 1
                    elif flag == 1:
                        resultado = resultado + ",%s" %dia

    #Se le da formato a la informacion recabada para generar el codigo QR
    texto = """
    Nombre:%s\n
    Cedula: %s\n
    Fecha Nacimiento: %s\n
    Sexo: %s\n
    Foto: %s\n
    Dia de participacion: %s\n

    """ %(self.nombreEdit.text(),
        self.cedula.text(),
        self.fecha.textFromDateTime(self.fecha.dateTime()),
        sexo,
        self.filename,
        resultado)

    #Se verifica si el archivo del codigo qr no existe, si no se borra
    if os.path.isfile("./archivosalida.png"):
        remove("./archivosalida.png")

    #Se crea la imagen del codigo qr
    imagen = encode(texto)[2]
    #Se salva la imagen en un archivo.
    imagen.save("./archivosalida.png")

    #Se muestra la imagen en la etiqueta
    pixmap = QtGui.QPixmap("./archivosalida.png")
    self.label.setPixmap(pixmap)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":  &lt;br/&gt;
   #Se instancia la clase QApplication  &lt;br/&gt;
   app = QtGui.QApplication(sys.argv)  &lt;br/&gt;
   #Se instancia el objeto QuitButton  &lt;br/&gt;
   qb = App()  &lt;br/&gt;
   #Se muestra la aplicacion  &lt;br/&gt;
   qb.show()  &lt;br/&gt;
   #Se sale de la aplicacion  &lt;br/&gt;
   sys.exit(app.exec_())
```&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la aplicaci&amp;oacute;n al iniciarse:&lt;/p&gt;
&lt;p&gt;&lt;img alt="PyQt 8" src="./images/pyqt8-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente imagen muestra la ventana de dialogo para subir la foto:&lt;/p&gt;
&lt;p&gt;&lt;img alt="PyQt 8" src="./images/pyqt8-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente imagen muestra el formulario con los datos sin generar el c&amp;oacute;digo QR:&lt;/p&gt;
&lt;p&gt;&lt;img alt="PyQt 8" src="./images/pyqt8-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente imagen muestra la ventana con la informaci&amp;oacute;n ya procesada y con el c&amp;oacute;digo QR generado:&lt;/p&gt;
&lt;p&gt;&lt;img alt="PyQt 8" src="./images/pyqt8-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Por &amp;uacute;ltimo se muestra la imagen de un celular con Android donde se proceso el c&amp;oacute;digo QR y muestra la informaci&amp;oacute;n del mismo:&lt;/p&gt;
&lt;p&gt;&lt;img alt="PyQt 8" src="./images/pyqt8-5.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Python"></category><category term="PyQt"></category></entry><entry><title>Creación de Código QR desde Python</title><link href="https://ecrespo.github.io/creacion-de-codigo-qr-desde-python.html" rel="alternate"></link><published>2011-07-20T09:00:00-05:30</published><updated>2011-07-20T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-20:/creacion-de-codigo-qr-desde-python.html</id><summary type="html">&lt;p&gt;En los art&amp;iacute;culos que he escrito sobre script en python para Android siempre he dejado una imagen que contiene una especie de c&amp;oacute;digo de barras pero en 2 dimensiones, este c&amp;oacute;digo se llama C&amp;oacute;digo QR (Quick Response Barcode), m&amp;aacute;s informaci&amp;oacute;n sobre est&amp;eacute; c&amp;oacute;digo lo pueden leer en &lt;a href="http://es.wikipedia.org/wiki/Codigo_QR"&gt;wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En los art&amp;iacute;culos que he escrito sobre script en python para Android siempre he dejado una imagen que contiene una especie de c&amp;oacute;digo de barras pero en 2 dimensiones, este c&amp;oacute;digo se llama C&amp;oacute;digo QR (Quick Response Barcode), m&amp;aacute;s informaci&amp;oacute;n sobre est&amp;eacute; c&amp;oacute;digo lo pueden leer en &lt;a href="http://es.wikipedia.org/wiki/Codigo_QR"&gt;wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En el art&amp;iacute;culo de como compartir script en Android hay un &lt;a href="https://www.seraph.to/compartir-scripts-para-android.html"&gt;enlace&lt;/a&gt; de una p&amp;aacute;gina que permite generar el c&amp;oacute;digo QR a partir de una informaci&amp;oacute;n dada.&lt;/p&gt;
&lt;p&gt;La idea es crear el c&amp;oacute;digo desde Linux y el programa que permite hacerlo se llama qrencode.&lt;/p&gt;
&lt;p&gt;Para instalarlo en Debian simplemente se ejecuta aptitude:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install qrencode&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El comando para generar un archivo con la imagen del c&amp;oacute;digo QR se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;qrencode -o output.png 'Hola mundo!'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Este ejemplo genera un archivo png llamado output con el c&amp;oacute;digo QR de "Hola Mundo!"&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n existe un m&amp;oacute;dulo para python que permite generar c&amp;oacute;digo directamente, este paquete en Debian se llama python-qrencode, para instalarlo se ejecuta aptitude:&lt;/p&gt;
&lt;p&gt;```
aptitude install python-qrencode&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La p&amp;aacute;gina del proyecto python-qrencode se encuentra en github en este &lt;a href="https://github.com/Arachnid/pyqrencode"&gt;enlace&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;De este m&amp;oacute;dulo se usar&amp;aacute; la funci&amp;oacute;n encode, se le pasa un string como dato y devuelve una tupla con 3 valores, la versi&amp;oacute;n, tama&amp;ntilde;o de la imagen y la imagen.&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; imagen es un objeto de Imagen, se puede salvar dicha imagen en un archivo.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de ejemplo del uso de python-qrencode se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="modulo qrencode"&gt;modulo qrencode&lt;/h1&gt;
&lt;p&gt;from qrencode import encode&lt;/p&gt;
&lt;h1 id="el texto a convertir en codigo qr"&gt;El texto a convertir en codigo QR&lt;/h1&gt;
&lt;p&gt;texto = """Esta es uan prueba de generacion de codigo QR\n
desde python usando el modulo qrencode."""&lt;/p&gt;
&lt;h1 id="se crea el codigo qr del texto,la funcion encode"&gt;Se crea el codigo QR del texto,la funcion encode&lt;/h1&gt;
&lt;h1 id="genera una tupla donde el ultimo elemento es un"&gt;genera una tupla donde el ultimo elemento es un&lt;/h1&gt;
&lt;h1 id="objeto imagen."&gt;objeto Imagen.&lt;/h1&gt;
&lt;p&gt;imagen = encode(texto)[2]&lt;/p&gt;
&lt;h1 id="se salva la imagen en el archivo"&gt;Se salva la imagen en el archivo&lt;/h1&gt;
&lt;h1 id="archivoprueba.png"&gt;archivoprueba.png&lt;/h1&gt;
&lt;p&gt;imagen.save("/home/ernesto/archivoprueba.png")
```&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Código QR"></category><category term="Python"></category><category term="PyQt"></category></entry><entry><title>Tutorial de PyQt. RadioButton. Parte 7.</title><link href="https://ecrespo.github.io/tutorial-de-pyqt-radiobutton-parte-7.html" rel="alternate"></link><published>2011-07-13T09:00:00-05:30</published><updated>2011-07-13T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-13:/tutorial-de-pyqt-radiobutton-parte-7.html</id><summary type="html">&lt;p&gt;Este post explicar&amp;aacute; como usar los botones de radio en PyQt.&lt;/p&gt;
&lt;p&gt;La idea es que el usuario seleccione uno de las opciones presentadas en este caso se le pregunta el sexo; al darle clip con el rat&amp;oacute;n o presionar alt+f para femenino o alt+m para masculino el resultado …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este post explicar&amp;aacute; como usar los botones de radio en PyQt.&lt;/p&gt;
&lt;p&gt;La idea es que el usuario seleccione uno de las opciones presentadas en este caso se le pregunta el sexo; al darle clip con el rat&amp;oacute;n o presionar alt+f para femenino o alt+m para masculino el resultado se muestre en una etiqueta autom&amp;aacute;ticamente. Se tiene un bot&amp;oacute;n para salir del programa.&lt;/p&gt;
&lt;p&gt;El widget nuevo en la continuaci&amp;oacute;n de estos tutoriales de PyQt es:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QRadioButton : Crea la instancia de un widget RadioButton.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como est&amp;eacute; widget hereda del widget Button se puede usar la se&amp;ntilde;al clicked para capturar el momento de seleccionar una de las opciones.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo que muestra el programa se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo sys"&gt;Se importa el modulo sys&lt;/h1&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;h1 id="de pyqt4 importar qtgui y qtcore."&gt;De PyQt4 importar QtGui y QtCore.&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui
from PyQt4 import QtCore&lt;/p&gt;
&lt;p&gt;class App(QtGui.QWidget):
    def &lt;strong&gt;init&lt;/strong&gt;(self,parent=None):
        QtGui.QWidget.&lt;strong&gt;init&lt;/strong&gt;(self, parent)
        #Se define el tamano de la ventana
        self.setGeometry(0, 50, 350, 250)
        #Se le coloca un titulo a la ventana y se asocia un icono.
        self.setWindowTitle('Prueba')
        self.setWindowIcon(QtGui.QIcon('./openlogo-50.png'))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se define la etiqueta donde se pregunta por el sexo.
    etiqueta = QtGui.QLabel("Sexo:")
    #Se define la etiqueta que muestra la palabra resultado.
    resultado = QtGui.QLabel("Resultado:")
    #Se define la etiqueta donde se mostrara la informacion
    #seleccionada del boton de radio
    self.texto = QtGui.QLabel("")

    #Se crea los botones de radio para seleccionar masculino o femenino.
    #Se define ahi el uso del alt+m y alt+f para seleccionar
    #un boton.
    self.botonradio1 = QtGui.QRadioButton("&amp;amp;Masculino",self)
    self.botonradio2 = QtGui.QRadioButton("&amp;amp;Femenino",self)

    #Se crea el boton para salir del programa
    quit = QtGui.QPushButton('Salir', self)

    #Empaquetamiento de los widgets en una cuadricula.
    grid = QtGui.QGridLayout()
    grid.setSpacing(10)
    #Se agrega los widgets de etiquetas,radiobuttons y
    #el boton salir
    grid.addWidget(etiqueta, 0, 0)
    grid.addWidget(self.botonradio1,0,1)
    grid.addWidget(self.botonradio2,0,3)
    grid.addWidget(resultado,2,0)
    grid.addWidget(self.texto,2,1)
    grid.addWidget(quit,3,0)
    self.setLayout(grid)

    #Se conecta la segnal con los 2 botones de radio y el boton para
    #salir del programa, se asocian a los metodos respectivos.
    self.connect(quit, QtCore.SIGNAL('clicked()'),QtGui.qApp, QtCore.SLOT('quit()'))
    self.connect(self.botonradio1,QtCore.SIGNAL('clicked()'),self.Mostrar1)
    self.connect(self.botonradio2,QtCore.SIGNAL('clicked()'),self.Mostrar2)

def Mostrar1(self):
    #Se muestra el resultado seleccionado
    self.texto.setText("Masculino")

def Mostrar2(self):
    #Se muestra el resultado seleccionado
    self.texto.setText("Femenino")
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se ejecuta el programa principal"&gt;Se ejecuta el programa principal&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":  &lt;br/&gt;
   #Se instancia la clase QApplication  &lt;br/&gt;
   app = QtGui.QApplication(sys.argv)  &lt;br/&gt;
   #Se instancia el objeto QuitButton  &lt;br/&gt;
   qb = App()  &lt;br/&gt;
   #Se muestra la aplicacion  &lt;br/&gt;
   qb.show()  &lt;br/&gt;
   #Se sale de la aplicacion  &lt;br/&gt;
   sys.exit(app.exec_())
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la figura del programa iniciando:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Radio button - Inicio" src="./images/pyqt7-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra el resultado de darle clip al bot&amp;oacute;n de radio Masculino:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Radio button - Seleccionado radio button " src="./images/pyqt7-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra el resultado de presionar alt+f para seleccionar el bot&amp;oacute;n de radio para Femenino:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Radio button - Seleccionado radio button " src="./images/pyqt7-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Noten que la informaci&amp;oacute;n a mostrar cambia al seleccionar uno de los botones de radio.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Python"></category><category term="PyQt"></category></entry><entry><title>Tutorial de PyQt, crear un navegador web. Parte 6</title><link href="https://ecrespo.github.io/tutorial-de-pyqt-crear-un-navegador-web-parte-6.html" rel="alternate"></link><published>2011-07-09T09:00:00-05:30</published><updated>2011-07-09T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-09:/tutorial-de-pyqt-crear-un-navegador-web-parte-6.html</id><summary type="html">&lt;p&gt;Continuando con los tutoriales de PyQt, ahora toca explicar como crear un navegador web.&lt;/p&gt;
&lt;p&gt;La idea es tener una ventana de entrada de datos donde se escribe el url a navegar, a su lado se tiene un bot&amp;oacute;n que ejecuta la navegaci&amp;oacute;n al url dado, luego abajo se tiene el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los tutoriales de PyQt, ahora toca explicar como crear un navegador web.&lt;/p&gt;
&lt;p&gt;La idea es tener una ventana de entrada de datos donde se escribe el url a navegar, a su lado se tiene un bot&amp;oacute;n que ejecuta la navegaci&amp;oacute;n al url dado, luego abajo se tiene el widget de navegaci&amp;oacute;n y por &amp;uacute;ltimo abajo se tiene un bot&amp;oacute;n de salir. Se puede navegar tambi&amp;eacute;n dando enter en el campo del url.&lt;/p&gt;
&lt;p&gt;El widget nuevo que se est&amp;aacute; usando es:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QWebView: Permite crear una vista de navegaci&amp;oacute;n web.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El c&amp;oacute;digo del programa se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo sys"&gt;Se importa el modulo sys&lt;/h1&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;h1 id="de pyqt4 importar qtgui,qtcore y qtwebkit."&gt;De PyQt4 importar QtGui,QtCore y QtWebkit.&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui
from PyQt4 import QtCore
from PyQt4 import QtWebKit&lt;/p&gt;
&lt;p&gt;class App(QtGui.QWidget):
    def &lt;strong&gt;init&lt;/strong&gt;(self,parent=None):
        QtGui.QWidget.&lt;strong&gt;init&lt;/strong&gt;(self, parent)
        #Se define el tamano de la ventana
        # posicion en x,y, ancho y alto
        self.setGeometry(0, 50, 1024, 550)
        #Se le coloca un titulo a la ventana y se asocia un icono.
        self.setWindowTitle('Navegador')
        self.setWindowIcon(QtGui.QIcon('./openlogo-50.png'))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se crea una entrada de datos donde se pasa el url a navegar
    self.entradaUrl = QtGui.QLineEdit("http://www.debian.org.ve")
    #Se crea el boton para ir a una pagina web
    navegar = QtGui.QPushButton("Ir",self)
    #Se crea el boton salir
    quit = QtGui.QPushButton("Salir",self)
    #Se crea el widget donde se mostrara la pagina web
    self.web = QtWebKit.QWebView()
    #Se habilita el atributo de plugins
    self.web.settings().setAttribute(QtWebKit.QWebSettings.PluginsEnabled,True)
    #Se carga la pagina de debian venezuela al inicio
    self.web.load(QtCore.QUrl("http://www.debian.org.ve"))


    #Empaquetamiento de los widgets en una cuadricula.
    grid = QtGui.QGridLayout()
    grid.setSpacing(10)
    #Se agrega la entrada de datos
    grid.addWidget(self.entradaUrl, 1, 0)
    #Se agrega el boton navegar al lado de la
    #entrada de datos
    grid.addWidget(navegar,1,1)
    #Se agrega el widget web
    grid.addWidget(self.web,2,0)
    #Se agrega el boton salir
    grid.addWidget(quit,3,0)

    #Se define el layout pasando la grilla
    self.setLayout(grid)

    #Se define la asociacion de segnales:
    #Se define la segnal del boton quit, salir del programa
    self.connect(quit, QtCore.SIGNAL('clicked()'),QtGui.qApp, QtCore.SLOT('quit()'))
    #Se define la segnal del boton navegar, al darle clip se ejecuta el metodo navegar
    self.connect(navegar,QtCore.SIGNAL('clicked()'),self.navegar)
    #Se define la segnal de la entrada de datos
    #Al darle enter se ejecuta el metodo navegar
    self.connect(self.entradaUrl,QtCore.SIGNAL('returnPressed()'),self.navegar)


def navegar(self):
    #Navegar captura el texto de la entrada de datos
    #Y se carga la nueva pagina.
    url = self.entradaUrl.text()
    self.web.load(QtCore.QUrl("%s" %url))
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se ejecuta el programa principal"&gt;Se ejecuta el programa principal&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":  &lt;br/&gt;
   #Se instancia la clase QApplication  &lt;br/&gt;
   app = QtGui.QApplication(sys.argv)  &lt;br/&gt;
   #Se instancia el objeto QuitButton  &lt;br/&gt;
   qb = App()  &lt;br/&gt;
   #Se muestra la aplicacion  &lt;br/&gt;
   qb.show()  &lt;br/&gt;
   #Se sale de la aplicacion  &lt;br/&gt;
   sys.exit(app.exec_())
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la ventana del navegador al ejecutar el programa:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Navegador web con PyQt - p&amp;aacute;gina www.debian.org" src="./images/pyqt6-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra que se escribe un url nuevo y se puede darle clip al bot&amp;oacute;n ir o darle enter a la entrada de datos:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Navegador web con PyQt - p&amp;aacute;gina www.google.com" src="./images/pyqt6-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Python"></category><category term="PyQt"></category></entry><entry><title>Manejo de Fecha y Hora con PyQt. Parte 5</title><link href="https://ecrespo.github.io/manejo-de-fecha-y-hora-con-pyqt-parte-5.html" rel="alternate"></link><published>2011-07-07T09:00:00-05:30</published><updated>2011-07-07T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-07:/manejo-de-fecha-y-hora-con-pyqt-parte-5.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se crear&amp;aacute; una ventana con 2 pesta&amp;ntilde;as, 2 botones, y una etiqueta; el primer bot&amp;oacute;n capturar&amp;aacute; le fecha o fecha y hora seg&amp;uacute;n la pesta&amp;ntilde;a seleccionada y lo presentar&amp;aacute; en la etiqueta, el otro bot&amp;oacute;n es para salir de la aplicaci&amp;oacute;n; en la primera pesta&amp;ntilde;a se muestra …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se crear&amp;aacute; una ventana con 2 pesta&amp;ntilde;as, 2 botones, y una etiqueta; el primer bot&amp;oacute;n capturar&amp;aacute; le fecha o fecha y hora seg&amp;uacute;n la pesta&amp;ntilde;a seleccionada y lo presentar&amp;aacute; en la etiqueta, el otro bot&amp;oacute;n es para salir de la aplicaci&amp;oacute;n; en la primera pesta&amp;ntilde;a se muestra el widget de fecha y en la segunda se muestra el widget de fecha y hora.&lt;/p&gt;
&lt;p&gt;Se utilizar&amp;aacute;n los siguientes widgets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QtGui.QTabWidget: Permite crear pesta&amp;ntilde;as.&lt;/li&gt;
&lt;li&gt;QtGui.QDateEdit: Permite crear el widget incremental o decremental de la fecha.&lt;/li&gt;
&lt;li&gt;QtGui.QDateTimeEdit: Permite crear el widget incremental o decremental de la fecha y hora.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como se tiene un solo bot&amp;oacute;n para capturar la fecha para ambas pesta&amp;ntilde;as es necesario capturar el identificador de cada pesta&amp;ntilde;a para as&amp;iacute; dependiendo del caso generar el resultado de la fecha u fecha y hora.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo sys"&gt;Se importa el modulo sys&lt;/h1&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;h1 id="de pyqt4 importar qtgui y qtcore"&gt;De PyQt4 importar QtGui y QtCore&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui
from PyQt4 import QtCore&lt;/p&gt;
&lt;p&gt;class App(QtGui.QWidget):
    def &lt;strong&gt;init&lt;/strong&gt;(self,parent=None):
        QtGui.QWidget.&lt;strong&gt;init&lt;/strong&gt;(self, parent)
        #Se define el tamano de la ventana
        self.setGeometry(500, 500, 350, 250)
        #Se le coloca un titulo a la ventana y se asocia un icono.
        self.setWindowTitle('Fecha y Hora')
        self.setWindowIcon(QtGui.QIcon('./openlogo-50.png'))&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se crea la instancia del widget de la fecha
    #Se define el formato de la fecha
    #Se le asigna al widget la fecha actual.
    self.fecha = QtGui.QDateEdit(self)
    self.fecha.setDisplayFormat("dd/MM/yyyy")
    self.fecha.setDate(QtCore.QDate.currentDate())



    #Se crea la instancia del widget de la fecha y hora.
    #Se le da formato a la fecha y hora.
    #Se le asigna la fecha y hora actual al widget.
    self.fechayhora = QtGui.QDateTimeEdit(self)
    self.fechayhora.setDisplayFormat("dd/MM/yyyy HH:mm:ss")
    self.fechayhora.setDateTime(QtCore.QDateTime.currentDateTime())

    #Se crea el boton que captura la fecha u hora
    captura1 = QtGui.QPushButton("Captura",self)
    #Se crea el boton para salir de la aplicacion
    quit = QtGui.QPushButton('Salir', self)

    #Se crea la etiqueta donde se muestra la fecha u hora
    self.etiqueta = QtGui.QLabel("Fecha:")

    #Se crea la instancia del widget pestagna
    #Se define que no se puede cerrar las pestagnas
    self.tab = QtGui.QTabWidget(self)
    self.tab.setTabsClosable(False)

    #Se agrega a la 1era pestagna el widget de la fecha
    self.tab.addTab(self.fecha,"Fecha")
    #Se agrega a la 2da pestagna el widget de la fecha y hora
    self.tab.addTab(self.fechayhora,"Fecha y Hora")


    #Empaquetamiento de los widgets en una cuadricula.
    grid = QtGui.QGridLayout()
    grid.setSpacing(10)
    #Se agrega el widget pestagna, boton de captura,
    #etiqueta y boton de salida.
    grid.addWidget(self.tab, 1, 0)
    grid.addWidget(captura1,2,0)
    grid.addWidget(self.etiqueta, 3, 0)
    grid.addWidget(quit,4,0)
    self.setLayout(grid)

    #Se conecta la segnal del boton captura con el evento clicked al
    #metodo mostrarIndice.
    self.connect(captura1,QtCore.SIGNAL('clicked()'),self.mostrarFechayHora)
    #Se asocia ala segnal del boton quit al evento clicked y se ejecuta la
    #salida del programa.
    self.connect(quit, QtCore.SIGNAL('clicked()'),QtGui.qApp, QtCore.SLOT('quit()'))


def mostrarFechayHora(self):
    #Captura el indice de la pestagna para mostrar
    #la informacion de la fecha u fecha y hora.
    if self.tab.currentIndex() == 0:
        #Se presenta en la etiqueta la fecha con el
        #formato dia/mes/agno.
        #se toma la informacion de la funcion date del widget
        #este devuelve una fecha y se captura el dia, mes y agno.
        self.etiqueta.setText("Fecha: %s/%s/%s"
                              %(self.fecha.date().day(),
                                self.fecha.date().month(),
                                self.fecha.date().year()) )

    else:
        #Se presenta en la etiqueta la informacion de la fecha y hora.
        #con el formato dia/mes/agno hora:minutos:segundos.
        #Se utiliza el metodo textFromDateTime que devuelve un string
        #pasandole una fecha y hora 
        self.etiqueta.setText("Fecha y Hora: %s"
                              %self.fechayhora.textFromDateTime(self.fechayhora.dateTime()))
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se ejecuta el programa principal"&gt;Se ejecuta el programa principal&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":  &lt;br/&gt;
   #Se instancia la clase QApplication  &lt;br/&gt;
   app = QtGui.QApplication(sys.argv)  &lt;br/&gt;
   #Se instancia el objeto QuitButton  &lt;br/&gt;
   qb = App()  &lt;br/&gt;
   #Se muestra la aplicacion  &lt;br/&gt;
   qb.show()  &lt;br/&gt;
   #Se sale de la aplicacion  &lt;br/&gt;
   sys.exit(app.exec_())
```&lt;/p&gt;
&lt;p&gt;La figura muestra el programa al iniciarse:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fecha y hora" src="./images/pyqt5-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra que se modifico la fecha con los botones de incrementar o decrementar y luego se presion&amp;oacute; al bot&amp;oacute;n captura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fecha y hora" src="./images/pyqt5-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra cuando se selecciona la segunda pesta&amp;ntilde;a:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fecha y hora" src="./images/pyqt5-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;La &amp;uacute;ltima figura muestra que se modifico la fecha y la hora con los botones incrementales o decrementales y luego se presion&amp;oacute; al bot&amp;oacute;n captura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fecha y hora" src="./images/pyqt5-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Python"></category><category term="PyQt"></category></entry><entry><title>Feliz Bicentenario Venezuela!!!</title><link href="https://ecrespo.github.io/feliz-bicentenario-venezuela.html" rel="alternate"></link><published>2011-07-05T09:00:00-05:30</published><updated>2011-07-05T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-05:/feliz-bicentenario-venezuela.html</id><summary type="html">&lt;p&gt;Hoy celebramos 200 a&amp;ntilde;os de la Independencia de Venezuela.&lt;/p&gt;
&lt;p&gt;Google coloca por ese motivo un Doodle aleg&amp;oacute;rico a nuestra Fecha de Independencia:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bicentenario - Google" src="./images/bicentenario1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Cenditel como Homenaje a nuestro Bicentenario ha publicado un protector de pantalla  con fondos aleg&amp;oacute;rico de nuestra Independencia:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bicentenario - Protector de pantalla" src="./images/bicentenario2.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cenditel.gob.ve/node/1173"&gt;Cenditel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Estos fondos de pantalla se podr&amp;aacute;n instalar en Debian …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hoy celebramos 200 a&amp;ntilde;os de la Independencia de Venezuela.&lt;/p&gt;
&lt;p&gt;Google coloca por ese motivo un Doodle aleg&amp;oacute;rico a nuestra Fecha de Independencia:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bicentenario - Google" src="./images/bicentenario1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Cenditel como Homenaje a nuestro Bicentenario ha publicado un protector de pantalla  con fondos aleg&amp;oacute;rico de nuestra Independencia:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bicentenario - Protector de pantalla" src="./images/bicentenario2.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cenditel.gob.ve/node/1173"&gt;Cenditel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Estos fondos de pantalla se podr&amp;aacute;n instalar en Debian, Ubuntu y Canaima.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="General"></category></entry><entry><title>Tutorial de PyQt (calendario). Parte 4</title><link href="https://ecrespo.github.io/tutorial-de-pyqt-calendario-parte-4.html" rel="alternate"></link><published>2011-07-04T09:00:00-05:30</published><updated>2011-07-04T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-07-04:/tutorial-de-pyqt-calendario-parte-4.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre PyQt, ahora explicare como usar un calendario y capturar la selecci&amp;oacute;n de una fecha dada, la fecha seleccionada se muestra en una etiqueta de forma din&amp;aacute;mica y al final se agrega un bot&amp;oacute;n de salir.&lt;/p&gt;
&lt;p&gt;Basicamente se usar&amp;aacute; QtGui.QCalendarWidget usando con una cuadricula con …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre PyQt, ahora explicare como usar un calendario y capturar la selecci&amp;oacute;n de una fecha dada, la fecha seleccionada se muestra en una etiqueta de forma din&amp;aacute;mica y al final se agrega un bot&amp;oacute;n de salir.&lt;/p&gt;
&lt;p&gt;Basicamente se usar&amp;aacute; QtGui.QCalendarWidget usando con una cuadricula con el m&amp;eacute;todo setGridVisible que tiene dos opciones True o False.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo del programa:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo sys"&gt;Se importa el modulo sys&lt;/h1&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;h1 id="de pyqt4 importar qtgui y qtcore"&gt;De PyQt4 importar QtGui y QtCore&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui
from PyQt4 import QtCore&lt;/p&gt;
&lt;p&gt;class App(QtGui.QWidget):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self, parent=None):
    QtGui.QWidget.__init__(self, parent)
    #Se define el tamano de la ventana
    self.setGeometry(400, 400, 250, 150)
    #Se le coloca un titulo a la ventana y se asocia un icono.
    self.setWindowTitle('Calendario')
    self.setWindowIcon(QtGui.QIcon('./openlogo-50.png'))

    #Define el calendario en una ventana
    self.cal = QtGui.QCalendarWidget(self)
    #Se define una cuadricula al calendario
    self.cal.setGridVisible(True)
    #Se define una etiqueta donde se mostrara
    #La fecha seleccionada
    self.etiqueta = QtGui.QLabel(self)

    #Se captura la fecha y se muestra en la etiqueta
    self.fecha = self.cal.selectedDate()
    self.etiqueta.setText(str(self.fecha.toPyDate()))

    #Se define el boton para salir

    quit = QtGui.QPushButton('Salir', self)
    #Se define como empaquetar los widgets.
    #En este caso se usa grilla.
    #Se crea la instancia
    grid = QtGui.QGridLayout()
    grid.setSpacing(10)

    grid.addWidget(self.cal, 1, 0)
    grid.addWidget(self.etiqueta, 2, 0)

    grid.addWidget(quit,3,0)
    #Se define el layout pasando la grilla
    self.setLayout(grid)

    self.connect(quit, QtCore.SIGNAL('clicked()'),QtGui.qApp, QtCore.SLOT('quit()'))
    self.connect(self.cal, QtCore.SIGNAL('selectionChanged()'), 
        self.mostrarFecha)

def mostrarFecha(self):
    self.fecha = self.cal.selectedDate()
    self.etiqueta.setText(str(self.fecha.toPyDate()))
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se ejecuta el programa principal"&gt;Se ejecuta el programa principal&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":  &lt;br/&gt;
   #Se instancia la clase QApplication  &lt;br/&gt;
   app = QtGui.QApplication(sys.argv)  &lt;br/&gt;
   #Se instancia el objeto QuitButton  &lt;br/&gt;
   qb = App()  &lt;br/&gt;
   #Se muestra la aplicacion  &lt;br/&gt;
   qb.show()  &lt;br/&gt;
   #Se sale de la aplicacion  &lt;br/&gt;
   sys.exit(app.exec_())
```&lt;/p&gt;
&lt;p&gt;La figura muestra el programa en funcionamiento:&lt;/p&gt;
&lt;p&gt;&lt;img alt="PyQt - Calendario" src="./images/pyqt-calendario.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Python"></category><category term="PyQt"></category></entry><entry><title>Qtadb programa para controlar un celular Android desde el PC</title><link href="https://ecrespo.github.io/qtadb-programa-para-controlar-un-celular-android-desde-el-pc.html" rel="alternate"></link><published>2011-06-19T09:00:00-05:30</published><updated>2011-06-19T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-06-19:/qtadb-programa-para-controlar-un-celular-android-desde-el-pc.html</id><summary type="html">&lt;p&gt;En la p&amp;aacute;gina de elandroidlibre.com publicaron un art&amp;iacute;culo donde hablan del programa QtADB el cual permite manejar el sistema de archivos del celular, ver la lista de paquetes instalado, realizar capturas de pantalla, ejecutar la consola del celular, recovery y otras opciones. El enlace de el androidelibre.com lo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En la p&amp;aacute;gina de elandroidlibre.com publicaron un art&amp;iacute;culo donde hablan del programa QtADB el cual permite manejar el sistema de archivos del celular, ver la lista de paquetes instalado, realizar capturas de pantalla, ejecutar la consola del celular, recovery y otras opciones. El enlace de el androidelibre.com lo tienen &lt;a href="http://www.elandroidelibre.com/2011/05/android-commander-y-qtadb-los-2-mejores-programas-para-controlar-android-desde-el-pc.html"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Es necesario tener instalado el SDK de Android, este se puede bajar en este &lt;a href="http://developer.android.com/sdk/index.html"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Es necesario instalar el paquete &lt;a href="http://www.mediafire.com/file/ck36odjkkqgr4an/qtadb.apk"&gt;apk&lt;/a&gt; (qtadb.apk) en el celular y bajar el paquete QtADB para Linux en este caso para 32 bits lo pueden bajar en este &lt;a href="http://www.mediafire.com/file/q3fqe9hutvfugdh/QtADB_0.8.0_linux32.tar.gz"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La p&amp;aacute;gina de qtadb se encuentra en el siguiente &lt;a href="http://qtadb.wordpress.com/"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El procedimiento para instalar el SDK de Android en Linux lo pueden seguir &lt;a href="https://www.seraph.to/instalacion-del-sdk-de-android-en-linux.html"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Al tener instalado el SDK de Android en Linux se conecta el celular y se inicia el servicio de adb:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@jewel:~/bin$ adb devices 
* daemon not running. starting it now on port 5037 *
* daemon started successfully *
List of devices attached 
0403725B09015010 device&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pero para lograr esto es necesario habilitar el celular con conexi&amp;oacute;n USB como Portal y Herramientas, la siguiente figura muestra la opci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 1" src="./images/qtadb1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para instalar el paquete apk en el celular se ejecuta el comando adb para la instalaci&amp;oacute;n de paquetes como se muestra:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@jewel:~/bin$adb install qtadb.apk 
44 KB/s (24316 bytes in 0.531s)
 pkg: /data/local/tmp/qtadb.apk
Success&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra el programa instalado en el celular:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 2" src="./images/qtadb2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle clip a QtADB se mostrar&amp;aacute; 2 botones uno para iniciar el servicio y otro para detenerlo como lo muestra la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 3" src="./images/qtadb3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se inicia el servicio y lo que queda es iniciar el QtADB para Linux.&lt;/p&gt;
&lt;p&gt;Al iniciar la aplicaci&amp;oacute;n lo primero que se muestra es el administrador de archivos como lo muestra la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 4" src="./images/qtadb4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se puede listar las aplicaciones instaladas en el celular, actualizar aplicaciones, desintalarlas y realizar respaldos de las mismas.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 5" src="./images/qtadb5.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se puede ver informaci&amp;oacute;n del celular como el operador de telefon&amp;iacute;a celular, modelo, n&amp;uacute;mero de serie, ROM y el espacio de las particiones.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 6" src="./images/qtadb6.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se pueden realizar capturas de pantalla en el celular.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 7" src="./images/qtadb7.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se puede ejecutar un shell del celular:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 8" src="./images/qtadb8.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se puede visualizar los logs del celular:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 9" src="./images/qtadb9.png"/&gt;&lt;/p&gt;
&lt;p&gt;Por &amp;uacute;ltimo tambi&amp;eacute;n se puede visualizar los mensajes de texto:
Para que funcione revisar los mensajes es necesario activar y conectar el celular a la red wifi y en la aplicaci&amp;oacute;n activar wifi tambi&amp;eacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 10" src="./images/qtadb10.png"/&gt;&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra los mensajes de texto almacenados en el celular:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qtadb 11" src="./images/qtadb11.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Qtadb"></category><category term="Android"></category><category term="Debian"></category></entry><entry><title>Programa para el envío de SMS desde Linux con Celular Android (conexión wifi y USB)</title><link href="https://ecrespo.github.io/programa-para-el-envio-de-sms-desde-linux-con-celular-android-conexion-wifi-y-usb.html" rel="alternate"></link><published>2011-06-16T09:00:00-05:30</published><updated>2011-06-16T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-06-16:/programa-para-el-envio-de-sms-desde-linux-con-celular-android-conexion-wifi-y-usb.html</id><summary type="html">&lt;p&gt;En el art&amp;iacute;culo de ejecuci&amp;oacute;n remota de script versi&amp;oacute;n conectado por &lt;a href="https://www.seraph.to/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android-version-conectado-el-celular-por-usb.html"&gt;USB&lt;/a&gt; y la versi&amp;oacute;n por &lt;a href="https://www.seraph.to/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android.html"&gt;wifi&lt;/a&gt;, se  explica  en el primer caso como enviar mensajes de texto y en el segundo como ejecutar una aplicaci&amp;oacute;n remotamente en el celular.&lt;/p&gt;
&lt;p&gt;En este caso se fusionar&amp;aacute; ambos tipos de conexiones para …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el art&amp;iacute;culo de ejecuci&amp;oacute;n remota de script versi&amp;oacute;n conectado por &lt;a href="https://www.seraph.to/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android-version-conectado-el-celular-por-usb.html"&gt;USB&lt;/a&gt; y la versi&amp;oacute;n por &lt;a href="https://www.seraph.to/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android.html"&gt;wifi&lt;/a&gt;, se  explica  en el primer caso como enviar mensajes de texto y en el segundo como ejecutar una aplicaci&amp;oacute;n remotamente en el celular.&lt;/p&gt;
&lt;p&gt;En este caso se fusionar&amp;aacute; ambos tipos de conexiones para enviar mensajes de texto tanto por USB como por wifi.&lt;/p&gt;
&lt;p&gt;Para ello se creo un clase AndroidSMS donde se define los datos siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tipo de conexi&amp;oacute;n (wifi o usb)&lt;/li&gt;
&lt;li&gt;Puerto (Puerto del servidor de SL4A que se activa en el celular)&lt;/li&gt;
&lt;li&gt;Host (IP que tiene asignado el celular en la red wifi)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En los art&amp;iacute;culos mencionados anteriormente se explica como usar el comando adb del sdk de Android y la creaci&amp;oacute;n de variables de entorno para poder ejecutar remotamente scripts desde Linux al celular con Android. En este caso todo ese proceso se automatiza  en el script, pero es necesario para el caso USB ejecutar SL4A con la opci&amp;oacute;n de privado y en el caso wifi con la opci&amp;oacute;n de p&amp;uacute;blico. Adem&amp;aacute;s se tiene que verificar el n&amp;uacute;mero del puerto asignado en el servidor SL4A para pasarle como par&amp;aacute;metro dichos datos al programa desde la l&amp;iacute;nea de comandos.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo del programa:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="script que permite enviar mensaje de texto a un celular android desde linux."&gt;Script que permite enviar mensaje de texto a un celular android desde Linux.&lt;/h1&gt;
&lt;h1 id="autor: ernesto crespo"&gt;Autor: Ernesto Crespo&lt;/h1&gt;
&lt;h1 id="correo:ecrespo@gmail.com"&gt;Correo:ecrespo@gmail.com&lt;/h1&gt;
&lt;h1 id="licencia: gplv3"&gt;Licencia: GPLv3&lt;/h1&gt;
&lt;h1 id="version:0.4"&gt;Version:0.4&lt;/h1&gt;
&lt;h1 id="importando el modulo android,sys,re y getstatusoutput"&gt;Importando el modulo android,sys,re y getstatusoutput&lt;/h1&gt;
&lt;p&gt;import android,sys,re
from commands import getstatusoutput&lt;/p&gt;
&lt;p&gt;class AndroidSMS:
    def &lt;strong&gt;init&lt;/strong&gt;(self,conexion,puerto,host="192.168.0.100"):
        #Asignacion de la estructura de datos del Objeto
        self.__adb = "/home/ernesto/android-sdk-linux_x86/platform-tools/adb"
        self.__puerto = puerto
        self.__host = host
        self.__conexion = conexion&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __ValidarNumero__(self,numero):
    """Valida si los numeros tienen 11 digitos y que sean
    de los proveedores movilnet, digitel y movistar
    """
    if len(numero) == 11 and ((re.search("041[2|4|6]\d\d\d\d\d\d\d",numero)) or (re.search("042[4|6]\d\d\d\d\d\d\d",numero))) :
        return 1
    else:
        return 0

def __ConfigAndroid__(self):
    """__ConfigAndroid: Metodo que permite habilitar el funcionamiento
    del celular Android desde Linux tanto para wifi como para conexion USB
    """
    #Se apaga el servidor adb en el Linux
    getstatusoutput("%s kill-server" %self.__adb)
    #Se borra las variables de entorno AP_PORT y AP_HOST
    getstatusoutput("export AP_PORT=\"\"")
    getstatusoutput("export AP_HOST=\"\"")
    #Se inicia el servidor adb y se verifica que funciona correctamente
    r = getstatusoutput("%s devices" %self.__adb)
    if r[0] &amp;lt;&amp;gt; 0:
        print "Problemas con la configuracion del celular"
        sys.exit
    else:
        if self.__conexion == "usb":
            #Se verifica que el dispositivo aparece identificado
            if r[1].split("\n")[1] == "":
                print "NO hay un celular conectado"
                sys.exit
    #En este punto se tiene el dispositivo funcionando
    #Tanto por wifi como por usb.
    getstatusoutput("%s  forward tcp:9999 tcp:%s" %(self.__adb,self.__puerto))
    if self.__conexion == "wifi":
        #Se crean las variables de entorno AP_PORT y AP_HOST
        #para el caso de wifi
        getstatusoutput("export AP_PORT=%s" %self.__puerto)
        getstatusoutput("export AP_HOST=%s" %self.__host)
    elif self.__conexion == "usb":
        #Se crea la variable de entorno AP_PORT
        #para el caso conexion usb
        getstatusoutput("export AP_PORT=9999")
    print "Se configuro el celular sin problemas"


def EnviarMensaje(self,numero,mensaje):
    """EnviarMensaje: Metodo que permite enviar un mensaje de texto
    pasando el numero y el mensaje
    Maneja ambos casos conexion USB o por red wifi.
    """
    if self.__ValidarNumero__(numero) == 0:
        print "Numero invalido"
        sys.exit
    #Creando la instancia droid del objeto Android
    self.__ConfigAndroid__()
    #Se crea la instancia del objeto Android dependiendo si es conexion
    #wifi se le pasa el host y el puerto
    #Si es conexion USB simplemente se crea la instancia
    if self.__conexion == "wifi":
        droid = android.Android((self.__host,self.__puerto))
    elif self.__conexion == "usb":
        droid = android.Android()
    #Enviando el mensaje de texto
    droid.smsSend(numero,mensaje)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    """Se capturan los valores de:
    &lt;em&gt;numero
    &lt;/em&gt;mensaje
    &lt;em&gt;conexion
    &lt;/em&gt;puerto
    *host
    """
    if len(sys.argv) == 6:
        numero = sys.argv[1]
        mensaje = sys.argv[2]
        conexion = sys.argv[3]
        puerto = sys.argv[4]
        host = sys.argv[5]
    elif len(sys.argv) == 5:
        numero = sys.argv[1]
        mensaje = sys.argv[2]
        conexion = sys.argv[3]
        puerto = sys.argv[4]
        host = ""
    else:
        print "Error: No se pasaron los parametros completos"
        sys.exit
    #Se crea la instancia de la clase AndroidSM pasando conexion,puerto y host
    androidsms = AndroidSMS(conexion,puerto,host)
    #Se envie el mensaje de texto
    androidsms.EnviarMensaje(numero,mensaje)
```&lt;/p&gt;
&lt;p&gt;La ejecuci&amp;oacute;n del programa se muestra a continuaci&amp;oacute;n:
Se pasa primero el n&amp;uacute;mero de celular, luego el mensaje, luego el tipo de conexi&amp;oacute;n (usb,wifi), luego el puerto y por &amp;uacute;ltimo la IP si es el caso de wifi.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wifi: python mensaje4.py 0xxyyyzzww "Prueba3" wifi  47529 "192.168.0.100"&lt;/li&gt;
&lt;li&gt;usb: python mensaje4.py 0xxyyyzzww "Prueba4" usb  43421&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En la siguiente figura se muestra los mensajes recibidos en el celular:&lt;/p&gt;
&lt;p&gt;&lt;img alt="SMS" src="./images/smsandroidlinux.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="Android"></category><category term="Debian"></category></entry><entry><title>Generando una gráfica con PyQT y matplotlib (escala semilogaritmica). Parte 13</title><link href="https://ecrespo.github.io/generando-una-grafica-con-pyqt-y-matplotlib-escala-semilogaritmica-parte-13.html" rel="alternate"></link><published>2011-06-10T09:00:00-05:30</published><updated>2011-06-10T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-06-10:/generando-una-grafica-con-pyqt-y-matplotlib-escala-semilogaritmica-parte-13.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; como crear gr&amp;aacute;ficas con escala semilogaritmitca.&lt;/p&gt;
&lt;p&gt;La idea es graficar la funci&amp;oacute;n:
y = sin(pi&lt;em&gt;(x&lt;/em&gt;*(1/2)))&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica muestra la figura de la funci&amp;oacute;n con escala semilogaritmica.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gr&amp;aacute;fica semilogaritmica 1" src="./images/matplotlib13-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo para generar la gr&amp;aacute;fica mostrada simplemente usando numpy y matplotlib es la siguiente:&lt;/p&gt;
&lt;p&gt;```python …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; como crear gr&amp;aacute;ficas con escala semilogaritmitca.&lt;/p&gt;
&lt;p&gt;La idea es graficar la funci&amp;oacute;n:
y = sin(pi&lt;em&gt;(x&lt;/em&gt;*(1/2)))&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica muestra la figura de la funci&amp;oacute;n con escala semilogaritmica.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gr&amp;aacute;fica semilogaritmica 1" src="./images/matplotlib13-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo para generar la gr&amp;aacute;fica mostrada simplemente usando numpy y matplotlib es la siguiente:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar matplotlib"&gt;Importar matplotlib&lt;/h1&gt;
&lt;p&gt;import matplotlib as mpl&lt;/p&gt;
&lt;h1 id="definir el tamano de la fuente"&gt;Definir el tama&amp;ntilde;o de la fuente&lt;/h1&gt;
&lt;p&gt;mpl.rcParams['font.size'] = 10.&lt;/p&gt;
&lt;h1 id="importar pyplot"&gt;Importar pyplot&lt;/h1&gt;
&lt;p&gt;import matplotlib.pyplot as plt&lt;/p&gt;
&lt;h1 id="importar numpy"&gt;Importar numpy&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se crea el rango de valores de"&gt;Se crea el rango de valores de&lt;/h1&gt;
&lt;h1 id="0 a 20 con saltos de 0.01"&gt;0 a 20 con saltos de 0.01&lt;/h1&gt;
&lt;p&gt;x = np.arange(0., 20, 0.01)&lt;/p&gt;
&lt;h1 id="se instancia la figura"&gt;Se instancia la figura&lt;/h1&gt;
&lt;p&gt;fig = plt.figure()&lt;/p&gt;
&lt;h1 id="se define la grafica"&gt;Se define  la grafica&lt;/h1&gt;
&lt;p&gt;ax2 = fig.add_subplot(311)&lt;/p&gt;
&lt;h1 id="se genera el calculo de la funcion"&gt;Se genera el calculo de la funcion&lt;/h1&gt;
&lt;h1 id="con numpy"&gt;con numpy&lt;/h1&gt;
&lt;p&gt;y2 = np.sin(np.pi&lt;em&gt;(x&lt;/em&gt;*(1.0/2.0)))&lt;/p&gt;
&lt;h1 id="se define el eje x con escala"&gt;Se define el eje X con escala&lt;/h1&gt;
&lt;h1 id="logaritmica"&gt;logaritmica&lt;/h1&gt;
&lt;p&gt;ax2.semilogx(x, y2);&lt;/p&gt;
&lt;h1 id="se define el limite del eje x"&gt;Se define el limite del eje X&lt;/h1&gt;
&lt;p&gt;ax2.set_xlim([0, 20]);&lt;/p&gt;
&lt;h1 id="se define la grilla a la grafica"&gt;Se define la grilla a la grafica&lt;/h1&gt;
&lt;p&gt;ax2.grid(True)&lt;/p&gt;
&lt;h1 id="se define una etiqueta en el eje y"&gt;se define una etiqueta en el eje Y&lt;/h1&gt;
&lt;p&gt;ax2.set_ylabel('log X')&lt;/p&gt;
&lt;h1 id="se muestra la grafica"&gt;Se muestra la grafica&lt;/h1&gt;
&lt;p&gt;plt.show()
```&lt;/p&gt;
&lt;p&gt;En la siguiente figura se genera la gr&amp;aacute;fica utilizando PyQT, matplotlib y numpy:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gr&amp;aacute;fica semilogaritmica 1" src="./images/matplotlib13-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;A la gr&amp;aacute;fica se le agrego la barra de navegaci&amp;oacute;n y se le coloco un t&amp;iacute;tulo a la ventana.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo para crear la gr&amp;aacute;fica utilizando PyQT es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar numpy_1"&gt;Importar numpy&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="importar el objeto figure de matplotlib"&gt;Importar el objeto Figure de matplotlib&lt;/h1&gt;
&lt;p&gt;from matplotlib.figure import Figure&lt;/p&gt;
&lt;h1 id="importar el objeto figurecanvas de qt4qgg,"&gt;Importar el Objeto FigureCanvas de Qt4Qgg,&lt;/h1&gt;
&lt;h1 id="se heredara desde qwidget."&gt;Se heredara desde QWidget.&lt;/h1&gt;
&lt;p&gt;from matplotlib.backends.backend_qt4agg \
  import FigureCanvasQTAgg as FigureCanvas&lt;/p&gt;
&lt;h1 id="importar el widget de la barra de navegacion"&gt;Importar el widget de la barra de navegacion&lt;/h1&gt;
&lt;h1 id="import the navigationtoolbar qt4agg widget"&gt;import the NavigationToolbar Qt4Agg widget&lt;/h1&gt;
&lt;p&gt;from matplotlib.backends.backend_qt4agg \
  import NavigationToolbar2QTAgg as NavigationToolbar&lt;/p&gt;
&lt;h1 id="importar qtgui de pyqt4."&gt;Importar QTGui de PyQt4.&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui&lt;/p&gt;
&lt;h1 id="se crea la clase qt4mplcanvas heredando figurecanvas"&gt;Se crea la Clase Qt4MplCanvas heredando FigureCanvas&lt;/h1&gt;
&lt;p&gt;class Lienzo(FigureCanvas):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self, parent):
    # Se instancia el objeto figure
    self.fig = Figure()
    #Se define la grafica en coordenadas polares
    self.axes = self.fig.add_subplot(111)

    #Se define el rango de 0 a 20 con saltos de 0.01

    x = np.arange(0., 20, 0.01)
    #Se calcula los valores de la funcion.
    y2 = np.sin(np.pi*(x**(1.0/2.0)))
    #Se define el eje X como logaritmico
    #y se pasan los valores de x y y2.
    self.axes.semilogx(x, y2);
    #Se define el limite del eje X
    self.axes.set_xlim([0, 20]);
    #Se define una grilla
    self.axes.grid(True)
    #Se crea una etiqueta en el eje Y
    self.axes.set_ylabel('log X')

    # se inicializa FigureCanvas
    FigureCanvas.__init__(self, self.fig)
    # se define el widget padre
    self.setParent(parent)
    # se define el widget como expandible
    FigureCanvas.setSizePolicy(self,
            QtGui.QSizePolicy.Expanding,
            QtGui.QSizePolicy.Expanding)
    # se notifica al sistema de la actualizacion
    #de la politica
    FigureCanvas.updateGeometry(self)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se crea la clase ventana que hereda qmainwindow"&gt;Se crea la clase Ventana que hereda QMainWindow&lt;/h1&gt;
&lt;p&gt;class Ventana(QtGui.QMainWindow):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self):

    #Inicializacion del widget QMainWindow
    QtGui.QMainWindow.__init__(self)
    # se define el titulo de la ventana
    self.setWindowTitle("Ventana PyQT con graficas a escala logaritmica")
    # instantiate a widget, it will be the main one
    # Se instancia el widget.
    self.main_widget = QtGui.QWidget(self)

    #Se crea una layout vbox
    vbl = QtGui.QVBoxLayout(self.main_widget)

    #Se instancia el Lienzo con la grafica de Matplotlib
    qmc = Lienzo(self.main_widget)
    # se instancia la barra de navegacion
    ntb = NavigationToolbar(qmc, self.main_widget)
    # se empaqueta el lienzo y 
    #la barra de navegacion en el vbox
    vbl.addWidget(qmc)
    vbl.addWidget(ntb)
    # se le asigna foco a la ventana
    self.main_widget.setFocus()
    #Se define el widget central
    self.setCentralWidget(self.main_widget)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    #Importar sys
    import sys
    #Importar QtGui de PyQt4
    from PyQt4 import QtGui
    #Se crea la aplicacion grafica
    qApp = QtGui.QApplication(sys.argv)
    # se instancia la ventana
    aw = Ventana()
    # se muestra el widget
    aw.show()
    #Se inicia el lazo principal de QT
    sys.exit(qApp.exec_())
```&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="pyqt"></category><category term="matplotlib"></category><category term="numpy"></category></entry><entry><title>Generando una gráfica con PyQT y matplotlib (coordenadas polares). Parte 12</title><link href="https://ecrespo.github.io/generando-una-grafica-con-pyqt-y-matplotlib-coordenadas-polares-parte-12.html" rel="alternate"></link><published>2011-06-08T09:00:00-05:30</published><updated>2011-06-08T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-06-08:/generando-una-grafica-con-pyqt-y-matplotlib-coordenadas-polares-parte-12.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre matplotlib y ahora usando PyQT, se explicar&amp;aacute; como crear gr&amp;aacute;ficas con coordenadas polares.&lt;/p&gt;
&lt;p&gt;La ecuaci&amp;oacute;n que se va a graficar es la siguiente:&lt;/p&gt;
&lt;p&gt;r = 2&lt;em&gt; coseno(pi&lt;/em&gt;t) siendo 0 &amp;lt;2&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gr&amp;aacute;fica coordenadas polares - matplotlib" src="./images/matplotlib12-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo para generar dicha gr&amp;aacute;fica …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre matplotlib y ahora usando PyQT, se explicar&amp;aacute; como crear gr&amp;aacute;ficas con coordenadas polares.&lt;/p&gt;
&lt;p&gt;La ecuaci&amp;oacute;n que se va a graficar es la siguiente:&lt;/p&gt;
&lt;p&gt;r = 2&lt;em&gt; coseno(pi&lt;/em&gt;t) siendo 0 &amp;lt;2&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gr&amp;aacute;fica coordenadas polares - matplotlib" src="./images/matplotlib12-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo para generar dicha gr&amp;aacute;fica es la siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar pyplot"&gt;Importar pyplot&lt;/h1&gt;
&lt;p&gt;import matplotlib.pyplot as plt&lt;/p&gt;
&lt;h1 id="importar numpy"&gt;Importar numpy&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se crea el rango de valores angulares"&gt;Se crea el rango de valores angulares&lt;/h1&gt;
&lt;p&gt;theta = np.arange(0., 2., 0.005)*np.pi&lt;/p&gt;
&lt;h1 id="se calcula el coseno del rango de valores angulares"&gt;Se calcula el coseno del rango de valores angulares&lt;/h1&gt;
&lt;p&gt;r = 2*np.abs(np.cos(theta))&lt;/p&gt;
&lt;h1 id="se crea la grafica en coordenadas polares pasando"&gt;Se crea la grafica en coordenadas polares pasando&lt;/h1&gt;
&lt;h1 id="el angulo theta y los valores de r"&gt;el angulo theta y los valores de r&lt;/h1&gt;
&lt;p&gt;plt.polar(theta, r)&lt;/p&gt;
&lt;h1 id="se crea una grilla de los angulos 45,90 y 369"&gt;Se crea una grilla de los angulos 45,90 y 369&lt;/h1&gt;
&lt;p&gt;plt.thetagrids(range(45, 360, 90))
plt.rgrids(np.arange(0.2, 3.1, .7), angle=0);&lt;/p&gt;
&lt;h1 id="se genera la grafica"&gt;Se genera la grafica&lt;/h1&gt;
&lt;p&gt;plt.show()
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se va a crear la gr&amp;aacute;fica de la misma ecuaci&amp;oacute;n utilizando pyQT.&lt;/p&gt;
&lt;p&gt;La gr&amp;aacute;fica se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gr&amp;aacute;fica coordenadas polares - matplotlib 2 " src="./images/matplotlib12-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La figura muestra la ventana ahora con un t&amp;iacute;tulo, la barra inferior de herramienta de navegaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo para generar la gr&amp;aacute;fica:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="importar numpy_1"&gt;Importar numpy&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="importar el objeto figure de matplotlib"&gt;Importar el objeto Figure de matplotlib&lt;/h1&gt;
&lt;p&gt;from matplotlib.figure import Figure&lt;/p&gt;
&lt;h1 id="importar el objeto figurecanvas de qt4qgg,"&gt;Importar el Objeto FigureCanvas de Qt4Qgg,&lt;/h1&gt;
&lt;h1 id="se heredara desde qwidget."&gt;Se heredara desde QWidget.&lt;/h1&gt;
&lt;p&gt;from matplotlib.backends.backend_qt4agg \
  import FigureCanvasQTAgg as FigureCanvas&lt;/p&gt;
&lt;h1 id="importar el widget de la barra de navegacion"&gt;Importar el widget de la barra de navegacion&lt;/h1&gt;
&lt;h1 id="import the navigationtoolbar qt4agg widget"&gt;import the NavigationToolbar Qt4Agg widget&lt;/h1&gt;
&lt;p&gt;from matplotlib.backends.backend_qt4agg \
  import NavigationToolbar2QTAgg as NavigationToolbar&lt;/p&gt;
&lt;h1 id="importar qtgui de pyqt4."&gt;Importar QTGui de PyQt4.&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui&lt;/p&gt;
&lt;h1 id="se crea la clase qt4mplcanvas heredando figurecanvas"&gt;Se crea la Clase Qt4MplCanvas heredando FigureCanvas&lt;/h1&gt;
&lt;p&gt;class Lienzo(FigureCanvas):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self, parent):
    # Se instancia el objeto figure
    self.fig = Figure()
    #Se define la grafica en coordenadas polares
    self.axes = self.fig.add_subplot(111,polar=True)
    #Se crea el rango de valores angulares
    theta = np.arange(0., 2., 0.005)*np.pi
    #Se calcula el coseno del rango de valores angulares
    r = 2*np.abs(np.cos(theta))
    #Se genera la grafica pasando theta y r.
    self.axes.plot(theta, r)
    # se inicializa FigureCanvas
    FigureCanvas.__init__(self, self.fig)
    # se define el widget padre
    self.setParent(parent)
    # se define el widget como expandible
    FigureCanvas.setSizePolicy(self,
                               QtGui.QSizePolicy.Expanding,
                               QtGui.QSizePolicy.Expanding)
    # se notifica al sistema de la actualizacion de la politica
    FigureCanvas.updateGeometry(self)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se crea la clase ventana que hereda qmainwindow"&gt;Se crea la clase Ventana que hereda QMainWindow&lt;/h1&gt;
&lt;p&gt;class Ventana(QtGui.QMainWindow):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __init__(self):

    #Inicializacion del widget QMainWindow
    QtGui.QMainWindow.__init__(self)
    # se define el titulo de la ventana
    self.setWindowTitle("Ventana PyQT con una grafica de matplotlib")
    # instantiate a widget, it will be the main one
    # Se instancia el widget.
    self.main_widget = QtGui.QWidget(self)

    #Se crea una layout vbox
    vbl = QtGui.QVBoxLayout(self.main_widget)

    #Se instancia el Lienzo con la grafica de Matplotlib
    qmc = Lienzo(self.main_widget)
    # se instancia la barra de navegacion
    ntb = NavigationToolbar(qmc, self.main_widget)
    # se empaqueta el lienzo y la barra de navegacion en el vbox
    vbl.addWidget(qmc)
    vbl.addWidget(ntb)
    # se le asigna foco a la ventana
    self.main_widget.setFocus()
    #Se define el widget central
    self.setCentralWidget(self.main_widget)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    #Importar sys
    import sys
    #Importar QtGui de PyQt4
    from PyQt4 import QtGui
    #Se crea la aplicacion grafica
    qApp = QtGui.QApplication(sys.argv)
    # se instancia la ventana
    aw = Ventana()
    # se muestra el widget
    aw.show()
    #Se inicia el lazo principal de QT
    sys.exit(qApp.exec_())
```&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="pyqt"></category><category term="matplotlib"></category><category term="numpy"></category></entry><entry><title>Generando una gráfica en python con matplotlib con PyQT. Parte 11</title><link href="https://ecrespo.github.io/generando-una-grafica-en-python-con-matplotlib-con-pyqt-parte-11.html" rel="alternate"></link><published>2011-06-06T09:00:00-05:30</published><updated>2011-06-06T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-06-06:/generando-una-grafica-en-python-con-matplotlib-con-pyqt-parte-11.html</id><summary type="html">&lt;p&gt;A partir de este art&amp;iacute;culo las gr&amp;aacute;ficas con matplotlib se explicar&amp;aacute;n con la librer&amp;iacute;a gr&amp;aacute;fica PyQT. Para ello en otros art&amp;iacute;culos se reiniciar&amp;aacute; la serie sobre pyQT.&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se tomar&amp;aacute; las funciones creadas en el &lt;a href="https://www.seraph.to/generando-una-grafica-en-python-con-matplotlib-parte-10.html#generando-una-grafica-en-python-con-matplotlib-parte-10"&gt;art&amp;iacute;culo anterior&lt;/a&gt; para calcular la trayectoria del lanzamiento de proyectil y se crear&amp;aacute; …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A partir de este art&amp;iacute;culo las gr&amp;aacute;ficas con matplotlib se explicar&amp;aacute;n con la librer&amp;iacute;a gr&amp;aacute;fica PyQT. Para ello en otros art&amp;iacute;culos se reiniciar&amp;aacute; la serie sobre pyQT.&lt;/p&gt;
&lt;p&gt;En este art&amp;iacute;culo se tomar&amp;aacute; las funciones creadas en el &lt;a href="https://www.seraph.to/generando-una-grafica-en-python-con-matplotlib-parte-10.html#generando-una-grafica-en-python-con-matplotlib-parte-10"&gt;art&amp;iacute;culo anterior&lt;/a&gt; para calcular la trayectoria del lanzamiento de proyectil y se crear&amp;aacute; un objeto basandose en las librer&amp;iacute;as PyQT.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="para los argumentos desde la linea de comandos"&gt;Para los argumentos desde la linea de comandos&lt;/h1&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;h1 id="importar gui de pyqt"&gt;Importar GUI de PyQT&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui&lt;/p&gt;
&lt;h1 id="importar numpy para la creacion de la imagen"&gt;Importar numpy para la creacion de la imagen&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se importa el objeto figure de matplotlib"&gt;Se importa el objeto Figure de Matplotlib&lt;/h1&gt;
&lt;p&gt;from matplotlib.figure import Figure&lt;/p&gt;
&lt;h1 id="se importa qt4agg como canvas."&gt;Se importa QT4Agg como Canvas.&lt;/h1&gt;
&lt;p&gt;from matplotlib.backends.backend_qt4agg \
  import FigureCanvasQTAgg as FigureCanvas&lt;/p&gt;
&lt;h1 id="se define la funcion x(t) de la ecuacion de posicion (movimiento horizontal)"&gt;Se define la funcion x(t) de la ecuacion de posicion (movimiento horizontal)&lt;/h1&gt;
&lt;p&gt;def fx (t):
    #Se define la posicion inicial en 0
    x0 = 0
    #Se define la velocidad inicial en 2 mts/seg
    v0x = 2
    #Se define la aceleracion en 1 mts/seg^2
    ax = 1
    #Se hace el calculo de la posicion con respecto al tiempo
    x = x0 + v0x&lt;em&gt;t + 0.5&lt;/em&gt;ax&lt;em&gt;t&lt;/em&gt;*2
    return x&lt;/p&gt;
&lt;h1 id="se define la funcion y(t) de la ecuacion de posicion altura"&gt;Se define la funcion y(t) de la ecuacion de posicion altura&lt;/h1&gt;
&lt;p&gt;def fy(t):
    #Se define la altura inicial en 100 mts
    y0 = 100
    #Se define la velocidad inicial en 10 mts/seg
    v0y = 10
    #Se define la gravedad en 9.81 mts/seg^2
    g = 9.81
    #Se realiza el calculo de l posicion en funcion del tiempo
    y = y0 + v0y&lt;em&gt;t - 0.5&lt;/em&gt;g&lt;em&gt;t&lt;/em&gt;*2
    return y&lt;/p&gt;
&lt;p&gt;class Lienzo(FigureCanvas):
    """Clase que represente a FigureCanvas"""
    def &lt;strong&gt;init&lt;/strong&gt;(self):
        # Codigo para generar la grafica
        self.figura = Figure()
        self.ejes = self.figura.add_subplot(111)
        self.tiempo = np.arange(0.0, 5.65, 0.01)
        #Calculo de la posicion en el eje X y Y
        self.x = fx(self.tiempo)
        self.y = fy(self.tiempo)
        #Se crea la grafica
        self.ejes.plot(self.x, self.y)
        # inicializar el lienzo donde se crea la grafica.
        FigureCanvas.&lt;strong&gt;init&lt;/strong&gt;(self, self.figura)&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    # Se crea el GUI de la aplicacion
    qApp = QtGui.QApplication(sys.argv)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Se crea el widget para matplotlib    
mpl = Lienzo()
# Se muestra el widget.
mpl.show()
#Se inicia el lazo de ejecucion de QT.
sys.exit(qApp.exec_())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la gr&amp;aacute;fica de la trayectoria del lanzamiento de proyectil.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gr&amp;aacute;fica lanzamiento de proyectil - matplotlib " src="./images/matplotlib11-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="pyqt"></category><category term="matplotlib"></category></entry><entry><title>Generando una gráfica en python con matplotlib. Parte 10</title><link href="https://ecrespo.github.io/generando-una-grafica-en-python-con-matplotlib-parte-10.html" rel="alternate"></link><published>2011-06-05T09:00:00-05:30</published><updated>2011-06-05T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-06-05:/generando-una-grafica-en-python-con-matplotlib-parte-10.html</id><summary type="html">&lt;p&gt;Revisando algunos scripts que tengo en mi equipo me encontre con uno que hace  el c&amp;aacute;lculo de la f&amp;iacute;sica de un lanzamiento vertical.&lt;/p&gt;
&lt;p&gt;La precisi&amp;oacute;n del c&amp;aacute;lculo se logra con un arreglo donde se define los datos de la variable tiempo.&lt;/p&gt;
&lt;p&gt;Esto se logra gracias al modulo numpy que permite …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Revisando algunos scripts que tengo en mi equipo me encontre con uno que hace  el c&amp;aacute;lculo de la f&amp;iacute;sica de un lanzamiento vertical.&lt;/p&gt;
&lt;p&gt;La precisi&amp;oacute;n del c&amp;aacute;lculo se logra con un arreglo donde se define los datos de la variable tiempo.&lt;/p&gt;
&lt;p&gt;Esto se logra gracias al modulo numpy que permite crear un arreglo de valores decimales con valores espec&amp;iacute;ficos entre cada elemento del arreglo.&lt;/p&gt;
&lt;p&gt;Si se necesita un arreglo con valores desde 0 a 5,6 con elementos entre 0,1 se ejecuta la siguiente instrucci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python2.6"&gt;!/usr/bin/env python2.6&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import numpy as np
arreglo = np.arange(0, 5.60,0.1)
print arreglo 
[ 0.   0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1.   1.1  1.2  1.3  1.4
  1.5  1.6  1.7  1.8  1.9  2.   2.1  2.2  2.3  2.4  2.5  2.6  2.7  2.8  2.9
  3.   3.1  3.2  3.3  3.4  3.5  3.6  3.7  3.8  3.9  4.   4.1  4.2  4.3  4.4
  4.5  4.6  4.7  4.8  4.9  5.   5.1  5.2  5.3  5.4  5.5]
```&lt;/p&gt;
&lt;p&gt;Se tiene 2 funciones una fx(t) y otra fy(t) ambas realizan los c&amp;aacute;lculos de la posici&amp;oacute;n de un cuerpo para lanzamiento vertical, se calcula se tiene el tiempo que se tarda en caer el cuerpo hasta el piso desde una altura de 100 mts con una velocidad inicial en X y Y y la aceleraci&amp;oacute;n en el eje X y la gravedad.&lt;/p&gt;
&lt;p&gt;Simplemente se usa matplotlib para generar el gr&amp;aacute;fico, en un pr&amp;oacute;ximo art&amp;iacute;culo se mostrar&amp;aacute; como usar glade+python+gtk con matplotlib para tener las dos gr&amp;aacute;ficas que se muestran en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gr&amp;aacute;fica ca&amp;iacute;da libre - matplotlib " src="./images/matplotlib10-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La primera gr&amp;aacute;fica muestra la trayectoria del cuerpo con respecto a su altura versus el tiempo que tarda en caer.
La segunda gr&amp;aacute;fica muestra la trayectoria con respecto a la altura y la distancia horizontal, ser&amp;iacute;a una descripci&amp;oacute;n de la trayectoria del lanzamiento del cuerpo.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo donde se realiza el c&amp;aacute;lculo y las gr&amp;aacute;ficas se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python &lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --_1"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="se importa el modulo numpy para generar un arreglo con los datos de la variable tiempo"&gt;Se importa el modulo numpy para generar un arreglo con los datos de la variable tiempo&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="se importa matplotlib para generar la grafica."&gt;Se importa matplotlib para generar la grafica.&lt;/h1&gt;
&lt;p&gt;import matplotlib.pyplot as plt&lt;/p&gt;
&lt;h1 id="se define la funcion x(t) de la ecuacion de posicion (movimiento horizontal)"&gt;Se define la funcion x(t) de la ecuacion de posicion (movimiento horizontal)&lt;/h1&gt;
&lt;p&gt;def fx (t):
    #Se define la posicion inicial en 0
    x0 = 0
    #Se define la velocidad inicial en 2 mts/seg
    v0x = 2
    #Se define la aceleracion en 1 mts/seg^2
    ax = 1
    #Se hace el calculo de la posicion con respecto al tiempo
    x = x0 + v0x&lt;em&gt;t + 0.5&lt;/em&gt;ax&lt;em&gt;t&lt;/em&gt;*2
    return x&lt;/p&gt;
&lt;h1 id="se define la funcion y(t) de la ecuacion de posicion altura"&gt;Se define la funcion y(t) de la ecuacion de posicion altura&lt;/h1&gt;
&lt;p&gt;def fy(t):
    #Se define la altura inicial en 100 mts
    y0 = 100
    #Se define la velocidad inicial en 10 mts/seg
    v0y = 10
    #Se define la gravedad en 9.81 mts/seg^2
    g = 9.81
    #Se realiza el calculo de l posicion en funcion del tiempo
    y = y0 + v0y&lt;em&gt;t - 0.5&lt;/em&gt;g&lt;em&gt;t&lt;/em&gt;*2
    return y&lt;/p&gt;
&lt;h1 id="programa principal"&gt;Programa principal&lt;/h1&gt;
&lt;p&gt;def main():
    #Se define un range desde 0 a 5.65 con intervalos de 0.01.
    tiempo = np.arange(0, 5.65,0.01)
    #Se define la figura
    plt.figure(1)
    #Se define la grafica.
    plt.subplot(211)
    #Se despligega la grafica de la distancia en X en funcion del tiempo
    plt.plot(tiempo, fy(tiempo),"k")
    #Se Coloca un titulo a la grafica y la informacion del eje y (tiempo) 
    plt.title("Graficas posicion")
    plt.xlabel("tiempo (seg)")
    plt.ylabel("Altura en mts")
    #Se muestra la grafica de posicion en X respecto a la altura.
    plt.subplot(212)
    #Se grafica la funcion fx vs fy
    plt.plot(fx(tiempo),fy(tiempo),'k')
    #Se muestra la info del eje X y Y
    plt.xlabel("Distancia horizontal (mts)")
    plt.ylabel("Altura  (mts)")
    #Se muestra las graficas.
    plt.show()&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    main()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Como mencione antes, en un siguiente art&amp;iacute;culo se mostrar&amp;aacute; este mismo ejemplo pero usando glade.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="matplotlib"></category></entry><entry><title>Reproducir una canción en un Celular con Android desde python</title><link href="https://ecrespo.github.io/reproducir-una-cancion-en-un-celular-con-android-desde-python.html" rel="alternate"></link><published>2011-04-30T09:10:00-05:30</published><updated>2011-04-30T09:10:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-30:/reproducir-una-cancion-en-un-celular-con-android-desde-python.html</id><summary type="html">&lt;p&gt;Pensaba escribir primero como crear opciones a un  men&amp;uacute; pero record&amp;eacute; que existe la posibilidad de reproducir una canci&amp;oacute;n mp3 desde python con el API de SL4A.&lt;/p&gt;
&lt;p&gt;Las opciones que tiene el API de SL4A para reproducir m&amp;uacute;sica son las siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mediaIsPlaying: Consulta si la canci&amp;oacute;n se est&amp;aacute; reproduciendo en …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Pensaba escribir primero como crear opciones a un  men&amp;uacute; pero record&amp;eacute; que existe la posibilidad de reproducir una canci&amp;oacute;n mp3 desde python con el API de SL4A.&lt;/p&gt;
&lt;p&gt;Las opciones que tiene el API de SL4A para reproducir m&amp;uacute;sica son las siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mediaIsPlaying: Consulta si la canci&amp;oacute;n se est&amp;aacute; reproduciendo en ese momento.&lt;/li&gt;
&lt;li&gt;mediaPlayInfo: Retorna informaci&amp;oacute;n de la canci&amp;oacute;n.&lt;/li&gt;
&lt;li&gt;mediaPlay: Se reproduce la canci&amp;oacute;n.&lt;/li&gt;
&lt;li&gt;mediaPlayList:&lt;/li&gt;
&lt;li&gt;mediaPlayPause: Se pausa la canci&amp;oacute;n.&lt;/li&gt;
&lt;li&gt;mediaPlaySeek: Se reproduce la canci&amp;oacute;n en un tiempo determinado.&lt;/li&gt;
&lt;li&gt;mediaPlaySetLooping: Se define si se reproduce de nuevo la canci&amp;oacute;n autom&amp;aacute;ticamente.&lt;/li&gt;
&lt;li&gt;mediaPlayStart: Inicia la reproducci&amp;oacute;n del archivo&lt;/li&gt;
&lt;li&gt;mediaPlayClose: Se cierra el archivo de la canci&amp;oacute;n.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Solamente se utilizar&amp;aacute; en este post las funciones mediaPlay y mediaPlayInfo.&lt;/p&gt;
&lt;p&gt;La idea es listar los archivos mp3 en el widget de selecci&amp;oacute;n simple y luego reproducir la canci&amp;oacute;n seleccionada.&lt;/p&gt;
&lt;p&gt;Antes de reproducir la canci&amp;oacute;n, se toma informaci&amp;oacute;n de la canci&amp;oacute;n, principalmente la duraci&amp;oacute;n de la canci&amp;oacute;n, ese tiempo es luego manejado por una barra de progreso que avanza  mientras se reproduce la canci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar el modulo android,path, la funcion sleep,listdir y exit."&gt;Importar el modulo android,path, la funcion sleep,listdir y exit.&lt;/h1&gt;
&lt;p&gt;import android
from time import sleep
from os import listdir
from os import path
from sys import exit&lt;/p&gt;
&lt;h1 id="la ruta donde se encuentran los mp3s"&gt;La ruta donde se encuentran los mp3s&lt;/h1&gt;
&lt;p&gt;ruta = "/sdcard/mp3z/"&lt;/p&gt;
&lt;h1 id="se crea la instancia de android"&gt;Se crea la instancia de android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se muestra un mensaje si se desea reproducir una cancion.si es si, se reproduce si no se sale del programa."&gt;Se muestra un mensaje si se desea reproducir una cancion.si es si, se reproduce si no se sale del programa.&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateAlert("Reproducir una cancion", "Desea reproducir una cancion?")
droid.dialogSetPositiveButtonText('Si')
droid.dialogSetNegativeButtonText('No')
droid.dialogShow()&lt;/p&gt;
&lt;h1 id="se captura la respuesta."&gt;Se captura la respuesta.&lt;/h1&gt;
&lt;p&gt;respuesta = droid.dialogGetResponse()&lt;/p&gt;
&lt;p&gt;if respuesta[1]['which'] == "positive":
    #Se busca los archivos y directorios de la ruta definida.
    archivos = listdir(ruta)
    #Se crea una lista vacia donde se agregaran los nombres de archivos mp3s
    listado = []
    #Se agregan los archivos mp3 a la lista
    for i in archivos:
        #Si es un archivo se agrega a listado, se pasa la ruta y el archivo.
        if path.isfile("%s%s" %(ruta,i)):
            listado.append(i)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se muestra un mensaje con la lista de canciones que se pueden reproducir.
droid.dialogCreateAlert("Reproducir una cancion")
droid.dialogSetSingleChoiceItems(listado)
droid.dialogSetPositiveButtonText('Seleccione')
droid.dialogSetNegativeButtonText('Salir')
droid.dialogShow()
#Se captura la respuesta y el item seleccionado
respuesta  = droid.dialogGetResponse().result
item = droid.dialogGetSelectedItems()
#Si la respuesta es positiva se reproduce la cancion
if  respuesta['which'] == "positive":
    droid.makeToast("La cancion selecionada es: %s " %listado[int(item[1][0])])
    sleep(2)
    droid.makeToast("Reproduciendo la cancion")
    #Se agrega a cancion la cancion seleccionada segun la variable item.
    cancion = listado[int(item[1][0])]
    #Se reproduce la cancion pasando la ruta donde esta el archivo y el archivo.
    droid.mediaPlay("%s%s" %(ruta,cancion))
    #Se captura la duracion de la cancion representado en milisegundos
    tiempo = int(droid.mediaPlayInfo()[1]["duration"])
    #Se pasa la duracion de la cancion de milisegundos a segundos
    duracion = int(tiempo /1000)
    #Se crea una barra de progreso con el titulo reproduciendo, mensaje el nombre de la cancion y la duracion.
    droid.dialogCreateHorizontalProgress("Reproduciendo",cancion,duracion)
    #Se muestra el widget.
    droid.dialogShow()
    #Se incrementa el valor de la barra de progreso cada 1 seg.
    for i in range(0,duracion):
        sleep(1)
        droid.dialogSetCurrentProgress(i)
    #Al finalizar la cancion se muestra un mensaje de fin de la cancion y se sale de la aplicacion.
    droid.makeToast("Fin de la reproduccion de la cancion")
    droid.dialogDismiss()
else:
    #Si no se selecciono una cancion se sale del programa
    droid.makeToast("No se selecciono una cancion-Se sale de la aplicacion")
    sleep(1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;else:
    #Se selecciono que no se desea reproducir una cancion
    droid.makeToast("Fin del programa")
    exit()
```&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la ventana donde se pregunta si se desea reproducir una canci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ejecutar script " src="./images/reproductorandroid1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la lista de canciones que se puede reproducir, se selecciona una y luego se le da al bot&amp;oacute;n seleccione.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Seleccionar mp3" src="./images/reproductorandroid2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La &amp;uacute;ltima figura muestra el proceso de reproducci&amp;oacute;n de la canci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Reproduciendo el mp3" src="./images/reproductorandroid3.png"/&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo QR del programa:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo QR del programa" src="./images/reproducir.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category><category term="Reproductor Música"></category></entry><entry><title>Tomar una foto desde android con un temporizador desde python</title><link href="https://ecrespo.github.io/tomar-una-foto-desde-android-con-un-temporizador-desde-python.html" rel="alternate"></link><published>2011-04-23T09:10:00-05:30</published><updated>2011-04-23T09:10:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-23:/tomar-una-foto-desde-android-con-un-temporizador-desde-python.html</id><summary type="html">&lt;p&gt;La idea es decirle a un programa el tiempo en que se tomar&amp;aacute; una foto, al cumplirse el tiempo se toma la foto y se guarda en un directorio donde luego se abre una p&amp;aacute;gina web en el celular que muestra la foto en el celular.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo se basa …&lt;/p&gt;</summary><content type="html">&lt;p&gt;La idea es decirle a un programa el tiempo en que se tomar&amp;aacute; una foto, al cumplirse el tiempo se toma la foto y se guarda en un directorio donde luego se abre una p&amp;aacute;gina web en el celular que muestra la foto en el celular.&lt;/p&gt;
&lt;p&gt;El art&amp;iacute;culo se basa en un programa hecho en  ruby donde crea se crea un script que toma fotos de manera remota con el celular;  el art&amp;iacute;culo del programa en ruby se encuentra   &lt;a href="http://leone.panopticdev.com/2010/08/turn-your-android-phone-into-remote-spy.html"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se usar&amp;aacute; la funci&amp;oacute;n cameraCapturePicture pasandole el archivo donde se va a guardar la foto.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo html se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo html" src="./images/htmlcode.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo python se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python
import android&lt;/p&gt;
&lt;h1 id="_1"&gt;&lt;/h1&gt;
&lt;h1 id="se importa la funcion sleep"&gt;Se importa la funci&amp;oacute;n sleep&lt;/h1&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="importar el modulo os para usar os.path.isfile y os.remove."&gt;Importar el m&amp;oacute;dulo os para usar os.path.isfile y os.remove.&lt;/h1&gt;
&lt;p&gt;import os&lt;/p&gt;
&lt;h1 id="mensaje del programa"&gt;Mensaje del programa&lt;/h1&gt;
&lt;p&gt;title = 'Captura de una foto'
message = ('Desea capturar una foto?')&lt;/p&gt;
&lt;h1 id="se crea la instancia del objeto android"&gt;Se crea la instancia del objeto android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se crea el mensaje si se desea tomar la foto."&gt;Se crea el mensaje si se desea tomar la foto.&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateAlert(title, message)
droid.dialogSetPositiveButtonText('Si')
droid.dialogSetNegativeButtonText('No')
droid.dialogShow()&lt;/p&gt;
&lt;h1 id="se captura la respuesta si es positiva se pide el tiempo que se desea"&gt;Se captura la respuesta si es positiva se pide el tiempo que se desea&lt;/h1&gt;
&lt;h1 id="usar para tomar la foto."&gt;usar para tomar la foto.&lt;/h1&gt;
&lt;h1 id="si es negativa finaliza el programa."&gt;Si es negativa finaliza el programa.&lt;/h1&gt;
&lt;p&gt;respuesta = droid.dialogGetResponse()
if respuesta[1]['which'] == "positive":
    tiempo = droid.dialogGetInput("Escriba el tiempo para capturar la foto","tiempo:")
    #Se crea el mensaje del tiempo para ejecutar la toma de la foto.
    droid.makeToast("Tiempo para tomar la foto: %s " %tiempo[1])
    #Se espera el tiempo definido
    sleep(int(tiempo[1]))
    #Se toma la foto guardandola en el archivo latest.png.Si la imagen existe
    #se borra si no se toma la foto.
    if os.path.isfile("/sdcard/sl4a/scripts/latest.png") == True:
        os.remove("/sdcard/sl4a/scripts/latest.png")
    droid.cameraCapturePicture("/sdcard/sl4a/scripts/latest.png")
    sleep(1)
    droid.makeToast("Presentando la foto tomada")
    sleep(2)
    #Se muestra una p&amp;aacute;gina web donde aparecer&amp;aacute; la foto tomada.
    droid.webViewShow("file:///sdcard/sl4a/scripts/captura.html")
    sleep(120)
    droid.makeToast("Fin del programa")
else:
    droid.makeToast('Fin del programa')
```&lt;/p&gt;
&lt;p&gt;La figura muestra la ejecuci&amp;oacute;n del programa preguntando si desea tomar la foto.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ejecuci&amp;oacute;n script camara" src="./images/camara1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra que se le pide al usuario el tiempo que quiere esperar hasta que tome la foto:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tiempo de captura de la foto" src="./images/camara2.png"/&gt;&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la p&amp;aacute;gina web donde est&amp;aacute; la foto que se tom&amp;oacute;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultado de la captura" src="./images/camara3.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo QR del script captura.py se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo QR captura script python" src="./images/capturapy.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo QR de captura.html se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo QR de caputa en html" src="./images/capturahtml.png"/&gt;&lt;/p&gt;
&lt;p&gt;Una mejora al programa es que se pueda visualizar remotamente la foto tomada por medio de un servidor web en el celular con Android, se intento con el m&amp;oacute;dulo en python que permite iniciar un servidor web pero por los permisos que maneja SL4A no se pudo iniciar el servidor web.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category><category term="GPS"></category><category term="Camara"></category></entry><entry><title>Captura de información que maneja el sensor del celular Android con python</title><link href="https://ecrespo.github.io/captura-de-informacion-que-maneja-el-sensor-del-celular-android-con-python.html" rel="alternate"></link><published>2011-04-23T09:00:00-05:30</published><updated>2011-04-23T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-23:/captura-de-informacion-que-maneja-el-sensor-del-celular-android-con-python.html</id><summary type="html">&lt;p&gt;Se explicar&amp;aacute; como manejar la informaci&amp;oacute;n del sensor del celular (orientaci&amp;oacute;n, acelerometro, magnetometro, precisi&amp;oacute;n e iluminaci&amp;oacute;n).&lt;/p&gt;
&lt;p&gt;La API tiene las siguientes funciones:&lt;/p&gt;
&lt;p&gt;```python
startSensingTimed(
    Entero SensorNum: 1=Todo, 2=Acelerometro, 3=Magnetometro, 4=Iluminaci&amp;oacute;n;
    Entero tiempo: M&amp;iacute;nimo tiempo para realizar la lectura en milisegundos
    ): Inicia los eventos de lectura del …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Se explicar&amp;aacute; como manejar la informaci&amp;oacute;n del sensor del celular (orientaci&amp;oacute;n, acelerometro, magnetometro, precisi&amp;oacute;n e iluminaci&amp;oacute;n).&lt;/p&gt;
&lt;p&gt;La API tiene las siguientes funciones:&lt;/p&gt;
&lt;p&gt;```python
startSensingTimed(
    Entero SensorNum: 1=Todo, 2=Acelerometro, 3=Magnetometro, 4=Iluminaci&amp;oacute;n;
    Entero tiempo: M&amp;iacute;nimo tiempo para realizar la lectura en milisegundos
    ): Inicia los eventos de lectura del sensor del celular.&lt;/p&gt;
&lt;p&gt;stopSensing(): Detiene la lectura del sensor
 sensorsReadMagnetometer(): Devuelve una lista con la informaci&amp;oacute;n del campo magnetico, una lista con los valores x, y, z.
 sensorsReadOrientation(): Devuelve una lista de valores sobre la orientaci&amp;oacute;n: azimut, pitch, roll.&lt;/p&gt;
&lt;p&gt;sensorsGetAccuracy():Retorna la precisi&amp;oacute;n de la lectura.&lt;/p&gt;
&lt;p&gt;sensorsGetLight(): Retorna la iluminaci&amp;oacute;n recibida en el equipo.&lt;/p&gt;
&lt;p&gt;sensorsReadAccelerometer():Retorna una lista con los valores x,y,z del acelerometro.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Primero se activa la lectura del sensor por 30seg, se genera un mensaje que se inicia el proceso de lectura, lluego se muestra la lista de los valores capturados, se le pide al usuario que se salga de la aplicaci&amp;oacute;n y as&amp;iacute; termina la captura de la informaci&amp;oacute;n del sensor del celular.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar el modulo android"&gt;Importar el m&amp;oacute;dulo android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="importar sleep"&gt;Importar sleep&lt;/h1&gt;
&lt;p&gt;from time import sleep&lt;/p&gt;
&lt;h1 id="se crea la instancia del objeto android"&gt;Se crea la instancia del objeto android&lt;/h1&gt;
&lt;p&gt;droid=android.Android()&lt;/p&gt;
&lt;h1 id="se activa el sensor con un tiempo de activacion de 30seg."&gt;Se activa el sensor con un tiempo de activaci&amp;oacute;n de 30seg.&lt;/h1&gt;
&lt;p&gt;droid.startSensingTimed(1,30000)&lt;/p&gt;
&lt;h1 id="se crea el mensaje y la info a desplegar en el dialogo."&gt;Se crea el mensaje y la info a desplegar en el dialogo.&lt;/h1&gt;
&lt;p&gt;titulo = "Inicio de captura de informacion de los sensores"
mensaje = "Espere 10 seg"&lt;/p&gt;
&lt;h1 id="se crea la barra spinner con un tiempo de 10 seg"&gt;Se crea la barra spinner con un tiempo de 10 seg&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateSpinnerProgress(titulo, mensaje)
droid.dialogShow()
sleep(10)
droid.dialogDismiss()&lt;/p&gt;
&lt;h1 id="se captura la informacion de la precision, iluminacion, acelerometro, #magnetometro y orientacion"&gt;Se captura la informaci&amp;oacute;n de la precisi&amp;oacute;n, iluminaci&amp;oacute;n, acelerometro, #magnetometro y orientaci&amp;oacute;n&lt;/h1&gt;
&lt;p&gt;precision = droid.sensorsGetAccuracy()
luz = droid.sensorsGetLight()
acelerometro = droid.sensorsReadAccelerometer()
magnetometro = droid.sensorsReadMagnetometer()
orientacion = droid.sensorsReadOrientation()&lt;/p&gt;
&lt;h1 id="se desactiva el sensor del celular"&gt;Se desactiva el sensor del celular&lt;/h1&gt;
&lt;p&gt;droid.stopSensing()&lt;/p&gt;
&lt;h1 id="se crea variables de texto con un formato para mostrar la informacion"&gt;Se crea variables de texto con un formato para mostrar la informaci&amp;oacute;n&lt;/h1&gt;
&lt;p&gt;textAcelerometro = ""
textMagnetometro = ""
textOrientacion = ""
for i in acelerometro[1]:
    textAcelerometro = textAcelerometro + "%s," %i
for i in orientacion[1]:
    textOrientacion = textOrientacion + "%s," %i
for i in magnetometro[1]:
    textMagnetometro = textMagnetometro + "%s," %i
infoPrecision = "Precision: %s " %precision[1]
infoIluminacion = "Iluminacion: %s" %luz[1]
infoAcelerometro = "Acelerometro: %s" %textAcelerometro
infoMagnetometro = "Campo Magnetico: %s" %textMagnetometro
infoOrientacion = "Orientacion: %s" %textOrientacion&lt;/p&gt;
&lt;h1 id="se presenta la informacion en pantalla."&gt;Se presenta la informaci&amp;oacute;n en pantalla.&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateAlert("Informacion del sensor del celular")
datos = [infoPrecision,infoIluminacion,infoAcelerometro,infoMagnetometro,infoOrientacion]
droid.dialogSetItems(datos)
droid.dialogSetNegativeButtonText('Salir')
droid.dialogShow()
respuesta  = droid.dialogGetResponse().result
if  respuesta['which'] == "negative":
    droid.makeToast("Saliendo del programa")
    time.sleep(2)
```&lt;/p&gt;
&lt;p&gt;La figura muestra cuando se ejecuta la apliaci&amp;oacute;n, se muestra un mensaje de expera para la lectura del sensor y luego muestra  la informaci&amp;oacute;n obtenida:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Scrip captura datos sensores" src="./images/gps1.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Inicio captura de informaci&amp;oacute;n" src="./images/iniciocaptura.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultado de la captura" src="./images/informacion.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo QR de la aplicaci&amp;oacute;n se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo QR sensor" src="./images/sensor.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category><category term="GPS"></category><category term="Acelerometro"></category><category term="Magnetometro"></category></entry><entry><title>Visualización de las coordenadas del gps del celular desde Android</title><link href="https://ecrespo.github.io/visualizacion-de-las-coordenadas-del-gps-del-celular-desde-android.html" rel="alternate"></link><published>2011-04-18T09:10:00-05:30</published><updated>2011-04-18T09:10:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-18:/visualizacion-de-las-coordenadas-del-gps-del-celular-desde-android.html</id><summary type="html">&lt;p&gt;En art&amp;iacute;culo anterior expliqu&amp;eacute; &lt;a href="https://www.seraph.to/capturar-la-ubicacion-del-celular-android-desde-linux.html"&gt;como capturar informaci&amp;oacute;n de la posici&amp;oacute;n del celular en Linux&lt;/a&gt;, en este art&amp;iacute;culo m&amp;aacute;s sencillo que la versi&amp;oacute;n anterior lo hace directamente en android.&lt;/p&gt;
&lt;p&gt;En el art&amp;iacute;culo mencionado se captura la informaci&amp;oacute;n de la posici&amp;oacute;n del celular con la la funci&amp;oacute;n readLocation(), en esta versi&amp;oacute;n se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En art&amp;iacute;culo anterior expliqu&amp;eacute; &lt;a href="https://www.seraph.to/capturar-la-ubicacion-del-celular-android-desde-linux.html"&gt;como capturar informaci&amp;oacute;n de la posici&amp;oacute;n del celular en Linux&lt;/a&gt;, en este art&amp;iacute;culo m&amp;aacute;s sencillo que la versi&amp;oacute;n anterior lo hace directamente en android.&lt;/p&gt;
&lt;p&gt;En el art&amp;iacute;culo mencionado se captura la informaci&amp;oacute;n de la posici&amp;oacute;n del celular con la la funci&amp;oacute;n readLocation(), en esta versi&amp;oacute;n se usar&amp;aacute;  funci&amp;oacute;n getLastKnownLocation() . Note diferencias entre una funci&amp;oacute;n y la otra, en la &amp;uacute;ltima si pude tomar la posici&amp;oacute;n correcta que muestra googlemap, en cambio con la primera funci&amp;oacute;n marcaba la posici&amp;oacute;n que donde el celular se encontraba hace unos d&amp;iacute;as, es necesario investigar m&amp;aacute;s de la API de SL4A  o de Android para ver la raz&amp;oacute;n de esta caracter&amp;iacute;stica.&lt;/p&gt;
&lt;p&gt;Lo otro nuevo en el programa es que se visualiza directamente en el celular la posici&amp;oacute;n, esto se logra usando la funci&amp;oacute;n webviewShow(), se mostr&amp;oacute; su uso en el art&amp;iacute;culo sobre webview. En ese art&amp;iacute;culo se abre una p&amp;aacute;gina web desde la memoria SD del celular, en este caso se abrir&amp;aacute; la p&amp;aacute;gina de googlemaps pasandole la lontitud y latitud y el navegador mostrar&amp;aacute; la ubicaci&amp;oacute;n del celular en el mapa.&lt;/p&gt;
&lt;p&gt;Adicional a la  informaci&amp;oacute;n de latitud y longitud se puede capturar informaci&amp;oacute;n de:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tiempo&lt;/li&gt;
&lt;li&gt;altitud&lt;/li&gt;
&lt;li&gt;velocidad&lt;/li&gt;
&lt;li&gt;precisi&amp;oacute;n&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importando el modulo android"&gt;Importando el modulo android&lt;/h1&gt;
&lt;p&gt;import android
from time import sleep&lt;/p&gt;
&lt;h1 id="se crea la instancia de la clase android"&gt;Se crea la instancia de la clase Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se inicia la localizacion"&gt;Se inicia la localizacion&lt;/h1&gt;
&lt;p&gt;droid.startLocating()&lt;/p&gt;
&lt;h1 id="se espera 15 segundos"&gt;Se espera 15 segundos&lt;/h1&gt;
&lt;p&gt;sleep(15)&lt;/p&gt;
&lt;h1 id="se presenta en la consola la informaci?n de la localizaci?n"&gt;Se presenta en la consola la informaci?n de la localizaci?n&lt;/h1&gt;
&lt;h1 id="se maneja la informacion de un diccionario."&gt;Se maneja la informacion de un diccionario.&lt;/h1&gt;
&lt;p&gt;resultado = droid.getLastKnownLocation()&lt;/p&gt;
&lt;p&gt;latitud = resultado[1]["passive"]["latitude"]
longitud = resultado[1]["passive"]["longitude"]
altitud = resultado[1]["passive"]["altitude"]&lt;/p&gt;
&lt;h1 id="se detiene la localizacion"&gt;Se detiene la localizacion&lt;/h1&gt;
&lt;p&gt;droid.stopLocating()&lt;/p&gt;
&lt;h1 id="se muestra googlemaps en el navegador en android"&gt;Se muestra googlemaps en el navegador en android&lt;/h1&gt;
&lt;p&gt;droid.webViewShow("http://maps.google.com/maps?q=%s,%s" %(latitud,longitud))
```&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la ejecuci&amp;oacute;n del script.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ubicaci&amp;oacute;n GPS Android" src="./images/gpsandroid.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo QR del script se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo QR" src="./images/gps.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Festival Latinoamerica de Instalación de Software Libre 2011- Cabudare</title><link href="https://ecrespo.github.io/festival-latinoamerica-de-instalacion-de-software-libre-2011-cabudare.html" rel="alternate"></link><published>2011-04-08T10:00:00-05:30</published><updated>2011-04-08T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-08:/festival-latinoamerica-de-instalacion-de-software-libre-2011-cabudare.html</id><summary type="html">&lt;p&gt;&lt;img alt="FLISOL LOGO" src="./images/flisollogo.png"/&gt;&lt;/p&gt;
&lt;p&gt;Los invito a participar en las distintas ciudades donde se realizar&amp;aacute; en FLISOL en Venezuela y en los distintos pa&amp;iacute;ses de Latinoamerica. El evento se realizar&amp;aacute; ma&amp;ntilde;ana S&amp;aacute;bado 9 de Abril, m&amp;aacute;s informaci&amp;oacute;n referente el Flisol en Venezuela &lt;a href="http://flisol.org.ve/"&gt;ac&amp;aacute;&lt;/a&gt; o de Latinoamerica &lt;a href="http://flisol.net/FLISOL2011"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En mi caso participare en el Flisol …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="FLISOL LOGO" src="./images/flisollogo.png"/&gt;&lt;/p&gt;
&lt;p&gt;Los invito a participar en las distintas ciudades donde se realizar&amp;aacute; en FLISOL en Venezuela y en los distintos pa&amp;iacute;ses de Latinoamerica. El evento se realizar&amp;aacute; ma&amp;ntilde;ana S&amp;aacute;bado 9 de Abril, m&amp;aacute;s informaci&amp;oacute;n referente el Flisol en Venezuela &lt;a href="http://flisol.org.ve/"&gt;ac&amp;aacute;&lt;/a&gt; o de Latinoamerica &lt;a href="http://flisol.net/FLISOL2011"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En mi caso participare en el Flisol en la Ciudad de Cabudare en el Estado Lara, en la Universidad de Yacambu.&lt;/p&gt;
&lt;p&gt;&lt;img alt="FLISOL Cabure" src="./images/flisol_Cabudare.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;La charla que dictar&amp;eacute; ma&amp;ntilde;ana a las 2pm es sobre Programar en Android con Python.&lt;/p&gt;
&lt;p&gt;El enlace para bajar la presentaci&amp;oacute;n  esta en &lt;a href="http://www.slideshare.net/ecrespo/python-en-android"&gt;slideshare&lt;/a&gt;.&lt;/p&gt;
&lt;iframe allowfullscreen="" frameborder="0" height="485" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/CLQNThHvZHtv9J" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" width="595"&gt; &lt;/iframe&gt;
&lt;p&gt;&lt;div style="margin-bottom:5px"&gt; &lt;strong&gt; &lt;a href="//www.slideshare.net/ecrespo/python-en-android" target="_blank" title="Python en Android"&gt;Python en Android&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href="https://www.slideshare.net/ecrespo" target="_blank"&gt;Ernesto Crespo&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="FLISOL"></category></entry><entry><title>Manejar remotamente un equipo con Debian desde Android con gmote</title><link href="https://ecrespo.github.io/manejar-remotamente-un-equipo-con-debian-desde-android-con-gmote.html" rel="alternate"></link><published>2011-04-08T09:00:00-05:30</published><updated>2011-04-08T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-08:/manejar-remotamente-un-equipo-con-debian-desde-android-con-gmote.html</id><summary type="html">&lt;p&gt;Gmote es una aplicaci&amp;oacute;n hecha en java que permite controlar el rat&amp;oacute;n y el teclado.&lt;/p&gt;
&lt;p&gt;El enlace de gmote es esta &lt;a href="http://www.gmote.org/"&gt;aqu&amp;iacute;&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img alt="P&amp;aacute;gina de gmote" src="./images/gmote1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para instalarlo en android se busca en el market gmote y ah&amp;iacute; se consigue como lo muestra la figura.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Market android" src="./images/marketandroid.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al tenerlo instalado en el android s&amp;oacute;lo falta bajar …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Gmote es una aplicaci&amp;oacute;n hecha en java que permite controlar el rat&amp;oacute;n y el teclado.&lt;/p&gt;
&lt;p&gt;El enlace de gmote es esta &lt;a href="http://www.gmote.org/"&gt;aqu&amp;iacute;&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img alt="P&amp;aacute;gina de gmote" src="./images/gmote1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para instalarlo en android se busca en el market gmote y ah&amp;iacute; se consigue como lo muestra la figura.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Market android" src="./images/marketandroid.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al tenerlo instalado en el android s&amp;oacute;lo falta bajar la aplicaci&amp;oacute;n para Linux en el siguiente &lt;a href="http://marcsto.googlepages.com/GmoteServerLinux2.0.0.tar.gz"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Al descomprimir el archivo se ejecuta GmoteServer.sh.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gmote Server " src="./images/gmoteserver.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se configura el acceso a wifi del Android.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gmote Android" src="./images/gmoteandroid.png"/&gt;&lt;/p&gt;
&lt;p&gt;En el equipo con Android se busca en las aplicaciones y se ejecuta gmote.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Aplicaciones Android" src="./images/appsandroid.png"/&gt;&lt;/p&gt;
&lt;p&gt;Aparece la  parte de control de reproductor de m&amp;uacute;sica se presione men&amp;uacute; en el celular y aparece entre las opciones Touchpad.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gmote touchpad" src="./images/gmotetouchpad1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al presionar TouchPad ya se tiene control del rat&amp;oacute;n en el computador.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gmote resultado" src="./images/gmoteresultado.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle clip al s&amp;iacute;mbolo del teclado nos permite escribir remotamente en el computador.&lt;/p&gt;
&lt;p&gt;Esta opci&amp;oacute;n de gmote es &amp;uacute;til para manejar presentaciones de forma remota.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Linux"></category><category term="Debian"></category><category term="gnome"></category></entry><entry><title>Control remoto del reproductor de música en Debian desde Android</title><link href="https://ecrespo.github.io/control-remoto-del-reproductor-de-musica-en-debian-desde-android.html" rel="alternate"></link><published>2011-04-03T09:00:00-05:30</published><updated>2011-04-03T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-03:/control-remoto-del-reproductor-de-musica-en-debian-desde-android.html</id><summary type="html">&lt;p&gt;Buscando aplicaciones para control remoto de reproductores de m&amp;uacute;sica en Linux desde Android me encontre con &lt;a href="http://sourceforge.net/apps/trac/android-tesla/"&gt;tesla&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalar tesla en el celular se pueden bajar  el archivo apk desde &lt;a href="http://andappstore.com/AndroidApplications/apps/186356"&gt;andAppStore&lt;/a&gt;.
En su equipo con Debian es necesario instalar openssh y libpam-ck-connector.
aptitude install libpam-ck-connector openssh-server openssh-client openssh-blacklist-extra openssh-blacklist&lt;/p&gt;
&lt;p&gt;Es …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Buscando aplicaciones para control remoto de reproductores de m&amp;uacute;sica en Linux desde Android me encontre con &lt;a href="http://sourceforge.net/apps/trac/android-tesla/"&gt;tesla&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para instalar tesla en el celular se pueden bajar  el archivo apk desde &lt;a href="http://andappstore.com/AndroidApplications/apps/186356"&gt;andAppStore&lt;/a&gt;.
En su equipo con Debian es necesario instalar openssh y libpam-ck-connector.
aptitude install libpam-ck-connector openssh-server openssh-client openssh-blacklist-extra openssh-blacklist&lt;/p&gt;
&lt;p&gt;Es necesario reiniciar ssh.
&lt;code&gt;/etc/init.d/ssh restart.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se tiene que conectar el celular a una red wifi igual que su computador.&lt;/p&gt;
&lt;p&gt;Al iniciar tesla en el celular le pedir&amp;aacute; la direcci&amp;oacute;n IP de su computador, el usuario con el cual se inicia sesi&amp;oacute;n y su clave como lo muestra la figura.&lt;/p&gt;
&lt;p&gt;&lt;img alt="App tesla - setup" src="./images/tesla1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se puede seleccionar otros reproductores que funcionan en Linux antes de darle conectar a la aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="App tesla - control" src="./images/tesla2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente imagen muestra a tesla funcionando en el celular y luego el productor Rhythmbox.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Reproductor de musica Rhythmbox" src="./images/reproductormusica.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Linux"></category><category term="Debian"></category><category term="gnome"></category></entry><entry><title>Introducción a webview en Android con python</title><link href="https://ecrespo.github.io/introduccion-a-webview-en-android-con-python.html" rel="alternate"></link><published>2011-04-02T11:00:00-05:30</published><updated>2011-04-02T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-02:/introduccion-a-webview-en-android-con-python.html</id><summary type="html">&lt;p&gt;La serie de widgets del SL4A que se ha explicado en el blog no son suficientes para realizar aplicaciones tal como las que se bajan del market de Android, pues existe una forma de aumentar las posibilidades en interfaz gr&amp;aacute;fica para Android y es usando webview.&lt;/p&gt;
&lt;p&gt;Webview permite visualizar p&amp;aacute;ginas …&lt;/p&gt;</summary><content type="html">&lt;p&gt;La serie de widgets del SL4A que se ha explicado en el blog no son suficientes para realizar aplicaciones tal como las que se bajan del market de Android, pues existe una forma de aumentar las posibilidades en interfaz gr&amp;aacute;fica para Android y es usando webview.&lt;/p&gt;
&lt;p&gt;Webview permite visualizar p&amp;aacute;ginas html con contenidos en javascript.&lt;/p&gt;
&lt;p&gt;En la p&amp;aacute;gina de SL4A tienen una introducci&amp;oacute;n sobre &lt;a href="http://code.google.com/p/android-scripting/wiki/UsingWebView"&gt;webview&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se tiene un archivo html llamado text_to_speech.html con c&amp;oacute;digo javascript, es un formulario html  donde se le pasa un texto a reproducir.&lt;/p&gt;
&lt;p&gt;&lt;img alt="html con javascript speech.html" src="./images/webview3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luego se tiene el c&amp;oacute;digo python en un archivo llamado webview.py. Se crea la instancia de android, se abre el archivo text_to_speech2.html, se espera por el evento tomando el resultado y reproduciendolo con text to speech.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
import android
droid = android.Android()
droid.webViewShow('file:///sdcard/sl4a/scripts/text_to_speech2.html')
while True:
  result = droid.waitForEvent('say').result
  droid.ttsSpeak(result['data'])&lt;/code&gt;
&lt;img alt="script Python android" src="./images/webview4.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente imagen muestra la pantalla de la p&amp;aacute;gina web.&lt;/p&gt;
&lt;p&gt;&lt;img alt="wepapp" src="./images/webview1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Y la figura donde se muestra que se escribi&amp;oacute; un texto en el formulario, al darle clip al bot&amp;oacute;n el celular reproduce el texto que se le paso al formulario.&lt;/p&gt;
&lt;p&gt;&lt;img alt="wepapp demo" src="./images/webview2.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category><category term="webview"></category></entry><entry><title>Widgets en Android con python. Parte 9 (selección multiple)</title><link href="https://ecrespo.github.io/widgets-en-android-con-python-parte-9-seleccion-multiple.html" rel="alternate"></link><published>2011-04-02T10:00:00-05:30</published><updated>2011-04-02T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-02:/widgets-en-android-con-python-parte-9-seleccion-multiple.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo explico como usar el widget de selecci&amp;oacute;n multiple con botones, es inicialmente el mismo c&amp;oacute;digo del [art&amp;iacute;culo anterior] lo que cambie es que se usa el m&amp;eacute;todo dialogSetMultiChoiceItems.&lt;/p&gt;
&lt;p&gt;En este ejemplo luego de seleccionar algunas ciudades se abre una ventana de dialogo mostrando las ciudades seleccionadas.&lt;/p&gt;
&lt;p&gt;El …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo explico como usar el widget de selecci&amp;oacute;n multiple con botones, es inicialmente el mismo c&amp;oacute;digo del [art&amp;iacute;culo anterior] lo que cambie es que se usa el m&amp;eacute;todo dialogSetMultiChoiceItems.&lt;/p&gt;
&lt;p&gt;En este ejemplo luego de seleccionar algunas ciudades se abre una ventana de dialogo mostrando las ciudades seleccionadas.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importan los modulos android y time."&gt;Se importan los m&amp;oacute;dulos android y time.&lt;/h1&gt;
&lt;p&gt;import android, time&lt;/p&gt;
&lt;h1 id="se crea la instancia de la clase android"&gt;Se crea la instancia de la clase android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se crea el titulo de la ventana"&gt;Se crea el t&amp;iacute;tulo de la ventana&lt;/h1&gt;
&lt;p&gt;titulo = "Seleccione las ciudades de su preferencia"&lt;/p&gt;
&lt;h1 id="se crea una lista de ciudades"&gt;Se crea una lista de ciudades&lt;/h1&gt;
&lt;p&gt;ciudades = ['Valencia','Barquisimeto','Merida','Caracas','Maracaibo','Maracay','Margarita']&lt;/p&gt;
&lt;h1 id="se crea la ventana de alerta con el titulo asociado"&gt;Se crea la ventana de alerta con el t&amp;iacute;tulo asociado&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateAlert(titulo)&lt;/p&gt;
&lt;h1 id="se crea el widget de seleccion multiple"&gt;Se crea el widget de selecci&amp;oacute;n multiple&lt;/h1&gt;
&lt;p&gt;droid.dialogSetMultiChoiceItems(ciudades)&lt;/p&gt;
&lt;h1 id="se crea el boton seleccionar"&gt;Se crea el bot&amp;oacute;n seleccionar&lt;/h1&gt;
&lt;p&gt;droid.dialogSetPositiveButtonText('Seleccionar')&lt;/p&gt;
&lt;h1 id="se crea el boton salir"&gt;Se crea el bot&amp;oacute;n salir&lt;/h1&gt;
&lt;p&gt;droid.dialogSetNegativeButtonText('Salir')&lt;/p&gt;
&lt;h1 id="se muestra la ventana"&gt;Se muestra la ventana&lt;/h1&gt;
&lt;p&gt;droid.dialogShow()&lt;/p&gt;
&lt;h1 id="se captura la respuesta de los botones"&gt;Se captura la respuesta de los botones&lt;/h1&gt;
&lt;p&gt;respuesta  = droid.dialogGetResponse().result&lt;/p&gt;
&lt;h1 id="se captura los items seleccioandos"&gt;Se captura los items seleccioandos&lt;/h1&gt;
&lt;p&gt;items = droid.dialogGetSelectedItems()&lt;/p&gt;
&lt;h1 id="si se da clip al boton seleccionar se"&gt;Si se da clip al bot&amp;oacute;n seleccionar se&lt;/h1&gt;
&lt;p&gt;if  respuesta['which'] == "positive":
    #Se averigua si no se selecciono una ciudad y devuelve un mensaje
    if len(items[1]) == 0:
        droid.dialogCreateAlert("No se selecciono ciudad alguna")
    elif len(items[1]) &amp;gt; 0:
    #Si se selecciona una ciuad o m&amp;aacute;s se agrega a una variable texto las ciudades separadas por coma
        lista = []
        texto = ""
        cantidad = len(items[1])
        c = 1
        for i in items[1]:
            lista.append(ciudades[int(i)])
            if c &amp;lt;&amp;gt; cantidad:
                #Si no es el &amp;uacute;ltimo elemento se agrega al final la coma.
                texto = texto + ciudades[int(i)] + ","
            else:
                #Si es el &amp;uacute;ltimo elemento se agrega sin colocar la coma al final.
                texto = texto + ciudades[int(i)]
            c = c+1
        #Se crea la ventana de dialogo con la info de las ciudades
        droid.dialogCreateAlert("Ciudades seleccionada: %s" %texto)
else:
     #Si se le dio clip al bot&amp;oacute;n salir se muestra un mensaje y se sale de la aplicaci&amp;oacute;n
    droid.dialogCreateAlert("Saliendo de la aplicacion")&lt;/p&gt;
&lt;h1 id="se crea el boton aceptar"&gt;Se crea el bot&amp;oacute;n aceptar&lt;/h1&gt;
&lt;p&gt;droid.dialogSetPositiveButtonText('Aceptar')&lt;/p&gt;
&lt;h1 id="se muestra la ventana_1"&gt;Se muestra la ventana&lt;/h1&gt;
&lt;p&gt;droid.dialogShow()
```&lt;/p&gt;
&lt;p&gt;La 2 siguientes im&amp;aacute;genes muestran la ventana de selecci&amp;oacute;n de ciudades y luego la ventana del resultado.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Selecci&amp;oacute;n multiple ciudad" src="./images/pythonandroid12.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Selecci&amp;oacute;n multiple ciudad - resultado" src="./images/pythonandroid13.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo QR del ejemplo de selecci&amp;oacute;n multiple se muestra en la siguiente imagen:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo QR Selecci&amp;oacute;n multiple" src="./images/seleccionmultiple.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo QR del ejemplo de selecci&amp;oacute;n simple con botones.&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo QR Selecci&amp;oacute;n simple con botones" src="./images/seleccionsimple2.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Widgets en Android con python. Parte 8 (selección simple y botones)</title><link href="https://ecrespo.github.io/widgets-en-android-con-python-parte-8-seleccion-simple-y-botones.html" rel="alternate"></link><published>2011-04-02T09:00:00-05:30</published><updated>2011-04-02T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-04-02:/widgets-en-android-con-python-parte-8-seleccion-simple-y-botones.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre los &lt;a href="https://www.seraph.to/category/tutorial-python-en-android.html"&gt;widgets de Android&lt;/a&gt;, ahora se agregar&amp;aacute; una mejora al de &lt;a href="https://www.seraph.to/widgets-en-android-con-python-parte-7-seleccion-simple.html#widgets-en-android-con-python-parte-7-seleccion-simple"&gt;selecci&amp;oacute;n simple&lt;/a&gt;. Se le incluir&amp;aacute; 2 botones, uno de seleccionar y otro para salir.&lt;/p&gt;
&lt;p&gt;El ejemplo muestra una serie de ciudades, se selecciona una y luego se le da el bot&amp;oacute;n seleccionar, al final …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos sobre los &lt;a href="https://www.seraph.to/category/tutorial-python-en-android.html"&gt;widgets de Android&lt;/a&gt;, ahora se agregar&amp;aacute; una mejora al de &lt;a href="https://www.seraph.to/widgets-en-android-con-python-parte-7-seleccion-simple.html#widgets-en-android-con-python-parte-7-seleccion-simple"&gt;selecci&amp;oacute;n simple&lt;/a&gt;. Se le incluir&amp;aacute; 2 botones, uno de seleccionar y otro para salir.&lt;/p&gt;
&lt;p&gt;El ejemplo muestra una serie de ciudades, se selecciona una y luego se le da el bot&amp;oacute;n seleccionar, al final se muestra la ciudad que se ha seleccionado.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa el modulo android y time"&gt;Se importa el m&amp;oacute;dulo android y time&lt;/h1&gt;
&lt;p&gt;import android, time&lt;/p&gt;
&lt;h1 id="se crea una instancia de la clase android"&gt;Se crea una instancia de la clase android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se define el titulo de la ventana"&gt;Se define el t&amp;iacute;tulo de la ventana&lt;/h1&gt;
&lt;p&gt;titulo = "Seleccione una ciudad"&lt;/p&gt;
&lt;h1 id="se define una lista con las ciudades a seleccionar"&gt;Se define una lista con las ciudades a seleccionar&lt;/h1&gt;
&lt;p&gt;ciudades = ['Valencia','Barquisimeto','Merida','Caracas']&lt;/p&gt;
&lt;h1 id="se crea la ventana con el titulo"&gt;Se crea la ventana con el t&amp;iacute;tulo&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateAlert(titulo)&lt;/p&gt;
&lt;h1 id="se agrega las ciudades a la lista de seleccion"&gt;Se agrega las ciudades a la lista de selecci&amp;oacute;n&lt;/h1&gt;
&lt;p&gt;droid.dialogSetSingleChoiceItems(ciudades)&lt;/p&gt;
&lt;h1 id="se agrega el boton seleccionar"&gt;Se agrega el bot&amp;oacute;n seleccionar&lt;/h1&gt;
&lt;p&gt;droid.dialogSetPositiveButtonText('Seleccionar')&lt;/p&gt;
&lt;h1 id="se agrega el boton salir"&gt;Se agrega el bot&amp;oacute;n salir&lt;/h1&gt;
&lt;p&gt;droid.dialogSetNegativeButtonText('Salir')&lt;/p&gt;
&lt;h1 id="se muestra la ventana de dialogo"&gt;Se muestra la ventana de dialogo&lt;/h1&gt;
&lt;p&gt;droid.dialogShow()&lt;/p&gt;
&lt;h1 id="se captura la respuesta de los botones"&gt;Se captura la respuesta de los botones&lt;/h1&gt;
&lt;p&gt;respuesta  = droid.dialogGetResponse().result&lt;/p&gt;
&lt;h1 id="se captura la ciudad seleccionada, se captura el numero en la lista."&gt;Se captura la ciudad seleccionada, se captura el n&amp;uacute;mero en la lista.&lt;/h1&gt;
&lt;h1 id="items es una lista de eventos, el valor 1 guarda el resultado de una lista y como se selecciono"&gt;Items es una lista de eventos, el valor 1 guarda el resultado de una lista y como se selecciono&lt;/h1&gt;
&lt;h1 id="un solo elemento se solicita el valor cero de esa lista para tener el item seleccionado."&gt;un solo elemento se solicita el valor cero de esa lista para tener el item seleccionado.&lt;/h1&gt;
&lt;p&gt;items = droid.dialogGetSelectedItems()&lt;/p&gt;
&lt;h1 id="se el boton que se le da clip es seleccionar se busca que ciudad se selecciono."&gt;Se el bot&amp;oacute;n que se le da clip es seleccionar se busca que ciudad se selecciono.&lt;/h1&gt;
&lt;p&gt;if  respuesta['which'] == "positive":
     #Se muestra un mensaje de la ciudad seleccionada,
    droid.makeToast("La ciudad seleccionada es: %s " %ciudades[int(items[1][0])])
    time.sleep(2)
else:
    #Si se seleciono el bot&amp;oacute;n salir se muestra un mensaje al respecto.
    droid.makeToast("Saliendo del programa")
    time.sleep(2)
```&lt;/p&gt;
&lt;p&gt;En la figura se muestra las ciudades a seleccionar con los botones seleccionar y salir.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Selecci&amp;oacute;n simple ciudad" src="./images/seleccionciudad.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Lazarillo -Traductor de castellano y operaciones matemáticas al alfabeto Braille</title><link href="https://ecrespo.github.io/lazarillo-traductor-de-castellano-y-operaciones-matematicas-al-alfabeto-braille.html" rel="alternate"></link><published>2011-03-08T09:00:00-05:30</published><updated>2011-03-08T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-03-08:/lazarillo-traductor-de-castellano-y-operaciones-matematicas-al-alfabeto-braille.html</id><summary type="html">&lt;p&gt;El d&amp;iacute;a de hoy se subio en google code el programa para traducir del alfabeto castellano y operaciones matem&amp;aacute;ticas al alfabeto Braille.&lt;/p&gt;
&lt;p&gt;Como dice la descripci&amp;oacute;n del proyecto en google code:&lt;/p&gt;
&lt;p&gt;Lazarillo es un traductor de alfabeto castellano y operaciones matem&amp;aacute;ticas al alfabeto Braille. El objetivo de Lazarillo es ser …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El d&amp;iacute;a de hoy se subio en google code el programa para traducir del alfabeto castellano y operaciones matem&amp;aacute;ticas al alfabeto Braille.&lt;/p&gt;
&lt;p&gt;Como dice la descripci&amp;oacute;n del proyecto en google code:&lt;/p&gt;
&lt;p&gt;Lazarillo es un traductor de alfabeto castellano y operaciones matem&amp;aacute;ticas al alfabeto Braille. El objetivo de Lazarillo es ser un editor f&amp;aacute;cil y sencillo de usar para que el usuario realize las traducciones sin dificultad.&lt;/p&gt;
&lt;p&gt;Este programa es desarrollado por Andreina Mejia.&lt;/p&gt;
&lt;p&gt;Hasta ahora ha sido probado en Debian Squeeze.  Se espera subir un deb y que aparezca el programa en PyPi de python.&lt;/p&gt;
&lt;p&gt;El enlace de enlace del &lt;a href="http://code.google.com/p/lazarillo-traductor/"&gt;proyecto Lazarillo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para bajar la versi&amp;oacute;n 1.2 lo pueden hacer desde este &lt;a href="https://code.google.com/p/lazarillo-traductor/downloads/detail?name=Lazarillo-1.2.tar.gz&amp;amp;can=2&amp;amp;q="&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Python"></category><category term="Accesibilidad"></category></entry><entry><title>Configurando un agente snmp en linux, haciendo consultas y scripts en python para manejar información snmp</title><link href="https://ecrespo.github.io/configurando-un-agente-snmp-en-linux-haciendo-consultas-y-scripts-en-python-para-manejar-informacion-snmp.html" rel="alternate"></link><published>2011-03-05T09:00:00-05:30</published><updated>2011-03-05T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-03-05:/configurando-un-agente-snmp-en-linux-haciendo-consultas-y-scripts-en-python-para-manejar-informacion-snmp.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo explicar&amp;eacute; como configurar un agente snmp. El equipo es un BSD  Debian squeeze instalado en una m&amp;aacute;quina virtual  en mi Debian con Virtual Box.&lt;/p&gt;
&lt;p&gt;Ejecuta el comando uname -a para ver que kernel tiene el equipo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GNU/kFreeBSD bsd 8.1-1-686 #0 Tue Jan  4 17:59 …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo explicar&amp;eacute; como configurar un agente snmp. El equipo es un BSD  Debian squeeze instalado en una m&amp;aacute;quina virtual  en mi Debian con Virtual Box.&lt;/p&gt;
&lt;p&gt;Ejecuta el comando uname -a para ver que kernel tiene el equipo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GNU/kFreeBSD bsd 8.1-1-686 #0 Tue Jan  4 17:59:05 UTC 2011 i686 i386 Intel(R) Atom(TM) CPU N270   @ 1.60GHz GNU/kFreeBSD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tiene un Kernel FreeBSD 8.1 para 686.&lt;/p&gt;
&lt;p&gt;La IP del equipo con la interfaz se toma del comando ifconfig em0:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;em0: flags=8843 metric 0 mtu 1500
 options=9b
 ether 8:0:27:d0:71:7e
 inet6 fe80::a00:27ff:fed0:717e%em0 prefixlen 64 scopeid 0x1
 inet 192.168.0.103 netmask 0xffffff00 broadcast 192.168.0.255
 nd6 options=3
 media: Ethernet autoselect (1000baseT )
 status: active&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;La IP es la 192.168.0.103, ac&amp;aacute; se nota claramente que la informaci&amp;oacute;n de la interfaz la maneja de forma diferente a como la maneja Linux.&lt;/p&gt;
&lt;p&gt;Se instalar&amp;aacute;  varias aplicaciones de snmp y python con snmp:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install snmptrapfmt snmptt python-twisted-snmp python-pysnmp4 python-pysnmp4-doc python-pysnmp-common python-pysnmp4-mibs python-pysnmp4-apps python-pysnmp2 python-pysnmp-se python-pynetsnmp python-pyasn1 scli snimpy snmpd snmp libsnmp-python&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se edita el archivo /etc/snmp/snmpd.conf . Para agregar la informaci&amp;oacute;n de contacto.&lt;/p&gt;
&lt;p&gt;SNMP escucha localhost nada m&amp;aacute;s:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;agentAddress  udp:127.0.0.1:161&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Acceso solamente a la informaci&amp;oacute;n del sistema para el community public.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rocommunity public  default    -V systemonly&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Informaci&amp;oacute;n del sistema:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sysLocation    Servidor BSD en maquina virtual de pruebas
sysContact     Ernesto Crespo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Monitoreo de la partici&amp;oacute;n ra&amp;iacute;z si s&amp;oacute;lo queda 10MB levanta un alarma.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;disk       /     10000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Carga del sistema:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;load   12 10 5&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se reinicia el servicio del agente snmp.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;root@bsd:/home/ernesto# /etc/init.d/snmpd restart
Restarting network management services: snmpd.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para verificar el funcionamiento de snmp se realiza una consulta con snmpwalk.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;snmpwalk -v 2c -c public  localhost
iso.3.6.1.2.1.1.1.0 = STRING: "GNU/kFreeBSD bsd 8.1-1-686 #0 Tue Jan  4 17:59:05 UTC 2011 i686"
iso.3.6.1.2.1.1.2.0 = OID: iso.3.6.1.4.1.8072.3.2.255
iso.3.6.1.2.1.1.3.0 = Timeticks: (178) 0:00:01.78
iso.3.6.1.2.1.1.4.0 = STRING: "Ernesto Crespo "
iso.3.6.1.2.1.1.5.0 = STRING: "bsd"
iso.3.6.1.2.1.1.6.0 = STRING: "Servidor BSD en maquina virtual de pruebas"
iso.3.6.1.2.1.1.7.0 = INTEGER: 72
iso.3.6.1.2.1.1.8.0 = Timeticks: (25) 0:00:00.25
iso.3.6.1.2.1.1.9.1.2.1 = OID: iso.3.6.1.6.3.10.3.1.1
iso.3.6.1.2.1.1.9.1.2.2 = OID: iso.3.6.1.6.3.11.3.1.1
iso.3.6.1.2.1.1.9.1.2.3 = OID: iso.3.6.1.6.3.15.2.1.1
iso.3.6.1.2.1.1.9.1.2.4 = OID: iso.3.6.1.6.3.1
iso.3.6.1.2.1.1.9.1.2.5 = OID: iso.3.6.1.2.1.49
iso.3.6.1.2.1.1.9.1.2.6 = OID: iso.3.6.1.2.1.4
iso.3.6.1.2.1.1.9.1.2.7 = OID: iso.3.6.1.2.1.50
iso.3.6.1.2.1.1.9.1.2.8 = OID: iso.3.6.1.6.3.16.2.2.1
iso.3.6.1.2.1.1.9.1.3.1 = STRING: "The SNMP Management Architecture MIB."
iso.3.6.1.2.1.1.9.1.3.2 = STRING: "The MIB for Message Processing and Dispatching."
iso.3.6.1.2.1.1.9.1.3.3 = STRING: "The management information definitions for the SNMP User-based Security Model."
iso.3.6.1.2.1.1.9.1.3.4 = STRING: "The MIB module for SNMPv2 entities"
iso.3.6.1.2.1.1.9.1.3.5 = STRING: "The MIB module for managing TCP implementations"
iso.3.6.1.2.1.1.9.1.3.6 = STRING: "The MIB module for managing IP and ICMP implementations"
iso.3.6.1.2.1.1.9.1.3.7 = STRING: "The MIB module for managing UDP implementations"
iso.3.6.1.2.1.1.9.1.3.8 = STRING: "View-based Access Control Model for SNMP."
iso.3.6.1.2.1.1.9.1.4.1 = Timeticks: (9) 0:00:00.09
iso.3.6.1.2.1.1.9.1.4.2 = Timeticks: (9) 0:00:00.09
iso.3.6.1.2.1.1.9.1.4.3 = Timeticks: (9) 0:00:00.09
iso.3.6.1.2.1.1.9.1.4.4 = Timeticks: (18) 0:00:00.18
iso.3.6.1.2.1.1.9.1.4.5 = Timeticks: (18) 0:00:00.18
iso.3.6.1.2.1.1.9.1.4.6 = Timeticks: (20) 0:00:00.20
iso.3.6.1.2.1.1.9.1.4.7 = Timeticks: (22) 0:00:00.22
iso.3.6.1.2.1.1.9.1.4.8 = Timeticks: (24) 0:00:00.24
iso.3.6.1.2.1.25.1.1.0 = Timeticks: (653703) 1:48:57.03
iso.3.6.1.2.1.25.1.2.0 = Hex-STRING: 07 DB 03 05 0A 11 37 00 2D 04 1E
iso.3.6.1.2.1.25.1.3.0 = INTEGER: 1536
iso.3.6.1.2.1.25.1.5.0 = Gauge32: 11&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se le da full acceso al community public para revisar toda la informaci&amp;oacute;n que maneja el agente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rocommunity public  localhost&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al consultar con snmpwalk ahora devuelve m&amp;aacute;s informaci&amp;oacute;n como la interfaz de red por ejemplo.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iso.3.6.1.2.1.1.1.0 = STRING: "GNU/kFreeBSD bsd 8.1-1-686 #0 Tue Jan  4 17:59:05 UTC 2011 i686"
iso.3.6.1.2.1.1.2.0 = OID: iso.3.6.1.4.1.8072.3.2.255
iso.3.6.1.2.1.1.3.0 = Timeticks: (632) 0:00:06.32
iso.3.6.1.2.1.1.4.0 = STRING: "Ernesto Crespo "
iso.3.6.1.2.1.1.5.0 = STRING: "bsd"
iso.3.6.1.2.1.1.6.0 = STRING: "Servidor BSD en maquina virtual de pruebas"
iso.3.6.1.2.1.1.7.0 = INTEGER: 72
iso.3.6.1.2.1.1.8.0 = Timeticks: (10) 0:00:00.10
iso.3.6.1.2.1.1.9.1.2.1 = OID: iso.3.6.1.6.3.10.3.1.1
iso.3.6.1.2.1.1.9.1.2.2 = OID: iso.3.6.1.6.3.11.3.1.1
iso.3.6.1.2.1.1.9.1.2.3 = OID: iso.3.6.1.6.3.15.2.1.1
iso.3.6.1.2.1.1.9.1.2.4 = OID: iso.3.6.1.6.3.1
iso.3.6.1.2.1.1.9.1.2.5 = OID: iso.3.6.1.2.1.49
iso.3.6.1.2.1.1.9.1.2.6 = OID: iso.3.6.1.2.1.4
iso.3.6.1.2.1.1.9.1.2.7 = OID: iso.3.6.1.2.1.50
iso.3.6.1.2.1.1.9.1.2.8 = OID: iso.3.6.1.6.3.16.2.2.1
iso.3.6.1.2.1.1.9.1.3.1 = STRING: "The SNMP Management Architecture MIB."
iso.3.6.1.2.1.1.9.1.3.2 = STRING: "The MIB for Message Processing and Dispatching."
iso.3.6.1.2.1.1.9.1.3.3 = STRING: "The management information definitions for the SNMP User-based Security Model."
iso.3.6.1.2.1.1.9.1.3.4 = STRING: "The MIB module for SNMPv2 entities"
iso.3.6.1.2.1.1.9.1.3.5 = STRING: "The MIB module for managing TCP implementations"
iso.3.6.1.2.1.1.9.1.3.6 = STRING: "The MIB module for managing IP and ICMP implementations"
iso.3.6.1.2.1.1.9.1.3.7 = STRING: "The MIB module for managing UDP implementations"
iso.3.6.1.2.1.1.9.1.3.8 = STRING: "View-based Access Control Model for SNMP."
iso.3.6.1.2.1.1.9.1.4.1 = Timeticks: (5) 0:00:00.05
iso.3.6.1.2.1.1.9.1.4.2 = Timeticks: (5) 0:00:00.05
iso.3.6.1.2.1.1.9.1.4.3 = Timeticks: (5) 0:00:00.05
iso.3.6.1.2.1.1.9.1.4.4 = Timeticks: (7) 0:00:00.07
iso.3.6.1.2.1.1.9.1.4.5 = Timeticks: (7) 0:00:00.07
iso.3.6.1.2.1.1.9.1.4.6 = Timeticks: (8) 0:00:00.08
iso.3.6.1.2.1.1.9.1.4.7 = Timeticks: (9) 0:00:00.09
iso.3.6.1.2.1.1.9.1.4.8 = Timeticks: (10) 0:00:00.10
iso.3.6.1.2.1.2.1.0 = INTEGER: 2
iso.3.6.1.2.1.2.2.1.1.1 = INTEGER: 1
iso.3.6.1.2.1.2.2.1.1.2 = INTEGER: 2
iso.3.6.1.2.1.2.2.1.2.1 = STRING: "em0"
iso.3.6.1.2.1.2.2.1.2.2 = STRING: "lo0"
iso.3.6.1.2.1.2.2.1.3.1 = INTEGER: 6
iso.3.6.1.2.1.2.2.1.3.2 = INTEGER: 24
iso.3.6.1.2.1.2.2.1.4.1 = INTEGER: 1500
iso.3.6.1.2.1.2.2.1.4.2 = INTEGER: 16384
iso.3.6.1.2.1.2.2.1.5.1 = Gauge32: 1000000000
iso.3.6.1.2.1.2.2.1.5.2 = Gauge32: 0
iso.3.6.1.2.1.2.2.1.6.1 = Hex-STRING: 00 00 27 D0 71 7E
iso.3.6.1.2.1.2.2.1.6.2 = ""
iso.3.6.1.2.1.2.2.1.7.1 = INTEGER: 1
iso.3.6.1.2.1.2.2.1.7.2 = INTEGER: 1
iso.3.6.1.2.1.2.2.1.8.1 = INTEGER: 1
iso.3.6.1.2.1.2.2.1.8.2 = INTEGER: 1
iso.3.6.1.2.1.2.2.1.9.1 = Timeticks: (0) 0:00:00.00
iso.3.6.1.2.1.2.2.1.9.2 = Timeticks: (0) 0:00:00.00
iso.3.6.1.2.1.2.2.1.10.1 = Counter32: 17335697
iso.3.6.1.2.1.2.2.1.10.2 = Counter32: 67940
iso.3.6.1.2.1.2.2.1.11.1 = Counter32: 18045
iso.3.6.1.2.1.2.2.1.11.2 = Counter32: 905
iso.3.6.1.2.1.2.2.1.12.1 = Counter32: 0
iso.3.6.1.2.1.2.2.1.12.2 = Counter32: 0
iso.3.6.1.2.1.2.2.1.13.1 = Counter32: 0
iso.3.6.1.2.1.2.2.1.13.2 = Counter32: 0
iso.3.6.1.2.1.2.2.1.14.1 = Counter32: 0
iso.3.6.1.2.1.2.2.1.14.2 = Counter32: 0
iso.3.6.1.2.1.2.2.1.15.1 = Counter32: 0
iso.3.6.1.2.1.2.2.1.15.2 = Counter32: 0
iso.3.6.1.2.1.2.2.1.16.1 = Counter32: 1328839
iso.3.6.1.2.1.2.2.1.16.2 = Counter32: 67940
iso.3.6.1.2.1.2.2.1.17.1 = Counter32: 12837
iso.3.6.1.2.1.2.2.1.17.2 = Counter32: 905
iso.3.6.1.2.1.2.2.1.18.1 = Counter32: 0
iso.3.6.1.2.1.2.2.1.18.2 = Counter32: 0
iso.3.6.1.2.1.2.2.1.19.1 = Counter32: 0
iso.3.6.1.2.1.2.2.1.19.2 = Counter32: 0
iso.3.6.1.2.1.2.2.1.20.1 = Counter32: 0
iso.3.6.1.2.1.2.2.1.20.2 = Counter32: 0
iso.3.6.1.2.1.2.2.1.21.1 = Gauge32: 0
iso.3.6.1.2.1.2.2.1.21.2 = Gauge32: 0
iso.3.6.1.2.1.2.2.1.22.1 = OID: ccitt.0
iso.3.6.1.2.1.2.2.1.22.2 = OID: ccitt.0
iso.3.6.1.2.1.3.1.1.1.1.1.192.168.0.1 = INTEGER: 1
iso.3.6.1.2.1.3.1.1.1.1.1.192.168.0.101 = INTEGER: 1
iso.3.6.1.2.1.3.1.1.1.1.1.192.168.0.103 = INTEGER: 1
iso.3.6.1.2.1.3.1.1.2.1.1.192.168.0.1 = Hex-STRING: F0 7D 68 52 BB 8E
iso.3.6.1.2.1.3.1.1.2.1.1.192.168.0.101 = Hex-STRING: 00 26 82 54 FE 89
iso.3.6.1.2.1.3.1.1.2.1.1.192.168.0.103 = Hex-STRING: 08 00 27 D0 71 7E
iso.3.6.1.2.1.3.1.1.3.1.1.192.168.0.1 = IpAddress: 192.168.0.1
iso.3.6.1.2.1.3.1.1.3.1.1.192.168.0.101 = IpAddress: 192.168.0.101
iso.3.6.1.2.1.3.1.1.3.1.1.192.168.0.103 = IpAddress: 192.168.0.103
iso.3.6.1.2.1.4.1.0 = INTEGER: 2
iso.3.6.1.2.1.4.2.0 = INTEGER: 64
iso.3.6.1.2.1.4.3.0 = Counter32: 18972
iso.3.6.1.2.1.4.4.0 = Counter32: 0
iso.3.6.1.2.1.4.5.0 = Counter32: 36
iso.3.6.1.2.1.4.6.0 = Counter32: 0
iso.3.6.1.2.1.4.7.0 = Counter32: 179
iso.3.6.1.2.1.4.8.0 = Counter32: 0
iso.3.6.1.2.1.4.9.0 = Counter32: 18757
iso.3.6.1.2.1.4.10.0 = Counter32: 13866
iso.3.6.1.2.1.4.11.0 = Counter32: 0
iso.3.6.1.2.1.4.13.0 = INTEGER: 60
iso.3.6.1.2.1.4.14.0 = Counter32: 0
iso.3.6.1.2.1.4.15.0 = Counter32: 0
iso.3.6.1.2.1.4.16.0 = Counter32: 0
iso.3.6.1.2.1.4.17.0 = Counter32: 0
iso.3.6.1.2.1.4.18.0 = Counter32: 0
iso.3.6.1.2.1.4.19.0 = Counter32: 0
iso.3.6.1.2.1.4.20.1.1.127.0.0.1 = IpAddress: 127.0.0.1
iso.3.6.1.2.1.4.20.1.1.192.168.0.103 = IpAddress: 192.168.0.103
iso.3.6.1.2.1.4.20.1.2.127.0.0.1 = INTEGER: 2
iso.3.6.1.2.1.4.20.1.2.192.168.0.103 = INTEGER: 1
iso.3.6.1.2.1.4.20.1.3.127.0.0.1 = IpAddress: 255.0.0.0
iso.3.6.1.2.1.4.20.1.3.192.168.0.103 = IpAddress: 255.255.255.0
iso.3.6.1.2.1.4.20.1.4.127.0.0.1 = INTEGER: 1
iso.3.6.1.2.1.4.20.1.4.192.168.0.103 = INTEGER: 1
iso.3.6.1.2.1.4.21.1.1.0.0.0.0 = IpAddress: 0.0.0.0
iso.3.6.1.2.1.4.21.1.1.127.0.0.1 = IpAddress: 127.0.0.1
iso.3.6.1.2.1.4.21.1.1.192.168.0.0 = IpAddress: 192.168.0.0
iso.3.6.1.2.1.4.21.1.1.192.168.0.103 = IpAddress: 192.168.0.103
iso.3.6.1.2.1.4.21.1.2.0.0.0.0 = INTEGER: 1
iso.3.6.1.2.1.4.21.1.2.127.0.0.1 = INTEGER: 2
iso.3.6.1.2.1.4.21.1.2.192.168.0.0 = INTEGER: 1
iso.3.6.1.2.1.4.21.1.2.192.168.0.103 = INTEGER: 2
iso.3.6.1.2.1.4.21.1.3.0.0.0.0 = INTEGER: 1
iso.3.6.1.2.1.4.21.1.3.127.0.0.1 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.3.192.168.0.0 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.3.192.168.0.103 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.4.0.0.0.0 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.4.127.0.0.1 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.4.192.168.0.0 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.4.192.168.0.103 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.5.0.0.0.0 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.5.127.0.0.1 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.5.192.168.0.0 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.5.192.168.0.103 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.6.0.0.0.0 = INTEGER: 0
iso.3.6.1.2.1.4.21.1.6.127.0.0.1 = INTEGER: 0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ahora se har&amp;aacute; una consulta snmp desde el interprete de comandos de python.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="se importa el modulo de pysnmp que genera el comando."&gt;Se importa el m&amp;oacute;dulo de pysnmp que genera el comando.&lt;/h1&gt;
&lt;p&gt;from pysnmp.entity.rfc3413.oneliner import cmdgen&lt;/p&gt;
&lt;h1 id="se crea la instancia del generador de comandos snmp"&gt;Se crea la instancia del generador de comandos snmp&lt;/h1&gt;
&lt;p&gt;cg = cmdgen.CommandGenerator()&lt;/p&gt;
&lt;h1 id="se captura los datos del community public."&gt;Se captura los datos del community public.&lt;/h1&gt;
&lt;p&gt;comm_data = cmdgen.CommunityData('my-manager', 'public')&lt;/p&gt;
&lt;h1 id="se conecta al agente snmp desde localhost puerto 161."&gt;Se conecta al agente snmp desde localhost puerto 161.&lt;/h1&gt;
&lt;p&gt;transport = cmdgen.UdpTransportTarget(('127.0.0.1', 161))&lt;/p&gt;
&lt;h1 id="se asocia la variable que tiene la informacion del sistema operativo"&gt;Se asocia la variable que tiene la informaci&amp;oacute;n del sistema operativo&lt;/h1&gt;
&lt;p&gt;variables = (1, 3, 6, 1, 2, 1, 1, 1, 0)&lt;/p&gt;
&lt;h1 id="se ejecuta el comando capturando el resultado y los mensajes de error."&gt;Se ejecuta el comando capturando el resultado y los mensajes de error.&lt;/h1&gt;
&lt;p&gt;errIndication, errStatus, errIndex, result = cg.getCmd(comm_data, transport,variables)&lt;/p&gt;
&lt;h1 id="se presenta en pantalla los mensajes de error."&gt;Se presenta en pantalla los mensajes de error.&lt;/h1&gt;
&lt;p&gt;print errIndication,errStatus,errIndex&lt;/p&gt;
&lt;h1 id="como no hay mensaje de error se presenta en pantalla el resultado del comando."&gt;Como no hay mensaje de error se presenta en pantalla el resultado del comando.&lt;/h1&gt;
&lt;p&gt;print result&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;None 0 0
[(ObjectName('1.3.6.1.2.1.1.1.0'), OctetString('GNU/kFreeBSD bsd 8.1-1-686 #0 Tue Jan  4 17:59:05 UTC 2011 i686'))]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="FreeBSD"></category><category term="Debian"></category><category term="snmp"></category><category term="Python"></category><category term="Redes"></category></entry><entry><title>Ejecutar comandos de forma remota y transferencia de archivos con python</title><link href="https://ecrespo.github.io/ejecutar-comandos-de-forma-remota-y-transferencia-de-archivos-con-python.html" rel="alternate"></link><published>2011-02-09T09:00:00-05:30</published><updated>2011-02-09T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-02-09:/ejecutar-comandos-de-forma-remota-y-transferencia-de-archivos-con-python.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como realizar conexiones ssh de forma autom&amp;aacute;tica  y realizar transferencias de archivos por medio de python.&lt;/p&gt;
&lt;p&gt;Lo primero que se tiene que hacer es crear la clave p&amp;uacute;blica y privada para ssh y as&amp;iacute; poder ejecutar comandos remotos sin necesidad de clave, una gu&amp;iacute;a de como hacerlo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como realizar conexiones ssh de forma autom&amp;aacute;tica  y realizar transferencias de archivos por medio de python.&lt;/p&gt;
&lt;p&gt;Lo primero que se tiene que hacer es crear la clave p&amp;uacute;blica y privada para ssh y as&amp;iacute; poder ejecutar comandos remotos sin necesidad de clave, una gu&amp;iacute;a de como hacerlo la tiene &lt;a href="http://rafael.bonifaz.ec/blog/2011/01/ssh-con-claves-publicas-y-privadas/"&gt;Rafael Bonifaz en su blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El primer ejemplo permite establecer una conexi&amp;oacute;n remota ssh y ejecutar un comando en el equipo remoto.&lt;/p&gt;
&lt;p&gt;```python
!/usr/bin/env python&lt;/p&gt;
&lt;h1 id="programa que ejecuta un comando de forma remota"&gt;Programa que ejecuta un comando de forma remota&lt;/h1&gt;
&lt;h1 id="se importa el modulo paramiko"&gt;Se importa el m&amp;oacute;dulo paramiko&lt;/h1&gt;
&lt;p&gt;import paramiko&lt;/p&gt;
&lt;h1 id="se crea la funcion ssh donde se le pasa el usuario, la ip del equipo remoto, el comando a ejecutar, la clave"&gt;Se crea la funci&amp;oacute;n ssh donde se le pasa el usuario, la IP del equipo remoto, el comando a ejecutar, la clave&lt;/h1&gt;
&lt;h1 id="del usuario en el equipo remoto (en este caso se autentica por llaves), puerto de la conexion ssh y se guarda"&gt;del usuario en el equipo remoto (en este caso se autentica por llaves), puerto de la conexi&amp;oacute;n ssh y se guarda&lt;/h1&gt;
&lt;h1 id="un log de la conexion."&gt;un log de la conexi&amp;oacute;n.&lt;/h1&gt;
&lt;p&gt;def ssh(usuario,hostname,comando,puerto=22,log="paramiko.log"):
        #Se guarda el log
        paramiko.util.log_to_file(log)
        #Se define la ruta donde se encuentra la llave RSA
        llave = "/home/ernesto/.ssh/id_rsa"
        #Se carga la llave RSA
        key = paramiko.RSAKey.from_private_key_file(llave)
        #Se crea la instancia del cliente ssh
        conexion = paramiko.SSHClient()
        #Se carga las llaves del host para validar la autenticaci&amp;oacute;n por llaves.
        conexion.load_system_host_keys()
        #Se establece la conexi&amp;oacute;n pasando la IP, puerto del equipo, el usuario y su clave.
        conexion.connect(hostname,puerto,usuario,pkey=key)
        #Se crea una tupla con la entrada est&amp;aacute;ndar, salida est&amp;aacute;ndar y los mensajes de error al ejecutar el comando.
        stdin,stdout,stderr = conexion.exec_command(comando)
        #Se lee la salida est&amp;aacute;ndar y se presenta la informaci&amp;oacute;n en pantalla.
        print stdout.read()
        #Se cierra la conexi&amp;oacute;n ssh.
        conexion.close()&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
        #Se ejecuta la funci&amp;oacute;n
        ssh("admin","80.13.11.25","ls -l")&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado del comando es el siguiente:&lt;/p&gt;
&lt;p&gt;```
total 93960&lt;/p&gt;
&lt;p&gt;drwxr-xr-x  2 admin admin     4096 feb  3 01:00 prueba
drwxr-xr-x  2 admin admin     4096 may  4  2010 public_html
-rw-r--r--  1 admin admin  3180604 ene 30 16:17 web2py-manual.pdf
```&lt;/p&gt;
&lt;p&gt;Para la transferencia de archivos se usar&amp;aacute; las claves RSA para que no se tenga que pasar la clave del usuario por el script en python. La idea es conectarse al equipo remoto y transferir los archivos que se encuentran en un directorio.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo del programa:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="programa que permite transferir archivos de un equipo remoto al local"&gt;Programa que permite transferir archivos de un equipo remoto al local&lt;/h1&gt;
&lt;h1 id="se importa los modulos paramiko y os."&gt;Se importa los m&amp;oacute;dulos paramiko y os.&lt;/h1&gt;
&lt;p&gt;import paramiko,os&lt;/p&gt;
&lt;h1 id="se crea la funcion recuperar archivo con los argumentos equipo, puerto, usuario y ruta del directorio donde"&gt;Se crea la funci&amp;oacute;n recuperar archivo con los argumentos equipo, puerto, usuario y ruta del directorio donde&lt;/h1&gt;
&lt;h1 id="se encuentran los archivos."&gt;se encuentran los archivos.&lt;/h1&gt;
&lt;p&gt;def recuperar_archivos(equipo,puerto,usuario,dir_path):
    #Se define la ruta donde se encuentra la llave RSA
    llave = "/home/ernesto/.ssh/id_rsa"
    #Se carga las llaves en la variable key
    key = paramiko.RSAKey.from_private_key_file(llave)
    #Se le pasa el equipo y puerto como par&amp;aacute;metro de transporte
    c = paramiko.Transport((equipo,puerto))
    #Se crea la conexi&amp;oacute;n pasando el usuario y la llave RSA.
    c.connect(username=usuario,pkey=key)
    #Se crea la conexi&amp;oacute;n sftp donde se le pasa la conexi&amp;oacute;n definida anteriormente.
    sftp = paramiko.SFTPClient.from_transport(c)
    #Se captura la lista de archivos de la ruta que se le pasa a la funci&amp;oacute;n.
    archivos = sftp.listdir(dir_path)
    #Se presenta un mensaje de recibiendo los archivos y se realiza la transferencia.
    for f in archivos:
        print "Recibiendo ",f
        sftp.get(os.path.join(dir_path,f),f)
    #Al finalizar se cierra la conexi&amp;oacute;n.
    c.close()&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Se ejecuta la funci&amp;oacute;n donde se le pasa la IP del equipo remoto con el puerto, luego el usuario y la ruta de
    #los archivos a transferir.
    recuperar_archivos("80.13.11.25",22,"admin","/home/admin/prueba/")&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Recibiendo  control-python.pdf
Recibiendo  web2py-manual.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Paramiko"></category><category term="Python"></category><category term="ssh"></category></entry><entry><title>Accesibilidad en squeeze</title><link href="https://ecrespo.github.io/accesibilidad-en-squeeze.html" rel="alternate"></link><published>2011-02-06T09:00:00-05:30</published><updated>2011-02-06T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-02-06:/accesibilidad-en-squeeze.html</id><summary type="html">&lt;p&gt;Desde que se inicio el desarrollo de squeeze ten&amp;iacute;a claro que vendr&amp;iacute;an mejoras en el proceso de accesibilidad en el instalador de Debian. Con Lenny se pod&amp;iacute;a usar una lectora Braille USB sin problemas en el proceso de instalaci&amp;oacute;n en modo texto y gr&amp;aacute;fico.&lt;/p&gt;
&lt;p&gt;Con la versi&amp;oacute;n de squeeze incluso …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Desde que se inicio el desarrollo de squeeze ten&amp;iacute;a claro que vendr&amp;iacute;an mejoras en el proceso de accesibilidad en el instalador de Debian. Con Lenny se pod&amp;iacute;a usar una lectora Braille USB sin problemas en el proceso de instalaci&amp;oacute;n en modo texto y gr&amp;aacute;fico.&lt;/p&gt;
&lt;p&gt;Con la versi&amp;oacute;n de squeeze incluso en el documento de instalaci&amp;oacute;n se explica como habilitar la accesibilidad en este proceso, la informaci&amp;oacute;n se encuentra en este &lt;a href="http://www.debian.org/releases/stable/i386/ch05s02.html.es"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n dar&amp;eacute; un breve resumen de la gu&amp;iacute;a:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Dispositivos Braille USB: Estos se detectan autom&amp;aacute;ticamente en el proceso de arranque del instalador gracias a la aplicaci&amp;oacute;n brltty, para m&amp;aacute;s informaci&amp;oacute;n sobre est&amp;aacute; aplicaci&amp;oacute;n pueden visitar el &lt;a href="http://www.mielke.cc/brltty/doc/drivers/"&gt;enlace&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Dispositivos Braille seriales: Para estos dispositivos es necesario pasarle unos par&amp;aacute;metros al kernel al momento de arranque del instalador. La sintaxis es brltty=controlador, puerto,tabla.Donde el puerto por defecto es ttyS0, la lista de controladores la puede encontrar &lt;a href="http://www.mielke.cc/brltty/doc/Manual-BRLTTY/English/BRLTTY-11.html"&gt;aqu&amp;iacute;&lt;/a&gt; y la lista de c&amp;oacute;digos de las tablas &lt;a href="http://www.mielke.cc/brltty/doc/Manual-BRLTTY/English/BRLTTY-6.html"&gt;aqu&amp;iacute;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Dispositivos sintetizadores de voz: Est&amp;aacute; es la mejora que tiene squeeze, ya que ahora se puede reproducir voces en el proceso de instalaci&amp;oacute;n de Debian s&amp;oacute;lo para el instalador gr&amp;aacute;fico; es necesario pasarle unos par&amp;aacute;metros de arranque al cd de instalaci&amp;oacute;n con la siguiente sintaxis: speakup.synth=controlador. La reproducci&amp;oacute;n de las voces se logra por medio de la aplicaci&amp;oacute;n speakup pero es necesario pasarle el tipo de controlador para que pueda reproducir las voces de forma adecuada. En este &lt;a href="http://www.linux-speakup.org/spkguide.txt"&gt;enlace&lt;/a&gt; se encuentra la gu&amp;iacute;a de como usar speakup y la lista de controladores.&lt;/li&gt;
&lt;li&gt;Temas de alto contraste: Para las personas con visi&amp;oacute;n disminuida se puede usar un tema de alto contraste, para habilitarlo en el arranque coloque el siguiente par&amp;aacute;metro theme=dark. Est&amp;aacute; opci&amp;oacute;n ya exist&amp;iacute;a en Lenny en la interfaz gr&amp;aacute;fica del instalador.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Adicionalmente el equipo de Debian ha creado un grupo dedicado a accesibilidad en la personalizaci&amp;oacute;n del cd de Debian, para m&amp;aacute;s informaci&amp;oacute;n visiten el sitio de Debian Pure Blends dedicado a la &lt;a href="http://www.debian.org/devel/debian-accessibility/"&gt;accesibilidad&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Accesibilidad"></category></entry><entry><title>Mejorando la velocidad de consultas de DNS con dnsmasq y probar pruebas de diagnostico</title><link href="https://ecrespo.github.io/mejorando-la-velocidad-de-consultas-de-dns-con-dnsmasq-y-probar-pruebas-de-diagnostico.html" rel="alternate"></link><published>2011-02-03T09:00:00-05:30</published><updated>2011-02-03T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-02-03:/mejorando-la-velocidad-de-consultas-de-dns-con-dnsmasq-y-probar-pruebas-de-diagnostico.html</id><summary type="html">&lt;p&gt;En el art&amp;iacute;culo de hoy se probar&amp;aacute; que al usar dnsmasq como dnscache mejorar&amp;aacute; la conexi&amp;oacute;n a internet en especial cuando se navega por el celular o se tiene una conexi&amp;oacute;n a internet algo lenta. Adicionalmente se mencionar&amp;aacute;n varias herramientas de diagnostico de consultas de DNS como lo son dnstracer …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el art&amp;iacute;culo de hoy se probar&amp;aacute; que al usar dnsmasq como dnscache mejorar&amp;aacute; la conexi&amp;oacute;n a internet en especial cuando se navega por el celular o se tiene una conexi&amp;oacute;n a internet algo lenta. Adicionalmente se mencionar&amp;aacute;n varias herramientas de diagnostico de consultas de DNS como lo son dnstracer, dnswalk, dig, host. Adicionalmente se mostrar&amp;aacute; u par de scripts en python para consultas de DNS.&lt;/p&gt;
&lt;p&gt;Revisar los DNS que usa nuestro equipo:
Los DNS que se est&amp;aacute; usando en el equipo son los DNS de CANTV, esto se puede ver al ejecutar un cat a /etc/resolv.conf&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)"&gt;Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)&lt;/h1&gt;
&lt;h1 id="do not edit this file by hand -- your changes will be overwritten"&gt;DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN&lt;/h1&gt;
&lt;p&gt;nameserver 200.44.32.12
nameserver 200.11.248.12
```&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; informaci&amp;oacute;n es la que maneja los servidores de DHCP de donde se encuentra conectado el equipo.&lt;/p&gt;
&lt;p&gt;Ahora se ejecuta el comando dig el cual una de las informaciones que trae es el tiempo de la consulta.
La consulta se realizo con www.velug.org.ve:&lt;/p&gt;
&lt;p&gt;```
dig www.velug.org.ve&lt;/p&gt;
&lt;p&gt;; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.7.2-P3 &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.velug.org.ve
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 14680
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
&lt;p&gt;;; QUESTION SECTION:
;www.velug.org.ve.  IN A&lt;/p&gt;
&lt;p&gt;;; ANSWER SECTION:
www.velug.org.ve. 3600 IN CNAME libertad.velug.org.ve.
libertad.velug.org.ve. 3600 IN A 150.188.8.196&lt;/p&gt;
&lt;p&gt;;; Query time: 320 msec
;; SERVER: 200.44.32.12#53(200.44.32.12)
;; WHEN: Thu Feb  3 20:59:08 2011
;; MSG SIZE  rcvd: 73
```&lt;/p&gt;
&lt;p&gt;Da como resultado 320 mili segundos.&lt;/p&gt;
&lt;p&gt;Ahora con la herramienta dnstracer se verifica como se resuelven la resoluci&amp;oacute;n de nombres desde el DNS de CANTV saltando por los distintos servidores de nombres.
dnstracer -c -s 200.11.248.12  www.velug.org.ve
La opci&amp;oacute;n -c deshabilita la cache local, -s se le dice cual es el servidor de nombres y luego se le pasa el sitio a consultar.
El resultado es el siguiente:&lt;/p&gt;
&lt;p&gt;```
dnstracer -c -s 200.11.248.12  www.velug.org.ve
Tracing to www.velug.org.ve[a] via 200.11.248.12, maximum of 3 retries
200.11.248.12 (200.11.248.12) Got answer [received type is cname]&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se logro la consulta y se ve que el sitio de velug est&amp;aacute; dentro del entorno de CANTV o nic.ve.&lt;/p&gt;
&lt;p&gt;La siguiente prueba es con la herramienta dnswalk la cual devuelve un resultado de la consulta de DNS.&lt;/p&gt;
&lt;p&gt;```
dnswalk velug.org.ve.&lt;/p&gt;
&lt;p&gt;Checking velug.org.ve.
Getting zone transfer of velug.org.ve. from turpial.velug.org.ve...failed
FAIL: Zone transfer of velug.org.ve. from turpial.velug.org.ve failed: Response code from server: REFUSED
Getting zone transfer of velug.org.ve. from libertad.velug.org.ve...failed
FAIL: Zone transfer of velug.org.ve. from libertad.velug.org.ve failed: connection failed
BAD: All zone transfer attempts of velug.org.ve. failed!
2 failures, 0 warnings, 1 errors.
```&lt;/p&gt;
&lt;p&gt;El resultado es que no acepta transferir la zona de velug.org.ve.&lt;/p&gt;
&lt;p&gt;Ahora a instalar dnsmasq como dnscache.
Para instalarlo se ejecuta aptitude.&lt;/p&gt;
&lt;p&gt;```
aptitude install dnsmasq&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora al revisar el archivo resolv.conf aparece como nameserver el 127.0.0.1.
Al revisar el directorio /etc/resolvconf/resolv.conf.d/ aparece el archivo original que contiene los servidores de nombre de CANTV:&lt;/p&gt;
&lt;p&gt;```
cat original&lt;/p&gt;
&lt;p&gt;domain cantv.net
search cantv.net
nameserver 200.44.32.12
nameserver 200.11.248.12
```
Ahora se vuelve a ejecutar dig al sitio a www.velug.org.ve&lt;/p&gt;
&lt;p&gt;```
dig www.velug.org.ve&lt;/p&gt;
&lt;p&gt;; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.7.2-P3 &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.velug.org.ve
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 40987
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
&lt;p&gt;;; QUESTION SECTION:
;www.velug.org.ve.  IN A&lt;/p&gt;
&lt;p&gt;;; ANSWER SECTION:
www.velug.org.ve. 1250 IN CNAME libertad.velug.org.ve.
libertad.velug.org.ve. 76 IN A 150.188.8.196&lt;/p&gt;
&lt;p&gt;;; Query time: 92 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Thu Feb  3 21:06:08 2011
;; MSG SIZE  rcvd: 73
```&lt;/p&gt;
&lt;p&gt;Ahora devuelve un tiempo de la consulta de 92 milisegundos.&lt;/p&gt;
&lt;p&gt;Se vuelve a ejecutar dnstracer colocando como servidor el servidor dnsmasq con el siguiente resultado:&lt;/p&gt;
&lt;p&gt;```
dnstracer -c -s 127.0.0.1 www.velug.org.ve&lt;/p&gt;
&lt;p&gt;Tracing to www.velug.org.ve[a] via 127.0.0.1, maximum of 3 retries
127.0.0.1 (127.0.0.1) Got answer [received type is cname]
 |_&lt;strong&gt; libertad.velug.org.ve [velug.org.ve] (No IP address)
  _&lt;/strong&gt; turpial.velug.org.ve [velug.org.ve] (150.188.92.2) Got authoritative answer [received type is cname]&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se nota que consulta con el servidor de nombres local y luego devuelve el resultado de la consulta.&lt;/p&gt;
&lt;p&gt;Ahora el siguiente cambio que se realizar&amp;aacute; es usar los DNS p&amp;uacute;blicos de google y los de opendns.com. Esos DNS se agregan en el archivo original antes mencionado.&lt;/p&gt;
&lt;p&gt;Ahora el archivo contiene primero los DNS de google, luego los de opendns y al final los de cantv.&lt;/p&gt;
&lt;p&gt;```
nameserver 8.8.8.8
nameserver 8.8.4.4
nameserver 208.67.222.222
nameserver 208.67.220.220&lt;/p&gt;
&lt;p&gt;domain cantv.net
search cantv.net
nameserver 200.44.32.12
nameserver 200.11.248.12
```&lt;/p&gt;
&lt;p&gt;Se vuelve a realizar una consulta dig pero antes se reinicia el servicio de dnsmasq para evitar que ya se encuentra en cache el sitio de velug.&lt;/p&gt;
&lt;p&gt;```
dig www.velug.org.ve&lt;/p&gt;
&lt;p&gt;; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.7.2-P3 &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.velug.org.ve
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 26497
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0&lt;/p&gt;
&lt;p&gt;;; QUESTION SECTION:
;www.velug.org.ve.  IN A&lt;/p&gt;
&lt;p&gt;;; ANSWER SECTION:
www.velug.org.ve. 3600 IN CNAME libertad.velug.org.ve.
libertad.velug.org.ve. 2907 IN A 150.188.8.196&lt;/p&gt;
&lt;p&gt;;; Query time: 158 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Thu Feb  3 21:14:27 2011
;; MSG SIZE  rcvd: 73
```&lt;/p&gt;
&lt;p&gt;Subio un poco pero al volver a hacer una consulta baja a 0 mili segundos.&lt;/p&gt;
&lt;p&gt;La siguiente herramienta mostrar&amp;aacute; el tr&amp;aacute;fico generado por las consultas de DNS, esa herramienta se llama dnstop.&lt;/p&gt;
&lt;p&gt;```
dnstop -l 4    wlan0&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El comando define niveles de tablas con la opci&amp;oacute;n -l luego se le pasa la interfaz por donde va a escuchar el tr&amp;aacute;fico de DNS.
Las siguiente figura muestra la pantalla que despliega la aplicaci&amp;oacute;n con la opci&amp;oacute;n s que muestra la fuente de la consulta.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop" src="./images/dnsmasq1-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Muestra la IP del servidor local.&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra los DNS de CANTV con la cantidad de consultas realizadas a cada servidor. Esa informaci&amp;oacute;n se ve al presionar la tecla d.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop 2" src="./images/dnsmasq1-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luego se puede ver la cantidad de tablas por niveles de profundidad que se le dio al comando, al presionar el 2 se muestra lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop 3" src="./images/dnsmasq1-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Aqui aparecen los dominios consultados con la cantidad de veces que se usaron.&lt;/p&gt;
&lt;p&gt;Luego al presionar 3 aparecer&amp;aacute; m&amp;aacute;s informaci&amp;oacute;n de dichos sitios:&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop 4" src="./images/dnsmasq1-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente muestra la tabla del nivel 4.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dnstop 5" src="./images/dnsmasq1-5.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para terminar se mostrar&amp;aacute; el uso del m&amp;oacute;dulo python-dns, se crear&amp;aacute; un script en python para consultar los las IPs de varios sitios en internet.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;"""
Nombre: consulta-dns.py
Descripcion: Programa que permite realizar consultas de IPs a sitios en internet
Autor: Ernesto Crespo
Correo: ecrespo@gmail.com
Version:0.1
Licencia: GPLv3.
"""&lt;/p&gt;
&lt;h1 id="se importa el modulo dns para resolver nombres"&gt;Se importa el modulo dns para resolver nombres&lt;/h1&gt;
&lt;p&gt;import dns.resolver&lt;/p&gt;
&lt;h1 id="se crea la lista de sitios a consultar"&gt;Se crea la lista de sitios a consultar&lt;/h1&gt;
&lt;p&gt;sitios  = ["python.org","debian.org","debian.org.ve","velug.org.ve"]&lt;/p&gt;
&lt;h1 id="se crea la funcion consulta que se le pasa la lista de sitios."&gt;Se crea la funcion consulta que se le pasa la lista de sitios.&lt;/h1&gt;
&lt;h1 id="se crea la funcion consulta que se le pasa la lista de sitios._1"&gt;Se crea la funcion consulta que se le pasa la lista de sitios.&lt;/h1&gt;
&lt;p&gt;def consulta(lista=sitios):
    #Se crea un diccionario donde se almacena los resultados
    resultado = {}
    #Se crea un ciclo de los sitios de internet para averiguar las IPs de cada uno
    for equipo in lista:
        #Se crea una lista para las IPs
        ips = []
        #Se consulta la IP del equipo.
        ip = dns.resolver.query(equipo,"A")
        #Si tiene varias IPs se almacena en la lista de IPs
        for i in ip:
            ips.append(str(i))
        #Se guarda las IPs del equipo en el diccionario
        resultado[equipo] = ips
    #Se retorna el diccionario con el resultado
    return resultado&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Se llama a la funcion consulta
    respuesta = consulta()
    #Se toma la lista de equipos de la funcion keys del diccionario donde se recorre en un ciclo.
    for lista in respuesta.keys():
        #Se presenta en pantalla cada sitio con sus IPs
        print lista, respuesta[lista]
```&lt;/p&gt;
&lt;p&gt;El resultado del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debian.org ['206.12.19.7', '128.31.0.51']
python.org ['82.94.164.162']
velug.org.ve ['150.188.92.2']
debian.org.ve ['75.119.207.96']&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="DNS"></category><category term="Debian"></category><category term="dnsmasq"></category><category term="python-dns"></category><category term="Redes"></category></entry><entry><title>Aplicación que muestra las coordenadas del Celular en google maps en el escritorio</title><link href="https://ecrespo.github.io/aplicacion-que-muestra-las-coordenadas-del-celular-en-google-maps-en-el-escritorio.html" rel="alternate"></link><published>2011-01-06T09:00:00-05:30</published><updated>2011-01-06T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-01-06:/aplicacion-que-muestra-las-coordenadas-del-celular-en-google-maps-en-el-escritorio.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se usar&amp;aacute; de base 2 art&amp;iacute;culos anteriores, el primero sobre un navegador web b&amp;aacute;sico con python+gtk+webkit y el segundo el de captura de la localizci&amp;oacute;n del celular con Android.&lt;/p&gt;
&lt;p&gt;La idea es capturar la informaci&amp;oacute;n del GPS del celular y mostrarlo en una aplicaci&amp;oacute;n gtk …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se usar&amp;aacute; de base 2 art&amp;iacute;culos anteriores, el primero sobre un navegador web b&amp;aacute;sico con python+gtk+webkit y el segundo el de captura de la localizci&amp;oacute;n del celular con Android.&lt;/p&gt;
&lt;p&gt;La idea es capturar la informaci&amp;oacute;n del GPS del celular y mostrarlo en una aplicaci&amp;oacute;n gtk gracias a webkit mostrando la ubicaci&amp;oacute;n geogr&amp;aacute;fica gracias a google maps.&lt;/p&gt;
&lt;p&gt;La interfaz en glade se muestra a continuaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Glade webkit - Navegador" src="./images/tutorialpythongtkglade12-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;En realidad es la misma aplicaci&amp;oacute;n del navegador lo &amp;uacute;nico es que se le quito la entrada de texto y el bot&amp;oacute;n de "ir".&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo de la aplicaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python2.6"&gt;!/usr/bin/env python2.6&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;"""
Nombre:Geolocalizacion
Descripci&amp;oacute;n: Programa que captura la localizaci&amp;oacute;n del GPS del Celular y lo
    muestra en google maps en el escritorio Linux.
Versi&amp;oacute;n:0.1
Licencia:GPLv3
Autor: Ernesto Crespo
correo: ecrespo@gmail.com
"""&lt;/p&gt;
&lt;h1 id="import gtk and webkit"&gt;Import gtk and webkit&lt;/h1&gt;
&lt;p&gt;import gtk
import webkit&lt;/p&gt;
&lt;h1 id="importando el modulo android"&gt;Importando el m&amp;oacute;dulo android&lt;/h1&gt;
&lt;p&gt;import android
from time import sleep&lt;/p&gt;
&lt;h1 id="class app"&gt;class App&lt;/h1&gt;
&lt;p&gt;class App:
    def &lt;strong&gt;init&lt;/strong&gt;(self):
        #Constructor
        #Se asocia el archivo glade al Builder
        self.glade_file = "geolocalizcion.glade"
        self.glade = gtk.Builder()
        self.glade.add_from_file(self.glade_file)
        #Se asocia la ventana geo
        self.window = self.glade.get_object('geo')
        #Se asocia el bot&amp;oacute;n salir
        self.exit = self.glade.get_object('salir')
        #Se asocia la ventana deslizante
        self.scrolledwindow1 = self.glade.get_object('scrolledwindow1')
        #
        #Se conecta el evento destruir
        self.window.connect("destroy",self.on_geo_destroy)
        #Se asocia el evento del bot&amp;oacute;n salir
        self.exit.connect('clicked', self.on_salir_clicked)
        #Se abre la p&amp;aacute;gina de google maps
        #Se instancia la clase webview
        self.webview = webkit.WebView()
        #Se agrega a la ventana deslizante
        self.scrolledwindow1.add(self.webview)
        #Se captura la localizaci&amp;oacute;n
        tupla = localizacion()
        #Se abre el url de google maps pasandole la longitud y latitud
        self.__go("http://maps.google.com/maps?q=%s,%s" %tupla)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se muestra la ventana principal de la aplicaci&amp;oacute;n
    self.window.show_all()


def __go(self,url):
    #Se abre el url
    self.webview.open(url)


def on_geo_destroy(self,*args):
    #Se cierra la apliaci&amp;oacute;n
    gtk.main_quit()

def on_salir_clicked(self,*args):
 #Se cierra la aplicaci&amp;oacute;n
    gtk.main_quit()


def main(self):
    #Se inicia la aplicaci&amp;oacute;n
    gtk.main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;def localizacion():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se crea la instancia de la clase Android
    droid = android.Android()
    #Se inicia la localizacion
    droid.startLocating()
    #Se espera 15 segundos
    sleep(15)
    #Se presenta en la consola la informaci&amp;oacute;n de la localizaci&amp;oacute;n
    #Se maneja la informaci&amp;oacute;n de un diccionario.
    latitud = droid.readLocation().result["network"]["latitude"]
    longitud = droid.readLocation().result["network"]["longitude"]
    #Se detiene la localizaci&amp;oacute;n
    droid.stopLocating()
    #Se retorna la latitud y longitud capturada por medio del GPS del celular.
    return (latitud,longitud)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    app = App()
    app.main()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La figura de la aplicaci&amp;oacute;n funcionando mostrando el mapa y la posici&amp;oacute;n que devuelve el GPS del celular.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Navegador " src="./images/tutorialpythongtkglade12-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category><category term="webkit"></category><category term="Google maps"></category><category term="Android"></category></entry><entry><title>Crear un Navegador web básico con python+gtk+webkit</title><link href="https://ecrespo.github.io/crear-un-navegador-web-basico-con-pythongtkwebkit.html" rel="alternate"></link><published>2011-01-04T09:00:00-05:30</published><updated>2011-01-04T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-01-04:/crear-un-navegador-web-basico-con-pythongtkwebkit.html</id><summary type="html">&lt;p&gt;Volviendo a la programaci&amp;oacute;n con python, glade y gtk; ahora explicare como hacer un navegador sencillo usando webkit en python.&lt;/p&gt;
&lt;p&gt;Este post se basa en el art&amp;iacute;culo del &lt;a href="http://blog.marcelofernandez.info/2009/11/navegador-simple-con-pywebkitgtk/"&gt;Blog de Marcelo&lt;/a&gt;, la diferencia es que el programo sin glade la interfaz gr&amp;aacute;fica.&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la interfaz …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Volviendo a la programaci&amp;oacute;n con python, glade y gtk; ahora explicare como hacer un navegador sencillo usando webkit en python.&lt;/p&gt;
&lt;p&gt;Este post se basa en el art&amp;iacute;culo del &lt;a href="http://blog.marcelofernandez.info/2009/11/navegador-simple-con-pywebkitgtk/"&gt;Blog de Marcelo&lt;/a&gt;, la diferencia es que el programo sin glade la interfaz gr&amp;aacute;fica.&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la interfaz gr&amp;aacute;fica de la aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Glade webkit - Navegador" src="./images/tutorialpythongtkglade11-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La aplicaci&amp;oacute;n simplemente tiene una entrada de texto para el URL donde se le puede dar enter para cargar la p&amp;aacute;gina o al bot&amp;oacute;n de "ir"; la p&amp;aacute;gina se cargar&amp;aacute; en el frame con barras deslizantes en el centro de la interfaz y se tiene un bot&amp;oacute;n para salir del navegador. Por defecto se carga una p&amp;aacute;gina al iniciar la aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importar los modulos gtl y webkit"&gt;Importar los m&amp;oacute;dulos gtl y webkit&lt;/h1&gt;
&lt;p&gt;import gtk
import webkit&lt;/p&gt;
&lt;h1 id="la clase app hereda threading.thread"&gt;La clase App hereda threading.Thread&lt;/h1&gt;
&lt;p&gt;class App:
    def &lt;strong&gt;init&lt;/strong&gt;(self):
     #M&amp;eacute;todo constructor, asociando los widgets
        #Asociar el archivo glade al objeto Builder.
        self.glade_file = "navegador.glade"
        self.glade = gtk.Builder()
        self.glade.add_from_file(self.glade_file)
        #Asociando la ventana del navegador
        self.ventana = self.glade.get_object('navegador')
        #Asociando el boton salir
        self.bsalir = self.glade.get_object('bsalir')
        #Asociando el boton navegar
        self.navegar = self.glade.get_object('navegar')
        #Asociando la entrada de texto del url a navegar
        self.enlace = self.glade.get_object('url')
        #Asociando la ventana con las barras deslizantes
        self.scrolledwindow1 = self.glade.get_object('scrolledwindow1')
        #Conectores
        #Conectar de destruir la ventana principal
        self.ventana.connect("destroy",self.on_navegador_destroy)
        #Conectar del boton salir
        self.bsalir.connect('clicked', self.on_bsalir_clicked)
        #Conector del boton navegar
        self.navegar.connect('clicked',self.on_navegar_clicked)
        #Conector de dar enter a la entrada de texto
        self.enlace.connect('activate',self.on_url_activate)
        #Asociando p&amp;aacute;gina por defecto.
        #Instanciando la clase webview
        self.webview = webkit.WebView()
        #Agregando webview a la ventana con barras deslizantes
        self.scrolledwindow1.add(self.webview)
        #Abriendo una p&amp;aacute;gina por defecto
        self.__navegacion("http://www.debian.org")&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #Se muestra la ventana principal del programa
    self.ventana.show_all()

#Si se da enter a la entrada de texto se captura el url y se navega
def on_url_activate(self,*args):
    url = "http://" + self.enlace.get_text()
    self.__navegacion(url)


#Se abre el url con webview
def __navegacion(self,url):
    self.webview.open(url)


def on_navegador_destroy(self,*args):
    #Se cierra la aplicaci&amp;oacute;n
    gtk.main_quit()

def on_bsalir_clicked(self,*args):
 #Se cierra la aplicaci&amp;oacute;n al darle clip al boton salir.
    gtk.main_quit()

def on_navegar_clicked(self,*args):
    #Se navega el url al darle clip al boton
    url = "http://" + self.enlace.get_text()
    self.__navegacion(url)

def main(self):
 #Inicia la aplicaci&amp;oacute;n
    gtk.main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    app = App()
    app.main()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra el navegador en funcionamiento.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Navegador " src="./images/tutorialpythongtkglade11-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category><category term="webkit"></category></entry><entry><title>2010</title><link href="https://ecrespo.github.io/2010.html" rel="alternate"></link><published>2011-01-03T10:00:00-05:30</published><updated>2011-01-03T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2011-01-03:/2010.html</id><summary type="html">&lt;p&gt;El a&amp;ntilde;o que apenas termina tuvo sus alegr&amp;iacute;as y tristezas; y la m&amp;aacute;s importante es que mi padre que ya no est&amp;aacute; con nosotros.&lt;/p&gt;
&lt;p&gt;Con respecto al blog casi repito la misma cantidad de art&amp;iacute;culos escritos que en el a&amp;ntilde;o 2009 por uno s&amp;oacute;lo no igualo la cifra.&lt;/p&gt;
&lt;p&gt;Me hab&amp;iacute;a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El a&amp;ntilde;o que apenas termina tuvo sus alegr&amp;iacute;as y tristezas; y la m&amp;aacute;s importante es que mi padre que ya no est&amp;aacute; con nosotros.&lt;/p&gt;
&lt;p&gt;Con respecto al blog casi repito la misma cantidad de art&amp;iacute;culos escritos que en el a&amp;ntilde;o 2009 por uno s&amp;oacute;lo no igualo la cifra.&lt;/p&gt;
&lt;p&gt;Me hab&amp;iacute;a prometido escribir 48 art&amp;iacute;culos pero por diversas circunstancias no pude cumplir esa meta, bueno, ser&amp;aacute; para este a&amp;ntilde;o que intentar&amp;eacute; cumplir esa meta, a parte de escribir en espa&amp;ntilde;ol empezar&amp;eacute; a escribir en ingl&amp;eacute;s en mi otro blog para dejar este para s&amp;oacute;lo art&amp;iacute;culos en castellano;as&amp;iacute; que tocar&amp;aacute; traducir los art&amp;iacute;culos viejos que todav&amp;iacute;a est&amp;eacute;n actualizados y los que no actualizarlos y traducirlos.&lt;/p&gt;
&lt;p&gt;Seguir&amp;eacute; escribiendo sobre android y python, terminar&amp;eacute; la serie de art&amp;iacute;culos sobre python+gtk+glade para as&amp;iacute; empezar a escribir sobre pyqt. Tambi&amp;eacute;n buscar&amp;eacute; el tiempo para escribir sobre Django,seguire escribiendo sobre empaquetado en Debian orientado a python, algunas cosas sobre administraci&amp;oacute;n de redes y seguridad con Linux.&lt;/p&gt;
&lt;p&gt;Uno de los problemas que tendr&amp;eacute; este a&amp;ntilde;o para escribir es el acceso al blog debido a restricciones de acceso en donde vivo y trabajo, intentar&amp;eacute; cumplir la meta que
Ahora vamos con el resumen del blog:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;El a&amp;ntilde;o 2010 escrib&amp;iacute; 35 art&amp;iacute;culos (el 36 iba a ser este art&amp;iacute;culo).&lt;/li&gt;
&lt;li&gt;El mes donde m&amp;aacute;s gente visito el blog fue en diciembre con 1721 visitas.&lt;/li&gt;
&lt;li&gt;El art&amp;iacute;culo m&amp;aacute;s le&amp;iacute;do fue python en Android con 665 visitas, seguido de comandos b&amp;aacute;sicos de adb(Android) con 317 visitas y en tercer lugar Desarrollo de aplicaciones gr&amp;aacute;ficas con python+gtk+glade con 235 visitas.&lt;/li&gt;
&lt;li&gt;Hay 3 referencias importantes que tiene el blog, el wiki de python, el wiki de los tutoriales de SL4A que se encuentra en google code.&lt;/li&gt;
&lt;li&gt;Los pa&amp;iacute;ses de donde la gente m&amp;aacute;s visita el blog son: Espa&amp;ntilde;a 2657, Venezuela 1195, Argentina 949, M&amp;eacute;xico 828,  Estados Unidos 413, Colombia 363, Chile 283, Alemania 201, * Pa&amp;iacute;ses Bajos 186, Per&amp;uacute; 133; con algunas conexiones de Rusia, China, Corea del Sur, Jap&amp;oacute;n, Reino Unido, Francia, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bueno, en el transcurso del mes iniciar&amp;eacute; los art&amp;iacute;culos t&amp;eacute;cnicos les env&amp;iacute;o un feliz a&amp;ntilde;o a todos los que me siguen, gracias por hacerlo!!!!.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Resumen"></category></entry><entry><title>Capturar la ubicación del celular (Android) desde Linux.</title><link href="https://ecrespo.github.io/capturar-la-ubicacion-del-celular-android-desde-linux.html" rel="alternate"></link><published>2010-12-21T10:00:00-05:30</published><updated>2010-12-21T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-12-21:/capturar-la-ubicacion-del-celular-android-desde-linux.html</id><summary type="html">&lt;p&gt;Me tome unos d&amp;iacute;as para realizar la actualizaci&amp;oacute;n de mi Milestone a Froyo gracias a la gente de androive que liberaron una versi&amp;oacute;n venezolanizada de froyo que se llama &lt;a href="http://androidve.blogspot.com/2010/12/navidad-antes-del-24-froyove-152-la.html"&gt;FroyoVE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hoy escribire sobre como sacar la informaci&amp;oacute;n que maneja el GPS desde Linux.&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita hacer es …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Me tome unos d&amp;iacute;as para realizar la actualizaci&amp;oacute;n de mi Milestone a Froyo gracias a la gente de androive que liberaron una versi&amp;oacute;n venezolanizada de froyo que se llama &lt;a href="http://androidve.blogspot.com/2010/12/navidad-antes-del-24-froyove-152-la.html"&gt;FroyoVE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hoy escribire sobre como sacar la informaci&amp;oacute;n que maneja el GPS desde Linux.&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita hacer es iniciar la localizaci&amp;oacute;n, se captura la informaci&amp;oacute;n y luego se detiene la localizaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo del programa:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python2.6"&gt;!/usr/bin/env python2.6&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="script que permite capturar la localizacion gps del celular (android) desde linux."&gt;Script que permite capturar la localizaci&amp;oacute;n GPS del celular (ANDROID) desde Linux.&lt;/h1&gt;
&lt;h1 id="autor: ernesto crespo"&gt;Autor: Ernesto Crespo&lt;/h1&gt;
&lt;h1 id="correo:ecrespo@gmail.com"&gt;Correo:ecrespo@gmail.com&lt;/h1&gt;
&lt;h1 id="licencia: gplv3"&gt;Licencia: GPLv3&lt;/h1&gt;
&lt;h1 id="version:0.1"&gt;Versi&amp;oacute;n:0.1&lt;/h1&gt;
&lt;h1 id="importando el modulo android"&gt;Importando el m&amp;oacute;dulo android&lt;/h1&gt;
&lt;p&gt;import android
from time import sleep&lt;/p&gt;
&lt;h1 id="funcion de envio de mensajes"&gt;Funci&amp;oacute;n de envio de mensajes&lt;/h1&gt;
&lt;p&gt;def localizacion():
    #Se crea la instancia de la clase Android
    droid = android.Android()
    #Se inicia la localizacion
    droid.startLocating()
    #Se espera 15 segunfos
    sleep(15)
    #Se presenta en la consola la informaci&amp;oacute;n de la localizaci&amp;oacute;n
    #Se maneja la informaci&amp;oacute;n de un diccionario.
    print "Altitud: ",droid.readLocation().result["network"]["altitude"]
    print "Proveedor: ",droid.readLocation().result["network"]["provider"]
    print "Latitud: ",droid.readLocation().result["network"]["latitude"]
    print "Longitud: ",droid.readLocation().result["network"]["longitude"]
    print "Tiempo: ",droid.readLocation().result["network"]["time"]
    print "Velocidad: ",droid.readLocation().result["network"]["speed"]
    print "Precisi&amp;oacute;n: ",droid.readLocation().result["network"]["accuracy"]
    #Se detiene la localizaci&amp;oacute;n
    droid.stopLocating()&lt;/p&gt;
&lt;h1 id="ejecucion del programa principal."&gt;Ejecuci&amp;oacute;n del programa principal.&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Ejecuci&amp;oacute;n de la funci&amp;oacute;n
    localizacion()
```&lt;/p&gt;
&lt;p&gt;La ejecuci&amp;oacute;n desde la consola muestra lo siguiente:&lt;/p&gt;
&lt;p&gt;```
localizacion.py&lt;/p&gt;
&lt;p&gt;Altitud:  0
Proveedor:  network
Latitud:  8.65770805
Longitud:  -71.11786675
Tiempo:  1292944124223
Velocidad:  0
Precisi&amp;oacute;n:  65
```&lt;/p&gt;
&lt;p&gt;Con ayuda de google map reviso que la latitud y longitud que devuelve el GPS del celular est&amp;aacute; cerca de la troncal 7 en M&amp;eacute;rida.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Linux"></category><category term="Python"></category><category term="SMS"></category></entry><entry><title>Obtener información del estado de la bateria de un celular con Android desde Linux</title><link href="https://ecrespo.github.io/obtener-informacion-del-estado-de-la-bateria-de-un-celular-con-android-desde-linux.html" rel="alternate"></link><published>2010-12-16T10:00:00-05:30</published><updated>2010-12-16T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-12-16:/obtener-informacion-del-estado-de-la-bateria-de-un-celular-con-android-desde-linux.html</id><summary type="html">&lt;p&gt;En este post se mostrar&amp;aacute; las funciones que permiten obtener informaci&amp;oacute;n del estado de la bateria del celular con Android desde Linux.&lt;/p&gt;
&lt;p&gt;Para poder monitorear el estado de la bateria primero se inicia la funci&amp;oacute;n de inicio de monitoreo y luego se puede obtener la informaci&amp;oacute;n siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Salud de la …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;En este post se mostrar&amp;aacute; las funciones que permiten obtener informaci&amp;oacute;n del estado de la bateria del celular con Android desde Linux.&lt;/p&gt;
&lt;p&gt;Para poder monitorear el estado de la bateria primero se inicia la funci&amp;oacute;n de inicio de monitoreo y luego se puede obtener la informaci&amp;oacute;n siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Salud de la bater&amp;iacute;a&lt;/li&gt;
&lt;li&gt;Tipo de conexi&amp;oacute;n que se usa para cargar la bater&amp;iacute;a&lt;/li&gt;
&lt;li&gt;Estatus de la bater&amp;iacute;a&lt;/li&gt;
&lt;li&gt;Tipo de tecnolog&amp;iacute;a usada en la bater&amp;iacute;a&lt;/li&gt;
&lt;li&gt;Temperatura de la bater&amp;iacute;a&lt;/li&gt;
&lt;li&gt;Voltaje de la bater&amp;iacute;a&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El programa es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python2.6"&gt;!/usr/bin/env python2.6&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="script que muestra la informacion de la bateria del celular con android."&gt;Script que muestra la informaci&amp;oacute;n de la bateria del celular con Android.&lt;/h1&gt;
&lt;h1 id="autor: ernesto crespo"&gt;Autor: Ernesto Crespo&lt;/h1&gt;
&lt;h1 id="correo:ecrespo@gmail.com"&gt;Correo:ecrespo@gmail.com&lt;/h1&gt;
&lt;h1 id="licencia: gplv3"&gt;Licencia: GPLv3&lt;/h1&gt;
&lt;h1 id="version:0.1"&gt;Versi&amp;oacute;n:0.1&lt;/h1&gt;
&lt;h1 id="importando el modulo android"&gt;Importando el m&amp;oacute;dulo android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;p&gt;def Bateria():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;droid = android.Android()
#Se inicia el monitoreo de la bateria
droid.batteryStartMonitoring()
#Se captura la informaci&amp;oacute;n de la salud de la bateria y se presenta un 
#mensaje por la consola.
bateriaSalud = droid.batteryGetHealth()[1]
if bateriaSalud == 2:
    print "La bateria est&amp;aacute; bien"
elif bateriaSalud == 1:
    print "Salud de la Bateria desconocido"
elif bateriaSalud == 3:
    print "La bateria tiene sobrecarga"
elif bateriaSalud == 4:
    print "La bateria est&amp;aacute; muerta"
elif bateriaSalud == 5:
    print "La bateria tiene sobrevoltaje"
else:
    print "falla desconocida"
#Se captura la informaci&amp;oacute;n del tipo de conexi&amp;oacute;n que usa el celular
#Se despliega la informaci&amp;oacute;n por la consola.
tipoConexion = droid.batteryGetPlugType()[1]
if tipoConexion == 0:
    print "Cable desconectado"
elif tipoConexion == 1:
    print "Fuente de alimentaci&amp;oacute;n: cargador AC"
elif tipoConexion == 2:
    print "Fuente de alimentaci&amp;oacute;n: cable USB"
else:
    print "Desconocido"
#Se captura la informaci&amp;oacute;n del estatus de la bateria y se presenta en la
#consola.
estatus = droid.batteryGetStatus()[1]
if estatus == 2:
    print "Bateria cargandose"
elif estatus == 3:
    print "Bateria descargandose"
elif estatus == 4:
    print "Bateria no se est&amp;aacute; cargando"
elif estatus == 5:
    print "Bateria full de carga"
print "Tipo de tecnolog&amp;iacute;a de la bateria: ",droid.batteryGetTechnology()[1]
print "Temperatura de la bateria: ",droid.batteryGetTemperature()[1]
print "voltaje de la bateria: ",droid.batteryGetVoltage()[1]
#Se detiene el monitoreo de la bateria
droid.batteryStopMonitoring()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Ejecuci&amp;oacute;n de la funci&amp;oacute;n
    Bateria()
```&lt;/p&gt;
&lt;p&gt;Al ejecutar el programa se muestra lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bateria.py
La bateria est&amp;aacute; bien
Fuente de alimentaci&amp;oacute;n: cable USB
Bateria cargandose
Tipo de tecnolog&amp;iacute;a de la bateria:  Li-ion
Temperatura de la bateria:  370
voltaje de la bateria:  4003&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Con respecto a la temperatura espero sea 37 grados y el voltaje sea medido en miliVoltios.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Linux"></category><category term="Python"></category><category term="SMS"></category></entry><entry><title>Manejar los mensajes de Texto del celular desde Linux (Android)</title><link href="https://ecrespo.github.io/manejar-los-mensajes-de-texto-del-celular-desde-linux-android.html" rel="alternate"></link><published>2010-12-16T09:00:00-05:30</published><updated>2010-12-16T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-12-16:/manejar-los-mensajes-de-texto-del-celular-desde-linux-android.html</id><summary type="html">&lt;p&gt;Para continuar con los scripts que se ejecutan de forma remota en el celular, ahora mostrar&amp;eacute; como se maneja los mensajes de texto, buscar mensajes y borrarlos.&lt;/p&gt;
&lt;p&gt;La idea es buscar todos los mensajes de un n&amp;uacute;mero celular dado, presentar el mensaje en la consola y borrar dichos mensajes.&lt;/p&gt;
&lt;p&gt;Se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Para continuar con los scripts que se ejecutan de forma remota en el celular, ahora mostrar&amp;eacute; como se maneja los mensajes de texto, buscar mensajes y borrarlos.&lt;/p&gt;
&lt;p&gt;La idea es buscar todos los mensajes de un n&amp;uacute;mero celular dado, presentar el mensaje en la consola y borrar dichos mensajes.&lt;/p&gt;
&lt;p&gt;Se sigue el procedimiento de ejecuci&amp;oacute;n remota explicado en el &lt;a href="https://www.seraph.to/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android-version-conectado-el-celular-por-usb.html#ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android-version-conectado-el-celular-por-usb"&gt;post anterior&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python2.6"&gt;!/usr/bin/env python2.6&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="script que permite manejar los sms del celular con android desde linux."&gt;Script que permite manejar los SMS del celular con android desde Linux.&lt;/h1&gt;
&lt;h1 id="autor: ernesto crespo"&gt;Autor: Ernesto Crespo&lt;/h1&gt;
&lt;h1 id="correo:ecrespo@gmail.com"&gt;Correo:ecrespo@gmail.com&lt;/h1&gt;
&lt;h1 id="licencia: gplv3"&gt;Licencia: GPLv3&lt;/h1&gt;
&lt;h1 id="version:0.1"&gt;Versi&amp;oacute;n:0.1&lt;/h1&gt;
&lt;h1 id="importando el modulo android,sys y re"&gt;Importando el m&amp;oacute;dulo android,sys y re&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="funcion de envio de mensajes"&gt;Funci&amp;oacute;n de envio de mensajes&lt;/h1&gt;
&lt;p&gt;def Contactos():
    #Se crea la instancia de la clase Android
    droid = android.Android()
    #Se captura la cantidad de mensajes de texto )como en mi caso todos los 
    #mensajes han sido le&amp;iacute;dos coloco 0, si quiero los no le&amp;iacute;dos coloco 1.
    cantidad = droid.smsGetMessageCount(0)[1]
    #El n&amp;uacute;mero de celular a buscar
    numero = "0xxxyyyzzww"
    #Se recorren todos los mensajes.
    for i in range(cantidad):
        #Si el mensaje es del n&amp;uacute;mero dado se captura el identificador
        #del mensaje, se imprime un mensaje  en pantalla con la informaci&amp;oacute;n:
        #read:Si mensaje ya fue le&amp;iacute;do
        #date: la fecha del mensaje
        #_id:identificador del mensaje.
        #address: n&amp;uacute;mero celular.
        #body:cuerpo del mensaje.
        #Toda est&amp;aacute; informaci&amp;oacute;n se maneja desde un diccionario.
        #Si el celular no es de la persona buscada se continua con la 
        #siguiente iteraci&amp;oacute;n. 
        #A la funci&amp;oacute;n de borrar se le pasa el identificador del mensaje
        if droid.smsGetMessages(0)[1][i]["address"] == numero:
            identificador = droid.smsGetMessages(0)[1][i]["_id"]
            print "Borrando mensaje\t",i,droid.smsGetMessages(0)[1][i]["read"],droid.smsGetMessages(0)[1][i]["date"],droid.smsGetMessages(0)[1][i]["address"],droid.smsGetMessages(0)[1][i]["body"]
            droid.smsDeleteMessage(identificador)
        else:
            continue
if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Ejecuci&amp;oacute;n de la funci&amp;oacute;n
    Contactos()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La salida del programa es la siguiente:&lt;/p&gt;
&lt;p&gt;Devuelve el mensaje que se ha borrado el SMS, el n&amp;uacute;mero del mensaje, si est&amp;aacute; le&amp;iacute;do, la fecha, el n&amp;uacute;mero y el cuerpo del mensaje.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Borrando mensaje 296 1 1285030227398 0xxxyyyzzww Ah bueno... Yo les aviso.
Borrando mensaje 358 1 1283635867054 0xxxyyyzzww Ok. Ahi voy.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Linux"></category><category term="Python"></category><category term="SMS"></category></entry><entry><title>Ejecución remota de scripts python desde Linux a un celular con Android (versión conectado el celular por USB)</title><link href="https://ecrespo.github.io/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android-version-conectado-el-celular-por-usb.html" rel="alternate"></link><published>2010-12-15T10:00:00-05:30</published><updated>2010-12-15T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-12-15:/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android-version-conectado-el-celular-por-usb.html</id><summary type="html">&lt;p&gt;En el post anterior explique como ejecutar script python en un celular con Android de forma remota desde Linux por wifi, ahora explicar&amp;eacute; como hacerlo por cable USB, en realidad es m&amp;aacute;s sencillo que el art&amp;iacute;culo anterior.
Me basar&amp;eacute; en lo explicado en el post &lt;a href="https://www.seraph.to/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android.html#ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android"&gt;anterior&lt;/a&gt; y en el post …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el post anterior explique como ejecutar script python en un celular con Android de forma remota desde Linux por wifi, ahora explicar&amp;eacute; como hacerlo por cable USB, en realidad es m&amp;aacute;s sencillo que el art&amp;iacute;culo anterior.
Me basar&amp;eacute; en lo explicado en el post &lt;a href="https://www.seraph.to/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android.html#ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android"&gt;anterior&lt;/a&gt; y en el post sobre &lt;a href="https://www.seraph.to/enviar-mensajes-de-texto-desde-android-con-python.html"&gt;env&amp;iacute;o de mensajes de texto&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita hacer es conectar el celular al computador por USB, activar el modo depuraci&amp;oacute;n y la conexi&amp;oacute;n USB a Portal y Herramientas.&lt;/p&gt;
&lt;p&gt;Se debe iniciar el servidor de SL4A. Men&amp;uacute;-&amp;gt;Ver-&amp;gt;Interpretes-&amp;gt;Men&amp;uacute;-&amp;gt;Iniciar Servidor-&amp;gt;Privado.&lt;/p&gt;
&lt;p&gt;Luego se averigua en los mensajes de notificiaci&amp;oacute;n que puerto abre el servidor. En m&amp;iacute; caso fue el 58825.&lt;/p&gt;
&lt;p&gt;Desde la consola de Linux se ejecutan los siguientes comandos:
Redirecciona toda petici&amp;oacute;n al puerto 9999 al puerto 58825.&lt;/p&gt;
&lt;p&gt;```
./adb forward tcp:9999 tcp:58825&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se exporta una variable de ambiente.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export AP_PORT=9999&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El programa es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python2.6"&gt;!/usr/bin/env python2.6&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="script que permite enviar mensaje de texto a un celular android desde linux."&gt;Script que permite enviar mensaje de texto a un celular android desde Linux.&lt;/h1&gt;
&lt;h1 id="autor: ernesto crespo"&gt;Autor: Ernesto Crespo&lt;/h1&gt;
&lt;h1 id="correo:ecrespo@gmail.com"&gt;Correo:ecrespo@gmail.com&lt;/h1&gt;
&lt;h1 id="licencia: gplv3"&gt;Licencia: GPLv3&lt;/h1&gt;
&lt;h1 id="version:0.1"&gt;Versi&amp;oacute;n:0.1&lt;/h1&gt;
&lt;h1 id="importando el modulo android,sys y re"&gt;Importando el m&amp;oacute;dulo android,sys y re&lt;/h1&gt;
&lt;p&gt;import android,sys,re&lt;/p&gt;
&lt;h1 id="funcion de envio de mensajes"&gt;Funci&amp;oacute;n de envio de mensajes&lt;/h1&gt;
&lt;p&gt;def Enviomensaje():
    #Se averigua si se le pasa al script el n&amp;uacute;mero celular y el mensaje, y que el n&amp;uacute;mero sea v&amp;aacute;lido para venezuela.
    if len(sys.argv) == 3:
        numero = sys.argv[1]
        mensaje = sys.argv[2]
    else:
        print "error enviando mensaje, se necesita pasar el n&amp;uacute;mero y mensaje"
        sys.exit
    if Validar(numero) == 0:
        print "N&amp;uacute;mero invalido"
        sys.exit
    #Creando la instancia droid del objeto Android
    droid = android.Android()
    #Enviando el mensaje de texto
    droid.smsSend(numero,mensaje)
    #Se presenta un mensaje de notificaci&amp;oacute;n en el celular.
    droid.makeToast('Mensaje enviado')&lt;/p&gt;
&lt;h1 id="funcion que valida si el numero es de movilnet, digitel o movistar."&gt;Funci&amp;oacute;n que v&amp;aacute;lida si el n&amp;uacute;mero es de movilnet, digitel o movistar.&lt;/h1&gt;
&lt;p&gt;def Validar(numero):
    #Valida si los numeros tienen 11 digitos y que sean de los proveedores movilnet, digitel y movistar
    if len(numero) == 11 and ((re.search("041[2|4|6]\d\d\d\d\d\d\d",numero)) or (re.search("042[4|6]\d\d\d\d\d\d\d",numero))) :
        return 1
    else:
        return 0&lt;/p&gt;
&lt;h1 id="ejecucion del programa."&gt;Ejecuci&amp;oacute;n del programa.&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    Enviomensaje()
```&lt;/p&gt;
&lt;p&gt;Ejecutar el script.
&lt;code&gt;enviomensajes.py 0xxxyyyzzww  "2da prueba, avisame si te llega el sms"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category><category term="Debian"></category><category term="Linux"></category></entry><entry><title>Ejecución remota de scripts python desde Linux a un celular con Android</title><link href="https://ecrespo.github.io/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android.html" rel="alternate"></link><published>2010-10-23T10:00:00-05:30</published><updated>2010-10-23T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-10-23:/ejecucion-remota-de-scripts-python-desde-linux-a-un-celular-con-android.html</id><summary type="html">&lt;p&gt;Existe la forma  de ejecutar scripts as&amp;iacute; sea de python,perl, ruby, bash,etc de forma remota (desde Linux) a un celular con Android.&lt;/p&gt;
&lt;p&gt;Al instalar SL4A y python se tiene la posibilidad de iniciar un servicio de SL4A para escuchar en un puerto espec&amp;iacute;fico del celular Android, se tiene …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Existe la forma  de ejecutar scripts as&amp;iacute; sea de python,perl, ruby, bash,etc de forma remota (desde Linux) a un celular con Android.&lt;/p&gt;
&lt;p&gt;Al instalar SL4A y python se tiene la posibilidad de iniciar un servicio de SL4A para escuchar en un puerto espec&amp;iacute;fico del celular Android, se tiene la opci&amp;oacute;n p&amp;uacute;blica o privada, para el primer caso se tiene que tener conectado el celular a una red wifi donde levanta el servicio en un puerto espec&amp;iacute;fico, para el caso de conexi&amp;oacute;n privada el celular debe estar conectado v&amp;iacute;a puerto USB con la opci&amp;oacute;n de depuraci&amp;oacute;n USB conectada y el celular en modo Portal y Herramientas.&lt;/p&gt;
&lt;p&gt;Este post se basa en el art&amp;iacute;culo de control remoto de SL4A que se encuentra &lt;a href="http://code.google.com/p/android-scripting/wiki/RemoteControl"&gt;aqu&amp;iacute;&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;En este momento explicar&amp;eacute; la conexi&amp;oacute;n remota p&amp;uacute;blica, primero se tiene que conectar el celular a una red wifi.&lt;/p&gt;
&lt;p&gt;En el equipo que estoy utilizando le asigno la IP 192.168.10.19.&lt;/p&gt;
&lt;p&gt;Luego ejecutar SL4A en el celular, luego se le da men&amp;uacute;, se selecciona ver, luego a interpretes, luego otra vez al men&amp;uacute;, se selecciona iniciar servidor, en este momento se le pide seleccionar entre servidor p&amp;uacute;blico o privado, se selecciona al primero.&lt;/p&gt;
&lt;p&gt;El celular coloca un mensaje en el &amp;aacute;rea de notificaci&amp;oacute;n de Android mencionando que el servidor se ha iniciado, se despliega la informaci&amp;oacute;n y este dice se arranco un servidor SL4A en la IP 192.168.10.19 con puerto 52834.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se utilizar&amp;aacute; el sdk de android en Linux ejecutando adb.
Se inicia el servidor adb.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./adb start-server
* daemon not running. starting it now on port 5037 *
* daemon started successfully *&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Note que el servidor levanta en el puerto 5037.&lt;/p&gt;
&lt;p&gt;Ahora se redirecciona los puertos del servicio adb.&lt;/p&gt;
&lt;p&gt;```
./adb forward tcp:9999 tcp:52834&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Donde el puerto 9999 se redirecciona al puerto donde escucha el celular que es el 52834 en este caso.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se configura la variable de ambiente de la IP y puerto del celular con Android que tiene funcionan el servidor SL4A.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export AP_PORT=52834
export AP_HOST=192.168.10.19&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Asegurarse que tiene en el path de python2.6 la ruta del m&amp;oacute;dulo de python para android. Este lo puede bajar en este &lt;a href="http://android-scripting.googlecode.com/hg/python/ase/android.py"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra un script en python que pide escriba el nombre de usuario en el celular y lo muestra en Linux y en el celular:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo android"&gt;Importar m&amp;oacute;dulo android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="se crea el objeto droid de la clase android con la ip y puerto del servicio iniciado en el celular."&gt;Se crea el objeto droid de la clase Android con la IP y puerto del servicio iniciado en el celular.&lt;/h1&gt;
&lt;p&gt;droid = android.Android(('192.168.10.19', 52834))&lt;/p&gt;
&lt;h1 id="se solicita al usuario que escriba su nombre"&gt;Se solicita al usuario que escriba su nombre&lt;/h1&gt;
&lt;p&gt;texto = droid.getInput("Escriba su nombre","Nombre:")&lt;/p&gt;
&lt;h1 id="se imprime el nombre del usuario en la consola de linux"&gt;Se imprime el nombre del usuario en la consola de Linux&lt;/h1&gt;
&lt;p&gt;print "El nombre escrito en el celular es: %s" %texto[1]&lt;/p&gt;
&lt;h1 id="se presenta un saludo al usuario en el celular"&gt;Se presenta un saludo al usuario en el celular&lt;/h1&gt;
&lt;p&gt;droid.makeToast('Hola %s' %texto[1])
```&lt;/p&gt;
&lt;p&gt;Para ejecutar el programa se coloca el script prueba-remota.py donde se encuentra el m&amp;oacute;dulo de SL4A android.py en el mismo directorio o se coloca en el path de python2.6.
Se ejecuta con python2.6:&lt;/p&gt;
&lt;p&gt;```
$ python2.6 prueba-remota.py &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El nombre escrito en el celular es: ernesto&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category><category term="Debian"></category><category term="Linux"></category></entry><entry><title>Charla del día Debian en Barquisimeto</title><link href="https://ecrespo.github.io/charla-del-dia-debian-en-barquisimeto.html" rel="alternate"></link><published>2010-08-24T10:00:00-05:30</published><updated>2010-08-24T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-08-24:/charla-del-dia-debian-en-barquisimeto.html</id><summary type="html">&lt;p&gt;Ya publique en slideshare la charla que dicte en el d&amp;iacute;a  Debian en Barquisimeto.
Lo pueden bajar por ac&amp;aacute;: &lt;a href="http://www.slideshare.net/ecrespo/empaquetar-un-paquete-debian-por-medio-de-mercurial"&gt;http://www.slideshare.net/ecrespo/empaquetar-un-paquete-debian-por-medio-de-mercurial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Charla d&amp;iacute;a Debian 2010" src="./images/charladiadebian.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ya publique en slideshare la charla que dicte en el d&amp;iacute;a  Debian en Barquisimeto.
Lo pueden bajar por ac&amp;aacute;: &lt;a href="http://www.slideshare.net/ecrespo/empaquetar-un-paquete-debian-por-medio-de-mercurial"&gt;http://www.slideshare.net/ecrespo/empaquetar-un-paquete-debian-por-medio-de-mercurial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Charla d&amp;iacute;a Debian 2010" src="./images/charladiadebian.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Control de versiones"></category><category term="Empaquetado"></category></entry><entry><title>Crear un paquete python de un programa</title><link href="https://ecrespo.github.io/crear-un-paquete-python-de-un-programa.html" rel="alternate"></link><published>2010-08-08T11:00:00-05:30</published><updated>2010-08-08T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-08-08:/crear-un-paquete-python-de-un-programa.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; el proceso de creaci&amp;oacute;n de un tar.gz o tar.bz2 del programa de configuraci&amp;oacute;n de los accesos r&amp;aacute;pidos de teclado por medio de gconf con python.
La siguiente imagen muestra el repositorio del proyecto en google code.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Repositorio  de Python-config-accesskey-gnome - Google Code" src="./images/googlecode.png"/&gt;&lt;/p&gt;
&lt;p&gt;Como muestra la figura se tiene una serie de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; el proceso de creaci&amp;oacute;n de un tar.gz o tar.bz2 del programa de configuraci&amp;oacute;n de los accesos r&amp;aacute;pidos de teclado por medio de gconf con python.
La siguiente imagen muestra el repositorio del proyecto en google code.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Repositorio  de Python-config-accesskey-gnome - Google Code" src="./images/googlecode.png"/&gt;&lt;/p&gt;
&lt;p&gt;Como muestra la figura se tiene una serie de archivos en el repositorio, a continuaci&amp;oacute;n se explicar&amp;aacute; cada uno de ellos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;COPYING: Contiene la Licencia del proyecto.&lt;/li&gt;
&lt;li&gt;MANIFEST.in: Es una plantilla que contiene la lista de archivos que se incluir&amp;aacute;n en el paquete del programa.&lt;/li&gt;
&lt;li&gt;README: Contiene informaci&amp;oacute;n del programa, una descripci&amp;oacute;n de uso y requerimientos.&lt;/li&gt;
&lt;li&gt;TODO: Lista de cosas por hacer para las siguientes versiones del programa.&lt;/li&gt;
&lt;li&gt;Archivos *.py: Son los programas desarrollados.&lt;/li&gt;
&lt;li&gt;pyconfig-accessgnome-ui.desktop: Archivo que define la informaci&amp;oacute;n de la aplicaci&amp;oacute;n en el men&amp;uacute; del escritorio.&lt;/li&gt;
&lt;li&gt;pyconfig-accessgnome.glade : Archivo xml glade que contiene la interfaz gr&amp;aacute;fica.&lt;/li&gt;
&lt;li&gt;setup.py: Archivo de configuraci&amp;oacute;n del proceso de instalaci&amp;oacute;n y creaci&amp;oacute;n de paquetes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para fines pr&amp;aacute;cticos se explicar&amp;aacute; MANIFEST.in y setup.py.&lt;/p&gt;
&lt;p&gt;MANIFEST.in es un archivo plantilla de entra que define que archivos se van a colocar en el archivo MANIFEST, este archivo final le dira a setup.py cuales ser&amp;aacute;n los archivos que se incluir&amp;aacute;n en el paquete .tar.gz o .tar.bz2.
El archivo tiene una directiva include donde se le dir&amp;aacute; los archivos que se quieren incluir.
Por ejemplo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;include COPYING pyconfig-accessgnome.glade pyconfig-accessgnome-ui.desktop README TODO&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El archivo setup.py contiene lo siguiente:&lt;/p&gt;
&lt;p&gt;```python
!/usr/bin/env python&lt;/p&gt;
&lt;h1 id="importar setup de distutils"&gt;importar setup de distutils&lt;/h1&gt;
&lt;p&gt;from distutils.core import setup  &lt;/p&gt;
&lt;h1 id="crear la variable data_files que contiene las rutas de donde se van a colocar los archivos."&gt;Crear la variable data_files que contiene las rutas de donde se van a colocar los archivos.&lt;/h1&gt;
&lt;p&gt;data_files = [('share/applications',['pyconfig-accessgnome-ui.desktop']),
    ('share/python-config-accesskey-gnome',['COPYING','configGconf.py','pyconfig-accessgnome.glade','pyconfig-accessgnome-ui.py','README','TODO'])]&lt;/p&gt;
&lt;h1 id="se define el nombre del programa, la version, una descripcion corta, el autor y su correo,"&gt;se define el nombre del programa, la versi&amp;oacute;n, una descripci&amp;oacute;n corta, el autor y su correo,&lt;/h1&gt;
&lt;h1 id="el url del proyecto, la licencia, los scripts principales del programa, los archivos de datos adicionales,"&gt;el url del proyecto, la licencia, los scripts principales del programa, los archivos de datos adicionales,&lt;/h1&gt;
&lt;h1 id="la plataforma soportadas,los modulos que se requieren para el funcionamiento del programa."&gt;La plataforma soportadas,los m&amp;oacute;dulos que se requieren para el funcionamiento del programa.&lt;/h1&gt;
&lt;h1 id="y el modulo que se desarrollo y necesita el programa principal."&gt;Y el m&amp;oacute;dulo que se desarrollo y necesita el programa principal.&lt;/h1&gt;
&lt;p&gt;setup(name='python-gconf-keybinding',
      version='0.4',
      description='Allow config keyboard access application with gconf',
      author='Ernesto Nadir Crespo Avila', 
      author_email='ecrespo@gmail.com',
      url = 'http://code.google.com/p/python-config-accesskey-gnome/',
      license = "GPL v3",
      scripts = ['pyconfig-accessgnome-ui.py', 'configGconf.py'],
      data_files =data_files,
      platforms=['i386','AMD64'],
      requires = ['gtk','gconf','pygtk','gtk.glade'],
      py_modules = ['configGconf']
      )
```&lt;/p&gt;
&lt;p&gt;Al tener los archivos necesarios para instalar el programa y para crear los paquetes s&amp;oacute;lo queda ejecutar los comandos:
Listar los archivos existentes:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls -l
total 92
-rwxr-xr-x 1 ernesto ernesto  8036 ago  7 17:49 configGconf.py
-rw-r--r-- 1 ernesto ernesto 33353 jul 27 20:41 COPYING
-rw-r--r-- 1 ernesto ernesto    88 ago  8 18:15 MANIFEST.in
-rw-r--r-- 1 ernesto ernesto 14729 jul 27 20:45 pyconfig-accessgnome.glade
-rwxr-xr-x 1 ernesto ernesto   315 jul 27 20:41 pyconfig-accessgnome-ui.desktop
-rwxr-xr-x 1 ernesto ernesto  8420 ago  8 17:06 pyconfig-accessgnome-ui.py
-rw-r--r-- 1 ernesto ernesto  4260 jul 27 20:41 README
-rwxr-xr-x 1 ernesto ernesto  1021 ago  8 18:12 setup.py
-rw-r--r-- 1 ernesto ernesto     0 jul 27 20:41 TODO&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Probar la instalaci&amp;oacute;n del programa:
Se ejecuta el install para el setup.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo python setup.py install
running install
running build
running build_py
creating build
creating build/lib.linux-i686-2.6
copying configGconf.py -&amp;gt; build/lib.linux-i686-2.6
running build_scripts
creating build/scripts-2.6
copying and adjusting pyconfig-accessgnome-ui.py -&amp;gt; build/scripts-2.6
copying and adjusting configGconf.py -&amp;gt; build/scripts-2.6
changing mode of build/scripts-2.6/pyconfig-accessgnome-ui.py from 644 to 755
changing mode of build/scripts-2.6/configGconf.py from 644 to 755
running install_lib
running install_scripts
copying build/scripts-2.6/pyconfig-accessgnome-ui.py -&amp;gt; /usr/local/bin
copying build/scripts-2.6/configGconf.py -&amp;gt; /usr/local/bin
changing mode of /usr/local/bin/pyconfig-accessgnome-ui.py to 755
changing mode of /usr/local/bin/configGconf.py to 755
running install_data
running install_egg_info
Removing /usr/local/lib/python2.6/dist-packages/python_gconf_keybinding-0.4.egg-info
Writing /usr/local/lib/python2.6/dist-packages/python_gconf_keybinding-0.4.egg-info&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Esto crea un directorio build que contiene los scripts y la librer&amp;iacute;as, luego los copia en /usr/local/  tanto en bin como en share. &lt;/p&gt;
&lt;p&gt;```
ls share/python-config-accesskey-gnome/
configGconf.py  COPYING  pyconfig-accessgnome.glade  pyconfig-accessgnome-ui.py  README  TODO&lt;/p&gt;
&lt;p&gt;ls bin/
configGconf.py  pyconfig-accessgnome-ui.py  pyloro.py&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ya en este momento se puede ejecutar el programa tanto de forma gr&amp;aacute;fica como desde la l&amp;iacute;nea de comandos.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n viene el proceso de construcci&amp;oacute;n del tar.gz y tar.bz:
El comando para el setup.py es sdist el cual crea el paquete para ser distribu&amp;iacute;do, adicionalmente se le pasa el formato con la opci&amp;oacute;n --formats=bztar, gztar. Los argumentos bztar y gztar es para crear un tar.bz2 y un tar.gz respectivamente.&lt;/p&gt;
&lt;p&gt;El comando es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python setup.py sdist --formats=bztar,gztar
running sdist
reading manifest template 'MANIFEST.in'
writing manifest file 'MANIFEST'
creating python-gconf-keybinding-0.4
making hard links in python-gconf-keybinding-0.4...
hard linking COPYING -&amp;gt; python-gconf-keybinding-0.4
hard linking README -&amp;gt; python-gconf-keybinding-0.4
hard linking TODO -&amp;gt; python-gconf-keybinding-0.4
hard linking configGconf.py -&amp;gt; python-gconf-keybinding-0.4
hard linking pyconfig-accessgnome-ui.desktop -&amp;gt; python-gconf-keybinding-0.4
hard linking pyconfig-accessgnome-ui.py -&amp;gt; python-gconf-keybinding-0.4
hard linking pyconfig-accessgnome.glade -&amp;gt; python-gconf-keybinding-0.4
hard linking setup.py -&amp;gt; python-gconf-keybinding-0.4
creating dist
tar -cf dist/python-gconf-keybinding-0.4.tar python-gconf-keybinding-0.4
bzip2 -f9 dist/python-gconf-keybinding-0.4.tar
tar -cf dist/python-gconf-keybinding-0.4.tar python-gconf-keybinding-0.4
gzip -f9 dist/python-gconf-keybinding-0.4.tar
removing 'python-gconf-keybinding-0.4' (and everything under it)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ya se tiene un directorio dist con los 2 paquetes creados:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls -l dist/
total 40
-rw-r--r-- 1 ernesto ernesto 16539 ago  8 19:12 python-gconf-keybinding-0.4.tar.bz2
-rw-r--r-- 1 ernesto ernesto 18331 ago  8 19:12 python-gconf-keybinding-0.4.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El contenido de un paquete es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar -tvzf dist/python-gconf-keybinding-0.4.tar.gz 
drwxr-xr-x ernesto/ernesto   0 2010-08-08 19:12 python-gconf-keybinding-0.4/
-rwxr-xr-x ernesto/ernesto 8420 2010-08-08 17:06 python-gconf-keybinding-0.4/pyconfig-accessgnome-ui.py
-rw-r--r-- ernesto/ernesto 33353 2010-07-27 20:41 python-gconf-keybinding-0.4/COPYING
-rwxr-xr-x ernesto/ernesto  8036 2010-08-07 17:49 python-gconf-keybinding-0.4/configGconf.py
-rw-r--r-- ernesto/ernesto     0 2010-07-27 20:41 python-gconf-keybinding-0.4/TODO
-rwxr-xr-x ernesto/ernesto   315 2010-07-27 20:41 python-gconf-keybinding-0.4/pyconfig-accessgnome-ui.desktop
-rwxr-xr-x ernesto/ernesto  1021 2010-08-08 18:12 python-gconf-keybinding-0.4/setup.py
-rw-r--r-- ernesto/ernesto 14729 2010-07-27 20:45 python-gconf-keybinding-0.4/pyconfig-accessgnome.glade
-rw-r--r-- ernesto/ernesto  4260 2010-07-27 20:41 python-gconf-keybinding-0.4/README
-rw-r--r-- ernesto/ernesto   394 2010-08-08 19:12 python-gconf-keybinding-0.4/PKG-INFO&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;S&amp;oacute;lo queda probar la instalaci&amp;oacute;n del paquete, primero se descomprime y luego se ejecuta el setup.py con la opci&amp;oacute;n install:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar -xvzf python-gconf-keybinding-0.4.tar.gz 
python-gconf-keybinding-0.4/
python-gconf-keybinding-0.4/pyconfig-accessgnome-ui.py
python-gconf-keybinding-0.4/COPYING
python-gconf-keybinding-0.4/configGconf.py
python-gconf-keybinding-0.4/TODO
python-gconf-keybinding-0.4/pyconfig-accessgnome-ui.desktop
python-gconf-keybinding-0.4/setup.py
python-gconf-keybinding-0.4/pyconfig-accessgnome.glade
python-gconf-keybinding-0.4/README
python-gconf-keybinding-0.4/PKG-INFO&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se cambia al directorio python-gconf-keybinding-0.4.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd python-gconf-keybinding-0.4/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Instalaci&amp;oacute;n del paquete:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo python setup.py install 
running install
running build
running build_py
creating build
creating build/lib.linux-i686-2.6
copying configGconf.py -&amp;gt; build/lib.linux-i686-2.6
running build_scripts
creating build/scripts-2.6
copying and adjusting pyconfig-accessgnome-ui.py -&amp;gt; build/scripts-2.6
copying and adjusting configGconf.py -&amp;gt; build/scripts-2.6
changing mode of build/scripts-2.6/pyconfig-accessgnome-ui.py from 644 to 755
changing mode of build/scripts-2.6/configGconf.py from 644 to 755
running install_lib
running install_scripts
copying build/scripts-2.6/pyconfig-accessgnome-ui.py -&amp;gt; /usr/local/bin
copying build/scripts-2.6/configGconf.py -&amp;gt; /usr/local/bin
changing mode of /usr/local/bin/pyconfig-accessgnome-ui.py to 755
changing mode of /usr/local/bin/configGconf.py to 755
running install_data
running install_egg_info
Removing /usr/local/lib/python2.6/dist-packages/python_gconf_keybinding-0.4.egg-info
Writing /usr/local/lib/python2.6/dist-packages/python_gconf_keybinding-0.4.egg-info&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Como ya se explico antes el programa se instala en /usr/local .&lt;/p&gt;
&lt;p&gt;El pr&amp;oacute;ximo art&amp;iacute;culo explicar&amp;aacute; como crear un paquete Debian a partir del tar.gz.&lt;/p&gt;
&lt;p&gt;Para m&amp;aacute;s informaci&amp;oacute;n pueden visitar los siguientes enlaces:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.python.org/distutils/"&gt;http://docs.python.org/distutils/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mundogeek.net/archivos/2008/09/23/distribuir-aplicaciones-python/"&gt;http://mundogeek.net/archivos/2008/09/23/distribuir-aplicaciones-python/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Empaquetado"></category><category term="Gnome"></category><category term="Linux"></category><category term="Python"></category></entry><entry><title>Actualización del programa Desarrollo de interfaz gráfica para la configuración de accesos rápidos del teclado</title><link href="https://ecrespo.github.io/actualizacion-del-programa-desarrollo-de-interfaz-grafica-para-la-configuracion-de-accesos-rapidos-del-teclado.html" rel="alternate"></link><published>2010-08-08T09:00:00-05:30</published><updated>2010-08-08T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-08-08:/actualizacion-del-programa-desarrollo-de-interfaz-grafica-para-la-configuracion-de-accesos-rapidos-del-teclado.html</id><summary type="html">&lt;p&gt;En el art&amp;iacute;culo anterior se explico la mejora del script que permite cambiar las configuraciones de las teclas r&amp;aacute;pidas en gnome, ahora se explicar&amp;aacute; la mejora del programa mencionado en este &lt;a href="https://www.seraph.to/desarrollo-de-interfaz-grafica-para-la-configuracion-de-accesos-rapidos-de-teclado-para-gconf.html"&gt;art&amp;iacute;culo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La captura de pantalla de la imagen muestra con respecto al art&amp;iacute;culo anterior un combobox que est&amp;aacute; deshabilitado …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el art&amp;iacute;culo anterior se explico la mejora del script que permite cambiar las configuraciones de las teclas r&amp;aacute;pidas en gnome, ahora se explicar&amp;aacute; la mejora del programa mencionado en este &lt;a href="https://www.seraph.to/desarrollo-de-interfaz-grafica-para-la-configuracion-de-accesos-rapidos-de-teclado-para-gconf.html"&gt;art&amp;iacute;culo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La captura de pantalla de la imagen muestra con respecto al art&amp;iacute;culo anterior un combobox que est&amp;aacute; deshabilitado en este momento, dicho combobox permitir&amp;aacute; elegir entre 3 distribuciones Debian, Ubuntu o Canaima.&lt;/p&gt;
&lt;p&gt;La imagen se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="GUI" src="./images/gui-gconf-gnome-2010.png"/&gt;&lt;/p&gt;
&lt;p&gt;La idea es la posibilidad de configurar los accesos r&amp;aacute;pidos de todas las aplicaciones mostradas o s&amp;oacute;lo las que se quiera.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python
def on_button2_clicked(self,*args):
                #Se crea el objeto config de la clase Conf
                Config = configGconf.Conf()
                #Se crea un ciclo con la lista de las aplicaciones.
                for aplicacion in self.__aplicaciones:
                        #Se modifica las aplicaciones una por una pasando la aplicaci&amp;oacute;n.
                        Config.modificar_opcion(aplicacion,1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo completo del programa lo puedes bajar &lt;a href="http://python-config-accesskey-gnome.googlecode.com/hg/pyconfig-accessgnome-ui.py"&gt;pyconfig-accessgnome-ui.py&lt;/a&gt; la interfaz gr&amp;aacute;fica elaborada en glade se puede bajar  de &lt;a href="http://code.google.com/p/python-config-accesskey-gnome/source/browse/pyconfig-accessgnome.glade"&gt;pyconfig-accessgnome.glade&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En el siguiente art&amp;iacute;culo se explicar&amp;aacute; como crear el paquete python.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="accesibilidad"></category><category term="gconf"></category><category term="glade"></category><category term="gnome"></category><category term="gtk"></category><category term="python"></category><category term="tiflotecnologia"></category></entry><entry><title>Mejorado el script en python que configura los accesos rápidos de teclado a aplicaciones en Gnome con gconf.</title><link href="https://ecrespo.github.io/mejorado-el-script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf.html" rel="alternate"></link><published>2010-08-07T11:10:00-05:30</published><updated>2010-08-07T11:10:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-08-07:/mejorado-el-script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf.html</id><summary type="html">&lt;p&gt;Para cambiar un poco la tem&amp;aacute;tica sobre Android volver&amp;eacute; a tocar un programa que explique en el &lt;a href="https://www.seraph.to/script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf.html"&gt;siguiente art&amp;iacute;culo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El programa lo pueden bajar desde google code y tiene el nombre de &lt;a href="http://python-config-accesskey-gnome.googlecode.com/hg/configGconf.py"&gt;configGconf.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Las mejoras que tiene el programa son las siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Se puede seleccionar entre las distribuciones Debian …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Para cambiar un poco la tem&amp;aacute;tica sobre Android volver&amp;eacute; a tocar un programa que explique en el &lt;a href="https://www.seraph.to/script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf.html"&gt;siguiente art&amp;iacute;culo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El programa lo pueden bajar desde google code y tiene el nombre de &lt;a href="http://python-config-accesskey-gnome.googlecode.com/hg/configGconf.py"&gt;configGconf.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Las mejoras que tiene el programa son las siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Se puede seleccionar entre las distribuciones Debian, Ubuntu y Canaima ya que dependiendo del caso se usa iceweasel como navegador o firefox.&lt;/li&gt;
&lt;li&gt;Se despliega m&amp;aacute;s informaci&amp;oacute;n a la hora de ejecutar el programa.&lt;/li&gt;
&lt;li&gt;Se usa el m&amp;oacute;dulo python-argparse para capturar los argumentos del programa.&lt;/li&gt;
&lt;li&gt;Se pueden modificar todas las opciones de los accesos r&amp;aacute;pidos del teclado o una sola opci&amp;oacute;n.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se tiene que tener instalado la librer&amp;iacute;a para python argparse; en el caso de Debian, Ubuntu y Canaima se ejecuta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install python-argparse&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Bajar el programa del enlace ya publicado.&lt;/p&gt;
&lt;p&gt;Es necesario darle permisos de ejecuci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chmod a+x configGconf.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se explica el uso del programa con la mejora de la captura de los argumentos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Si se ejecuta configGconf.py sin argumentos o con la opci&amp;oacute;n -h devuelve la ayuda.&lt;/li&gt;
&lt;li&gt;Si se ejecuta con -v devuelve el n&amp;uacute;mero de versi&amp;oacute;n del programa.&lt;/li&gt;
&lt;li&gt;Para listar la configuraci&amp;oacute;n que maneja las teclas r&amp;aacute;pidas con agregar la opci&amp;oacute;n de acci&amp;oacute;n (-a o --accion) y se pasa como argumento listar.&lt;/li&gt;
&lt;li&gt;Para cambiar todas las configuraciones de los accesos r&amp;aacute;pidos de teclado se agrega la acci&amp;oacute;n cambiar, la opci&amp;oacute;n (-d o --distribucion) con argumentos debian, ubuntu o canaima.&lt;/li&gt;
&lt;li&gt;Para cambiar una sola opci&amp;oacute;n se agrega en la acci&amp;oacute;n el argumento modificarOpci&amp;oacute;n, la distribuci&amp;oacute;n que se est&amp;aacute; usando (explicado en 4) y que opci&amp;oacute;n se quiere cambiar (orca,gnome-terminal,oowriter,iceweasel,nautilus,ooimpress,pidgin,oocalc,gedit,gnome-calculator,rhythmbox).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra los resultados de cada procedimiento anterior:&lt;/p&gt;
&lt;p&gt;```
./configGconf.py 
usage: configGconf [-h] [-a {cambiar,listar,modificarOpcion}]
                   [-d {debian,canaima,ubuntu}]
                   [-o {orca,gnome-terminal,oowriter,iceweasel,nautilus,ooimpress,pidgin,oocalc,gedit,gnome-calculator,rhythmbox}]
                   [-v]&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Cambiar accesos rapidos en teclado a Gnome
```
optional arguments:&lt;/p&gt;
&lt;p&gt;-h, --help            show this help message and exit
  -a {cambiar,listar,modificarOpcion}, --accion {cambiar,listar,modificarOpcion}
                        lista gconf
  -d {debian,canaima,ubuntu}, --distribucion {debian,canaima,ubuntu}
                        seleccione entre Canaima,Debian y ubuntu
  -o {orca,gnome-terminal,oowriter,iceweasel,nautilus,ooimpress,pidgin,oocalc,gedit,gnome-calculator,rhythmbox}, --opcion {orca,gnome-terminal,oowriter,iceweasel,nautilus,ooimpress,pidgin,oocalc,gedit,gnome-calculator,rhythmbox}
                        Cambia la configuraci&amp;oacute;n de una opci&amp;oacute;n
  -v, --version
```&lt;/p&gt;
&lt;p&gt;```
./configGconf.py -v
configGconf 0.4&lt;/p&gt;
&lt;p&gt;./configGconf.py -a listar
Listar accesos rapidos del teclado a gconf&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Aplicaci&amp;oacute;n:  orca o
Aplicaci&amp;oacute;n:  gnome-terminal t
Aplicaci&amp;oacute;n:  oowriter w
Aplicaci&amp;oacute;n:  iceweasel n
Aplicaci&amp;oacute;n:  nautilus h
Aplicaci&amp;oacute;n:  ooimpress i
Aplicaci&amp;oacute;n:  pidgin p
Aplicaci&amp;oacute;n:  oocalc x
Aplicaci&amp;oacute;n:  gedit e
Aplicaci&amp;oacute;n:  gnome-calculator c
Aplicaci&amp;oacute;n:  rhythmbox m&lt;/p&gt;
&lt;p&gt;./configGconf.py  -a cambiar -d debian
Listar accesos rapidos del teclado de gconf&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Configurando aplicacion: orca, acceso teclado: o
Configurando aplicacion: gnome-terminal, acceso teclado: t
Configurando aplicacion: oowriter, acceso teclado: w
Configurando aplicacion: iceweasel, acceso teclado: n
Configurando aplicacion: nautilus, acceso teclado: h
Configurando aplicacion: ooimpress, acceso teclado: i
Configurando aplicacion: pidgin, acceso teclado: p
Configurando aplicacion: oocalc, acceso teclado: x
Configurando aplicacion: gedit, acceso teclado: e
Configurando aplicacion: gnome-calculator, acceso teclado: c
Configurando aplicacion: rhythmbox, acceso teclado: m&lt;/p&gt;
&lt;p&gt;./configGconf.py  -a modificarOpcion -d debian -o oowriter
Listar accesos rapidos del teclado de gconf&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Configurando aplicacion: oowriter, acceso teclado: w&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Para finalizar el art&amp;iacute;culo se colocar&amp;aacute; el c&amp;oacute;digo del programa:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;"""
Name: configGconf
Description: Aplicaci&amp;oacute;n y m&amp;oacute;dulo que permite modificar los accesos r&amp;aacute;pido de teclas a programas
Version:0.4
License: GPLv3
Copyright: Copyright (C) 2009  Distrito Socialista Tecnologico AIT PDVSA M&amp;eacute;rida
Author: Ernesto Nadir Crespo Avila
Email: ecrespo@gmail.com
Changelog:
 0.1: * Agregada multiples opciones de configuraci&amp;oacute;n.
 0.2: * Agregada opci&amp;oacute;n de selecci&amp;oacute;n de distribuci&amp;oacute;n debian, ubuntu o canaima.
      * Agregada informaci&amp;oacute;n adicional a la hora de desplegar en pantalla.
 0.3: * Agregado el uso del m&amp;oacute;dulo argparse para simplificar la captura de argumentos del comando.
 0.4: * Agregada la posibilidad de modificar una s&amp;oacute;la opci&amp;oacute;n de las teclas r&amp;aacute;pidas de gconf.
"""
version = "0.4"
autor = "Ernesto Nadir Crespo Avila"
email = "ecrespo@gmail.com"
copyright = "GPLv3"&lt;/p&gt;
&lt;h1 id="importar modulo gconf"&gt;Importar m&amp;oacute;dulo gconf&lt;/h1&gt;
&lt;p&gt;import gconf&lt;/p&gt;
&lt;p&gt;class Conf:
    def &lt;strong&gt;init&lt;/strong&gt;(self):
        #Se crea la instancia de la clase de gconf
        self.__gconfClient = gconf.client_get_default()
        #Se crea la tupĺa aplicaciones      &lt;br/&gt;
        self.__aplicaciones = ("orca", "gnome-terminal","oowriter","iceweasel","nautilus","ooimpress","pidgin","oocalc","gedit","gnome-calculator","rhythmbox")
        #Se crea la ruta del comando del teclado y la ruta del modificador de teclado
        self.__comando = "/apps/metacity/keybinding_commands/command_"
        self.__asignacion_teclado = "/apps/metacity/global_keybindings/run_command_"
        #Se crea un diccionario teclas con la asociaci&amp;oacute;n entre la aplicaci&amp;oacute;n y su acceso r&amp;aacute;pido de teclado
        self.__teclas = {"orca":"o","gnome-terminal":"t","oowriter":"w","iceweasel":"n","nautilus":"h","ooimpress":"i","pidgin":"p","oocalc":"x","gedit":"e","gnome-calculator":"c","rhythmbox":"m"}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def modificar_opcion(self,opciones,distribucion,interfaz=0):
    if distribucion &amp;lt;&amp;gt; "debian":
        self.__aplicaciones = ("orca", "gnome-terminal","oowriter","firefox","nautilus","ooimpress","pidgin","oocalc","gedit","gnome-calculator","rhythmbox")
        self.__teclas = {"orca":"o","gnome-terminal":"t","oowriter":"w","firefox":"n","nautilus":"h","ooimpress":"i","pidgin":"p","oocalc":"x","gedit":"e","gnome-calculator":"c","rhythmbox":"m"}
        if opciones == "iceweasel":
            opcion = "firefox"
        elif opciones == "firefox":
            opcion = opciones
        else:
            opcion = opciones
    else:
        if opciones == "firefox":
            opcion = "iceweasel"
        else:
            opcion = opciones

    if interfaz == 0:
        print "Listar accesos rapidos del teclado de gconf"
        print "________________________________________________"
    cont = 1
    #se genera un ciclo con las aplicaciones existentes
    for aplicacion in self.__aplicaciones:
        #Si la opci&amp;oacute;n existe como aplicaci&amp;oacute;n se modifica el gconf, si no se sale sin resultado
        if aplicacion == opcion:
            ruta1 = "%s%s" %(self.__comando,cont)
            ruta2 = "%s%s" %(self.__asignacion_teclado,cont)
            self.__gconfClient.set_string(ruta1, "%s" %aplicacion)
            self.__gconfClient.set_string(ruta2, "%s" %self.__teclas[aplicacion])
            if interfaz == 0:
                #Se imprime en pantalla los cambios logrados.
                print "Configurando aplicacion: %s, acceso teclado: %s" %(aplicacion,self.__teclas[aplicacion])
            break
        cont = cont+1

def modificar(self,distribucion):
    """
    modificar: Permite modificar los accesos r&amp;aacute;pidos del teclado
    Argumentos:
     * distribucion: se le pasa una distribuci&amp;oacute;n a utilizar entre debian,ubuntu y canaima.
    """
    cont = 1
    print "Listar accesos rapidos del teclado de gconf"
    print "________________________________________________"
    #Se la distribuci&amp;oacute;n no es debian se cambia iceweasel por firefox en las variables aplicaciones y teclas.
    if distribucion &amp;lt;&amp;gt; "debian":
        self.__aplicaciones = ("orca", "gnome-terminal","oowriter","firefox","nautilus","ooimpress","pidgin","oocalc","gedit","gnome-calculator","rhythmbox")
        self.__teclas = {"orca":"o","gnome-terminal":"t","oowriter":"w","firefox":"n","nautilus":"h","ooimpress":"i","pidgin":"p","oocalc":"x","gedit":"e","gnome-calculator":"c","rhythmbox":"m"}
    #Se genera un ciclo seg&amp;uacute;n las aplicaciones
    for aplicacion in self.__aplicaciones:
        #Definici&amp;oacute;n de las rutas del gconf del comando y del modificador del teclado
        ruta1 =  "%s%s" %(self.__comando,cont)
        ruta2 = "%s%s"  %(self.__asignacion_teclado,cont)
        #Se modifica gconf
        self.__gconfClient.set_string(ruta1, "%s" %aplicacion)
        self.__gconfClient.set_string(ruta2, "%s" %self.__teclas[aplicacion])
        #Se imprime en pantalla los cambios logrados.
        print "Configurando aplicacion: %s, acceso teclado: %s" %(aplicacion,self.__teclas[aplicacion])
        cont = cont +1


def listar(self):
    """
    listar: Permite listar los accesos r&amp;aacute;pidos de teclado de gconf
    """
    cont = 1
    print "Listar accesos rapidos del teclado a gconf"
    print "________________________________________________"
    #Se crea un ciclo seg&amp;uacute;n la lista de aplicaciones
    for aplicacion in self.__aplicaciones:
        #Se define la ruta del comando del teclado seg&amp;uacute;n gconf
        ruta1 =  "%s%s" %(self.__comando,cont)
        #Se define la ruta del modificador del teclado
        ruta2 = "%s%s"  %(self.__asignacion_teclado,cont)
        #Se desplega en pantalla 
        print "Aplicaci&amp;oacute;n: " ,self.__gconfClient.get_string(ruta1),self.__gconfClient.get_string(ruta2)
        cont = cont +1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Importar m&amp;oacute;dulo argparse para capturar los argumentos del comando  &lt;br/&gt;
    import argparse
    #Se instancia la clase Conf en el objeto config
    config = Conf()
    #Creaci&amp;oacute;n del parse 
    parser = argparse.ArgumentParser(prog='configGconf',description="Cambiar accesos rapidos en teclado a Gnome")
    acciones = ["cambiar","listar","modificarOpcion"]
    distribuciones = ["debian","canaima","ubuntu"]
    aplicaciones = ["orca", "gnome-terminal","oowriter","iceweasel","nautilus","ooimpress","pidgin","oocalc","gedit","gnome-calculator","rhythmbox"]
    #Se agrega las opciones accion, distribucion y version.  &lt;br/&gt;
    parser.add_argument('-a','--accion',type=str,choices=acciones,default=acciones,help='lista gconf')
    parser.add_argument('-d','--distribucion',choices=distribuciones,type=str,default=distribuciones,help='seleccione entre Canaima,Debian y ubuntu')
    parser.add_argument('-o','--opcion',choices=aplicaciones,type=str,default=aplicaciones,help='Cambia la configuraci&amp;oacute;n de una opci&amp;oacute;n')
    parser.add_argument('-v', '--version', action='version', version='%(prog)s 0.4') 
    #Se captura los argumentos del comando ejecutado.
    args = parser.parse_args()
    # ejecuci&amp;oacute;n de las opciones seg&amp;uacute;n la acci&amp;oacute;n y la distribuci&amp;oacute;n
    if args.accion == "listar":
        #Se lista las configuraciones de los accesos del teclado
        config.listar()
    elif args.distribucion in ('debian','ubuntu','canaima') and args.accion == "cambiar":
        #Se modifican las opciones de los accesos del teclado
        config.modificar(args.distribucion)
    elif args.accion == "modificarOpcion":
        #Permite modificar una opcion
        config.modificar_opcion(args.opcion,args.distribucion)
    else:
        #Si no se pasa ning&amp;uacute;n argumento se despliega la ayuda
        parser.print_help()
```&lt;/p&gt;
&lt;p&gt;En el siguiente art&amp;iacute;culo se explicar&amp;aacute; los cambios que se hicieron en la interfaz gr&amp;aacute;fica del art&amp;iacute;culo &lt;a href="https://www.seraph.to/desarrollo-de-interfaz-grafica-para-la-configuracion-de-accesos-rapidos-de-teclado-para-gconf.html"&gt;Desarrollo de interfaz gr&amp;aacute;fica para la configuraci&amp;oacute;n de accesos r&amp;aacute;pidos del teclado&lt;/a&gt;.
Luego se explicar&amp;aacute; como se crea un paquete python y como se crea un paquete para Debian a partir del paquete python.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Gnome"></category><category term="Gconf"></category><category term="Accesibilidad"></category></entry><entry><title>Widgets en Android con python. Parte 7 (selección simple)</title><link href="https://ecrespo.github.io/widgets-en-android-con-python-parte-7-seleccion-simple.html" rel="alternate"></link><published>2010-07-19T09:00:00-05:30</published><updated>2010-07-19T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-07-19:/widgets-en-android-con-python-parte-7-seleccion-simple.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo explicar&amp;eacute; el uso del widget de selecci&amp;oacute;n simple.&lt;/p&gt;
&lt;p&gt;La idea es tener una tupla con varios colores, se abre un widget con esos colores y se selecciona uno, luego aparecer&amp;aacute; un mensaje con el color seleccionado.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo en python de la aplicaci&amp;oacute;n …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo explicar&amp;eacute; el uso del widget de selecci&amp;oacute;n simple.&lt;/p&gt;
&lt;p&gt;La idea es tener una tupla con varios colores, se abre un widget con esos colores y se selecciona uno, luego aparecer&amp;aacute; un mensaje con el color seleccionado.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo en python de la aplicaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo android y time."&gt;Importar m&amp;oacute;dulo android y time.&lt;/h1&gt;
&lt;p&gt;import android,time&lt;/p&gt;
&lt;h1 id="se instancia el objeto android"&gt;Se instancia el objeto Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se crea el titulo del mensaje de alerta y se crea el widget."&gt;Se crea el titulo del mensaje de alerta y se crea el widget.&lt;/h1&gt;
&lt;p&gt;titulo = 'Color seleccionado'
droid.dialogCreateAlert(titulo)&lt;/p&gt;
&lt;h1 id="se crea la tupla con la lista de colores."&gt;Se crea la tupla con la lista de colores.&lt;/h1&gt;
&lt;p&gt;colores = ('amarillo', 'azul', 'rojo')&lt;/p&gt;
&lt;h1 id="se agrega la tupla al widget de seleccion simple."&gt;Se agrega la tupla al widget de selecci&amp;oacute;n simple.&lt;/h1&gt;
&lt;p&gt;droid.dialogSetItems(colores)&lt;/p&gt;
&lt;h1 id="se muestra el widget."&gt;Se muestra el widget.&lt;/h1&gt;
&lt;p&gt;droid.dialogShow()&lt;/p&gt;
&lt;h1 id="se captura el resultado de seleccionar un color"&gt;Se captura el resultado de seleccionar un color&lt;/h1&gt;
&lt;p&gt;respuesta  = droid.dialogGetResponse().result&lt;/p&gt;
&lt;h1 id="el resultado se guarda en un diccionario y se muestra en un mensaje."&gt;El resultado se guarda en un diccionario y se muestra en un mensaje.&lt;/h1&gt;
&lt;p&gt;droid.makeToast('El color seleccionado es: %s' %colores[respuesta['item']])
```
La siguiente figura muestra el widget de la lista de colores.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Seleccion simple " src="./images/seleccionsimple.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luego de darle clip a un color se muestra un mensaje con el color selecionado como lo muestra la siguiente figura.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Selecci&amp;oacute;n Simple - Salida" src="./images/seleccionsimpleresultado.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para finalizar se muestra la figura del c&amp;oacute;digo QR del programa.&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/seleccion_simple.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Widgets en Android con python. Parte 6 (Botones)</title><link href="https://ecrespo.github.io/widgets-en-android-con-python-parte-6-botones.html" rel="alternate"></link><published>2010-07-16T11:00:00-05:30</published><updated>2010-07-16T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-07-16:/widgets-en-android-con-python-parte-6-botones.html</id><summary type="html">&lt;p&gt;Continuando con los &lt;a href="https://www.seraph.to/category/tutorial-python-en-android.html"&gt;widgets del API de ASE para el lenguaje python&lt;/a&gt; se har&amp;aacute; un script que muestra 3 botones y se mostrar&amp;aacute; el mensaje del resultado de darle clip al bot&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importando el modulo android."&gt;Importando el m&amp;oacute;dulo android.&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="crear la instancia del objeto android"&gt;Crear la instancia del …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;Continuando con los &lt;a href="https://www.seraph.to/category/tutorial-python-en-android.html"&gt;widgets del API de ASE para el lenguaje python&lt;/a&gt; se har&amp;aacute; un script que muestra 3 botones y se mostrar&amp;aacute; el mensaje del resultado de darle clip al bot&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importando el modulo android."&gt;Importando el m&amp;oacute;dulo android.&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="crear la instancia del objeto android"&gt;Crear la instancia del objeto android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="titulo y mensaje del boton."&gt;T&amp;iacute;tulo y mensaje del bot&amp;oacute;n.&lt;/h1&gt;
&lt;p&gt;title = 'Alerta'
message = ('Esta alerta tiene 3 botones y' 'se espera que presione uno')&lt;/p&gt;
&lt;h1 id="crear el widget de mensaje de alerta"&gt;Crear el widget de mensaje de alerta&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateAlert(title, message)&lt;/p&gt;
&lt;h1 id="se definen los mensajes de los botones (si, no y cancelar)."&gt;Se definen los mensajes de los botones (si, no y cancelar).&lt;/h1&gt;
&lt;p&gt;droid.dialogSetPositiveButtonText('Si')
droid.dialogSetNegativeButtonText('No')
droid.dialogSetNeutralButtonText('Cancelar')&lt;/p&gt;
&lt;h1 id="mostrar el mensaje"&gt;Mostrar el mensaje&lt;/h1&gt;
&lt;p&gt;droid.dialogShow()&lt;/p&gt;
&lt;h1 id="captura del resultado de darle clip a algun boton."&gt;Captura del resultado de darle clip a alg&amp;uacute;n bot&amp;oacute;n.&lt;/h1&gt;
&lt;h1 id="el resultado es un diccionario."&gt;el resultado es un diccionario.&lt;/h1&gt;
&lt;p&gt;response = droid.dialogGetResponse().result&lt;/p&gt;
&lt;h1 id="se muestra un mensaje con el resultado de darle clip."&gt;Se muestra un mensaje con el resultado de darle clip.&lt;/h1&gt;
&lt;p&gt;droid.makeToast('El resultado de la ejecucion del boton es: %s'    %response['which'])
```&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra el widget de los botones.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Botones " src="./images/botones2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luego se presentar&amp;aacute; las 3 figuras de darle clip a cada bot&amp;oacute;n.
Mensaje del boton Si. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Boton - Si" src="./images/botones3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Mensaje del boton Cancelar.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Boton - Cancelar" src="./images/botones4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Mensaje del bot&amp;oacute;n No.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Boton - No" src="./images/botones5.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para finalizar se muestra la imPara finalizar se muestra la figura del c&amp;oacute;digo QR del script.&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/botones1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Widgets en Android con python. Parte 5 (Botón)</title><link href="https://ecrespo.github.io/widgets-en-android-con-python-parte-5-boton.html" rel="alternate"></link><published>2010-07-16T10:00:00-05:30</published><updated>2010-07-16T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-07-16:/widgets-en-android-con-python-parte-5-boton.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como crear un mensaje con un bot&amp;oacute;n de continuar, luego de presionar el bot&amp;oacute;n se presenta un mensaje del resultado del bot&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo android"&gt;Importar m&amp;oacute;dulo android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="se crea la instancia del objeto android"&gt;Se crea la instancia del objeto Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="titulo y mensaje del boton"&gt;t&amp;iacute;tulo …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como crear un mensaje con un bot&amp;oacute;n de continuar, luego de presionar el bot&amp;oacute;n se presenta un mensaje del resultado del bot&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo android"&gt;Importar m&amp;oacute;dulo android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="se crea la instancia del objeto android"&gt;Se crea la instancia del objeto Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="titulo y mensaje del boton"&gt;t&amp;iacute;tulo y mensaje del bot&amp;oacute;n&lt;/h1&gt;
&lt;p&gt;title = 'Interfaz de usuario'
message = 'Esta es una prueba'&lt;/p&gt;
&lt;h1 id="se crea la alerta con el titulo y mensaje"&gt;Se crea la alerta con el t&amp;iacute;tulo y mensaje&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateAlert(title, message)&lt;/p&gt;
&lt;h1 id="se define el boton"&gt;Se define el bot&amp;oacute;n&lt;/h1&gt;
&lt;p&gt;droid.dialogSetPositiveButtonText('Continuar')&lt;/p&gt;
&lt;h1 id="se muestra el mensaje"&gt;Se muestra el mensaje&lt;/h1&gt;
&lt;p&gt;droid.dialogShow()&lt;/p&gt;
&lt;h1 id="se captura el resultado del resultado de darle clip al boton"&gt;Se captura el resultado del resultado de darle clip al bot&amp;oacute;n&lt;/h1&gt;
&lt;h1 id="el resultado es un diccionario"&gt;El resultado es un diccionario&lt;/h1&gt;
&lt;p&gt;response = droid.dialogGetResponse().result&lt;/p&gt;
&lt;h1 id="se muestra el resultado del clip del boton"&gt;Se muestra el resultado del clip del bot&amp;oacute;n&lt;/h1&gt;
&lt;p&gt;droid.makeToast('El resultado de la ejecucion del boton es: %s' 
                                %response['which'])
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el bot&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Boton " src="./images/mensaje_alerta1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente figura se muestra el mensaje del resultado de darle clip al bot&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Boton - Resultado" src="./images/mensaje_alerta2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para finalizar se muestra la imagen del c&amp;oacute;digo qr del programa.&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/mensaje_alerta3.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Widgets en Android con python. Parte 4 (notificación)</title><link href="https://ecrespo.github.io/widgets-en-android-con-python-parte-4-notificacion.html" rel="alternate"></link><published>2010-07-15T11:00:00-05:30</published><updated>2010-07-15T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-07-15:/widgets-en-android-con-python-parte-4-notificacion.html</id><summary type="html">&lt;p&gt;A veces se necesita crear un mensaje de notificaci&amp;oacute;n al celular con Android.
El siguiente post explicar&amp;aacute; como crear ese mensaje.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulos android y time"&gt;importar m&amp;oacute;dulos android y time&lt;/h1&gt;
&lt;p&gt;import android,time&lt;/p&gt;
&lt;h1 id="crear la instancia de la clase android"&gt;Crear la instancia de la clase Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se crea el mensaje de notificacion."&gt;Se crea el mensaje …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;A veces se necesita crear un mensaje de notificaci&amp;oacute;n al celular con Android.
El siguiente post explicar&amp;aacute; como crear ese mensaje.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulos android y time"&gt;importar m&amp;oacute;dulos android y time&lt;/h1&gt;
&lt;p&gt;import android,time&lt;/p&gt;
&lt;h1 id="crear la instancia de la clase android"&gt;Crear la instancia de la clase Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se crea el mensaje de notificacion."&gt;Se crea el mensaje de notificaci&amp;oacute;n.&lt;/h1&gt;
&lt;p&gt;droid.notify('Prueba' , 'Hola Mundo!')
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la figura donde aparece en Android la notificaci&amp;oacute;n de un mensaje.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Notificaci&amp;oacute;n -Entrada" src="./images/notificacion1.png"/&gt;&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra ya el mensaje de notificaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Notificaci&amp;oacute;n - Resultado" src="./images/notificacion2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para finalizar les dejo el c&amp;oacute;digo qr del programa en python.&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/notificacion.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Widgets en Android con python. Parte 3 (barra de spinner)</title><link href="https://ecrespo.github.io/widgets-en-android-con-python-parte-3-barra-de-spinner.html" rel="alternate"></link><published>2010-07-15T10:00:00-05:30</published><updated>2010-07-15T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-07-15:/widgets-en-android-con-python-parte-3-barra-de-spinner.html</id><summary type="html">&lt;p&gt;A continuaci&amp;oacute;n se explicar&amp;aacute; como usar la barra de spinner (barra de proceso giratoria).
B&amp;aacute;sicamente el programa es el mismo que el del post anterior: Se solicitar&amp;aacute; el tiempo de ejecuci&amp;oacute;n y luego se inicia la barra de spiner.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="se importa los modulos android y time"&gt;Se importa los m&amp;oacute;dulos …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;A continuaci&amp;oacute;n se explicar&amp;aacute; como usar la barra de spinner (barra de proceso giratoria).
B&amp;aacute;sicamente el programa es el mismo que el del post anterior: Se solicitar&amp;aacute; el tiempo de ejecuci&amp;oacute;n y luego se inicia la barra de spiner.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="se importa los modulos android y time"&gt;Se importa los m&amp;oacute;dulos android y time&lt;/h1&gt;
&lt;p&gt;import android, time&lt;/p&gt;
&lt;h1 id="se instancia el objeto android"&gt;Se instancia el objeto Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se define un titulo y un mensaje"&gt;Se define un t&amp;iacute;tulo y un mensaje&lt;/h1&gt;
&lt;p&gt;title = 'Spinner'
message = 'Este es un simple progreso spinner.'&lt;/p&gt;
&lt;h1 id="se solicita se escriba el tiempo a ejecutar"&gt;Se solicita se escriba el tiempo a ejecutar&lt;/h1&gt;
&lt;p&gt;numero = droid.getInput("Escriba el tiempo","tiempo:")&lt;/p&gt;
&lt;h1 id="se crea la barra de progreso spinner con el titulo y mensaje"&gt;Se crea la barra de progreso spinner con el t&amp;iacute;tulo y mensaje&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateSpinnerProgress(title, message)&lt;/p&gt;
&lt;h1 id="se muestra la barra de progreso"&gt;Se muestra la barra de progreso&lt;/h1&gt;
&lt;p&gt;droid.dialogShow()&lt;/p&gt;
&lt;h1 id="se genera un tiempo de espera dado el numero de entrada"&gt;Se genera un tiempo de espera dado el n&amp;uacute;mero de entrada&lt;/h1&gt;
&lt;p&gt;time.sleep(int(numero[1]))&lt;/p&gt;
&lt;h1 id="se cierra la barra de progreso spinner"&gt;Se cierra la barra de progreso spinner&lt;/h1&gt;
&lt;p&gt;droid.dialogDismiss()
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la figura de la entrada del tiempo de ejecuci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Spiner -Entrada" src="./images/bspinner1.png"/&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la barra de progreso spinner.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Spiner - Resultado" src="./images/bspinner2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para finalizar se muestra el c&amp;oacute;digo qr del programa.&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/barra_spinner.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Widgets en Android con python. Parte 2 (barra de progreso)</title><link href="https://ecrespo.github.io/widgets-en-android-con-python-parte-2-barra-de-progreso.html" rel="alternate"></link><published>2010-07-14T10:00:00-05:30</published><updated>2010-07-14T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-07-14:/widgets-en-android-con-python-parte-2-barra-de-progreso.html</id><summary type="html">&lt;p&gt;Continuando los art&amp;iacute;culos sobre la creaci&amp;oacute;n de widgets de Android con python.&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; vez se crear&amp;aacute; un programa que pida un n&amp;uacute;mero y luego ese n&amp;uacute;mero es el tiempo de ejecuci&amp;oacute;n de una barra de progreso.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo android y time"&gt;Importar m&amp;oacute;dulo android y time&lt;/h1&gt;
&lt;p&gt;import android,time …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando los art&amp;iacute;culos sobre la creaci&amp;oacute;n de widgets de Android con python.&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; vez se crear&amp;aacute; un programa que pida un n&amp;uacute;mero y luego ese n&amp;uacute;mero es el tiempo de ejecuci&amp;oacute;n de una barra de progreso.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo android y time"&gt;Importar m&amp;oacute;dulo android y time&lt;/h1&gt;
&lt;p&gt;import android,time&lt;/p&gt;
&lt;h1 id="instanciacion de la clase android"&gt;instanciaci&amp;oacute;n de la clase android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="definir mensajes"&gt;Definir mensajes&lt;/h1&gt;
&lt;p&gt;titulo = "Horizontal"
mensaje = "Este es una barra de progreso horizontal"&lt;/p&gt;
&lt;h1 id="se pide el tiempo de ejecucion en seg"&gt;Se pide el tiempo de ejecuci&amp;oacute;n en seg&lt;/h1&gt;
&lt;p&gt;numero = droid.getInput("Escriba el tiempo","tiempo:")&lt;/p&gt;
&lt;h1 id="crear la barra horizontal con titulo, mensaje y el numero"&gt;Crear la barra horizontal con t&amp;iacute;tulo, mensaje y el n&amp;uacute;mero&lt;/h1&gt;
&lt;p&gt;droid.dialogCreateHorizontalProgress(titulo,mensaje,int(numero[1])) &lt;/p&gt;
&lt;h1 id="se muestra la barra de progreso"&gt;Se muestra la barra de progreso&lt;/h1&gt;
&lt;p&gt;droid.dialogShow()&lt;/p&gt;
&lt;h1 id="ejecucion del ciclo en 0.1 seg de la barra de progeso"&gt;ejecuci&amp;oacute;n del ciclo en 0.1 seg de la barra de progeso&lt;/h1&gt;
&lt;p&gt;for i in range(0,int(numero[1])):
   time.sleep(0.1)
   droid.dialogSetCurrentProgress(i)&lt;/p&gt;
&lt;h1 id="se cierra la barra de progeso"&gt;Se cierra la barra de progeso&lt;/h1&gt;
&lt;p&gt;droid.dialogDismiss()
```&lt;/p&gt;
&lt;p&gt;El programa no evalua si la entrada de datos es un n&amp;uacute;mero entero, eso se logra manejando excepciones en python.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra la imagen de la entrada de datos.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Barra de progreso -Entrada" src="./images/bprogreso1.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente imagen es la barra de progreso en ejecuci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Barra de progreso - Resultado" src="./images/bprogreso2.png"/&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo qr del programa en python.&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/bprogreso.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Widgets en Android con python. Parte 1 (entrada de datos)</title><link href="https://ecrespo.github.io/widgets-en-android-con-python-parte-1-entrada-de-datos.html" rel="alternate"></link><published>2010-07-05T10:00:00-05:30</published><updated>2010-07-05T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-07-05:/widgets-en-android-con-python-parte-1-entrada-de-datos.html</id><summary type="html">&lt;p&gt;A continuaci&amp;oacute;n viene una serie de scripts para probar los distintos widgets (Entrada de datos, presentar en pantalla, selecci&amp;oacute;n simple, multiple, etc).&lt;/p&gt;
&lt;p&gt;El primero que se probar&amp;aacute; es el de entrada de datos y luego el dato insertado se presentar&amp;aacute; en la pantalla del celular.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A continuaci&amp;oacute;n viene una serie de scripts para probar los distintos widgets (Entrada de datos, presentar en pantalla, selecci&amp;oacute;n simple, multiple, etc).&lt;/p&gt;
&lt;p&gt;El primero que se probar&amp;aacute; es el de entrada de datos y luego el dato insertado se presentar&amp;aacute; en la pantalla del celular.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo android"&gt;Importar m&amp;oacute;dulo Android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="crear la instancia del objeto android"&gt;Crear la instancia del objeto android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="solicitar la entreda de datos en este caso el mensaje escriba su nombre como titulo"&gt;Solicitar la entreda de datos en este caso el mensaje Escriba su nombre como t&amp;iacute;tulo&lt;/h1&gt;
&lt;h1 id="y luego como campo de entrada el nombre"&gt;Y luego como campo de entrada el nombre&lt;/h1&gt;
&lt;h1 id="se guarda el dato en texto"&gt;Se guarda el dato en texto&lt;/h1&gt;
&lt;p&gt;texto = droid.getInput("Escriba su nombre","Nombre:")&lt;/p&gt;
&lt;h1 id="se manda un saludo en pantalla con el nombre del usuario, la info se encuentra en"&gt;Se manda un saludo en pantalla con el nombre del usuario, la info se encuentra en&lt;/h1&gt;
&lt;h1 id="texto el cual es una lista."&gt;texto el cual es una lista.&lt;/h1&gt;
&lt;p&gt;droid.makeToast('Hola %s' %texto[1])
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se presenta las imagenes del script.&lt;/p&gt;
&lt;p&gt;Entrada de datos:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Entrada de datos" src="./images/entradanombre.png"/&gt;&lt;/p&gt;
&lt;p&gt;Resultado:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Entrada de datos - Resultado" src="./images/salidanombre.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo lo pueden bajar del siguiente c&amp;oacute;digo QR:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/entradadatoscodigo.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Compartir scripts para android</title><link href="https://ecrespo.github.io/compartir-scripts-para-android.html" rel="alternate"></link><published>2010-07-03T10:00:00-05:30</published><updated>2010-07-03T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-07-03:/compartir-scripts-para-android.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; el proceso de compartir archivos para Android, la gu&amp;iacute;a en ingl&amp;eacute;s se encuentra en el sitio de &lt;a href="http://code.google.com/p/android-scripting/wiki/SharingScripts"&gt;ASE&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;El proceso se basa en la generaci&amp;oacute;n de un c&amp;oacute;digo de barras QR. Se tiene el enlace del proyecto ZXing que permite generar los c&amp;oacute;digos de barra …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; el proceso de compartir archivos para Android, la gu&amp;iacute;a en ingl&amp;eacute;s se encuentra en el sitio de &lt;a href="http://code.google.com/p/android-scripting/wiki/SharingScripts"&gt;ASE&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;El proceso se basa en la generaci&amp;oacute;n de un c&amp;oacute;digo de barras QR. Se tiene el enlace del proyecto ZXing que permite generar los c&amp;oacute;digos de barra desde internet, el enlace para generar el c&amp;oacute;digo lo tienen &lt;a href="http://zxing.appspot.com/generator/"&gt;aqu&amp;iacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El proceso para compartir scripts de python, perl, tcl, bash,ruby o lua es el siguiente:
Generar C&amp;oacute;digo de Barras QR: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Entre al generador de c&amp;oacute;digo en l&amp;iacute;nea del proyecto ZXing.&lt;/li&gt;
&lt;li&gt;Seleccione text en el contenido&lt;/li&gt;
&lt;li&gt;En el campo de texto agregue en la primera l&amp;iacute;nea el nombre del script por ejemplo prueba.py&lt;/li&gt;
&lt;li&gt;En las siguientes l&amp;iacute;neas coloque el c&amp;oacute;digo del programa&lt;/li&gt;
&lt;li&gt;Seleccione el tama&amp;ntilde;o del c&amp;oacute;digo de barras a L&lt;/li&gt;
&lt;li&gt;Dele clip a generar&lt;/li&gt;
&lt;li&gt;Comparta la imagen del c&amp;oacute;digo de barras o incruste el enlace generado&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bajar el script al celular:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ejecute ASE y vuelva a la lista de scripts&lt;/li&gt;
&lt;li&gt;Presione el bot&amp;oacute;n Men&amp;uacute;&lt;/li&gt;
&lt;li&gt;Seleccione agregar (add)&lt;/li&gt;
&lt;li&gt;Seleccione escanear c&amp;oacute;digo de barras (scan barcode)&lt;/li&gt;
&lt;li&gt;Escanee el c&amp;oacute;digo generado anteriormente y se agregar&amp;aacute; el script a la lista de scripts&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hay que tomar en cuenta que los scripts tienen que ser peque&amp;ntilde;os ya que QR s&amp;oacute;lo soporta 4.296 caracteres.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n agrego los c&amp;oacute;digos QR de los scripts explicados en los art&amp;iacute;culos anteriores:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enviar mensajes de texto desde Android con python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="chart1" src="./images/chart1.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Env&amp;iacute;o de correos desde Android con python.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Correo" src="./images/chart_correo.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lector de c&amp;oacute;digo de barras hecho en python.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo de Barras" src="./images/codigobarras.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Escaneado de redes inal&amp;aacute;mbricas con python desde Android. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Scan wifi" src="./images/scan_wifi.png"/&gt;&lt;/p&gt;
&lt;p&gt;Ya en los siguientes art&amp;iacute;culos sobre scripts para Android se colocar&amp;aacute;n los C&amp;oacute;digos QR para facilitar el uso de los scripts.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Enviar mensajes de texto desde Android con python</title><link href="https://ecrespo.github.io/enviar-mensajes-de-texto-desde-android-con-python.html" rel="alternate"></link><published>2010-06-27T15:00:00-05:30</published><updated>2010-06-27T15:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-06-27:/enviar-mensajes-de-texto-desde-android-con-python.html</id><summary type="html">&lt;p&gt;Continuando con la referencia del API de ASE para Android se explicar&amp;aacute; como enviar un mensaje de texto desde python para un celular con Android.&lt;/p&gt;
&lt;p&gt;EL API para enviar mensajes de texto es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;smsSend(String destinationAddress: typically a phone number,String text) Sends an SMS.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con la referencia del API de ASE para Android se explicar&amp;aacute; como enviar un mensaje de texto desde python para un celular con Android.&lt;/p&gt;
&lt;p&gt;EL API para enviar mensajes de texto es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;smsSend(String destinationAddress: typically a phone number,String text) Sends an SMS.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo de env&amp;iacute;o de SMS:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importando el modulo android y el modulo time"&gt;Importando el m&amp;oacute;dulo android y el m&amp;oacute;dulo time&lt;/h1&gt;
&lt;p&gt;import android, time&lt;/p&gt;
&lt;h1 id="creando la instancia droid del objeto android"&gt;Creando la instancia droid del objeto Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="asignando el numero de telefono y mensaje"&gt;Asignando el n&amp;uacute;mero de tel&amp;eacute;fono y mensaje&lt;/h1&gt;
&lt;p&gt;telefono ="0xxxyyyyyyy"
mensaje = "Esta es una prueba de envio de sms a la hora %s" %time.ctime()&lt;/p&gt;
&lt;h1 id="enviar mensaje a la pantalla de android con la info del numero y mensaje"&gt;Enviar mensaje a la pantalla de android con la info del n&amp;uacute;mero y mensaje&lt;/h1&gt;
&lt;p&gt;droid.makeToast("enviando mensaje a %s, con el siguiente contenido: %s" %(telefono,mensaje))&lt;/p&gt;
&lt;h1 id="enviando el mensaje de texto"&gt;Enviando el mensaje de texto&lt;/h1&gt;
&lt;p&gt;droid.smsSend(telefono,mensaje)&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El mensaje llego al celular del n&amp;uacute;mero asignado sin problemas.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Linux"></category><category term="Python"></category><category term="SMS"></category></entry><entry><title>Enviar correo desde Android con python</title><link href="https://ecrespo.github.io/enviar-correo-desde-android-con-python.html" rel="alternate"></link><published>2010-06-27T14:00:00-05:30</published><updated>2010-06-27T14:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-06-27:/enviar-correo-desde-android-con-python.html</id><summary type="html">&lt;p&gt;Siguiendo con la API de ASE se tiene una funci&amp;oacute;n que permite enviar un correo pasando el correo, el asunto y el cuerpo del correo.&lt;/p&gt;
&lt;p&gt;La funci&amp;oacute;n del API de ASE que permite enviar correos se llama:
sendEmail(correo,asunto,cuerpo_correo)&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se coloca el c&amp;oacute;digo del programa en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Siguiendo con la API de ASE se tiene una funci&amp;oacute;n que permite enviar un correo pasando el correo, el asunto y el cuerpo del correo.&lt;/p&gt;
&lt;p&gt;La funci&amp;oacute;n del API de ASE que permite enviar correos se llama:
sendEmail(correo,asunto,cuerpo_correo)&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se coloca el c&amp;oacute;digo del programa en python para enviar el correo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="se importa el modulo android"&gt;Se importa el m&amp;oacute;dulo android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="se crea la instancia de la clase android"&gt;Se crea la instancia de la clase Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="se define la direccion de correo, el asunto del correo y el contenido del mismo"&gt;Se define la direcci&amp;oacute;n de correo, el asunto del correo y el contenido del mismo&lt;/h1&gt;
&lt;p&gt;asunto = "Prueba de envio de correo desde Android con un script de python"
para = "ecrespo@gmail.com"
cuerpo_correo = "Esta es una prueba de envio de correo\n El tiempo en el reloj es: %s\n ------\n Ernesto Crespo\n" %time.ctime()&lt;/p&gt;
&lt;h1 id="se llama a la funcion sendemail con los datos necesarios."&gt;Se llama a la funci&amp;oacute;n sendEmail con los datos necesarios.&lt;/h1&gt;
&lt;h1 id="esto llama a la aplicacion de envio de correo de forma grafica con la"&gt;Esto llama a la aplicaci&amp;oacute;n de env&amp;iacute;o de correo de forma gr&amp;aacute;fica con la&lt;/h1&gt;
&lt;h1 id="informacion que se pasa en la funcion."&gt;informaci&amp;oacute;n que se pasa en la funci&amp;oacute;n.&lt;/h1&gt;
&lt;p&gt;droid.sendEmail(para,asunto,cuerpo_correo)&lt;/p&gt;
&lt;h1 id="se finaliza la instancia de la clase."&gt;Se finaliza la instancia de la clase.&lt;/h1&gt;
&lt;p&gt;droid.exit()
```&lt;/p&gt;
&lt;p&gt;El resultado se puede ver en las siguientes im&amp;aacute;genes:
La primera imagen es del buz&amp;oacute;n de salida.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Email Android Python - Enviados" src="./images/enviados1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Y la siguiente imagen es del buz&amp;oacute;n de recibidos.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Email Android Python - Recibidos " src="./images/recibidos1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Notar&amp;aacute; que en el correo se tiene la hora de ejecuci&amp;oacute;n del script pero el script se recibi&amp;oacute; a otra hora, el problema fue que el celular no ten&amp;iacute;a conexi&amp;oacute;n 3G y se tuvo que conectar a una red wifi para poder enviar los correos.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Linux"></category><category term="Python"></category></entry><entry><title>Escaneado de redes inalámbricas con python desde Android</title><link href="https://ecrespo.github.io/escaneado-de-redes-inalambricas-con-python-desde-android.html" rel="alternate"></link><published>2010-06-27T13:00:00-05:30</published><updated>2010-06-27T13:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-06-27:/escaneado-de-redes-inalambricas-con-python-desde-android.html</id><summary type="html">&lt;p&gt;Revisando el API de ASE encuentro que hay una forma de escanear redes inal&amp;aacute;mbricas con python en Android.
La idea es escanear las redes inal&amp;aacute;mbricas existentes y luego guardar la informaci&amp;oacute;n en un archivo y presentarla en pantalla del celular.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se presenta el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar los modulos android y time"&gt;Importar los m&amp;oacute;dulos …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;Revisando el API de ASE encuentro que hay una forma de escanear redes inal&amp;aacute;mbricas con python en Android.
La idea es escanear las redes inal&amp;aacute;mbricas existentes y luego guardar la informaci&amp;oacute;n en un archivo y presentarla en pantalla del celular.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se presenta el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar los modulos android y time"&gt;Importar los m&amp;oacute;dulos android y time&lt;/h1&gt;
&lt;p&gt;import  android,time&lt;/p&gt;
&lt;h1 id="creando el objeto droid de la clase android"&gt;Creando el objeto droid de la clase Android&lt;/h1&gt;
&lt;p&gt;droid =  android.Android()&lt;/p&gt;
&lt;h1 id="escanear las redes inalambricas existentes y guardar en la variable redeswifi"&gt;Escanear las redes inal&amp;aacute;mbricas existentes y  guardar en la variable redeswifi&lt;/h1&gt;
&lt;p&gt;redeswifi = droid.wifiGetScanResults()&lt;/p&gt;
&lt;h1 id="se crea un archivo de texto donde se almacenara la informacion de las redes"&gt;Se crea un  archivo de texto donde se almacenar&amp;aacute; la informaci&amp;oacute;n de las redes&lt;/h1&gt;
&lt;p&gt;archivo =  open('/sdcard/redes.txt','w')&lt;/p&gt;
&lt;h1 id="se crea una lista vacia"&gt;Se crea una lista vac&amp;iacute;a&lt;/h1&gt;
&lt;p&gt;lista = []&lt;/p&gt;
&lt;h1 id="la informacion de las redes inalambricas se encuentra en el indice 1"&gt;La informaci&amp;oacute;n  de las redes inal&amp;aacute;mbricas se encuentra en el indice 1&lt;/h1&gt;
&lt;h1 id="de una lista, este indice contiene otra lista y dentro hay un diccionario"&gt;de una lista,  este indice contiene otra lista y dentro hay un diccionario&lt;/h1&gt;
&lt;p&gt;for i in  range(len(redeswifi[1])):
    #Se espera 1 segundo por cada iteraci&amp;oacute;n
    time.sleep(1)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se toma los  valores del diccionario(ssid,frequency,capabilities,level)
essid =  redeswifi[1][i]['ssid']
frecuencia = redeswifi[1][i]['frequency']
capacidad =  redeswifi[1][i]['capabilities']
level = redeswifi[1][i]['level']

#Se prepara  la informaci&amp;oacute;n para ser presentada en pantalla y en archivo
infored =  "Red inalambrica : %s, frecuencia: %s, se&amp;ntilde;al: %s, cifrado:%s" \
                                                             %(essid,frecuencia,level,capacidad)

#Se presenta  la informaci&amp;oacute;n en la pantalla del celular y se guarda tambi&amp;eacute;n
#en una lista
 droid.makeToast(infored)
lista.append("%s\n" %infored)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="se escribe en el archivo y se cierra el mismo"&gt;Se escribe en el  archivo y se cierra el mismo&lt;/h1&gt;
&lt;p&gt;archivo.writelines(lista)
archivo.close()
```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el contenido del archivo generado en el script:&lt;/p&gt;
&lt;p&gt;```
Red inalambrica : prueba, frecuencia: 2442, se&amp;ntilde;al: -91, cifrado:
Red inalambrica : pasillo, frecuencia: 2422, se&amp;ntilde;al: -93, cifrado:[WPA2-PSK-TKIP+CCMP]&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Linux"></category><category term="Python"></category></entry><entry><title>Lector de código de barras hecho en python para Android</title><link href="https://ecrespo.github.io/lector-de-codigo-de-barras-hecho-en-python-para-android.html" rel="alternate"></link><published>2010-06-13T13:00:00-05:30</published><updated>2010-06-13T13:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-06-13:/lector-de-codigo-de-barras-hecho-en-python-para-android.html</id><summary type="html">&lt;p&gt;Este post se basa en el art&amp;iacute;culo en ingl&amp;eacute;s de Matt Cutts donde crea el lector de c&amp;oacute;digo de barras en 6 l&amp;iacute;neas de c&amp;oacute;digo, el enlace del blog lo tienen &lt;a href="http://www.mattcutts.com/blog/android-barcode-scanner/"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n tienen el c&amp;oacute;digo necesario para buscar en internet un c&amp;oacute;digo de barras capturado por medio de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este post se basa en el art&amp;iacute;culo en ingl&amp;eacute;s de Matt Cutts donde crea el lector de c&amp;oacute;digo de barras en 6 l&amp;iacute;neas de c&amp;oacute;digo, el enlace del blog lo tienen &lt;a href="http://www.mattcutts.com/blog/android-barcode-scanner/"&gt;ac&amp;aacute;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n tienen el c&amp;oacute;digo necesario para buscar en internet un c&amp;oacute;digo de barras capturado por medio de la camara del celular:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo android"&gt;Importar modulo android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="instanciar el objeto android"&gt;Instanciar el objeto Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="llama al lector de codigo de barras del celular, se captura el codigo isbn"&gt;Llama al lector de c&amp;oacute;digo de barras del celular, se captura el c&amp;oacute;digo ISBN&lt;/h1&gt;
&lt;h1 id="y se abre un navegador en google books para buscar ese codigo"&gt;y se abre un navegador en google books para buscar ese c&amp;oacute;digo&lt;/h1&gt;
&lt;p&gt;droid.startActivity('android.intent.action.VIEW', "http://books.google.com?q=%d" %int(droid.scanBarcode()[1]['extras']['SCAN_RESULT']))&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Eliminando los comentarios al final el script contiene s&amp;oacute;lo 3 l&amp;iacute;neas de c&amp;oacute;digo para realizar la busqueda en internet libros por medio del c&amp;oacute;digo de barras capturado desde la camara.&lt;/p&gt;
&lt;p&gt;Pero lo mejor ser&amp;aacute; desglosar la &amp;uacute;ltima l&amp;iacute;nea de c&amp;oacute;digo en varias l&amp;iacute;neas para una explicaci&amp;oacute;n detallada de lo que hace la &amp;uacute;ltima l&amp;iacute;nea:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo android_1"&gt;Importar modulo android&lt;/h1&gt;
&lt;p&gt;import android&lt;/p&gt;
&lt;h1 id="instanciar el objeto android_1"&gt;Instanciar el objeto Android&lt;/h1&gt;
&lt;p&gt;droid = android.Android()&lt;/p&gt;
&lt;h1 id="escanear el codigo de barra por medio de la camara del celular, code guarda una lista"&gt;Escanear el codigo de barra por medio de la camara del celular, code guarda una lista&lt;/h1&gt;
&lt;p&gt;code = droid.scanBarcode()&lt;/p&gt;
&lt;h1 id="capturar el isbn del diccionario que contiene la lista"&gt;Capturar el isbn del diccionario que contiene la lista&lt;/h1&gt;
&lt;h1 id="la lista tiene 3 elementos y el numero 1 contiene un diccionario."&gt;La lista tiene 3 elementos y el n&amp;uacute;mero 1 contiene un diccionario.&lt;/h1&gt;
&lt;h1 id="el diccionario contiene el formato del codigo de barras y el isbn."&gt;El diccionario contiene el formato del c&amp;oacute;digo de barras y el isbn.&lt;/h1&gt;
&lt;h1 id="luego ese codigo se convierte de utf8 a int"&gt;Luego ese c&amp;oacute;digo se convierte de utf8 a int&lt;/h1&gt;
&lt;p&gt;isbn = int(code[1]['extras']['SCAN_RESULT'])&lt;/p&gt;
&lt;h1 id="crea el url completo para realizar la busqueda del isbn"&gt;Crea el url completo para realizar la busqueda del isbn&lt;/h1&gt;
&lt;p&gt;url = "http://books.google.com?q=%d" %isbn&lt;/p&gt;
&lt;h1 id="inicia la busqueda del isbn en google abriendo un navegador"&gt;Inicia la busqueda del isbn en google abriendo un navegador&lt;/h1&gt;
&lt;p&gt;droid.startActivity('android.intent.action.VIEW', url)
```&lt;/p&gt;
&lt;p&gt;Al escanear el c&amp;oacute;digo de barra desde el celular se abre una ventana del navegador para realizar una busqueda en books.google.com del isbn capturado.&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra el resultado de la busqueda.&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo barras en python desde Android" src="./images/isbn.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Android"></category><category term="Python"></category></entry><entry><title>Instalar python en Android</title><link href="https://ecrespo.github.io/instalar-python-en-android.html" rel="alternate"></link><published>2010-06-06T13:00:00-05:30</published><updated>2010-06-06T13:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-06-06:/instalar-python-en-android.html</id><summary type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como instalar python en Android desde el emulador para poder mostrar las capturas de pantalla y ese procedimiento es el mismo para instalar python desde el celular.&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita hacer es iniciar el emulador como se explico en el art&amp;iacute;culo de &lt;a href="https://www.seraph.to/instalacion-del-sdk-de-android-en-linux.html#instalacion-del-sdk-de-android-en-linux"&gt;instalaci&amp;oacute;n del SDK …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este art&amp;iacute;culo explicar&amp;aacute; como instalar python en Android desde el emulador para poder mostrar las capturas de pantalla y ese procedimiento es el mismo para instalar python desde el celular.&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita hacer es iniciar el emulador como se explico en el art&amp;iacute;culo de &lt;a href="https://www.seraph.to/instalacion-del-sdk-de-android-en-linux.html#instalacion-del-sdk-de-android-en-linux"&gt;instalaci&amp;oacute;n del SDK de Android&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Al ejecutar adb devices encontrar&amp;aacute;n un dispositivo virtual funcionando.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@zvezda:~/android-sdk-linux_86/tools$ ./adb devices List of devices attached emulator-5554 device&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego se baja el programa ASE desde el &lt;a href="http://code.google.com/p/android-scripting/downloads/detail?name=ase_r24.apk"&gt;siguiente enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@zvezda:~/android-sdk-linux_86/tools$ ./adb install ../../Descargas/ase_r22.apk 868 KB/s (217639 bytes in 0.244s) pkg: /data/local/tmp/ase_r22.apk Success&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Esto indica que se instalo sin problemas el programa ASE.&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra el home del emulador con ASE instalado.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 1" src="./images/pythonandroid1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle clip al icono de ASE aparece la una informaci&amp;oacute;n donde nos pide que se agreguen scripts o interpretes presionando el bot&amp;oacute;n men&amp;uacute; como lo muestra la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 2" src="./images/pythonandroid2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle men&amp;uacute; aparecen varias opciones como lo son: Agregar, Ver, Preferencias, Ayuda, Actualizar. Siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 3" src="./images/pythonandroid3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle View o Ver aparecer&amp;aacute; un men&amp;uacute; donde se tiene varias opciones para visualizar, en este caso se quiere visualizar interpretes. Siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 4" src="./images/pythonandroid4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle clip a Interpretes aparecer&amp;aacute; s&amp;oacute;lo como interprete Shell y las opciones Agregar, Iniciar servidor, Preferencias y Ayuda. En este caso se va a agregar un interprete nuevo.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 5" src="./images/pythonandroid5.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle clip a agregar aparecer&amp;aacute; una lista de interpretes que en este caso se instalar&amp;aacute; python. Siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 6" src="./images/pythonandroid6.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al seleccionar Python 2.6.2 se inicia el proceso de instalaci&amp;oacute;n del interprete y de algunos scripts como lo muestran las 2 siguientes figuras:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 7" src="./images/pythonandroid7.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 8" src="./images/pythonandroid8.png"/&gt;&lt;/p&gt;
&lt;p&gt;Ahora aparece Python aparte de Shell en la lista de interpretadores como lo muestra la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 9" src="./images/pythonandroid9.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para probar que todo est&amp;aacute; funcionando se selecciona el interpretador y este se ejecutar&amp;aacute; como lo muestra la figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 10" src="./images/pythonandroid10.png"/&gt;&lt;/p&gt;
&lt;p&gt;Por &amp;uacute;ltimo se lista los scripts en python de ejemplo para trabajar con Android:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python en Android 11" src="./images/pythonandroid11.png"/&gt;&lt;/p&gt;
&lt;p&gt;En siguientes art&amp;iacute;culos se explicar&amp;aacute; el uso de los scripts para ir creando una aplicaci&amp;oacute;n para Android.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Android"></category><category term="Debian"></category><category term="Python"></category></entry><entry><title>Conectarse a internet por medio de un celular con android (AziLink)</title><link href="https://ecrespo.github.io/conectarse-a-internet-por-medio-de-un-celular-con-android-azilink.html" rel="alternate"></link><published>2010-05-29T13:00:00-05:30</published><updated>2010-05-29T13:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-05-29:/conectarse-a-internet-por-medio-de-un-celular-con-android-azilink.html</id><summary type="html">&lt;p&gt;A diferencia de las aplicaciones que usan http proxy AziLink permite conectarse por celular usando openvpn.&lt;/p&gt;
&lt;p&gt;La p&amp;aacute;gina del proyecto AziLink lo puedes conseguir en este e&lt;a href="http://code.google.com/p/azilink/"&gt;nlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El enlace para bajar openvpn es openvpn.net. En Debian y Ubuntu con ejecutar un aptitude es suficiente:&lt;/p&gt;
&lt;p&gt;```
aptitude install openvpn-blacklist openvpn …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A diferencia de las aplicaciones que usan http proxy AziLink permite conectarse por celular usando openvpn.&lt;/p&gt;
&lt;p&gt;La p&amp;aacute;gina del proyecto AziLink lo puedes conseguir en este e&lt;a href="http://code.google.com/p/azilink/"&gt;nlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El enlace para bajar openvpn es openvpn.net. En Debian y Ubuntu con ejecutar un aptitude es suficiente:&lt;/p&gt;
&lt;p&gt;```
aptitude install openvpn-blacklist openvpn&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Los pasos son los siguientes:
1. Habilitar el modo depuraci&amp;oacute;n del USB en el tel&amp;eacute;fono. En el home de las apliaciones del celular ir a Configuraci&amp;oacute;n-&amp;gt;Aplicaciones-&amp;gt;Desarrollo-&amp;gt;USB debugging.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instale el SDK de Android, el procedimiento lo consigue en este &lt;a href="http://ernesto-ecrespo.blogspot.com/2010/05/instalacion-del-sdk-de-android-en-linux.html"&gt;enlace&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Instalar AziLink desde el market del celular.&lt;/li&gt;
&lt;li&gt;En el computador hacer el redireccionamiento de puertos:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;adb forward tcp:41927 tcp:41927&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;En el celular ejecutar AziLink y verificar que su servicio est&amp;eacute; activo.&lt;/li&gt;
&lt;li&gt;Bajar y descomprimir azilink.zip donde se encuentra el archivo de configuraci&amp;oacute;n.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;La configuraci&amp;oacute;n de openvpn es la siguiente:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="define tun como dispositivo"&gt;Define tun como dispositivo&lt;/h1&gt;
&lt;p&gt;dev tun&lt;/p&gt;
&lt;h1 id="define la ip y puerto remoto, el que se configuro en la redireccion con adb"&gt;Define la IP y puerto remoto, el que se configuro en la redirecci&amp;oacute;n con adb&lt;/h1&gt;
&lt;p&gt;remote 127.0.0.1 41927 tcp-client&lt;/p&gt;
&lt;h1 id="define la ip punto a punto de la conexion openvpn"&gt;Define la IP punto a punto de la conexi&amp;oacute;n openvpn&lt;/h1&gt;
&lt;p&gt;ifconfig 192.168.56.2 192.168.56.1&lt;/p&gt;
&lt;h1 id="define rutas"&gt;Define rutas&lt;/h1&gt;
&lt;p&gt;route 0.0.0.0 128.0.0.0
route 128.0.0.0 128.0.0.0&lt;/p&gt;
&lt;h1 id="define flags del socket."&gt;Define flags del socket.&lt;/h1&gt;
&lt;p&gt;socket-flags TCP_NODELAY&lt;/p&gt;
&lt;h1 id="keepalive 10 30"&gt;keepalive 10 30&lt;/h1&gt;
&lt;p&gt;ping 10&lt;/p&gt;
&lt;h1 id="define el dns por medio de las opciones de dhcp"&gt;Define el DNS por medio de las opciones de dhcp&lt;/h1&gt;
&lt;p&gt;dhcp-option DNS 192.168.56.1
```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Agregar en /etc/resolv.conf el siguiente DNS:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;nameserver 192.168.56.1&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Iniciar openvpn con el archivo de configuraci&amp;oacute;n:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sudo openvpn --config azilink.ovpn&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Sat May 29 23:28:18 2010 OpenVPN 2.1.0 i486-pc-linux-gnu [SSL] [LZO2] [EPOLL] [PKCS11] [MH] [PF_INET6] [eurephia] built on Apr 10 2010
Sat May 29 23:28:18 2010 WARNING: --ping should normally be used with --ping-restart or --ping-exit
Sat May 29 23:28:18 2010 NOTE: OpenVPN 2.1 requires '--script-security 2' or higher to call user-defined scripts or executables
Sat May 29 23:28:18 2010 ******* WARNING *******: all encryption and authentication features disabled -- all data will be tunnelled as cleartext
Sat May 29 23:28:18 2010 TUN/TAP device tun0 opened
Sat May 29 23:28:18 2010 /sbin/ifconfig tun0 192.168.56.2 pointopoint 192.168.56.1 mtu 1500
Sat May 29 23:28:18 2010 Attempting to establish TCP connection with [AF_INET]127.0.0.1:41927 [nonblock]
Sat May 29 23:28:18 2010 TCP connection established with [AF_INET]127.0.0.1:41927
Sat May 29 23:28:18 2010 TCPv4_CLIENT link local: [undef]
Sat May 29 23:28:18 2010 TCPv4_CLIENT link remote: [AF_INET]127.0.0.1:41927
Sat May 29 23:28:21 2010 Peer Connection Initiated with [AF_INET]127.0.0.1:41927
Sat May 29 23:28:22 2010 Initialization Sequence Completed&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al revisar en whatismyip.com la IP que se est&amp;aacute; usando es la siguiente 201.239.27.224.&lt;/p&gt;
&lt;p&gt;Personalmente prefiero est&amp;aacute; opci&amp;oacute;n que usar http proxy, el archivo de configuraci&amp;oacute;n de openvpn se puede mejorar como permitir que copie el archivo de resolv.conf al momento de levantar el vpn y colocar el archivo anterior al detener el vpn.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Android"></category><category term="Debian"></category></entry><entry><title>Conectarse a Internet por medio de un celular con android (proxoid)</title><link href="https://ecrespo.github.io/conectarse-a-internet-por-medio-de-un-celular-con-android-proxoid.html" rel="alternate"></link><published>2010-05-29T12:00:00-05:30</published><updated>2010-05-29T12:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-05-29:/conectarse-a-internet-por-medio-de-un-celular-con-android-proxoid.html</id><summary type="html">&lt;p&gt;Como mencion&amp;eacute; en el art&amp;iacute;culo anterior iniciar&amp;eacute; una serie de art&amp;iacute;culos sobre distintas aplicaciones para conectarse a internet desde el celular.&lt;/p&gt;
&lt;p&gt;La primera aplicaci&amp;oacute;n se llama proxoid, es un proxy http y el sitio de la aplicaci&amp;oacute;n lo pueden encontrar en el &lt;a href="http://code.google.com/p/proxoid/"&gt;siguiente enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La gu&amp;iacute;a de instalaci&amp;oacute;n general lo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Como mencion&amp;eacute; en el art&amp;iacute;culo anterior iniciar&amp;eacute; una serie de art&amp;iacute;culos sobre distintas aplicaciones para conectarse a internet desde el celular.&lt;/p&gt;
&lt;p&gt;La primera aplicaci&amp;oacute;n se llama proxoid, es un proxy http y el sitio de la aplicaci&amp;oacute;n lo pueden encontrar en el &lt;a href="http://code.google.com/p/proxoid/"&gt;siguiente enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La gu&amp;iacute;a de instalaci&amp;oacute;n general lo pueden conseguir &lt;a href="http://code.google.com/p/proxoid/wiki/installationPhone"&gt;aqu&amp;iacute;&lt;/a&gt; y la dedicada a Linux &lt;a href="http://code.google.com/p/proxoid/wiki/installationLinux"&gt;aqu&amp;iacute;&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lo primero que hay que hacer es bajar el programa proxoid desde el market de Android.&lt;/li&gt;
&lt;li&gt;Al tener instalado el programa y tener configurado el udev en Linux y bajar el SDK para usar adb como se explic&amp;oacute; en este &lt;a href="http://ernesto-ecrespo.blogspot.com/2010/05/comandos-basicos-de-adb-android-debug.html"&gt;art&amp;iacute;culo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Crear el tunel. Se ejecuta adb para reenviar los paquetes, el comando es el siguiente:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```
adb forward tcp:8080 tcp:8080&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configurar el navegador para usar el proxy.
Abra las preferencias de firefox como lo muestra la figura (la pesta&amp;ntilde;a red 
darle clip al bot&amp;oacute;n configuraci&amp;oacute;n):&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="proxoid 1" src="./images/proxoid1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al presionar configurar se agregar&amp;aacute; el proxy como localhost y puerto 8080 como
lo muestra la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="proxoid 2" src="./images/proxoid2.png"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Iniciar proxoid en el celular. Simplemente ejecutan proxoid y luego le dan start&lt;/li&gt;
&lt;li&gt;Al visitar whatismyip.com se mostrar&amp;aacute; que la IP que usa el navegador para internet
es 201.240.16.229 y el equipo tiene un IP distinto al que muestra el navegador.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Android"></category><category term="Debian"></category></entry><entry><title>Comandos básicos de adb (Android Debug Bridge) para acceder al motorola milestone A853</title><link href="https://ecrespo.github.io/comandos-basicos-de-adb-android-debug-bridge-para-acceder-al-motorola-milestone-a853.html" rel="alternate"></link><published>2010-05-29T10:00:00-05:30</published><updated>2010-05-29T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-05-29:/comandos-basicos-de-adb-android-debug-bridge-para-acceder-al-motorola-milestone-a853.html</id><summary type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/instalacion-del-sdk-de-android-en-linux.html#instalacion-del-sdk-de-android-en-linux"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explico como instalar el SDK de Android en Debian, a continuaci&amp;oacute;n se explicar&amp;aacute; el comando que permite dar acceso al celular como ver la microsd, instalar aplicaciones en el celular desde el computador entre otras cosas. &lt;/p&gt;
&lt;p&gt;Cambiarse al directorio tools del SDK de Android. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/instalacion-del-sdk-de-android-en-linux.html#instalacion-del-sdk-de-android-en-linux"&gt;art&amp;iacute;culo anterior&lt;/a&gt; se explico como instalar el SDK de Android en Debian, a continuaci&amp;oacute;n se explicar&amp;aacute; el comando que permite dar acceso al celular como ver la microsd, instalar aplicaciones en el celular desde el computador entre otras cosas. &lt;/p&gt;
&lt;p&gt;Cambiarse al directorio tools del SDK de Android. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd android-sdk_r06-linux_86/tools&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Crear un enlace de la aplicaci&amp;oacute;n adb a /usr/bin . &lt;/p&gt;
&lt;p&gt;```
sudo ln -s /home/ernesto/android-sdk-linux_86/tools/adb /usr/bin/adb &lt;/p&gt;
&lt;p&gt;ls -l /usr/bin/adb 
lrwxrwxrwx 1 root root 44 may 27 20:12 /usr/bin/adb -&amp;gt; /home/ernesto/android-sdk-linux_86/tools/adb 
```&lt;/p&gt;
&lt;p&gt;Crear el archivo 50-android.rules en el directorio /etc/udev/rules.d &lt;/p&gt;
&lt;p&gt;```
vim /etc/udev/rules.d/50-android.rules &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Agregar el siguiente contenido al archivo: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;SUBSYSTEMS=="usb", ATTRS{idVendor}=="0bb4", ATTRS{idProduct}=="0c02", GROUP="androiddev", SYMLINK+="android%n"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se crea el grupo androiddev. &lt;/p&gt;
&lt;p&gt;```
sudo addgroup --system androiddev &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se cambia los permisos del archivo y se recarga las reglas udev. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo chmod a+rx /etc/udev/rules.d/50-android.rules 
sudo /etc/init.d/udev reload&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En el celular asegurarse que est&amp;aacute; en modo depuraci&amp;oacute;n de la conexi&amp;oacute;n USB. Esto es: 
Ajustes-&amp;gt;Aplicaciones-&amp;gt;Desarrollo. &lt;/p&gt;
&lt;p&gt;Iniciar adb como servidor: &lt;/p&gt;
&lt;p&gt;```
sudo ./adb start-server &lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Luego se verifica que se tiene acceso al celular con el comando adb devices. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;adb devices 
* daemon not running. starting it now * 
* daemon started successfully * 
List of devices attached 
0403725B09015010 device&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Cuando aparece est&amp;aacute; informaci&amp;oacute;n y no caracteres raros o ??? o no aparece nada es que ya se tiene conectado el celular al computador. &lt;/p&gt;
&lt;p&gt;El comando adb shell nos crea un shell desde el celular y se ejecuta el comando ls -l: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ ls -l 
drwxrwxrwt root root 2010-05-29 08:01 tmp 
drwxrwxr-x system system 2010-02-23 07:41 pds 
drwxrwxrwt root root 2010-05-29 13:21 sqlite_stmt_journals 
dr-x------ root root 2010-05-29 08:00 config 
drwxrwx--- system cache 2010-05-27 11:00 cache 
d---rwxr-x system sdcard_rw 2010-05-29 08:01 sdcard 
lrwxrwxrwx root root 2010-05-29 08:00 d -&amp;gt; /sys/kernel/debug 
lrwxrwxrwx root root 2010-05-29 08:00 etc -&amp;gt; /system/etc 
drwxr-xr-x root root 2010-01-06 09:29 system 
drwxr-xr-x root root 1969-12-31 20:00 sys 
drwxr-x--- root root 1969-12-31 20:00 sbin 
dr-xr-xr-x root root 1969-12-31 20:00 proc 
-rwxr-x--- root root 453 1969-12-31 20:00 init_prep_keypad.sh 
-rwxr-x--- root root 13218 1969-12-31 20:00 init.rc 
-rwxr-x--- root root 14824 1969-12-31 20:00 init.mapphone_umts.rc 
-rwxr-x--- root root 6840 1969-12-31 20:00 init.mapphone_cdma.rc 
-rwxr-x--- root root 1677 1969-12-31 20:00 init.goldfish.rc 
-rwxr-x--- root root 104324 1969-12-31 20:00 init 
-rw-r--r-- root root 118 1969-12-31 20:00 default.prop 
drwxrwx--x system system 2010-05-29 08:01 data 
drwx------ root root 2009-11-19 15:42 root 
drwxr-xr-x root root 2010-05-29 08:01 dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Este comando muestra los archivos y directorios que se tienen en el celular. Noten que son comandos unix/Linux as&amp;iacute; que si se cambian de directorio al system y luego app en el encontrar&amp;aacute;n los paquetes apk que se encuentran instalados en el celular. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$cd /system/app 
pwd 
$pwd 
/system/app 
$ls -l 
-rw-r--r-- root root 1500786 2010-01-06 09:28 MotoID.apk 
-rw-r--r-- root root 433280 2010-01-06 09:28 MovilnetContainer.apk 
-rw-r--r-- root root 2624470 2010-01-06 09:28 Maps.apk 
-rw-r--r-- root root 677433 2010-01-06 09:28 Talk.apk 
-rw-r--r-- root root 50410 2010-01-06 09:28 GoogleContactsSyncAdapter.apk 
-rw-r--r-- root root 327750 2010-01-06 09:28 MediaUploader.apk 
-rw-r--r-- root root 1310501 2010-01-06 09:28 Vending.apk 
-rw-r--r-- root root 735409 2010-01-06 09:28 Gmail.apk 
-rw-r--r-- root root 380550 2010-01-06 09:28 GoogleApps.apk 
-rw-r--r-- root root 778098 2010-01-06 09:28 SetupWizard.apk 
-rw-r--r-- root root 53777 2010-01-06 09:28 TalkProvider.apk&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Estos son algunos programas que se tienen instalados en el celular. &lt;/p&gt;
&lt;p&gt;Los comandos que se pueden utilizar en el shell son los siguientes: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ls Lista los directorios y carpetas existentes en la ruta que estemos.&lt;/li&gt;
&lt;li&gt;reboot Reinicia el terminal&lt;/li&gt;
&lt;li&gt;rm Borra un archivo&lt;/li&gt;
&lt;li&gt;rmdir Borra un directorio&lt;/li&gt;
&lt;li&gt;cd Cambia de directorio&lt;/li&gt;
&lt;li&gt;mkdir Crea un directorio&lt;/li&gt;
&lt;li&gt;mkswapp Crea un sistema de intercambio&lt;/li&gt;
&lt;li&gt;mount Monta una unidad o partici&amp;oacute;n&lt;/li&gt;
&lt;li&gt;umount Desmonta una unidad&lt;/li&gt;
&lt;li&gt;mv Mueve o renombra un archivo &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se puede ejecutar un ls dentro del sdcard/Videos y se muestra lo siguiente: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$adb shell ls /sdcard/Videos/ 
How.I.Met.Your.Mother.S05E21.HDTV.XviD-LOL.[VTV].avi 
The.Big.Bang.Theory.S03E20.The.Spaghetti.Catalyst.HDTV.XviD-FQM.avi&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para Borrar los archivos se ejecuta adb shell rm y luego se vuelve a ejecutar el ls para demostrar que se han borrado los archivos de la tarjeta sd del celular: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@jewel:~$ adb shell rm sdcard/Videos/*.avi 
ernesto@jewel:~$ adb shell ls sdcard/Videos 
ernesto@jewel:~$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n se puede instalar aplicaciones en el celular desde el computador con el comando adb install rutapaquete.apk: &lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se instala una aplicaci&amp;oacute;n de Sudoku desde el computador al celular. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@jewel:~$ adb install /home/ernesto/Descargas/OpenSudoku-1.1.1-02.apk 
603 KB/s (223640 bytes in 0.361s) 
pkg: /data/local/tmp/OpenSudoku-1.1.1-02.apk 
Success&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tambi&amp;eacute;n se puede copiar archivos del celular al computador y del computador al celular: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@jewel:~$ adb push /home/ernesto/varios.mp3 /sdcard/mp3z/ 
1944 KB/s (7768607 bytes in 3.901s)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En este ejemplo se coloca un archivo mp3 del computador al celular. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ernesto@jewel:~$ adb pull /sdcard/python_scripts_r0.zip ./ 
52 KB/s (4280 bytes in 0.078s)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Este comando se trae un archivo de la memoria sdcard del celular al computador. &lt;/p&gt;
&lt;p&gt;EL pr&amp;oacute;ximo art&amp;iacute;culo explicar&amp;aacute; como conectarse a internet desde un celular con android. &lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Android"></category><category term="Debian"></category></entry><entry><title>Instalación del SDK de Android en Linux</title><link href="https://ecrespo.github.io/instalacion-del-sdk-de-android-en-linux.html" rel="alternate"></link><published>2010-05-27T10:00:00-05:30</published><updated>2010-05-27T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-05-27:/instalacion-del-sdk-de-android-en-linux.html</id><summary type="html">&lt;p&gt;Para poder acceder desde Debian en el celular con Android lo primero que se tiene que hacer es bajar el SDK de Android desde el siguiente &lt;a href="http://developer.android.com/sdk/index.html"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Luego hay que descomprimir el android-sdk_r06-linux_86.tgz.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar -xvzf android-sdk_r06-linux_86.tgz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego cambiarse al directorio android-sdk_r06-linux_86 y al directorio tools.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd android-sdk_r06-linux_86/tools …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Para poder acceder desde Debian en el celular con Android lo primero que se tiene que hacer es bajar el SDK de Android desde el siguiente &lt;a href="http://developer.android.com/sdk/index.html"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Luego hay que descomprimir el android-sdk_r06-linux_86.tgz.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar -xvzf android-sdk_r06-linux_86.tgz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego cambiarse al directorio android-sdk_r06-linux_86 y al directorio tools.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd android-sdk_r06-linux_86/tools&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ejecutar android:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./android&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Aparecer&amp;aacute; la siguiente ventana. Se selecciona los paquetes a instalar.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sdk 1" src="./images/sdkandroid1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luego se acepta la licencia de todos los paquetes y empieza el proceso de instalaci&amp;oacute;n como lo muestra la figura.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sdk 2" src="./images/sdkandroid2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al terminar el proceso de instalaci&amp;oacute;n de APIs y librer&amp;iacute;as del SDK se selecciona Dispositivos virtuales.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sdk 3" src="./images/sdkandroid3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se crea uno como lo muestra la figura.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sdk 4" src="./images/sdkandroid4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle crear se mostrar&amp;aacute; una ventana con los resultados de la creaci&amp;oacute;n del dispositivo virtual al darle Aceptar el dispositivo aparecer&amp;aacute; en la lista de dispositivos.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sdk 5" src="./images/sdkandroid5.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle al bot&amp;oacute;n start se abre una ventana que muestra opciones para lanzar el disposititvo virtual.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sdk 6" src="./images/sdkandroid6.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al darle al bot&amp;oacute;n Launch se iniciar&amp;aacute; una virtualizaci&amp;oacute;n de un celular con Android como lo muestra la siguiente figura.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sdk 7" src="./images/sdkandroid7.png"/&gt;&lt;/p&gt;
&lt;p&gt;En el siguiente post se explicar&amp;aacute; el uso de adb el cual permite acceder al celular real.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Android"></category><category term="Debian"></category></entry><entry><title>Conexiones remotas por ssh desde python</title><link href="https://ecrespo.github.io/conexiones-remotas-por-ssh-desde-python.html" rel="alternate"></link><published>2010-03-30T12:00:00-05:30</published><updated>2010-03-30T12:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-03-30:/conexiones-remotas-por-ssh-desde-python.html</id><summary type="html">&lt;p&gt;Con el m&amp;oacute;dulo paramiko se puede crear conexiones ssh a equipos remotos, el siguiente ejemplo muestra como establecer dicha conexi&amp;oacute;n con la ejecuci&amp;oacute;n de un comando de forma remota:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="se importa el modulo que permite establecer conexiones ssh"&gt;Se importa el modulo que permite establecer conexiones ssh&lt;/h1&gt;
&lt;p&gt;import paramiko&lt;/p&gt;
&lt;h1 id="se crea la conexion con el cliente ssh"&gt;Se crea la conexion con el cliente ssh&lt;/h1&gt;
&lt;p&gt;ssh …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Con el m&amp;oacute;dulo paramiko se puede crear conexiones ssh a equipos remotos, el siguiente ejemplo muestra como establecer dicha conexi&amp;oacute;n con la ejecuci&amp;oacute;n de un comando de forma remota:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="se importa el modulo que permite establecer conexiones ssh"&gt;Se importa el modulo que permite establecer conexiones ssh&lt;/h1&gt;
&lt;p&gt;import paramiko&lt;/p&gt;
&lt;h1 id="se crea la conexion con el cliente ssh"&gt;Se crea la conexion con el cliente ssh&lt;/h1&gt;
&lt;p&gt;ssh = paramiko.SSHClient()&lt;/p&gt;
&lt;h1 id="se define la politica de intercambio de llaves del ssh"&gt;Se define la politica de intercambio de llaves del ssh&lt;/h1&gt;
&lt;p&gt;ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())&lt;/p&gt;
&lt;h1 id="se establece la conexion remota pasando la direccion ip, el nombre"&gt;Se establece la conexion remota pasando la direccion IP, el nombre&lt;/h1&gt;
&lt;h1 id="y clave del usuario"&gt;y clave del usuario&lt;/h1&gt;
&lt;p&gt;ssh.connect('192.168.33.46', username='ernesto',password="wxyz")&lt;/p&gt;
&lt;h1 id="se ejecuta el comando de forma remota"&gt;Se ejecuta el comando de forma remota&lt;/h1&gt;
&lt;p&gt;stdin, stdout, stderr = ssh.exec_command("cd bin;ls -l")&lt;/p&gt;
&lt;h1 id="se muestra el resultado del comando"&gt;Se muestra el resultado del comando&lt;/h1&gt;
&lt;p&gt;listado =stdout.readlines()
for i in listado: print i&lt;/p&gt;
&lt;h1 id="se cierra la sesion de ssh"&gt;Se cierra la sesion de ssh&lt;/h1&gt;
&lt;p&gt;ssh.close()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el resultado de la ejecuci&amp;oacute;n del script:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;ernesto@canaima:~/bin/python$ python py-ssh.py 
total 4444
-rw-r--r-- 1 ernesto ernesto 39462 nov 9 14:50 a01.svg
-rwxr-xr-x 1 ernesto ernesto 16820 nov 9 14:49 a01.top
-rwxr-xr-x 1 ernesto ernesto 16820 nov 9 14:51 A01.TOP
-rw-r--r-- 1 ernesto ernesto 10440 nov 9 14:52 a02.svg
-rwxr-xr-x 1 ernesto ernesto 4382 nov 9 14:51 a02.top
-rwxr-xr-x 1 ernesto ernesto 32 nov 9 14:51 a03.top
-rw-r--r-- 1 ernesto ernesto 2379 oct 8 15:55 ej5.py
drwxr-xr-x 13 ernesto ernesto 4096 oct 28 16:43 firefox
lrwxrwxrwx 1 ernesto ernesto 15 feb 8 07:54 Firefox -&amp;gt; firefox/firefox
-rw-r--r-- 1 ernesto ernesto 33662 nov 27 17:17 hola.c
-rw-r--r-- 1 ernesto ernesto 37 nov 27 17:17 hola.py
drwxr-xr-x 2 ernesto ernesto 4096 dic 3 11:29 lenguajeC
drwxr-xr-x 2 ernesto ernesto 4096 dic 25 07:48 lv
-rw-r--r-- 1 ernesto ernesto 3640 oct 18 14:20 Matematica_Braille.py
-rw-r--r-- 1 ernesto ernesto 33792 oct 18 14:12 Matematica_libglade.glade
-rwxr-xr-x 1 ernesto ernesto 39 oct 5 22:35 prueba.py
drwxr-xr-x 19 ernesto ernesto 4096 feb 21 20:31 python
-rw-r--r-- 1 ernesto ernesto 4318141 nov 9 14:50 sys
-rwxr-xr-x 1 ernesto ernesto 4261 nov 9 14:53 top2sv
-rwxr-xr-x 1 ernesto ernesto 1051 nov 9 14:48 top2svg.py
drwxr-xr-x 3 ernesto ernesto 4096 nov 9 14:53 top2svg-v0.2&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="ssh"></category><category term="python"></category><category term="paramiko"></category></entry><entry><title>Reproduciendo texto desde python</title><link href="https://ecrespo.github.io/reproduciendo-texto-desde-python.html" rel="alternate"></link><published>2010-03-30T11:00:00-05:30</published><updated>2010-03-30T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-03-30:/reproduciendo-texto-desde-python.html</id><summary type="html">&lt;p&gt;Existe un m&amp;oacute;dulo en python que permite reproducir texto directamente desde el c&amp;oacute;digo python sin necesidad de ejecutar un comando externo; este m&amp;oacute;dulo se llama pyttsx.&lt;/p&gt;
&lt;p&gt;Para instalarlo se ejecuta easy_install:
easy_install pyttsx&lt;/p&gt;
&lt;p&gt;Ahora ya se puede probar el m&amp;oacute;dulo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa el modulo"&gt;Se importa el modulo&lt;/h1&gt;
&lt;p&gt;import …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Existe un m&amp;oacute;dulo en python que permite reproducir texto directamente desde el c&amp;oacute;digo python sin necesidad de ejecutar un comando externo; este m&amp;oacute;dulo se llama pyttsx.&lt;/p&gt;
&lt;p&gt;Para instalarlo se ejecuta easy_install:
easy_install pyttsx&lt;/p&gt;
&lt;p&gt;Ahora ya se puede probar el m&amp;oacute;dulo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="se importa el modulo"&gt;Se importa el modulo&lt;/h1&gt;
&lt;p&gt;import pyttsx&lt;/p&gt;
&lt;h1 id="se inicia el motor de voz"&gt;Se inicia el motor de voz&lt;/h1&gt;
&lt;p&gt;engine = pyttsx.init()&lt;/p&gt;
&lt;h1 id="se selecciona el idioma a utilizar"&gt;Se selecciona el idioma a utilizar&lt;/h1&gt;
&lt;p&gt;engine.setProperty('voice', "spanish-latin-american")&lt;/p&gt;
&lt;h1 id="se genera la voz a partir de un texto"&gt;Se genera la voz a partir de un texto&lt;/h1&gt;
&lt;p&gt;engine.say('Esta es una prueba de reproduccion de texto')
engine.say('fin')&lt;/p&gt;
&lt;h1 id="se reproduce la voz"&gt;Se reproduce la voz&lt;/h1&gt;
&lt;p&gt;engine.runAndWait()
```&lt;/p&gt;
&lt;p&gt;Esto reproducir&amp;aacute; el contenido definido en el c&amp;oacute;digo, a continuaci&amp;oacute;n se reproducir&amp;aacute; el contenido de un pdf basandose en la publicaci&amp;oacute;n anterior y esta:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python_1"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;"""
Nombre: pdf2voz
Descripcion: Programa que reproduce el contenido de un pdf 
Autor: Ernesto Crespo
Correo: ernesto@crespo.org.ve
Licencia: GPL v3
Version de prueba para definir la construccion del reproductor
"""
import pyttsx&lt;/p&gt;
&lt;h1 id="importar modulo de lectura de pypdf"&gt;Importar modulo de lectura de pypdf&lt;/h1&gt;
&lt;p&gt;from pyPdf import PdfFileReader&lt;/p&gt;
&lt;h1 id="inicia el motor de reproduccion de texto a voz"&gt;Inicia el motor de reproduccion de texto a voz&lt;/h1&gt;
&lt;p&gt;engine = pyttsx.init()&lt;/p&gt;
&lt;h1 id="se define el idioma a reproducir"&gt;Se define el Idioma a reproducir&lt;/h1&gt;
&lt;p&gt;engine.setProperty('voice', "spanish-latin-american")&lt;/p&gt;
&lt;h1 id="capturar el archivo pdf a leer"&gt;Capturar el archivo pdf a leer&lt;/h1&gt;
&lt;p&gt;input1 = PdfFileReader(file("tut.pdf", "rb"))&lt;/p&gt;
&lt;h1 id="capturar la cantidad de paginas que tiene el documento"&gt;Capturar la cantidad de paginas que tiene el documento&lt;/h1&gt;
&lt;p&gt;paginas = input1.getNumPages()
titulo =input1.getDocumentInfo().title&lt;/p&gt;
&lt;h1 id="captura la pagina inicial del pdf"&gt;Captura la pagina inicial del pdf&lt;/h1&gt;
&lt;p&gt;pagina1 = input1.getPage(0)&lt;/p&gt;
&lt;h1 id="captura el autor del documento pdf"&gt;Captura el autor del documento pdf&lt;/h1&gt;
&lt;p&gt;autor =input1.getDocumentInfo().author&lt;/p&gt;
&lt;h1 id="extrae el texto de la pagina inicial del documento pdf"&gt;Extrae el texto de la pagina inicial del documento pdf&lt;/h1&gt;
&lt;p&gt;texto = pagina1.extractText()&lt;/p&gt;
&lt;h1 id="reproduccion de la informacion del pdf"&gt;Reproduccion de la informacion del pdf&lt;/h1&gt;
&lt;p&gt;engine.say("El titulo de libro es %s" %titulo)
engine.say("La cantidad de paginas del libro son %s" %paginas)
engine.say("El autor del documento es %s" %autor)
engine.say("El texto de la pagina inicial es")
engine.say(texto)
engine.runAndWait()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora queda trabajar en el programa que generalice la reproducci&amp;oacute;n de documentos pdf, defina las p&amp;aacute;ginas que quiera reproducir, el volumen, el idioma entre otras opciones.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="pypdf"></category><category term="pyttsx"></category></entry><entry><title>Capturando el contenido de un pdf desde python</title><link href="https://ecrespo.github.io/capturando-el-contenido-de-un-pdf-desde-python.html" rel="alternate"></link><published>2010-03-29T11:00:00-05:30</published><updated>2010-03-29T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-03-29:/capturando-el-contenido-de-un-pdf-desde-python.html</id><summary type="html">&lt;p&gt;Desde hace tiempo conoc&amp;iacute;a de la posibilidad de capturar informaci&amp;oacute;n de un pdf, la idea final es lograr tomar esta informaci&amp;oacute;n y reproducirla con espeak.&lt;/p&gt;
&lt;p&gt;El siguiente ejemplo muestra el uso del m&amp;oacute;dulo pypdf.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo de lectura de pypdf"&gt;Importar modulo de lectura de pypdf&lt;/h1&gt;
&lt;p&gt;from pyPdf import PdfFileReader&lt;/p&gt;
&lt;h1 id="capturar el archivo pdf a leer"&gt;Capturar el archivo pdf a …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;Desde hace tiempo conoc&amp;iacute;a de la posibilidad de capturar informaci&amp;oacute;n de un pdf, la idea final es lograr tomar esta informaci&amp;oacute;n y reproducirla con espeak.&lt;/p&gt;
&lt;p&gt;El siguiente ejemplo muestra el uso del m&amp;oacute;dulo pypdf.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="importar modulo de lectura de pypdf"&gt;Importar modulo de lectura de pypdf&lt;/h1&gt;
&lt;p&gt;from pyPdf import PdfFileReader&lt;/p&gt;
&lt;h1 id="capturar el archivo pdf a leer"&gt;Capturar el archivo pdf a leer&lt;/h1&gt;
&lt;p&gt;input1 = PdfFileReader(file("tut.pdf", "rb"))&lt;/p&gt;
&lt;h1 id="capturar la cantidad de paginas que tiene el documento"&gt;Capturar la cantidad de paginas que tiene el documento&lt;/h1&gt;
&lt;p&gt;paginas = input1.getNumPages()&lt;/p&gt;
&lt;h1 id="capturar el titulo del pdf"&gt;Capturar el titulo del pdf&lt;/h1&gt;
&lt;p&gt;titulo =input1.getDocumentInfo().title&lt;/p&gt;
&lt;h1 id="captura la pagina inicial del pdf"&gt;Captura la pagina inicial del pdf&lt;/h1&gt;
&lt;p&gt;pagina1 = input1.getPage(0)&lt;/p&gt;
&lt;h1 id="captura el autor del documento pdf"&gt;Captura el autor del documento pdf&lt;/h1&gt;
&lt;p&gt;autor =input1.getDocumentInfo().author&lt;/p&gt;
&lt;h1 id="extrae el texto de la pagina inicial del documento pdf"&gt;Extrae el texto de la pagina inicial del documento pdf&lt;/h1&gt;
&lt;p&gt;texto = pagina1.extractText()
print "El libro se llama : %s" %titulo
print "El autor es: %s" %autor
print "La cantidad de paginas del libro es: %s " %paginas
print "El contenido de la pagina inicial es:"
print texto&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El resultado de este script es el siguiente:
&lt;code&gt;El libro se llama : Gu&amp;iacute;a de aprendizaje de Python
El autor es: Guido van Rossum, Fred L. Drake, Jr., editor
La cantidad de paginas del libro es: 77 
El contenido de la pagina inicial es:
Gu&amp;iacute;adeaprendizajedePythonRelease2.0GuidovanRossumFredL.Drake,Jr.,editor16deoctubrede2000BeOpenPythonLabsCorreoelectr&amp;oacute;nico:python-docs@python.org&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En el siguiente art&amp;iacute;culo explicare ya el uso del conversor de audio de la informaci&amp;oacute;n capturada del pdf.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="pypdf"></category></entry><entry><title>Jugando con pygame. Parte 1</title><link href="https://ecrespo.github.io/jugando-con-pygame-parte-1.html" rel="alternate"></link><published>2010-02-21T11:00:00-05:30</published><updated>2010-02-21T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-02-21:/jugando-con-pygame-parte-1.html</id><summary type="html">&lt;p&gt;Hace tiempo ten&amp;iacute;a ganas de subir algunos art&amp;iacute;culos sobre pygame. EL primero que publicar&amp;eacute; es una b&amp;aacute;sico que carga una imagen en una ventana con un tama&amp;ntilde;o definido.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python
!/usr/bin/env python&lt;/p&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import pygame
import sys&lt;/p&gt;
&lt;p&gt;ANCHO = 800
ALTO = 600&lt;/p&gt;
&lt;h1 id="iniciar pygame"&gt;Iniciar pygame&lt;/h1&gt;
&lt;p&gt;pygame …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hace tiempo ten&amp;iacute;a ganas de subir algunos art&amp;iacute;culos sobre pygame. EL primero que publicar&amp;eacute; es una b&amp;aacute;sico que carga una imagen en una ventana con un tama&amp;ntilde;o definido.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python
!/usr/bin/env python&lt;/p&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import pygame
import sys&lt;/p&gt;
&lt;p&gt;ANCHO = 800
ALTO = 600&lt;/p&gt;
&lt;h1 id="iniciar pygame"&gt;Iniciar pygame&lt;/h1&gt;
&lt;p&gt;pygame.init()&lt;/p&gt;
&lt;h1 id="generar la ventana con el ancho y alto definido"&gt;Generar la ventana con el ancho y alto definido&lt;/h1&gt;
&lt;p&gt;screen = pygame.display.set_mode((WIDTH, HEIGHT))&lt;/p&gt;
&lt;h1 id="cargar el titulo de la ventana"&gt;Cargar el titulo de la ventana&lt;/h1&gt;
&lt;p&gt;pygame.display.set_caption("Un ejemplo de pygame")&lt;/p&gt;
&lt;h1 id="cargar la imagen de fondo"&gt;Cargar la imagen de fondo&lt;/h1&gt;
&lt;p&gt;fondo = pygame.image.load('dharma.jpg')&lt;/p&gt;
&lt;h1 id="se genera un ciclo que repinta la imagen de fondo hasta que se cierra la ventana."&gt;Se genera un ciclo que repinta la imagen de fondo hasta que se cierra la ventana.&lt;/h1&gt;
&lt;p&gt;while True:
    #Se captura los eventos 
    for eventos in pygame.event.get():
        #Si el evento es cerrar la ventana se sale de la aplicacion
        if eventos.type == QUIT:
            sys.exit()
    #Se dibuja la imagen de fondo.
    screen.blit(fondo, (0, 0))
    pygame.display.flip()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La imagen a continuaci&amp;oacute;n muestra la ejecuci&amp;oacute;n del programa:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 1 pygame 1" src="./images/tutorialpygame1-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="pygame"></category></entry><entry><title>Tutorial de python+qt. Parte 2</title><link href="https://ecrespo.github.io/tutorial-de-pythonqt-parte-2.html" rel="alternate"></link><published>2010-01-25T11:00:00-05:30</published><updated>2010-01-25T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-01-25:/tutorial-de-pythonqt-parte-2.html</id><summary type="html">&lt;p&gt;En ese tutorial se explicar&amp;aacute; como colocarle un icono a la ventana, crear un bot&amp;oacute;n para salir de la aplicaci&amp;oacute;n y todo el c&amp;oacute;digo se desarrollar&amp;aacute; orientado a objetos.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importar modulo sys"&gt;Importar m&amp;oacute;dulo sys&lt;/h1&gt;
&lt;p&gt;import sys &lt;/p&gt;
&lt;h1 id="de pyqt4 importar qtgui y qtcore"&gt;De PyQt4 importar QtGui y QtCore&lt;/h1&gt;
&lt;p&gt;from PyQt4 import …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En ese tutorial se explicar&amp;aacute; como colocarle un icono a la ventana, crear un bot&amp;oacute;n para salir de la aplicaci&amp;oacute;n y todo el c&amp;oacute;digo se desarrollar&amp;aacute; orientado a objetos.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importar modulo sys"&gt;Importar m&amp;oacute;dulo sys&lt;/h1&gt;
&lt;p&gt;import sys &lt;/p&gt;
&lt;h1 id="de pyqt4 importar qtgui y qtcore"&gt;De PyQt4 importar QtGui y QtCore&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui, QtCore &lt;/p&gt;
&lt;h1 id="se crea la clase quitbutton que hereda de la clase qwidget."&gt;Se crea la clase QuitButton que hereda de la clase QWidget.&lt;/h1&gt;
&lt;p&gt;class QuitButton(QtGui.QWidget):
    def &lt;strong&gt;init&lt;/strong&gt;(self, parent=None):
       QtGui.QWidget.&lt;strong&gt;init&lt;/strong&gt;(self, parent)
       #Se define el tama&amp;ntilde;o de la ventana
       self.setGeometry(400, 400, 250, 150)
        #Se le coloca un t&amp;iacute;tulo a la ventana y se asocia un icono. 
       self.setWindowTitle('Prueba de boton para salir') 
       self.setWindowIcon(QtGui.QIcon('./icono.png')) &lt;br/&gt;
       #Se crea el bot&amp;oacute;n salir con su tama&amp;ntilde;o      &lt;br/&gt;
       quit = QtGui.QPushButton('Salir', self)      &lt;br/&gt;
       quit.setGeometry(10, 10, 60, 35)      &lt;br/&gt;
       #Se asocia la se&amp;ntilde;al del bot&amp;oacute;n con quit 
       self.connect(quit, QtCore.SIGNAL('clicked()'),QtGui.qApp, QtCore.SLOT('quit()'))   &lt;/p&gt;
&lt;h1 id="se ejecuta el programa principal"&gt;Se ejecuta el programa principal&lt;/h1&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":  &lt;br/&gt;
   #Se instancia la clase QApplication  &lt;br/&gt;
   app = QtGui.QApplication(sys.argv)  &lt;br/&gt;
   #Se instancia el objeto QuitButton  &lt;br/&gt;
   qb = QuitButton()  &lt;br/&gt;
   #Se muestra la aplicaci&amp;oacute;n  &lt;br/&gt;
   qb.show()  &lt;br/&gt;
   #Se sale de la aplicaci&amp;oacute;n  &lt;br/&gt;
   sys.exit(app.exec_())&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la aplicaci&amp;oacute;n ejecutandose.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 2 pyqt 1" src="./images/tutorialpyqt2-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="qt"></category></entry><entry><title>Tutorial de python+qt. Parte 1</title><link href="https://ecrespo.github.io/tutorial-de-pythonqt-parte-1.html" rel="alternate"></link><published>2010-01-25T10:00:00-05:30</published><updated>2010-01-25T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-01-25:/tutorial-de-pythonqt-parte-1.html</id><summary type="html">&lt;p&gt;Luego de unos cuantos art&amp;iacute;culos sobre gtk empezar&amp;eacute; a publicar art&amp;iacute;culos sobre pyqt debido a que me asignaron a otro proyecto estoy evaluando desarrollar en pyqt o en wxwidget.&lt;/p&gt;
&lt;p&gt;Los primeros tutoriales se enfocar&amp;aacute;n al desarrollo de la interfaz a pie sin utilizar qtdesigner.&lt;/p&gt;
&lt;p&gt;Este ejemplo simplemente muestra una ventana …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Luego de unos cuantos art&amp;iacute;culos sobre gtk empezar&amp;eacute; a publicar art&amp;iacute;culos sobre pyqt debido a que me asignaron a otro proyecto estoy evaluando desarrollar en pyqt o en wxwidget.&lt;/p&gt;
&lt;p&gt;Los primeros tutoriales se enfocar&amp;aacute;n al desarrollo de la interfaz a pie sin utilizar qtdesigner.&lt;/p&gt;
&lt;p&gt;Este ejemplo simplemente muestra una ventana con un tama&amp;ntilde;o definido y el t&amp;iacute;tulo de la misma.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importar modulo sys"&gt;Importar m&amp;oacute;dulo sys&lt;/h1&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;h1 id="importar qtgui de pyqt4"&gt;importar QTGui de pyQt4&lt;/h1&gt;
&lt;p&gt;from PyQt4 import QtGui&lt;/p&gt;
&lt;h1 id="se instancia la clase qapplication pasandole sys.argv"&gt;Se instancia la clase QApplication pasandole sys.argv&lt;/h1&gt;
&lt;p&gt;app = QtGui.QApplication(sys.argv)&lt;/p&gt;
&lt;h1 id="se crea la instancia de qwidget."&gt;Se crea la instancia de QWidget.&lt;/h1&gt;
&lt;p&gt;widget = QtGui.QWidget()&lt;/p&gt;
&lt;h1 id="se define el tamano de la ventana"&gt;Se define el tama&amp;ntilde;o de la ventana&lt;/h1&gt;
&lt;p&gt;widget.resize(250, 150)&lt;/p&gt;
&lt;h1 id="se le coloca el titulo a la ventana"&gt;Se le coloca el t&amp;iacute;tulo a la ventana&lt;/h1&gt;
&lt;p&gt;widget.setWindowTitle('Es una prueba')&lt;/p&gt;
&lt;h1 id="se muestra la ventana"&gt;Se muestra la ventana&lt;/h1&gt;
&lt;p&gt;widget.show()&lt;/p&gt;
&lt;h1 id="se sale de la aplicacion"&gt;Se sale de la aplicaci&amp;oacute;n&lt;/h1&gt;
&lt;p&gt;sys.exit(app.exec_())&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La figura muestra la ventana que se cre&amp;oacute;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 1 pyqt 1" src="./images/tutorialpyqt1-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="qt"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 10. Generador de código de barra</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-10-generador-de-codigo-de-barra.html" rel="alternate"></link><published>2010-01-02T10:00:00-05:30</published><updated>2010-01-02T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-01-02:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-10-generador-de-codigo-de-barra.html</id><summary type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; como usar los botones de radio y manejar im&amp;aacute;genes. El programa es un generador de c&amp;oacute;digos de barra.&lt;/p&gt;
&lt;p&gt;Python tiene un m&amp;oacute;dulo para crear im&amp;aacute;genes svg con c&amp;oacute;digo de barra, Este m&amp;oacute;dulo se llama pyBarcode; para poder instalar este m&amp;oacute;dulo se requiere python2.6 y …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En este art&amp;iacute;culo se explicar&amp;aacute; como usar los botones de radio y manejar im&amp;aacute;genes. El programa es un generador de c&amp;oacute;digos de barra.&lt;/p&gt;
&lt;p&gt;Python tiene un m&amp;oacute;dulo para crear im&amp;aacute;genes svg con c&amp;oacute;digo de barra, Este m&amp;oacute;dulo se llama pyBarcode; para poder instalar este m&amp;oacute;dulo se requiere python2.6 y en el equipo por defecto python2.5. Se instal&amp;oacute; la versi&amp;oacute;n 2.6 y se compilo pyBarcode con esta versi&amp;oacute;n. Por esa raz&amp;oacute;n se creo un script para generar el c&amp;oacute;digo de barras que usa python 2.6 y el programa gr&amp;aacute;fico usa python2.5.&lt;/p&gt;
&lt;p&gt;En el programa gr&amp;aacute;fico se le puede pasar un n&amp;uacute;mero de 12 d&amp;iacute;gitos para generar un c&amp;oacute;digo de barras o generar el c&amp;oacute;digo de forma aleatoria.&lt;/p&gt;
&lt;p&gt;El dise&amp;ntilde;o gr&amp;aacute;fico de la aplicaci&amp;oacute;n se muestra en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 10 Glade 1" src="./images/tutorialpythongtkglade10-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del script que genera el c&amp;oacute;digo de Barras es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/opt/python/bin/python2.6"&gt;!/opt/python/bin/python2.6&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importar barcode y sys"&gt;Importar barcode y sys&lt;/h1&gt;
&lt;p&gt;import barcode,sys&lt;/p&gt;
&lt;h1 id="funcion generar codigo se le pasa el numero para generar el codigo"&gt;Funcion generar codigo se le pasa el numero para generar el codigo&lt;/h1&gt;
&lt;p&gt;def generar_codigo(dato):
    #Se usara EAN13
    EAN = barcode.get_barcode('ean13')
    ean = EAN(u'%s' %dato)
    #Se salva el archivo en formato svg
    fullname = ean.save('ean13_barcode')
    fullname&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #se importa el modulo commands
    import commands
    #Se borra el archivo anterior
    commands.getstatusoutput("rm ean13_barcode.svg")
    #Se toma el argumento para generar el codigo
    dato =sys.argv[1]
    #Se ejecuta la funcion
    generar_codigo(dato)&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n gr&amp;aacute;fica es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --_1"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importar modulo gtk,commands y random"&gt;Importar modulo gtk,commands y random&lt;/h1&gt;
&lt;p&gt;import gtk, commands, random&lt;/p&gt;
&lt;p&gt;class App:
    def &lt;strong&gt;init&lt;/strong&gt;(self):
       #Manejo del archivo glade por medio de gtkbuilder
       self.glade_file = "ej13.ui"
       self.glade = gtk.Builder()
       self.glade.add_from_file(self.glade_file)
       # cargar los widgets de la interfaz
       self.window = self.glade.get_object('dialog1')
       self.button1 = self.glade.get_object('button1')
       self.button2 = self.glade.get_object('button2')
       self.button3 = self.glade.get_object('button3')
       self.radiobutton1 = self.glade.get_object('radiobutton1')
       self.radiobutton2 = self.glade.get_object('radiobutton2')
       self.entrada = self.glade.get_object('entry1')
       self.imagen = self.glade.get_object('image1')
       #Valores iniciales de la aplicacion Titulo y tama?o de la ventana
       self.window.set_title("Ejemplo de generacion de codigo de barra")
       self.window.set_default_size(600, 400)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   #Asociar los eventos de los 2 botones y de la ventana
   self.window.connect("close",self.__on_dialog1_close)
   self.window.connect("destroy",self.__on_dialog1_destroy)
   self.button1.connect ("clicked",self.__on_button1_clicked)
   self.button2.connect ("clicked",self.__on_button2_clicked)
   self.button3.connect ("clicked",self.__on_button3_clicked)
   self.radiobutton1.connect("toggled",self.__on_radiobutton1_toggled)
   self.radiobutton2.connect("toggled",self.__on_radiobutton2_toggled)
   #Se muestra todos los widgets
   self.window.show_all()


def __on_radiobutton1_toggled(self,*args):
    #Si este boton se selecciona se muestra la entrada de datos
    self.entrada.show()


def __on_radiobutton2_toggled(self,*args):
    #Si este boton se selecciona se oculta la entrada de datos
    self.entrada.hide()

def __on_dialog1_close(self,*args):
    #Se cierra la aplicacion
    gtk.main_quit()

def __on_dialog1_destroy(self,*args):
    #Se cierra la aplicacion
    gtk.main_quit()

def __on_button1_clicked(self,*args):
    #Creacion del codigo de barra
    if self.radiobutton1.get_active() == True:
        #Si el boton de radio esta activo se captura la entrada de texto
        self.texto = self.entrada.get_text()
        valor = int(self.texto)
    elif self.radiobutton2.get_active() == True:
        #Se el boton de radio esta activo se oculta la entrada de texto y se genera el numero
        #de forma aleatoria
        self.entrada.hide()
        valor = int(random.random()*1000000000000)
    #Se ejecuta el generador de codigo de barra
    commands.getstatusoutput("./generador.py %s" %valor)
    #Se carga la nueva imagen del codigo de barra generado
    self.imagen.set_from_file('./ean13_barcode.svg')

def __on_button2_clicked(self,*args):
    #El boton salir, se cierra la aplicacion
    gtk.main_quit()

def __on_button3_clicked(self,*args):
    #El boton se restaurar la aplicacion, se coloca una imagen en blanco
    self.imagen.set_from_file('./1.png')


def main(self):
    #Se inicia la aplicacion
    gtk.main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Se crea una instancia del objeto y se ejecuta el metodo main
    app = App()
    app.main()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La siguiente gr&amp;aacute;fica muestra la ejecuci&amp;oacute;n de la aplicaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 9 Glade 2" src="./images/tutorialpythongtkglade10-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category><category term="barcode"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 9. Matplotlib</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-9-matplotlib.html" rel="alternate"></link><published>2010-01-01T10:00:00-05:30</published><updated>2010-01-01T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2010-01-01:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-9-matplotlib.html</id><summary type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos de desarrollo de aplicaciones con python y gtk. Ahora unir&amp;eacute; los art&amp;iacute;culos relacionados con &lt;a href="https://www.seraph.to/tag/matplotlib.html"&gt;matplotlib&lt;/a&gt; y gtk.
Se dise&amp;ntilde;o una ventana de dialogo con una gr&amp;aacute;fica en el centro, 2 botones, uno para cargar la curva en la gr&amp;aacute;fica y el otro bot&amp;oacute;n para cerrar la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los art&amp;iacute;culos de desarrollo de aplicaciones con python y gtk. Ahora unir&amp;eacute; los art&amp;iacute;culos relacionados con &lt;a href="https://www.seraph.to/tag/matplotlib.html"&gt;matplotlib&lt;/a&gt; y gtk.
Se dise&amp;ntilde;o una ventana de dialogo con una gr&amp;aacute;fica en el centro, 2 botones, uno para cargar la curva en la gr&amp;aacute;fica y el otro bot&amp;oacute;n para cerrar la aplicaci&amp;oacute;n.
La figura muestra el dise&amp;ntilde;o de la interfaz con glade.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 9 Glade 1" src="./images/tutorialpythongtkglade9-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la creaci&amp;oacute;n de la aplicaci&amp;oacute;n es el siguiente:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importar modulo gtk y matplotlib"&gt;Importar m&amp;oacute;dulo gtk y matplotlib&lt;/h1&gt;
&lt;p&gt;import gtk
import matplotlib&lt;/p&gt;
&lt;p&gt;matplotlib.use('GTK')&lt;/p&gt;
&lt;h1 id="importar la clase figure, subplot, figurecanvasgtk, figurecanvas"&gt;Importar la clase figure, subplot, figurecanvasgtk, figurecanvas&lt;/h1&gt;
&lt;p&gt;from matplotlib.figure import Figure
from matplotlib.axes import Subplot
from matplotlib.backends.backend_gtk import FigureCanvasGTK, NavigationToolbar
from matplotlib.backends.backend_gtkagg import FigureCanvasGTKAgg as FigureCanvas&lt;/p&gt;
&lt;h1 id="importar numpy"&gt;Importar numpy&lt;/h1&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;h1 id="definicion de la clase"&gt;Definici&amp;oacute;n de la clase&lt;/h1&gt;
&lt;p&gt;class App:
    def &lt;strong&gt;init&lt;/strong&gt;(self):
        #Manejo del archivo glade por medio de gtkbuilder
        self.glade_file = "ej10.ui"
        self.glade = gtk.Builder()
        self.glade.add_from_file(self.glade_file)
        # cargar los widgets de la interfaz
        self.window = self.glade.get_object('dialog1')
        self.button1 = self.glade.get_object('button1')
        self.button2 = self.glade.get_object('button2')
        #T&amp;iacute;tulo de la ventana de dialogos
        self.window.set_title("Ventana de dialogo para demostrar uso de matplotlib")
        #Tama&amp;ntilde;o de la ventana de dialogos
        self.window.set_default_size(600, 400)
        #Asociaci&amp;oacute;n de los eventos con los widgets
        self.window.connect("destroy",self.on_dialog1_destroy)
        self.window.connect("close",self.on_dialog1_close)
        self.button1.connect ("clicked",self.on_button1_clicked)
        self.button2.connect ("clicked",self.on_button2_clicked)
        #Definici&amp;oacute;n del widget que manejar&amp;aacute; la gr&amp;aacute;fica
        self.figura = Figure(figsize=(10, 8), dpi=100)
        self.ax = self.figura.add_subplot(111)
        self.ax.set_xlabel("Eje X")
        self.ax.set_ylabel("Eje Y")
        self.ax.set_title('Grafica')
        self.ax.grid(True)
        self.canvas = FigureCanvasGTK(self.figura)
        self.canvas.show()
        #Agregar la gr&amp;aacute;fica a la caja vertical
        self.vbox1 = self.glade.get_object("vbox1")
        self.vbox1.pack_start(self.canvas, True, True)
        #Mostrar la ventana
        self.window.show_all()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def on_dialog1_destroy(self,*args):
    #Cerrar la ventana de dialogo
    gtk.main_quit()

def on_button1_clicked(self,*args):
    #Carga la curva en la gr&amp;aacute;fica
    #Se oculta el canvas creado al inicio
    self.canvas.hide()
    #Generaci&amp;oacute;n de los valores X y Y
    self.x = np.arange(0,2*np.pi, .01)
    self.y = np.sin(self.x**2)*np.exp(-self.x)
    #Dibuja la curva
    self.ax.plot(self.x, self.y)
    #Se agrega la curva al canvas
    self.canvas = FigureCanvas(self.figura)
    #Se muestra el canvas
    self.canvas.show()
    #Se agrega el canvas a la caja vertical
    self.vbox1.pack_start(self.canvas, True, True)


def on_button2_clicked(self,*args):
    #Cerrar la ventana de dialogo
    gtk.main_quit()

def on_dialog1_close(self,*args):
    #Cerrar la ventana de dialogo
    gtk.main_quit()

def main(self):
    #Ejecutar la aplicaci&amp;oacute;n gr&amp;aacute;fica
    gtk.main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    #Creaci&amp;oacute;n de la instancia y ejecuci&amp;oacute;n del m&amp;eacute;todo main
    app = App()
    app.main()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La siguiente gr&amp;aacute;fica muestra la ejecuci&amp;oacute;n de la aplicaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 9 Glade 2" src="./images/tutorialpythongtkglade9-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;La siguiente gr&amp;aacute;fica muestra la aplicaci&amp;oacute;n luego de presionar el bot&amp;oacute;n aplicar y cargar la curva:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 9 Glade 2" src="./images/tutorialpythongtkglade9-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category><category term="matplotlib"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 8. Calendario</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-8-calendario.html" rel="alternate"></link><published>2009-12-31T10:00:00-05:30</published><updated>2009-12-31T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-12-31:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-8-calendario.html</id><summary type="html">&lt;p&gt;Este tutorial trata sobre el uso del widget calendario, como capturar la fecha al dar clip y mostrarla en la misma ventana.&lt;/p&gt;
&lt;p&gt;La figura muestra el dise&amp;ntilde;o de la aplicaci&amp;oacute;n&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 8 Glade 1" src="./images/tutorialpythongtkglade8-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import gtk, time&lt;/p&gt;
&lt;p&gt;class App:
 def &lt;strong&gt;init …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este tutorial trata sobre el uso del widget calendario, como capturar la fecha al dar clip y mostrarla en la misma ventana.&lt;/p&gt;
&lt;p&gt;La figura muestra el dise&amp;ntilde;o de la aplicaci&amp;oacute;n&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 8 Glade 1" src="./images/tutorialpythongtkglade8-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import gtk, time&lt;/p&gt;
&lt;p&gt;class App:
 def &lt;strong&gt;init&lt;/strong&gt;(self):
  #Manejo del archivo glade por medio de gtkbuilder
  self.glade_file = "ej8.ui"
  self.glade = gtk.Builder()
  self.glade.add_from_file(self.glade_file)
  # cargar los widgets de la interfaz
  self.window = self.glade.get_object('window1')
  self.button1 = self.glade.get_object('button1')
  self.button2 = self.glade.get_object('button2')
  self.calendario = self.glade.get_object('calendar1')
  self.label1 = self.glade.get_object('label1')
  self.label2 = self.glade.get_object('label2')
  self.label3 = self.glade.get_object('label3')
  self.label4 = self.glade.get_object('label4')
  #Asociar los eventos de los 2 botones y de la ventana
  self.window.connect("destroy",self.on_window1_destroy)
  self.button1.connect ("clicked",self.on_button1_clicked)
  self.button2.connect ("clicked",self.on_button2_clicked)
  #Tupla que maneja los meses del a&amp;ntilde;o
  self.meses = ('Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre')
  #Se muestra todos los widgets
  self.window.show_all()&lt;/p&gt;
&lt;p&gt;def on_window1_destroy(self,*args):
  #Cerrar aplicaci&amp;oacute;n
  gtk.main_quit()&lt;/p&gt;
&lt;p&gt;def on_button1_clicked(self,*args):
  #Cerrar Aplicaci&amp;oacute;n
  gtk.main_quit()&lt;/p&gt;
&lt;p&gt;def on_button2_clicked(self,*args):
  #Capturar los datos del calendario y presentarlos en las etiquetas
  agno, mes, dia = self.calendario.get_date()
  texto_agno = "A&amp;ntilde;o:  %s" %agno
  texto_mes = "Mes: %s" %self.meses[mes]
  texto_dia = "Dia: %s" %dia
  self.label2.set_text(texto_agno)
  self.label3.set_text(texto_mes)
  self.label4.set_text(texto_dia)&lt;/p&gt;
&lt;p&gt;def main(self):
  gtk.main()&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
 app = App()
 app.main()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la aplicaci&amp;oacute;n en funcionamiento:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 8 Glade 2" src="./images/tutorialpythongtkglade8-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 7. Barra de progreso y boton biestado</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-7-barra-de-progreso-y-boton-biestado.html" rel="alternate"></link><published>2009-12-25T10:00:00-05:30</published><updated>2009-12-25T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-12-25:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-7-barra-de-progreso-y-boton-biestado.html</id><summary type="html">&lt;p&gt;Continuando con la serie de tutoriales sobre pygtk. Este trata del desarrollo de una sencilla aplicaci&amp;oacute;n que contiene una barra de progreso que avanzar&amp;aacute; cada segundo mostrando el tiempo el cual trancurre la barra de progreso. En este tutorial como se ejecuta un proceso que puede congelar la ventana se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con la serie de tutoriales sobre pygtk. Este trata del desarrollo de una sencilla aplicaci&amp;oacute;n que contiene una barra de progreso que avanzar&amp;aacute; cada segundo mostrando el tiempo el cual trancurre la barra de progreso. En este tutorial como se ejecuta un proceso que puede congelar la ventana se usar&amp;aacute; hilos para evitarlo, adicionalmente se muestra el uso de botones biestado para controlar la barra de progreso.&lt;/p&gt;
&lt;p&gt;En la figura se muestra el dise&amp;ntilde;o de la aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 7 Glade 1" src="./images/tutorialpythongtkglade7-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo se muestra a continuaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="sin ej6.py"&gt;sin ej6.py&lt;/h1&gt;
&lt;h1 id="_1"&gt;&lt;/h1&gt;
&lt;h1 id="copyright 2009 ernesto nadir crespo avila"&gt;Copyright 2009 Ernesto Nadir Crespo Avila&lt;/h1&gt;
&lt;h1 id="_2"&gt;&lt;/h1&gt;
&lt;h1 id="this program is free software; you can redistribute it and/or modify"&gt;This program is free software; you can redistribute it and/or modify&lt;/h1&gt;
&lt;h1 id="it under the terms of the gnu general public license as published by"&gt;it under the terms of the GNU General Public License as published by&lt;/h1&gt;
&lt;h1 id="the free software foundation; either version 2 of the license, or"&gt;the Free Software Foundation; either version 2 of the License, or&lt;/h1&gt;
&lt;h1 id="(at your option) any later version."&gt;(at your option) any later version.&lt;/h1&gt;
&lt;h1 id="_3"&gt;&lt;/h1&gt;
&lt;h1 id="this program is distributed in the hope that it will be useful,"&gt;This program is distributed in the hope that it will be useful,&lt;/h1&gt;
&lt;h1 id="but without any warranty; without even the implied warranty of"&gt;but WITHOUT ANY WARRANTY; without even the implied warranty of&lt;/h1&gt;
&lt;h1 id="merchantability or fitness for a particular purpose. see the"&gt;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&lt;/h1&gt;
&lt;h1 id="gnu general public license for more details."&gt;GNU General Public License for more details.&lt;/h1&gt;
&lt;h1 id="_4"&gt;&lt;/h1&gt;
&lt;h1 id="you should have received a copy of the gnu general public license"&gt;You should have received a copy of the GNU General Public License&lt;/h1&gt;
&lt;h1 id="along with this program; if not, write to the free software"&gt;along with this program; if not, write to the Free Software&lt;/h1&gt;
&lt;h1 id="foundation, inc., 51 franklin street, fifth floor, boston,"&gt;Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,&lt;/h1&gt;
&lt;h1 id="ma 02110-1301, usa."&gt;MA 02110-1301, USA.&lt;/h1&gt;
&lt;h1 id="importar los modulos gtk, time, threading, thread, gobject"&gt;Importar los m&amp;oacute;dulos gtk, time, threading, thread, gobject&lt;/h1&gt;
&lt;p&gt;import gtk, time
import threading
import thread
import gobject&lt;/p&gt;
&lt;h1 id="iniciando el hilo sin usarlo"&gt;Iniciando el hilo sin usarlo&lt;/h1&gt;
&lt;p&gt;gtk.gdk.threads_init()&lt;/p&gt;
&lt;h1 id="la clase app hereda threading.thread"&gt;La clase App hereda threading.Thread&lt;/h1&gt;
&lt;p&gt;class App(threading.Thread):
    def &lt;strong&gt;init&lt;/strong&gt;(self):
     #M&amp;eacute;todo constructor, asociando los widgets
        self.glade_file = "ej6.ui"
        self.glade = gtk.Builder()
        self.glade.add_from_file(self.glade_file)
        self.window1 = self.glade.get_object('window1')
        self.togglebutton1 = self.glade.get_object('togglebutton1')
        self.button1 = self.glade.get_object('button1')
        self.progressbar1 = self.glade.get_object('progressbar1')
        self.new_val = 0.0
        self.rango =60
     #Definiendo el valor inicial de la barra de proceso, definiendo los saltos en 0.1
        self.progressbar1.set_fraction(self.new_val)
        self.progressbar1.set_pulse_step(0.1)
        self.window1.connect("destroy",self.on_window1_destroy)
        self.button1.connect('clicked', self.on_button1_clicked)
        self.togglebutton1.connect('toggled',self.on_togglebutton1_toggled)
        #Iniciando el hilo en el constructor
     threading.Thread.&lt;strong&gt;init&lt;/strong&gt;(self)
        self.window1.show_all()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def __iteracion__(self):
 #Iteraci&amp;oacute;n en segundos cambiando el valor en la barra de progreso.
    for i in range(self.rango):
        if self.togglebutton1.get_active() == True:
            self.new_val = self.progressbar1.get_fraction() + 0.01
            if self.new_val &amp;gt; 1.0:
                self.new_val = 0.0
                self.togglebutton1.set_active(False)
                break
            else:
                time.sleep(1)
                self.x = self.new_val*100
                self.progressbar1.set_text("%s" %self.x)
                self.progressbar1.set_fraction(self.new_val)
        else:
            return





def on_togglebutton1_toggled(self,*args):
 #Si cambia el evento en el boton biestado se inicia la iteraci&amp;oacute;n entre los hilos.
    variable = self.togglebutton1.get_active()
    self.rango = 100
    if variable == True:
        lock =  thread.allocate_lock()
        lock.acquire()
        thread.start_new_thread( self.__iteracion__, ()) 
        lock.release()
    else:
     #Se detiene la barra de progreso
        self.progressbar1.set_fraction(self.new_val)
        self.progressbar1.set_text("%s" %self.x)
        return




def on_window1_destroy(self,*args):
 #Se cierra la aplicaci&amp;oacute;n
    gtk.main_quit()

def on_button1_clicked(self,*args):
 #Se cierra la aplicaci&amp;oacute;n al darle clip al boton salir.
    gtk.main_quit()


def main(self):
 #Inicia la aplicaci&amp;oacute;n
    gtk.main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == '&lt;strong&gt;main&lt;/strong&gt;':
    app = App()
    app.main()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra la aplicaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 7 Glade 2" src="./images/tutorialpythongtkglade7-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category></entry><entry><title>Desarrollo de interfaz gráfica para la configuración de accesos rápidos de teclado para gconf</title><link href="https://ecrespo.github.io/desarrollo-de-interfaz-grafica-para-la-configuracion-de-accesos-rapidos-de-teclado-para-gconf.html" rel="alternate"></link><published>2009-12-21T19:00:00-05:30</published><updated>2009-12-21T19:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-12-21:/desarrollo-de-interfaz-grafica-para-la-configuracion-de-accesos-rapidos-de-teclado-para-gconf.html</id><summary type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf.html#script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf"&gt;anterior art&amp;iacute;culo&lt;/a&gt; se mostr&amp;oacute; el desarrollo de una aplicaci&amp;oacute;n en python que configura v&amp;iacute;a l&amp;iacute;nea de comandos los accesos r&amp;aacute;pidos de teclado para gnome por medio de gconf.&lt;/p&gt;
&lt;p&gt;La interf&amp;aacute;z gr&amp;aacute;fica de la aplicaci&amp;oacute;n la pueden bajar del siguiente &lt;a href="http://python-config-accesskey-gnome.googlecode.com/hg/ui.glade"&gt;enlace&lt;/a&gt; , el c&amp;oacute;digo python de la aplicaci&amp;oacute;n lo pueden …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el &lt;a href="https://www.seraph.to/script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf.html#script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf"&gt;anterior art&amp;iacute;culo&lt;/a&gt; se mostr&amp;oacute; el desarrollo de una aplicaci&amp;oacute;n en python que configura v&amp;iacute;a l&amp;iacute;nea de comandos los accesos r&amp;aacute;pidos de teclado para gnome por medio de gconf.&lt;/p&gt;
&lt;p&gt;La interf&amp;aacute;z gr&amp;aacute;fica de la aplicaci&amp;oacute;n la pueden bajar del siguiente &lt;a href="http://python-config-accesskey-gnome.googlecode.com/hg/ui.glade"&gt;enlace&lt;/a&gt; , el c&amp;oacute;digo python de la aplicaci&amp;oacute;n lo pueden bajar &lt;a href="http://python-config-accesskey-gnome.googlecode.com/hg/pyconfig-accessgnome-ui.py"&gt;ac&amp;aacute;&lt;/a&gt; y el m&amp;oacute;dulo &lt;a href="http://python-config-accesskey-gnome.googlecode.com/hg/configGconf.py"&gt;configGconf.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La interfaz gr&amp;aacute;fica fue creada con glade usando gtkbuilder en vez de libglade, esa es una de las diferencias principales con otros desarrollos gr&amp;aacute;ficos mostrados en este blog. La interfaz tiene varios botones de verificaci&amp;oacute;n para seleccionar cuales opciones de teclas r&amp;aacute;pidas se quieren configurar.&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la interfaz desarrollada con glade.&lt;/p&gt;
&lt;p&gt;&lt;img alt="GUI" src="./images/gui-gconf-gnome.png"/&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n el c&amp;oacute;digo fuente de la aplicaci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;"""
Name: pyconfig-accessgnome-uy
Description: Aplicaci&amp;oacute;n gr&amp;aacute;fica que permite configurar los accesos r&amp;aacute;pidos de teclado a gconf
Version:0.1
License: GPLv3
Copyright: Copyright (C) 2009  Libre Accesibilidad
Author: Ernesto Nadir Crespo Avila
Email: ecrespo@gmail.com&lt;/p&gt;
&lt;p&gt;"""&lt;/p&gt;
&lt;h1 id="importar modulo gtk y el modulo de cambios de opciones de teclado"&gt;Importar m&amp;oacute;dulo gtk y el m&amp;oacute;dulo de cambios de opciones de teclado&lt;/h1&gt;
&lt;p&gt;import gtk,configGconf&lt;/p&gt;
&lt;h1 id="clse accessgnomeconfig"&gt;Clse AccessGnomeCOnfig&lt;/h1&gt;
&lt;p&gt;class AccessGnomeConfig:
 def &lt;strong&gt;init&lt;/strong&gt;(self):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;            #Uso de la interfaz desarrollada con gtkbuilder y llamado del mismo.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;self.glade_file = "ui.glade"
  self.glade = gtk.Builder()
  self.glade.add_from_file(self.glade_file)
  # Asociaci&amp;oacute;n de todos los widgets
  self.window = self.glade.get_object('dialog1')
  self.button1 = self.glade.get_object('button1')
  self.button2 = self.glade.get_object('button2')
  self.checkbutton1 = self.glade.get_object('checkbutton1')
  self.checkbutton2 = self.glade.get_object('checkbutton2')
  self.checkbutton3 = self.glade.get_object('checkbutton3')
  self.checkbutton4 = self.glade.get_object('checkbutton4')
  self.checkbutton5 = self.glade.get_object('checkbutton5')
  self.checkbutton6 = self.glade.get_object('checkbutton6')
  self.checkbutton7 = self.glade.get_object('checkbutton7')
  self.checkbutton8 = self.glade.get_object('checkbutton8')
  self.checkbutton9 = self.glade.get_object('checkbutton9')
  self.checkbutton10 = self.glade.get_object('checkbutton10')
  self.checkbutton11 = self.glade.get_object('checkbutton11')
  self.checkbutton12 = self.glade.get_object('checkbutton12')
  self.checkbutton13 = self.glade.get_object('checkbutton13')
  self.aplicaciones = []&lt;/p&gt;
&lt;p&gt;# asociar las se&amp;ntilde;ales de los widgets con los m&amp;eacute;todos de la clase
  self.window.connect ("close",self.on_dialog1_close)
  self.window.connect("destroy",self.on_dialog1_destroy)
  self.button1.connect ("clicked",self.on_button1_clicked)
  self.button2.connect ("clicked",self.on_button2_clicked)
  self.checkbutton1.connect("toggled",self.on_checkbutton1_toggled)
  self.checkbutton2.connect("toggled",self.on_checkbutton2_toggled)
  self.checkbutton3.connect("toggled",self.on_checkbutton3_toggled)
  self.checkbutton4.connect("toggled",self.on_checkbutton4_toggled)
  self.checkbutton5.connect("toggled",self.on_checkbutton5_toggled)
  self.checkbutton6.connect("toggled",self.on_checkbutton6_toggled)
  self.checkbutton7.connect("toggled",self.on_checkbutton7_toggled)
  self.checkbutton8.connect("toggled",self.on_checkbutton8_toggled)
  self.checkbutton9.connect("toggled",self.on_checkbutton9_toggled)
  self.checkbutton10.connect("toggled",self.on_checkbutton10_toggled)
  self.checkbutton11.connect("toggled",self.on_checkbutton11_toggled)
  self.checkbutton12.connect("toggled",self.on_checkbutton12_toggled)
  self.checkbutton13.connect("toggled",self.on_checkbutton13_toggled)
  #Configuraci&amp;oacute;n del  widget ventana, agregandole un t&amp;iacute;tulo.
  self.window.set_title("Configuraci&amp;oacute;n de accesos rapidos de Aplicaciones en Gnome")
  self.window.show_all()
 #M&amp;eacute;todos de utilizaci&amp;oacute;n de los botones de verificaci&amp;oacute;n cuando se selecciona o no.
        #Cuando se selecciona se agrega el elemento a una lista
        #Cuando se deselecciona se elimina el elemento de la lista.
 def on_checkbutton1_toggled(self,*args):
  variable = self.checkbutton1.get_active()
  if variable == True:
   self.aplicaciones.append("orca")
  else:
   self.__eliminacion("orca")&lt;/p&gt;
&lt;p&gt;def on_checkbutton2_toggled(self,*args):
  variable = self.checkbutton2.get_active()
  if variable == True:
   self.aplicaciones.append("nautilus")
  else:
   self.__eliminacion("nautilus")&lt;/p&gt;
&lt;p&gt;def on_checkbutton3_toggled(self,*args):
  variable = self.checkbutton3.get_active()
  if  variable == True:
   self.aplicaciones.append("oowriter")
  else:
   self.__eliminacion("oowriter")&lt;/p&gt;
&lt;p&gt;def on_checkbutton4_toggled(self,*args):
  variable = self.checkbutton4.get_active()
  if  variable == True:
   self.aplicaciones.append("iceweasel")
  else:
   self.__eliminacion("iceweasel")&lt;/p&gt;
&lt;p&gt;def on_checkbutton5_toggled(self,*args):
  variable = self.checkbutton5.get_active()
  if  variable == True:
   self.aplicaciones.append("pidgin")
  else:
   self.__eliminacion("pidgin")&lt;/p&gt;
&lt;p&gt;def on_checkbutton6_toggled(self,*args):
  variable = self.checkbutton6.get_active()
  if  variable == True:
   self.aplicaciones.append("gedit")
  else:
   self.__eliminacion("gedit")&lt;/p&gt;
&lt;p&gt;def on_checkbutton7_toggled(self,*args):
  variable = self.checkbutton7.get_active()
  if  variable == True:
   self.aplicaciones.append("ooimpress")
  else:
   self.__eliminacion("ooimpress")&lt;/p&gt;
&lt;p&gt;def on_checkbutton8_toggled(self,*args):
  variable = self.checkbutton8.get_active()
  if  variable == True:
   self.aplicaciones.append("gnome-calculator")
  else:
   self.__eliminacion("gnome-calculator")&lt;/p&gt;
&lt;p&gt;def on_checkbutton9_toggled(self,*args):
  variable = self.checkbutton9.get_active()
  if  variable == True:
   self.aplicaciones.append("oocalc")
  else:
   self.__eliminacion("oocalc")&lt;/p&gt;
&lt;p&gt;def on_checkbutton10_toggled(self,*args):
  variable = self.checkbutton10.get_active()
  if  variable == True:
   self.aplicaciones.append("rhythmbox")
  else:
   self.__eliminacion("rhythmbox")&lt;/p&gt;
&lt;p&gt;def on_checkbutton11_toggled(self,*args):
  variable = self.checkbutton11.get_active()
  if  variable == True:
   self.aplicaciones.append("gnome-terminal")
  else:
   self.__eliminacion("gnome-terminal")&lt;/p&gt;
&lt;p&gt;def on_checkbutton12_toggled(self,*args):
  pass
  """
  variable = self.checkbutton12.get_active()
  if  variable == True:
   print "daltonicos"
  else:
   print "nada de daltonicos"
  """
 def __eliminacion(self,aplicacion):
                #Elimina un elemento de la lista
  if len(self.aplicaciones) &amp;gt;= 2:
   for i in range(len(self.aplicaciones)):
    if self.aplicaciones[i] == aplicacion:
     self.aplicaciones[i:i+1] = []
     break
    else:
     continue
  elif len(self.aplicaciones) == 1:
   if self.aplicaciones[0] == aplicacion:
    self.aplicaciones = []
   else:
    pass
  else:
   pass&lt;/p&gt;
&lt;p&gt;def on_checkbutton13_toggled(self,*args):
                #Selecciona todos los botones de verificaci&amp;oacute;n o los deselecciona a todos.
  variable = self.checkbutton13.get_active()
  if  variable == True:
   self.checkbutton1.set_active(1)
   self.checkbutton2.set_active(1)
   self.checkbutton3.set_active(1)
   self.checkbutton4.set_active(1)
   self.checkbutton5.set_active(1)
   self.checkbutton6.set_active(1)
   self.checkbutton7.set_active(1)
   self.checkbutton8.set_active(1)
   self.checkbutton9.set_active(1)
   self.checkbutton10.set_active(1)
   self.checkbutton11.set_active(1)
   #self.checkbutton12.set_active(1)
  else:
   self.checkbutton1.set_active(0)
   self.checkbutton2.set_active(0)
   self.checkbutton3.set_active(0)
   self.checkbutton4.set_active(0)
   self.checkbutton5.set_active(0)
   self.checkbutton6.set_active(0)
   self.checkbutton7.set_active(0)
   self.checkbutton8.set_active(0)
   self.checkbutton9.set_active(0)
   self.checkbutton10.set_active(0)
   self.checkbutton11.set_active(0)
   #self.checkbutton12.set_active(0)&lt;/p&gt;
&lt;p&gt;def on_dialog1_close(self,*args):
                #Cierra la ventana de dialogo
  gtk.main_quit()&lt;/p&gt;
&lt;p&gt;def on_dialog1_destroy(self,*args):
                #Cierra la ventana de dialogo
  gtk.main_quit()&lt;/p&gt;
&lt;p&gt;def on_button1_clicked(self,*args):
                #Cierra la ventana de dialogo
  gtk.main_quit()&lt;/p&gt;
&lt;p&gt;def on_button2_clicked(self,*args):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;            #Llama al m&amp;oacute;dulo configGconf para aplicar los cambios con gconf

            Config = configGconf.Conf()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Config.modificar_opcion(self.aplicaciones)&lt;/p&gt;
&lt;p&gt;def main(self): #M&amp;eacute;todo que ejecuta el programa
  gtk.main()&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
       Instancia del objeto AccessGnomeConfig y ejecuci&amp;oacute;n del programa
 app = AccessGnomeConfig()
 app.main()&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;La opci&amp;oacute;n de applet para dalt&amp;oacute;nicos no est&amp;aacute; habilitada en este momento ya que se est&amp;aacute; trabajando en agregar el applet automaticamente a la barra superior de gnome por medio de gconf. La pr&amp;oacute;xima mejora ser&amp;aacute; eliminar configuraciones del gconf.&lt;/p&gt;
&lt;p&gt;En pr&amp;oacute;ximo art&amp;iacute;culo se crear&amp;aacute; el paquete .tar.gz de python para subirlo al repositorio oficial de python y luego crear un paquete para debian.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="accesibilidad"></category><category term="gconf"></category><category term="glade"></category><category term="gnome"></category><category term="gtk"></category><category term="python"></category><category term="tiflotecnologia"></category></entry><entry><title>Script en python que configura los accesos rápidos de teclado a aplicaciones en gnome con gconf</title><link href="https://ecrespo.github.io/script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf.html" rel="alternate"></link><published>2009-12-12T19:00:00-05:30</published><updated>2009-12-12T19:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-12-12:/script-en-python-que-configura-los-accesos-rapidos-de-teclado-a-aplicaciones-en-gnome-con-gconf.html</id><summary type="html">&lt;p&gt;El script lo pueden bajar de &lt;a href="http://code.google.com/p/python-config-accesskey-gnome/source/browse/pyconfig-accessgnome.py"&gt;googlecode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este programa tiene su ayuda:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./pyconfig-accessgnome.py --help
pyconfig-orca options
option : --help : Print this help
option : --list : List gconf for gnome-orca
option : --all : add all config access key in gconf
option : --nautilus : add gconf access key to nautilus
option : --gnome-terminal : add gconf access …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;El script lo pueden bajar de &lt;a href="http://code.google.com/p/python-config-accesskey-gnome/source/browse/pyconfig-accessgnome.py"&gt;googlecode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este programa tiene su ayuda:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./pyconfig-accessgnome.py --help
pyconfig-orca options
option : --help : Print this help
option : --list : List gconf for gnome-orca
option : --all : add all config access key in gconf
option : --nautilus : add gconf access key to nautilus
option : --gnome-terminal : add gconf access key to gnome-terminal
option : --oowriter : add gconf access key to oowriter
option : --pidgin : add gconf access key to pidgin
option : --gedit : add gconf access key to gedit
option : --gnome-calculator : add gconf access key to gnome-calculator
option : --ooimpress : add gconf access key to ooimpress
option : --oocalc : add gconf access key to oocalc
option : --rhythmbox : add gconf access key to rhythmbox
option : --orca : add gconf access key to orca
option : --iceweasel : add gconf access key to iceweasel&lt;/code&gt;
La opci&amp;oacute;n --all permite configurar todas las opciones de una vez, tambi&amp;eacute;n se puede configurar unas aplicaciones nada m&amp;aacute;s.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./pyconfig-accessgnome.py --all
./pyconfig-accessgnome.py --pidgin --orca --iceweasel&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;"""
Name: pyconfig-accessgnome
Description: Aplicaci&amp;oacute;n y m&amp;oacute;dulo que permite modificar los accesos r&amp;aacute;pido de teclas a programas
Version:0.2
License: GPLv3
Copyright: Copyright (C) 2009  Libre Accesibilidad
Author: Ernesto Nadir Crespo Avila
Email: ecrespo@gmail.com
Changelog:
 * Agregada multiples opciones de configuraci&amp;oacute;n&lt;/p&gt;
&lt;p&gt;"""&lt;/p&gt;
&lt;p&gt;import gconf&lt;/p&gt;
&lt;p&gt;class Conf:
    def &lt;strong&gt;init&lt;/strong&gt;(self):
        self.gconfClient = gconf.client_get_default()
        self.aplicaciones = ("orca", "gnome-terminal","oowriter","iceweasel","nautilus","ooimpress","pidgin","oocalc","gedit","gnome-calculator","rhythmbox")
        self.comando = "/apps/metacity/keybinding_commands/command_"
        self.asignacion_teclado = "/apps/metacity/global_keybindings/run_command_"
        self.teclas = {"orca":"o","gnome-terminal":"t","oowriter":"w","iceweasel":"n","nautilus":"h","ooimpress":"i","pidgin":"p","oocalc":"x","gedit":"e","gnome-calculator":"c","rhythmbox":"m"}
        self.colorblind = {}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def modificar(self):
    cont = 1
    for aplicacion in self.aplicaciones:
        ruta1 =  "%s%s" %(self.comando,cont)
        ruta2 = "%s%s"  %(self.asignacion_teclado,cont)
        self.gconfClient.set_string(ruta1, "%s" %aplicacion)
        self.gconfClient.set_string(ruta2, "%s" %self.teclas[aplicacion])
        cont = cont +1

def modificar_opcion(self,opciones_validas):
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;cont = 1
 for aplicacion in opciones_validas:
     if aplicacion in self.aplicaciones:
  ruta1 = "%s%s" %(self.comando,cont)
  ruta2 = "%s%s" %(self.asignacion_teclado,cont)
  self.gconfClient.set_string(ruta1, "%s" %aplicacion)
  self.gconfClient.set_string(ruta2, "%s" %self.teclas[aplicacion])
  cont = cont +1
     else:
  print "please change this option: %s" %aplicacion&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def listar(self):
    cont = 1
    for aplicacion in self.aplicaciones:
        ruta1 =  "%s%s" %(self.comando,cont)
        ruta2 = "%s%s"  %(self.asignacion_teclado,cont)
        print self.gconfClient.get_string(ruta1),self.gconfClient.get_string(ruta2)
        cont = cont +1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    import sys
    config = Conf()
    global opciones
    opciones = config.teclas.keys()
    def mensaje():
        print "pyconfig-orca options " 
        print "option : --help    : Print this help"
        print "option : --list    : List gconf for gnome-orca"
        print "option : --all     : add all config access key in gconf"
        for opcion in opciones:
   print "option : --%s   : add gconf access key to %s" %(opcion,opcion)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if len(sys.argv) == 1 :
    mensaje()
elif len(sys.argv) == 2:
    if sys.argv[1] == "--list" :
        config.listar()
    elif sys.argv[1] == "--all":
        config.modificar()
    elif sys.argv[1] == "--help" :
        mensaje()
    else:
 for opcion in opciones:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if sys.argv[1] =="--%s" %opcion:
      config.modificar_opcion(opcion)
    elif len(sys.argv) &amp;gt; 2:
 bandera = 0
 opciones_validas = []
 for opcion in sys.argv[1:]:
     if opcion == "--list" :
  bandera = 1
  continue
     elif opcion == "--all":
  bandera = 1
  continue
     elif opcion == "--help":
  bandera == 1
  continue
     else:
  opciones_validas.append(opcion[2:])
 if bandera == 1:
     mensaje()
     print "If you have a two option or more, please don\'t use --list,--all or --help."
 else:
     config.modificar_opcion(opciones_validas)
     print "all change do it"&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;En pr&amp;oacute;ximo post se mostrar&amp;aacute; la interfaz gr&amp;aacute;fica para la aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="accesibilidad"></category><category term="gconf"></category><category term="gnome"></category><category term="python"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 6. Editor de Texto</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-6-editor-de-texto.html" rel="alternate"></link><published>2009-10-08T19:00:00-05:30</published><updated>2009-10-08T19:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-10-08:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-6-editor-de-texto.html</id><summary type="html">&lt;p&gt;En el tutorial anterior se mostr&amp;oacute; como abrir un archivo, mostrar el contenido en el widget textview, ahora se agrega la posibilidad de editar y guardar el archivo.&lt;/p&gt;
&lt;p&gt;En la figura se muestra el dise&amp;ntilde;o en glade.
&lt;img alt="Tutorial 6 Glade 1" src="./images/tutorialpythongtkglade6-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importacion de modulos"&gt;Importaci&amp;oacute;n de m&amp;oacute;dulos&lt;/h1&gt;
&lt;p&gt;import pygtk
pygtk …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el tutorial anterior se mostr&amp;oacute; como abrir un archivo, mostrar el contenido en el widget textview, ahora se agrega la posibilidad de editar y guardar el archivo.&lt;/p&gt;
&lt;p&gt;En la figura se muestra el dise&amp;ntilde;o en glade.
&lt;img alt="Tutorial 6 Glade 1" src="./images/tutorialpythongtkglade6-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importacion de modulos"&gt;Importaci&amp;oacute;n de m&amp;oacute;dulos&lt;/h1&gt;
&lt;p&gt;import pygtk
pygtk.require('2.0')
import gtk, gtk.glade, inspect, sys
import string&lt;/p&gt;
&lt;h1 id="creacion de la clase ej1"&gt;Creaci&amp;oacute;n de la clase ej1&lt;/h1&gt;
&lt;p&gt;class Editor:
 #Creaci&amp;oacute;n del m&amp;eacute;todo constructor de la clase.
 def &lt;strong&gt;init&lt;/strong&gt;(self):
     #Se captura el archivo xml de la interfaz
     self.w_tree = gtk.glade.XML('ej1.glade')
     #Se asocia la ventana1
     self.ventana1 = self.w_tree.get_widget('ventana1')
     #Se asocia el widget textview1
     self.textview1 = self.w_tree.get_widget('editortexto')
     #Se asocia el widget de la selecci&amp;oacute;n de archivo
     self.seleccionararchivo = self.w_tree.get_widget('filechooserbutton1')
     #Se asocia el widget de la selecci&amp;oacute;n de archivo
     self.seleccionararchivo2 = self.w_tree.get_widget('filechooserbutton2')
     #Se asocia el boton salir
     self.botonsalir = self.w_tree.get_widget('bsalir')
     #Se asocia los eventos con las se&amp;ntilde;ales
     self.w_tree.signal_autoconnect(dict(inspect.getmembers(self)))
     #Se asocia el objeto buffer de texto
     self.buffertexto = gtk.TextBuffer()
     #Se crea una lista vac&amp;iacute;a
     self.lista = []
     #Se crea la variable que contendr&amp;aacute; el nombre del archivo seleccionado
     self.archivo_name = ""
     #Se asigna un t&amp;iacute;tulo a la ventana
     self.ventana1.set_title("Editor de texto")&lt;/p&gt;
&lt;p&gt;#Se crea el m&amp;eacute;todo de selecci&amp;oacute;n de archivo
 def on_filechooserbutton1_file_set(self,*args):
     #Se captura el nombre del archivo en la variable
     self.archivo_name = self.seleccionararchivo.get_filename()
     #Se abre el archivo colocando su contenido en una lista
     self.lista = open(self.archivo_name,"r").readlines()
     #Se recorre la lista y se coloca el contenido en el buffer de texto
     for i in range(len(self.lista)):
         self.buffertexto.insert_at_cursor(self.lista[i])
     #Se coloca el contenido del buffer en el textview
     self.textview1.set_buffer(self.buffertexto)
     #Se oculta la ventana de selecci&amp;oacute;n de archivo
     self.seleccionararchivo.hide()
     #Se crea el m&amp;eacute;todo para el boton salir&lt;/p&gt;
&lt;p&gt;def on_filechooserbutton2_file_set(self,*args):
     #Se captura el nombre del archivo en la variable
     self.archivo_name2 = self.seleccionararchivo2.get_filename()
     #Se captura el inicio y fin del buffer del textview
     startiter, enditer = self.buffertexto.get_bounds()
     #Se abre el archivo en modo escritura
     archivo = open(self.archivo_name2,"w")
     #Se escribe la informaci&amp;oacute;n en el objeto archivo , tomando el texto del buffer
     archivo.writelines(self.buffertexto.get_text(startiter,enditer))
     #Se cierra el archivo
     archivo.close()&lt;/p&gt;
&lt;p&gt;#Salir
 def on_bsalir_clicked(self,*args):
     gtk.main_quit()&lt;/p&gt;
&lt;p&gt;#Se crea el m&amp;eacute;todo para cerrar la aplicaci&amp;oacute;n
 def on_ventana1_destroy(self,&lt;em&gt;args):
     gtk.main_quit()
 #Se crea el m&amp;eacute;todo main que muestra la ventana
 def main(self,&lt;/em&gt;args):
     self.ventana1.show()
     gtk.main()&lt;/p&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
app = Editor()
app.main()&lt;/p&gt;
&lt;p&gt;```
La siguiente figura muestra la aplicaci&amp;oacute;n ejecutandose:
&lt;img alt="Tutorial 6 Glade 2" src="./images/tutorialpythongtkglade6-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;En la siguiente figura se muestra el contenido del archivo en el editor con posibiliad de editar:
&lt;img alt="Tutorial 6 Glade 3" src="./images/tutorialpythongtkglade6-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category></entry><entry><title>Agregar acceso a teclas rápidas con python</title><link href="https://ecrespo.github.io/agregar-acceso-a-teclas-rapidas-con-python.html" rel="alternate"></link><published>2009-10-07T07:00:00-05:30</published><updated>2009-10-07T07:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-10-07:/agregar-acceso-a-teclas-rapidas-con-python.html</id><summary type="html">&lt;p&gt;De la publicaci&amp;oacute;n anterior sobre uso de gconf con python, ahora se mostrar&amp;aacute; un script que
agrega varios accesos r&amp;aacute;pido al gnome.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo fuente lo pueden bajar de google code de este &lt;a href="https://github.com/ecrespo/ecrespo.github.io/blob/master/content/code/2009/pyconfig-orca.py"&gt;enlace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando …&lt;/p&gt;</summary><content type="html">&lt;p&gt;De la publicaci&amp;oacute;n anterior sobre uso de gconf con python, ahora se mostrar&amp;aacute; un script que
agrega varios accesos r&amp;aacute;pido al gnome.&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo fuente lo pueden bajar de google code de este &lt;a href="https://github.com/ecrespo/ecrespo.github.io/blob/master/content/code/2009/pyconfig-orca.py"&gt;enlace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Teclado"></category></entry><entry><title>Cambiando la configuración de gnome con gconf desde python</title><link href="https://ecrespo.github.io/cambiando-la-configuracion-de-gnome-con-gconf-desde-python.html" rel="alternate"></link><published>2009-07-17T10:00:00-05:30</published><updated>2009-07-17T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-07-17:/cambiando-la-configuracion-de-gnome-con-gconf-desde-python.html</id><summary type="html">&lt;p&gt;En gnome se tiene la herramienta gconf-editor donde se puede cambiar la configuraci&amp;oacute;n
del escritorio y de las aplicaciones.&lt;/p&gt;
&lt;p&gt;La figura muestra el editor:&lt;/p&gt;
&lt;p&gt;&lt;img alt="gconf Gnome" src="./images/gconf-gnome.png"/&gt;&lt;/p&gt;
&lt;p&gt;La idea es usar el m&amp;oacute;dulo de python llamado gconf para manipular par&amp;aacute;metros de
configuraci&amp;oacute;n del escritorio.&lt;/p&gt;
&lt;p&gt;```
Se importa el m&amp;oacute;dulo gconf&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import gconf&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="conectarse con el escritorio gnome."&gt;Conectarse con …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;En gnome se tiene la herramienta gconf-editor donde se puede cambiar la configuraci&amp;oacute;n
del escritorio y de las aplicaciones.&lt;/p&gt;
&lt;p&gt;La figura muestra el editor:&lt;/p&gt;
&lt;p&gt;&lt;img alt="gconf Gnome" src="./images/gconf-gnome.png"/&gt;&lt;/p&gt;
&lt;p&gt;La idea es usar el m&amp;oacute;dulo de python llamado gconf para manipular par&amp;aacute;metros de
configuraci&amp;oacute;n del escritorio.&lt;/p&gt;
&lt;p&gt;```
Se importa el m&amp;oacute;dulo gconf&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import gconf&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="conectarse con el escritorio gnome."&gt;Conectarse con el escritorio gnome.&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;gconfClient = gconf.client_get_default()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="se le asigna el nombre de usuario a la aplicacion apps/pyconchatter/"&gt;Se le asigna el nombre de usuario a la aplicaci&amp;oacute;n apps/pyconchatter/&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;gconfClient.set_string("/apps/pyconchatter/username", "ecrespo")
True&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="se obtiene el nombre de usuario de la aplicacion pyconchatter"&gt;Se obtiene el nombre de usuario de la aplicaci&amp;oacute;n pyconchatter&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;usuario = gconfClient.get_string("/apps/pyconchatter/username")
print usuario
ecrespo&lt;/p&gt;
&lt;p&gt;panel = gconfClient.get_string("/apps/panel/toplevels/panel_1/auto_hide")
print panel
None&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="se obtiene los valores de los accesos rapidos del teclado para el orca."&gt;Se obtiene los valores de los accesos r&amp;aacute;pidos del teclado para el orca.&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;print gconfClient.get_string("/apps/metacity/keybinding_commands/command_1")
orca
print gconfClient.get_string("/apps/metacity/global_keybindings/run_command_1")
o
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id="devuelve el nombre del archivo del fondo de pantalla del escritorio."&gt;Devuelve el nombre del archivo del fondo de pantalla del escritorio.&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;print gconfClient.get_string("/desktop/gnome/background/picture_filename")
/home/ernesto/Escritorio/12003375.jpg
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Con este m&amp;oacute;dulo se pueden hacer aplicaciones gr&amp;aacute;ficas con gtk y los par&amp;aacute;metros de
configuraci&amp;oacute;n de la aplicaci&amp;oacute;n se puede manejar desde gconf con python.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Gnome"></category></entry><entry><title>Python en Android</title><link href="https://ecrespo.github.io/python-en-android.html" rel="alternate"></link><published>2009-07-12T11:00:00-05:30</published><updated>2009-07-12T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-07-12:/python-en-android.html</id><summary type="html">&lt;p&gt;En la lista de python Argentina pasan el enlace de una aplicaci&amp;oacute;n para android que
le da soporte para realizar programas en python; la aplicaci&amp;oacute;n se llama android-scripting
es una aplicaci&amp;oacute;n que brinda a los usuarios una serie de lenguajes script entre
ellos python.&lt;/p&gt;
&lt;p&gt;La aplicaci&amp;oacute;n permite hacer lo siguiente …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En la lista de python Argentina pasan el enlace de una aplicaci&amp;oacute;n para android que
le da soporte para realizar programas en python; la aplicaci&amp;oacute;n se llama android-scripting
es una aplicaci&amp;oacute;n que brinda a los usuarios una serie de lenguajes script entre
ellos python.&lt;/p&gt;
&lt;p&gt;La aplicaci&amp;oacute;n permite hacer lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Capturar eventos&lt;/li&gt;
&lt;li&gt;Iniciar actividades&lt;/li&gt;
&lt;li&gt;Realizar llamadas tel&amp;eacute;fonicas&lt;/li&gt;
&lt;li&gt;Enviar mensajes de texto&lt;/li&gt;
&lt;li&gt;Escanear c&amp;oacute;digos de barras&lt;/li&gt;
&lt;li&gt;Localizaci&amp;oacute;n&lt;/li&gt;
&lt;li&gt;Usar text-to-speech: Osea se puede generar mensajes accesibles para las personas invidentes!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;M&amp;aacute;s informaci&amp;oacute;n en el wiki del proyecto. Espero pronto hacer pruebas y traducir algunos tutoriales.&lt;/p&gt;
&lt;p&gt;http://google-opensource.blogspot.com/2009/06/introducing-android-scripting.html&lt;/p&gt;
&lt;p&gt;http://code.google.com/p/android-scripting/&lt;/p&gt;
&lt;p&gt;http://code.google.com/p/android-scripting/w/list&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Android"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 5</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-5.html" rel="alternate"></link><published>2009-07-05T10:00:00-05:30</published><updated>2009-07-05T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-07-05:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-5.html</id><summary type="html">&lt;p&gt;Utilizar el widget textview.
El siguiente ejemplo se explicar&amp;aacute; el uso del widget textview. Se crear&amp;aacute; una ventana
con 4 widgets, una etiqueta que menciona la lectura de archivos, luego el textview donde
se mostrar&amp;aacute; el contenido de un archivo, el boton de selecci&amp;oacute;n de archivo y el boton de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Utilizar el widget textview.
El siguiente ejemplo se explicar&amp;aacute; el uso del widget textview. Se crear&amp;aacute; una ventana
con 4 widgets, una etiqueta que menciona la lectura de archivos, luego el textview donde
se mostrar&amp;aacute; el contenido de un archivo, el boton de selecci&amp;oacute;n de archivo y el boton de salir.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se explica el c&amp;oacute;digo del desarrollo:&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python"&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1 id="-- coding: utf-8 --"&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;h1 id="importacion de modulos"&gt;Importaci&amp;oacute;n de m&amp;oacute;dulos&lt;/h1&gt;
&lt;p&gt;import pygtk
pygtk.require('2.0')
import gtk, gtk.glade, inspect, sys&lt;/p&gt;
&lt;h1 id="creacion de la clase ej8"&gt;Creaci&amp;oacute;n de la clase ej8&lt;/h1&gt;
&lt;p&gt;class ej8:
    #Creaci&amp;oacute;n del m&amp;eacute;todo constructor de la clase.
    def &lt;strong&gt;init&lt;/strong&gt;(self):
        #Se captura el archivo xml de la interfaz
        self.w_tree = gtk.glade.XML('ej8.glade')
        #Se asocia la ventana1
        self.ventana1 = self.w_tree.get_widget('ventana1')
        #Se asocia el widget textview1
        self.textview1 = self.w_tree.get_widget('textview1')
        #Se asocia el widget de la selecci&amp;oacute;n de archivo
        self.seleccionararchivo = self.w_tree.get_widget('seleccionararchivo')
        #Se asocia el boton salir
        self.botonsalir = self.w_tree.get_widget('botonsalir')
        #Se asocia los eventos con las se&amp;ntilde;ales
        self.w_tree.signal_autoconnect(dict(inspect.getmembers(self)))
        #Se asocia el objeto buffer de texto
        self.buffertexto = gtk.TextBuffer()
        #Se crea una lista vac&amp;iacute;a
        self.lista = []
        #Se crea la variable que contendr&amp;aacute; el nombre del archivo seleccionado
        self.archivo_name = ""
    #Se crea el m&amp;eacute;todo de selecci&amp;oacute;n de archivo
    def on_seleccionararchivo_file_set(self,*args):
        #Se captura el nombre del archivo en la variable
        self.archivo_name = self.seleccionararchivo.get_filename()
        #Se abre el archivo colocando su contenido en una lista
        self.lista = open(self.archivo_name,"r").readlines()
        #Se recorre la lista y se coloca el contenido en el buffer de texto
        for i in range(len(self.lista)):
            self.buffertexto.insert_at_cursor(self.lista[i])
        #Se coloca el contenido del buffer en el textview
        self.textview1.set_buffer(self.buffertexto)
        #Se oculta la ventana de selecci&amp;oacute;n de archivo
        self.seleccionararchivo.hide()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Se crea el m&amp;eacute;todo para el boton salir
def on_botonsalir_clicked(self,*args):
    gtk.main_quit()

#Se crea el m&amp;eacute;todo para cerrar la aplicaci&amp;oacute;n
def on_ventana1_destroy(self,*args):
    gtk.main_quit()

#Se crea el m&amp;eacute;todo main que muestra la ventana
def main(self,*args):
    self.ventana1.show()
    gtk.main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == "&lt;strong&gt;main&lt;/strong&gt;":
    app = ej8()
    app.main()
```&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n lo pueden descargar de github en el siguiente
&lt;a href="https://github.com/ecrespo/ecrespo.github.io/blob/master/content/code/2009/tutorialgtkglade5.py"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category></entry><entry><title>Creado el proyecto python-autoaccesibilidad</title><link href="https://ecrespo.github.io/creado-el-proyecto-python-autoaccesibilidad.html" rel="alternate"></link><published>2009-07-04T06:00:00-05:30</published><updated>2009-07-04T06:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-07-04:/creado-el-proyecto-python-autoaccesibilidad.html</id><summary type="html">&lt;p&gt;La p&amp;aacute;gina del proyecto se encuentra en:&lt;/p&gt;
&lt;p&gt;http://code.google.com/p/python-autoaccesibilidad/&lt;/p&gt;
&lt;p&gt;La descripci&amp;oacute;n del mismo se encuentra en el wiki:&lt;/p&gt;
&lt;h3 id="introduccion"&gt;Introducci&amp;oacute;n&lt;/h3&gt;
&lt;p&gt;Este programa permitir&amp;aacute; la instalaci&amp;oacute;n de aplicaciones accesibles en equipos con
Debian ya instalados sin necesidad de tener una conexi&amp;oacute;n a internet o un mirror
en la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;La p&amp;aacute;gina del proyecto se encuentra en:&lt;/p&gt;
&lt;p&gt;http://code.google.com/p/python-autoaccesibilidad/&lt;/p&gt;
&lt;p&gt;La descripci&amp;oacute;n del mismo se encuentra en el wiki:&lt;/p&gt;
&lt;h3 id="introduccion"&gt;Introducci&amp;oacute;n&lt;/h3&gt;
&lt;p&gt;Este programa permitir&amp;aacute; la instalaci&amp;oacute;n de aplicaciones accesibles en equipos con
Debian ya instalados sin necesidad de tener una conexi&amp;oacute;n a internet o un mirror
en la red; es &amp;uacute;til para laboratorios y centros de navegaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Para los usuarios se tendr&amp;aacute; 2 paquetes de Debian (metapaquete accesibilidad,
accesibilidad-gnome-conf-spanish y accesibilidad-gnome-conf-english) que
facilitar&amp;aacute; la instalaci&amp;oacute;n de sus equipos.&lt;/p&gt;
&lt;h3 id="detalles"&gt;Detalles&lt;/h3&gt;
&lt;p&gt;La aplicaci&amp;oacute;n tendr&amp;aacute; las siguientes caracter&amp;iacute;sticas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Desarrollado en python&lt;/li&gt;
&lt;li&gt;Modular&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usar&amp;aacute; el m&amp;oacute;dulo gksu de python para la instalaci&amp;oacute;n de paquetes de Debian, modificaci&amp;oacute;n
del sources.list y ejecutar un servidor web escrito en python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Se agrega los directorios de configuraci&amp;oacute;n y un m&amp;oacute;dulo para copiar las configuraciones a todos los usuarios.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Se incorpora un repositorio peque&amp;ntilde;o de debian que tendr&amp;aacute; el metapaquete accesibilidad y
las dependencias necesarias para as&amp;iacute; no necesitar un mirror de debian (un disco duro o conexi&amp;oacute;n a internet).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Por los momentos s&amp;oacute;lo funcionar&amp;aacute; con Debian Squeeze y Sid, ya que el metapaquete accesibilidad
funciona para esas dos versiones de Debian (problemas de dependencias y existencia de paquetes
  en Lenny), en un futuro se sacar&amp;aacute; una versi&amp;oacute;n para lenny.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tendr&amp;aacute; la posibilidad de actualizar el repositorio de paquetes local para as&amp;iacute; no depender
de versiones de paquetes y que se cambie la aplicaci&amp;oacute;n debido a esos cambios.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Los m&amp;oacute;dulos que se necesitan son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;web.py : Inicia un servidor web.&lt;/li&gt;
&lt;li&gt;su.py : Facilita la ejecuci&amp;oacute;n de comandos como root pidiendo la clave de root.&lt;/li&gt;
&lt;li&gt;users.py : Devuelve los usuarios que existen en el computador.&lt;/li&gt;
&lt;li&gt;apt.py : Realiza cambios en el repositorio que usa el equipo e instala aplicaciones.&lt;/li&gt;
&lt;li&gt;autoaccesibilidad.py : Programa principal que realiza la instalaci&amp;oacute;n de aplicaciones
accesibles en un equipo utilizando un mirror y servidor web local.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contendr&amp;aacute; 2 directorios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;conf: En este directorio se tendr&amp;aacute; toda la configuraci&amp;oacute;n de la sesi&amp;oacute;n del Escritorio Gnome,
la configuraci&amp;oacute;n del lector de pantalla orca y cualquier otra configuraci&amp;oacute;n de la sesi&amp;oacute;n del usuario.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;debian: En este directorio se tendr&amp;aacute; un repositorio local de paquetes de Debian que son necesarios
para que un computador sea accesible.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;M&amp;aacute;s informaci&amp;oacute;n en el blog de libre accesibilidad:&lt;/p&gt;
&lt;p&gt;http://libreaccesibilidad.blogspot.com/2009/07/proyecto-python-autoaccesibilidad.html&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Accesibilidad"></category></entry><entry><title>Crear documentos ODF directamente desde python</title><link href="https://ecrespo.github.io/crear-documentos-odf-directamente-desde-python.html" rel="alternate"></link><published>2009-07-02T07:00:00-05:30</published><updated>2009-07-02T07:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-07-02:/crear-documentos-odf-directamente-desde-python.html</id><summary type="html">&lt;p&gt;Existe una herramienta y API para python que permite crear documentos y hojas de c&amp;aacute;lculo
directamente desde un programa. El m&amp;oacute;dulo se llama odfpy .&lt;/p&gt;
&lt;p&gt;Bajar e instalar odfpy:
Se puede bajar desde el repositorio subversion:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn export https://svn.forge.osor.eu/svn/odfpy/trunk odfpy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego se cambia al …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Existe una herramienta y API para python que permite crear documentos y hojas de c&amp;aacute;lculo
directamente desde un programa. El m&amp;oacute;dulo se llama odfpy .&lt;/p&gt;
&lt;p&gt;Bajar e instalar odfpy:
Se puede bajar desde el repositorio subversion:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn export https://svn.forge.osor.eu/svn/odfpy/trunk odfpy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego se cambia al directorio odfpy:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd odfpy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para instalar se ejecuta&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python setup.py install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Desde easy_install:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;easy_install odfpy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En este caso baja el paquete y lo instala.&lt;/p&gt;
&lt;p&gt;Las herramientas que se instalan son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mailodf - Env&amp;iacute;a un archivo ODF como html&lt;/li&gt;
&lt;li&gt;odf2xhtml - Convierte ODF a (X)HTML&lt;/li&gt;
&lt;li&gt;odf2xml - Crea un documento xml desde el archivo ODF&lt;/li&gt;
&lt;li&gt;odf2mht - Convierte ODF a HTML&lt;/li&gt;
&lt;li&gt;odf2war - Convierte ODF a archivo web de KDE&lt;/li&gt;
&lt;li&gt;odfimgimport - Importa imagens del documento&lt;/li&gt;
&lt;li&gt;odflint - Verifica el archivo&lt;/li&gt;
&lt;li&gt;odfmeta - Lista o cambia la informaci&amp;oacute;n metadata de un archivo ODF&lt;/li&gt;
&lt;li&gt;odfoutline - Muestra el documento fuera de l&amp;iacute;nea&lt;/li&gt;
&lt;li&gt;odfuserfield - Lista o cambia las los campos de declaraci&amp;oacute;n del usuario en un archivo ODF&lt;/li&gt;
&lt;li&gt;xml2odf - Crea un archivo ODF a partir de un archivo XML&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El ejemplo "Hola Mundo".
Se ejecuta el interpretador de comando de python
Importar los m&amp;oacute;dulos de Opendocument
Importar el m&amp;oacute;dulo de manejo de documentos de texto
Se usa el objeto que maneja documentos de texto
Se escribe Hola mundo en un elemento
Se agrega el elemento al documento
Se salva el documento&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from odf.opendocument import OpenDocumentText
from odf.text import P
textdoc = OpenDocumentText()
p = P(text="Hola mundo!")
textdoc.text.addElement(p)
textdoc.save("holamundo",True)
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;En la siguiente imagen se muestra el documento creado.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python ODF" src="./images/python-odf.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Python"></category><category term="ODF"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 4</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-4.html" rel="alternate"></link><published>2009-06-17T10:00:00-05:30</published><updated>2009-06-17T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-17:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-4.html</id><summary type="html">&lt;p&gt;El siguiente ejemplo explicar&amp;aacute; como manejar 2 ventanas en una aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;La primera venta muestra 2 etiquetas una con un texto y la otra en blanco, luego
una entrada de datos solicitando el nombre, 2 botones uno de capturar texto y otra
de salir. Al darle al bot&amp;oacute;n de capturar …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El siguiente ejemplo explicar&amp;aacute; como manejar 2 ventanas en una aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;La primera venta muestra 2 etiquetas una con un texto y la otra en blanco, luego
una entrada de datos solicitando el nombre, 2 botones uno de capturar texto y otra
de salir. Al darle al bot&amp;oacute;n de capturar texto se abre otra ventana preguntando si est&amp;aacute;
seguro de lo que desea hacer, si se le da aceptar presenta el texto en la etiqueta.&lt;/p&gt;
&lt;p&gt;La siguiente figura muestra la interfaz desarrollado con glade.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 4 Glade 1" src="./images/tutorialglade4-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/tutorialpythongtkglade4-codigo.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar el programa se muestra la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 4 Glade 2" src="./images/tutorialglade4-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se escribe el nombre y se presiona capturar texto:
&lt;img alt="Tutorial 4 Glade 3" src="./images/tutorialglade4-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al presiona capturar texto y se abre una ventana con la pregunta si se desea
aceptar o salir de la aplicaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 4 Glade 4" src="./images/tutorialglade4-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Para finalizar se muestra la captura de texto en la etiqueta.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 4 Glade 5" src="./images/tutorialglade4-5.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n lo pueden descargar de github en el siguiente
&lt;a href="https://github.com/ecrespo/ecrespo.github.io/blob/master/content/code/2009/tutorialgtkglade4.py"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 3</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-3.html" rel="alternate"></link><published>2009-06-17T08:00:00-05:30</published><updated>2009-06-17T08:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-17:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-3.html</id><summary type="html">&lt;p&gt;Ahora se mostrar&amp;aacute; como usar el widget combobox. La idea es mostrar una lista de pa&amp;iacute;ses
en el primer combo y cuando este cambie, se cambie la lista de ciudades con respecto a los pa&amp;iacute;ses.&lt;/p&gt;
&lt;p&gt;La interfaz desarrollada con glade se colocan 2 combobox, 1 etiqueta y 2 botones. El …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ahora se mostrar&amp;aacute; como usar el widget combobox. La idea es mostrar una lista de pa&amp;iacute;ses
en el primer combo y cuando este cambie, se cambie la lista de ciudades con respecto a los pa&amp;iacute;ses.&lt;/p&gt;
&lt;p&gt;La interfaz desarrollada con glade se colocan 2 combobox, 1 etiqueta y 2 botones. El
primer combobox contiene los pa&amp;iacute;ses y se agrega desde el glade, el 2do combobox se
deja en blanco manejandose v&amp;iacute;a python. En la siguiente figura se muestra la interfaz en glade.&lt;/p&gt;
&lt;p&gt;Se muestra la interfaz creada con glade en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 3 Glade 1" src="./images/tutorialglade3-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/tutorialpythongtkglade3-codigo.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar el programa se muestra lo siguiente:
&lt;img alt="Tutorial 3 Glade 2" src="./images/tutorialglade3-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luego se selecciona el pa&amp;iacute;s que se tiene Venezuela, Argentina y Escocia. Se cambia cada
vez el pa&amp;iacute;s y se selecciona la ciudad, luego se le da clip al boton aceptar apareciendo en
la etiqueta el pa&amp;iacute;s y la ciudad.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 2 Glade 3" src="./images/tutorialglade3-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 2 Glade 3" src="./images/tutorialglade3-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 2 Glade 3" src="./images/tutorialglade3-5.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n lo pueden descargar de github en el siguiente
&lt;a href="https://github.com/ecrespo/ecrespo.github.io/blob/master/content/code/2009/tutorialgtkglade3.py"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 2</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-2.html" rel="alternate"></link><published>2009-06-17T07:30:00-05:30</published><updated>2009-06-17T07:30:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-17:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-2.html</id><summary type="html">&lt;p&gt;En el siguiente ejemplo de desarrollo de aplicaciones gr&amp;aacute;ficas con glade se muestra
como capturar texto en una entrada de texto, como modificar la informaci&amp;oacute;n en
una etiqueta usando botones.&lt;/p&gt;
&lt;p&gt;Se muestra la interfaz creada con glade en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 2 Glade 1" src="./images/tutorialglade2-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./imagenes/tutorialpythongtkglade2-codigo.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el siguiente ejemplo de desarrollo de aplicaciones gr&amp;aacute;ficas con glade se muestra
como capturar texto en una entrada de texto, como modificar la informaci&amp;oacute;n en
una etiqueta usando botones.&lt;/p&gt;
&lt;p&gt;Se muestra la interfaz creada con glade en la siguiente figura:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial 2 Glade 1" src="./images/tutorialglade2-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./imagenes/tutorialpythongtkglade2-codigo.png"/&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar el programa se muestra la figura:
&lt;img alt="Tutorial 2 Glade 2" src="./images/tutorialglade2-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luego de colocar el dato que se pide y darle clip al boton capturar texto:
&lt;img alt="Tutorial 2 Glade 3" src="./images/tutorialglade2-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n lo pueden descargar de github en el siguiente
&lt;a href="https://github.com/ecrespo/ecrespo.github.io/blob/master/content/code/2009/tutorialgtkglade2.py"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category></entry><entry><title>Tutoriales de matplotlib con python. Parte 6</title><link href="https://ecrespo.github.io/tutoriales-de-matplotlib-con-python-parte-6.html" rel="alternate"></link><published>2009-06-17T07:00:00-05:30</published><updated>2009-06-17T07:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-17:/tutoriales-de-matplotlib-con-python-parte-6.html</id><summary type="html">&lt;p&gt;Continuando con los tutoriales de matplotlib, ahora se mostrar&amp;aacute; como colocar 2 gr&amp;aacute;ficas separadas.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Matplotlib6 c&amp;oacute;digo" src="./images/matplotlib6-codigo.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se importan los m&amp;oacute;dulos necesarios, se define una funci&amp;oacute;n que devuelve el resultado
de un c&amp;aacute;lculo matem&amp;aacute;tico, luego se define los rangos de tiempo1 y tiempo2.&lt;/p&gt;
&lt;p&gt;Se define la figura …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los tutoriales de matplotlib, ahora se mostrar&amp;aacute; como colocar 2 gr&amp;aacute;ficas separadas.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Matplotlib6 c&amp;oacute;digo" src="./images/matplotlib6-codigo.png"/&gt;&lt;/p&gt;
&lt;p&gt;Se importan los m&amp;oacute;dulos necesarios, se define una funci&amp;oacute;n que devuelve el resultado
de un c&amp;aacute;lculo matem&amp;aacute;tico, luego se define los rangos de tiempo1 y tiempo2.&lt;/p&gt;
&lt;p&gt;Se define la figura, luego la subgr&amp;aacute;fica, se le pasa los datos para construir la primera
gr&amp;aacute;fica (tiempo1, la funci&amp;oacute;n, identificaci&amp;oacute;n de la gr&amp;aacute;fica, tiempo2, la funci&amp;oacute;n y la
  identificaci&amp;oacute;n de la gr&amp;aacute;fica).&lt;/p&gt;
&lt;p&gt;Se le coloca el t&amp;iacute;tulo a la gr&amp;aacute;fica, las identificaciones de los ejes para ambas gr&amp;aacute;ficas,
se construye la segunda gr&amp;aacute;fica y se muestra las mismas.&lt;/p&gt;
&lt;p&gt;La figura muestra las 2 gr&amp;aacute;ficas:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Matplotlib6 c&amp;oacute;digo" src="./images/matplotlib6-codigo.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n lo pueden descargar de github en el siguiente
&lt;a href="https://github.com/ecrespo/ecrespo.github.io/blob/master/content/code/2009/tutorialmaplotlib6.py"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="Matplotlib"></category></entry><entry><title>Desarrollo de aplicaciones gráficas con python+gtk+glade. Parte 1</title><link href="https://ecrespo.github.io/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-1.html" rel="alternate"></link><published>2009-06-16T10:30:00-05:30</published><updated>2009-06-16T10:30:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-16:/desarrollo-de-aplicaciones-graficas-con-pythongtkglade-parte-1.html</id><summary type="html">&lt;p&gt;Tengo guardado un material que he preparado para un curso de python con gtk y glade;
desde hace alg&amp;uacute;n tiempo he intentado dictar ese curso pero siempre hab&amp;iacute;a contratiempos
as&amp;iacute; que mejor publico lo que tengo en el blog.&lt;/p&gt;
&lt;p&gt;Empezare con hacer una simple interfaz que tenga informaci&amp;oacute;n en una …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tengo guardado un material que he preparado para un curso de python con gtk y glade;
desde hace alg&amp;uacute;n tiempo he intentado dictar ese curso pero siempre hab&amp;iacute;a contratiempos
as&amp;iacute; que mejor publico lo que tengo en el blog.&lt;/p&gt;
&lt;p&gt;Empezare con hacer una simple interfaz que tenga informaci&amp;oacute;n en una etiqueta.&lt;/p&gt;
&lt;p&gt;En la figura se muestra la ventana creada y el widget etiqueta con el mensaje. La interfaz
se guarda con extensi&amp;oacute;n .glade el cual contiene un archivo XML.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tutorial Glade 1" src="./images/tutorialglade1-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo del programa es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="C&amp;oacute;digo" src="./images/tutorialpythongtkglade1-codigo.png"/&gt;&lt;/p&gt;
&lt;p&gt;La primera l&amp;iacute;nea define el interpretador de comandos a utilizar, en este caso python.
La segunda l&amp;iacute;nea define que se usar&amp;aacute; UTF-8 en el formato de texto.
Las l&amp;iacute;neas 3,4 y 5 se importan m&amp;oacute;dulos y se define el requerimiento de versi&amp;oacute;n de gtk.
L&amp;iacute;nea 6 se define la clase ej1.
L&amp;iacute;nea 7 a la 13 se define el m&amp;eacute;todo init, que se ejecuta cuando el objeto se crea.
L&amp;iacute;nea 8 se captura el archivo XML de glade.
L&amp;iacute;nea 9 y 10 se capturan los widgets ventana y etiqueta1 tal como se llama en el archivo glade.
L&amp;iacute;nea 11 se imprime lo que tiene la etiqueta1, se toma el valor con get().
L&amp;iacute;nea 12 se cambia el valor de lo que contiene la etiqueta1 con set_text("hola mundo").
L&amp;iacute;nea 13. Esta l&amp;iacute;nea es la que relaciona los widgets con las se&amp;ntilde;ales y los m&amp;eacute;todos de la clase ej1.
L&amp;iacute;nea 14. define el m&amp;eacute;todo on_ventana_destroy. Est&amp;eacute; m&amp;eacute;todo se usa para cuando se le da clip a la ventana para cerrarla.
L&amp;iacute;nea 15. Llama a la funci&amp;oacute;n quit de gtk.
L&amp;iacute;nea 16. Define el m&amp;eacute;todo main.
L&amp;iacute;nea 17.Muestra la ventana.
L&amp;iacute;nea 18. Llama a main para la presentaci&amp;oacute;n de la ventana en pantalla.
L&amp;iacute;nea 19. Si se ejecuta el script se ejecutar&amp;aacute; las siguientes l&amp;iacute;neas:
L&amp;iacute;nea 20. Se crea el objeto.
L&amp;iacute;nea 21. Se ejecuta el m&amp;eacute;todo main del objeto.&lt;/p&gt;
&lt;p&gt;El resultado lo muestra la figura.
&lt;img alt="Tutorial Glade 2" src="./images/tutorialglade1-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;El c&amp;oacute;digo de la aplicaci&amp;oacute;n lo pueden descargar de github en el siguiente
&lt;a href="https://github.com/ecrespo/ecrespo.github.io/blob/master/content/code/2009/ej1.py"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="gtk"></category><category term="glade"></category></entry><entry><title>Tutoriales de matplotlib con python. Parte 5</title><link href="https://ecrespo.github.io/tutoriales-de-matplotlib-con-python-parte-5.html" rel="alternate"></link><published>2009-06-16T10:20:00-05:30</published><updated>2009-06-16T10:20:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-16:/tutoriales-de-matplotlib-con-python-parte-5.html</id><summary type="html">&lt;p&gt;El siguiente ejemplo se muestra como colocar varias curvas en una misma gr&amp;aacute;fica.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from pylab import *
t=arange(0.,2.*pi,0.1)
s=cos(t)
x=sqrt(t)
y = sin(t)
p1=plot(t,s, 'g-o',linewidth=2)
p2=plot(t,x, 'r--',linewidth=3)
p3=plot(t,y …&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;El siguiente ejemplo se muestra como colocar varias curvas en una misma gr&amp;aacute;fica.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from pylab import *
t=arange(0.,2.*pi,0.1)
s=cos(t)
x=sqrt(t)
y = sin(t)
p1=plot(t,s, 'g-o',linewidth=2)
p2=plot(t,x, 'r--',linewidth=3)
p3=plot(t,y, 'b--d')
show()
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se importa el m&amp;oacute;dulo pylab, luego se define el rango del eje del tiempo, se
calcula el coseno, la ra&amp;iacute;z cuadrada y el seno, luego se muestra cada calculo.&lt;/p&gt;
&lt;p&gt;&lt;img alt="matplotlib5-1" src="./images/matplotlib5-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="Matplotlib"></category></entry><entry><title>Tutoriales de matplotlib con python. Parte 4</title><link href="https://ecrespo.github.io/tutoriales-de-matplotlib-con-python-parte-4.html" rel="alternate"></link><published>2009-06-16T10:10:00-05:30</published><updated>2009-06-16T10:10:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-16:/tutoriales-de-matplotlib-con-python-parte-4.html</id><summary type="html">&lt;p&gt;El siguiente ejemplo se graficar&amp;aacute; una curva senosoidal definiendo un rango de tiempo.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import numpy
import pylab
t = numpy.arange(0.0, 1.0+0.01, 0.01)
s = numpy.cos(2&lt;em&gt;2&lt;/em&gt;numpy.pi*t)
pylab.plot(t, s)
[]
pylab.xlabel('tiempo (seg)')
pylab.ylabel('Tension (mV)')
pylab.title …&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;El siguiente ejemplo se graficar&amp;aacute; una curva senosoidal definiendo un rango de tiempo.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import numpy
import pylab
t = numpy.arange(0.0, 1.0+0.01, 0.01)
s = numpy.cos(2&lt;em&gt;2&lt;/em&gt;numpy.pi*t)
pylab.plot(t, s)
[]
pylab.xlabel('tiempo (seg)')
pylab.ylabel('Tension (mV)')
pylab.title('Grafica de tension versus tiempo')
pylab.axis([0,1, -2,2])
pylab.grid(True)
pylab.annotate('tension maxima', xy=(0, 1), xytext=(0.2, 1.5),arrowprops=dict(facecolor='black', shrink=0.05),)&lt;/p&gt;
&lt;p&gt;pylab.savefig('grafica.png')
pylab.show()
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se importa el m&amp;oacute;dulo numpy y pylab, luego se define el rango del eje del tiempo con
una funci&amp;oacute;n de numpy, luego se define el eje de la tensi&amp;oacute;n con la funci&amp;oacute;n coseno, se
gr&amp;aacute;fica tanto el tiempo como la tensi&amp;oacute;n, se coloca etiqueta a ambos ejes, t&amp;iacute;tulo a la
gr&amp;aacute;fica, se define los ejes de la gr&amp;aacute;fica,se define cuadricula, se define una anotaci&amp;oacute;n,
colocando el texto de la anotaci&amp;oacute;n, luego la posici&amp;oacute;n de a flacha, la posici&amp;oacute;n del
texto y las caracter&amp;iacute;sticas de la flecha; se guarda la gr&amp;aacute;fica y se muestra.&lt;/p&gt;
&lt;p&gt;&lt;img alt="matplotlib4-1" src="./images/matplotlib4-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="Matplotlib"></category></entry><entry><title>Tutoriales de matplotlib con python. Parte 3 Histograma</title><link href="https://ecrespo.github.io/tutoriales-de-matplotlib-con-python-parte-3-histograma.html" rel="alternate"></link><published>2009-06-16T10:00:00-05:30</published><updated>2009-06-16T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-16:/tutoriales-de-matplotlib-con-python-parte-3-histograma.html</id><summary type="html">&lt;p&gt;Ahora se demostrar&amp;aacute; como graficar un histograma. El ejemplo que se usar&amp;aacute; es el de graficar
una gaussiana.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from pylab import randn, hist
import matplotlib.pyplot as plt
plt.title("Ejemplo de graficar una gaussiana")
x = randn(10000)
plt.hist(x)
(array([ 26, 182, 846, 2061, 2876, 2449, 1194, 312 …&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Ahora se demostrar&amp;aacute; como graficar un histograma. El ejemplo que se usar&amp;aacute; es el de graficar
una gaussiana.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from pylab import randn, hist
import matplotlib.pyplot as plt
plt.title("Ejemplo de graficar una gaussiana")
x = randn(10000)
plt.hist(x)
(array([ 26, 182, 846, 2061, 2876, 2449, 1194, 312, 46, 8]), array([-3.56266387, -2.79960319, -2.03654252, -1.27348184, -0.51042117, 0.25263951, 1.01570018, 1.77876086, 2.54182153, 3.30488221, 4.06794288]), )
plt.axis([-5, 5, 0, 4000]) [-5, 5, 0, 4000]
plt.grid(True)
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se importa random e histograma, luego matplotlib. Se define el t&amp;iacute;tulo de la gr&amp;aacute;fica,
se generan los n&amp;uacute;meros aleatorios entre 0 y 10000, se le pasan los datos a matplotlib,
se definen los ejes de la gr&amp;aacute;fica y para finalizar se define cuadros a la gr&amp;aacute;fica.&lt;/p&gt;
&lt;p&gt;&lt;img alt="matplotlib3-1" src="./images/matplotlib3-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="Matplotlib"></category></entry><entry><title>Tutoriales de matplotlib con python. Parte 2</title><link href="https://ecrespo.github.io/tutoriales-de-matplotlib-con-python-parte-2.html" rel="alternate"></link><published>2009-06-16T09:00:00-05:30</published><updated>2009-06-16T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-16:/tutoriales-de-matplotlib-con-python-parte-2.html</id><summary type="html">&lt;p&gt;Ahora se mostrar&amp;aacute; como se definen unos puntos en el gr&amp;aacute;fico, se define el rango de los ejes.&lt;/p&gt;
&lt;p&gt;```
ernesto@zvezda:~/bin$ python2.5
Python 2.5.4 (r254:67916, Feb 17 2009, 20:16:45)
[GCC 4.3.3] on linux2
Type "help", "copyright", "credits" or "license" for more information …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ahora se mostrar&amp;aacute; como se definen unos puntos en el gr&amp;aacute;fico, se define el rango de los ejes.&lt;/p&gt;
&lt;p&gt;```
ernesto@zvezda:~/bin$ python2.5
Python 2.5.4 (r254:67916, Feb 17 2009, 20:16:45)
[GCC 4.3.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import matplotlib.pyplot as plt
plt.plot([1,2,3,4], [1,4,9,16], 'ro')
[]
plt.axis([0, 6, 0, 20])
[0, 6, 0, 20]
plt.show()
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;La diferencia con el anterior es que se definen las coordenadas y se pasa el par&amp;aacute;metro 'ro',
 este hace que s&amp;oacute;lo se muestre los puntos en vez de una curva en el gr&amp;aacute;fico; luego se
 define los ejes de 0 a 6 y de 0 a 20.&lt;/p&gt;
&lt;p&gt;&lt;img alt="matplotlib2-1" src="./images/matplotlib2-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;El siguiente ejemplo es uniendo los puntos, para ello se le quita el par&amp;aacute;metro 'ro' al
pasar las coordenadas:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import matplotlib.pyplot as plt
plt.plot([1,2,3,4], [1,4,9,16])
[]
plt.axis([0, 6, 0, 20])
[0, 6, 0, 20]
plt.show()
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="matplotlib2-2" src="./images/matplotlib2-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="Matplotlib"></category></entry><entry><title>Tutoriales de matplotlib con python. Parte 1</title><link href="https://ecrespo.github.io/tutoriales-de-matplotlib-con-python-parte-1.html" rel="alternate"></link><published>2009-06-16T08:00:00-05:30</published><updated>2009-06-16T08:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-06-16:/tutoriales-de-matplotlib-con-python-parte-1.html</id><summary type="html">&lt;p&gt;Luego de un tiempo dedicado a otros asuntos y debido a mi reposo voy a empezar una
serie de tutoriales cortos sobre matplotlib.&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita tener es matplotlib instalado:
Como root:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install python-matplotlib python-matplotlib-data python-matplotlib-doc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego desde la l&amp;iacute;nea de comandos se ejecuta python
```
ernesto@zvezda …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Luego de un tiempo dedicado a otros asuntos y debido a mi reposo voy a empezar una
serie de tutoriales cortos sobre matplotlib.&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita tener es matplotlib instalado:
Como root:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install python-matplotlib python-matplotlib-data python-matplotlib-doc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego desde la l&amp;iacute;nea de comandos se ejecuta python
```
ernesto@zvezda:~/bin$ python2.5
Python 2.5.4 (r254:67916, Feb 17 2009, 20:16:45)
[GCC 4.3.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import matplotlib.pyplot as plt
plt.plot([1,2,3],[5,7,9])
[]
plt.ylabel('Eje Y')&lt;/p&gt;
&lt;p&gt;plt.xlabel('Eje X')
plt.show()
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;El primer comando importa la librer&amp;iacute;a matplotlib, luego se le pasan los puntos
a graficar, los del eje X y del eje Y; luego se colocan etiquetas a los ejes
cartesianos y se presenta la gr&amp;aacute;fica.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Python"></category><category term="Matplotlib"></category></entry><entry><title>Publicado nuevos audio tutoriales. 2da parte</title><link href="https://ecrespo.github.io/publicado-nuevos-audio-tutoriales-2da-parte.html" rel="alternate"></link><published>2009-05-17T09:00:00-05:30</published><updated>2009-05-17T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-05-17:/publicado-nuevos-audio-tutoriales-2da-parte.html</id><summary type="html">&lt;p&gt;Ya se public&amp;oacute; en el &lt;a href="http://libreaccesibilidad.blogspot.com/2009/05/audio-tutoriales-de-accesibilidad-2da.html"&gt;blog de libre accesibilidad&lt;/a&gt;  los nuevos tutoriales.&lt;/p&gt;
&lt;p&gt;Se tienen los siguientes tutoriales:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instalaci&amp;oacute;n de tifloubuntu&lt;/li&gt;
&lt;li&gt;Subir el volumen al equipo&lt;/li&gt;
&lt;li&gt;Configuraci&amp;oacute;n de gnome-orca&lt;/li&gt;
&lt;li&gt;Configurar la red inal&amp;aacute;mbrica&lt;/li&gt;
&lt;li&gt;Configurar Banda ancha movil&lt;/li&gt;
&lt;li&gt;Uso de la calculadora&lt;/li&gt;
&lt;li&gt;Agregar o quitar programas&lt;/li&gt;
&lt;li&gt;Navegar en el escritorio&lt;/li&gt;
&lt;li&gt;Navegaci&amp;oacute;n de …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Ya se public&amp;oacute; en el &lt;a href="http://libreaccesibilidad.blogspot.com/2009/05/audio-tutoriales-de-accesibilidad-2da.html"&gt;blog de libre accesibilidad&lt;/a&gt;  los nuevos tutoriales.&lt;/p&gt;
&lt;p&gt;Se tienen los siguientes tutoriales:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instalaci&amp;oacute;n de tifloubuntu&lt;/li&gt;
&lt;li&gt;Subir el volumen al equipo&lt;/li&gt;
&lt;li&gt;Configuraci&amp;oacute;n de gnome-orca&lt;/li&gt;
&lt;li&gt;Configurar la red inal&amp;aacute;mbrica&lt;/li&gt;
&lt;li&gt;Configurar Banda ancha movil&lt;/li&gt;
&lt;li&gt;Uso de la calculadora&lt;/li&gt;
&lt;li&gt;Agregar o quitar programas&lt;/li&gt;
&lt;li&gt;Navegar en el escritorio&lt;/li&gt;
&lt;li&gt;Navegaci&amp;oacute;n de archivos&lt;/li&gt;
&lt;li&gt;Ofim&amp;aacute;tica con writer&lt;/li&gt;
&lt;li&gt;Navegador firefox&lt;/li&gt;
&lt;li&gt;Configuraci&amp;oacute;n y uso del cliente de correo evolution&lt;/li&gt;
&lt;li&gt;Configuraci&amp;oacute;n y uso del cliente de mensajer&amp;iacute;a instant&amp;aacute;nea pidgin&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En pr&amp;oacute;xima publicaci&amp;oacute;n se colocar&amp;aacute;n los v&amp;iacute;deos.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Linux"></category><category term="Accesibilidad"></category><category term="Videos"></category></entry><entry><title>Sistema Operativo para celulares Symbian</title><link href="https://ecrespo.github.io/sistema-operativo-para-celulares-symbian.html" rel="alternate"></link><published>2009-05-10T08:00:00-05:30</published><updated>2009-05-10T08:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-05-10:/sistema-operativo-para-celulares-symbian.html</id><summary type="html">&lt;h3 id="symbianos"&gt;SymbianOS&lt;/h3&gt;
&lt;p&gt;Es un sistema operativo abierto dise&amp;ntilde;ado para dispositivos moviles, con librerias,
framework de interfaz de usuario y herramientas desarrolladas por Symbian Ltd, correo
exclusivamente en procesadores ARM&lt;/p&gt;
&lt;h3 id="diseno"&gt;Dise&amp;ntilde;o&lt;/h3&gt;
&lt;p&gt;Su estructura es parecida a muchos sistemas operativos de escritorio, con multitareas
preeemptivas y protecci&amp;oacute;n de memoria. EPOC fue inspirado por …&lt;/p&gt;</summary><content type="html">&lt;h3 id="symbianos"&gt;SymbianOS&lt;/h3&gt;
&lt;p&gt;Es un sistema operativo abierto dise&amp;ntilde;ado para dispositivos moviles, con librerias,
framework de interfaz de usuario y herramientas desarrolladas por Symbian Ltd, correo
exclusivamente en procesadores ARM&lt;/p&gt;
&lt;h3 id="diseno"&gt;Dise&amp;ntilde;o&lt;/h3&gt;
&lt;p&gt;Su estructura es parecida a muchos sistemas operativos de escritorio, con multitareas
preeemptivas y protecci&amp;oacute;n de memoria. EPOC fue inspirado por el maneja de multiples tareas de OpenVMS.&lt;/p&gt;
&lt;p&gt;SymbianOS fue construido manteniendo 3 reglas, la integridad y seguridad de los datos del
usuario es primordial, el tiempo del usuario no debe desperdiciarse y todos los recursos
son escasos. Todas las aplicaciones y el sistema operativo fueron desarrollados con
programaci&amp;oacute;n orientada a objetos siguiendo el paradigma MVC.&lt;/p&gt;
&lt;h3 id="estructura"&gt;Estructura&lt;/h3&gt;
&lt;p&gt;El modelo del Sistema Operativo Symbian contiene las siguientes capas desde arriba
hasta abajo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Capa del framework de la Interfaz de Usuario&lt;/li&gt;
&lt;li&gt;Capa de servicios de aplicaci&amp;oacute;n&lt;/li&gt;
&lt;li&gt;Java ME&lt;/li&gt;
&lt;li&gt;Capa de servicios del Sistema Operativo&lt;/li&gt;
&lt;li&gt;Servicios gen&amp;eacute;ricos del Sistema Operativo&lt;/li&gt;
&lt;li&gt;Servicios de comunicaci&amp;oacute;n&lt;/li&gt;
&lt;li&gt;Servicios multimedia y de gr&amp;aacute;ficos&lt;/li&gt;
&lt;li&gt;Servicios de conectividad&lt;/li&gt;
&lt;li&gt;Capa de sevicios base&lt;/li&gt;
&lt;li&gt;Capa de Interfaz del Hardware y servicios del kernel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Los Servicios base se encuentra en el nivel m&amp;aacute;s bajo con respecto a las operaciones del
usuario, este incluye Servidor de archivo y librer&amp;iacute;as de usuario, el framework de plugins
el cual administra todos los plugins, repositorio central, manejador de base de datos
y servicios de cifrado.&lt;/p&gt;
&lt;p&gt;El sistema operativo Symbian tiene una arquitectura de microkernel, lo cual significa
que usar&amp;aacute; lo m&amp;iacute;nimo necesario dentro del kernel logrando robustez y disponibilidad. Este
contiene un categorizador, administraci&amp;oacute;n de memoria, y drivers de dispositivos, pero
otros servicios como redes, telefon&amp;iacute;a, o soporte al sistema de archivos se ubican
en la capa de servicio del sistema operativo o la capa de servicios base. La inclusi&amp;oacute;n
de los drivers de los dispositivos significa que el kernel no es un verdadero microkernel.&lt;/p&gt;
&lt;p&gt;El sistema operativo Symbian se dise&amp;ntilde;o tomando en cuenta la compatibilidad con otros
dispositivos, especialmente dispositivos de manejo de sistemas de archivos removibles,
a sus inicios EPOC adopt&amp;oacute; el sistema de archivos FAT como sistema de archivos interno.&lt;/p&gt;
&lt;p&gt;Hay un gran n&amp;uacute;mero de subsistemas de redes y comunicaciones en cual tiene 3 servidores
principales: ETEL (Telefon&amp;iacute;a EPOC), ESOCK (Sockets EPOC) y C32 (responsable de la
  comunicaci&amp;oacute;n serial); cada uno de estos tiene un esquema de plugins. El subsistema
  tambi&amp;eacute;n contiene c&amp;oacute;digo que pertenece a un corto rango de comunicaciones como
  Bluetooth, IrDA y USB.&lt;/p&gt;
&lt;p&gt;Software Libre para Symbian 9.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Utilidades&lt;/li&gt;
&lt;li&gt;Putty: Cliente ssh y telnet&lt;/li&gt;
&lt;li&gt;Radio por Internet&lt;/li&gt;
&lt;li&gt;SymTorrent: Cliente torrent&lt;/li&gt;
&lt;li&gt;Symella: Cliente gnutella&lt;/li&gt;
&lt;li&gt;Interprete de python: Esto nos da la oportunidad de desarrollar aplicaciones para Symbian con python aparte de Java.&lt;/li&gt;
&lt;li&gt;Servidor Web Apache&lt;/li&gt;
&lt;li&gt;Emulaci&amp;oacute;n de juegos&lt;/li&gt;
&lt;li&gt;ScummVM&lt;/li&gt;
&lt;li&gt;Multimedia&lt;/li&gt;
&lt;li&gt;Oggplay&lt;/li&gt;
&lt;li&gt;Symbian anuncia PIPS (Posix sobre symbian) el cual incrementar&amp;aacute; la cantidad de aplicaciones de software libre escritos para symbian&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Symbian"></category></entry><entry><title>Video y audio tutoriales sobre accesibilidad. parte 1</title><link href="https://ecrespo.github.io/video-y-audio-tutoriales-sobre-accesibilidad-parte-1.html" rel="alternate"></link><published>2009-05-05T09:00:00-05:30</published><updated>2009-05-05T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-05-05:/video-y-audio-tutoriales-sobre-accesibilidad-parte-1.html</id><summary type="html">&lt;p&gt;Les paso los enlaces de unos v&amp;iacute;deos y audios en mp3 sobre accesibilidad en GNU/Linux (Debian/Ubuntu):&lt;/p&gt;
&lt;p&gt;Configuraci&amp;oacute;n de gnome-orca:
&lt;em&gt;audio
http://www.crespo.info.ve/tiflo/tutoriales/audio/orca.mp3
&lt;/em&gt;video
http://www.crespo.info.ve/tiflo/tutoriales/videos/orca.mpeg
*youtube
http://www.youtube.com/watch?v …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Les paso los enlaces de unos v&amp;iacute;deos y audios en mp3 sobre accesibilidad en GNU/Linux (Debian/Ubuntu):&lt;/p&gt;
&lt;p&gt;Configuraci&amp;oacute;n de gnome-orca:
&lt;em&gt;audio
http://www.crespo.info.ve/tiflo/tutoriales/audio/orca.mp3
&lt;/em&gt;video
http://www.crespo.info.ve/tiflo/tutoriales/videos/orca.mpeg
*youtube
http://www.youtube.com/watch?v=HZV5KGpgpjo&lt;/p&gt;
&lt;p&gt;Uso del escritorio gnome:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;youtube
http://www.youtube.com/watch?v=X0fjk6oDmi0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Uso de la calculadora en gnome:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;youtube
http://www.youtube.com/watch?v=tPVp-6l7FTg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Uso del navegador firefox:
* youtube
http://www.youtube.com/watch?v=wleUwglsDsc&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Accesibilidad"></category><category term="Debian"></category></entry><entry><title>Ya tengo twitter</title><link href="https://ecrespo.github.io/ya-tengo-twitter.html" rel="alternate"></link><published>2009-04-27T10:00:00-05:30</published><updated>2009-04-27T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-04-27:/ya-tengo-twitter.html</id><summary type="html">&lt;p&gt;El d&amp;iacute;a de hoy decid&amp;iacute; crear mi cuenta twitter:&lt;/p&gt;
&lt;p&gt;http://twitter.com/ernestocrespo&lt;/p&gt;
&lt;p&gt;Ser&amp;aacute; un complemento de lo que publico en mi cuenta de facebook :&lt;/p&gt;
&lt;p&gt;http://www.facebook.com/profile.php?id=696337033&amp;amp;ref=profile&lt;/p&gt;
&lt;p&gt;Mi gtalk ecrespo@gmail.com.
Mi MSN ecrespo@gmail.com.
Jabber: ecrespo@jabber.org&lt;/p&gt;
&lt;p&gt;Pr&amp;oacute;ximo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El d&amp;iacute;a de hoy decid&amp;iacute; crear mi cuenta twitter:&lt;/p&gt;
&lt;p&gt;http://twitter.com/ernestocrespo&lt;/p&gt;
&lt;p&gt;Ser&amp;aacute; un complemento de lo que publico en mi cuenta de facebook :&lt;/p&gt;
&lt;p&gt;http://www.facebook.com/profile.php?id=696337033&amp;amp;ref=profile&lt;/p&gt;
&lt;p&gt;Mi gtalk ecrespo@gmail.com.
Mi MSN ecrespo@gmail.com.
Jabber: ecrespo@jabber.org&lt;/p&gt;
&lt;p&gt;Pr&amp;oacute;ximo post: Videos de instalaci&amp;oacute;n de Linux por un invidente!&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Twitter"></category></entry><entry><title>Manteniendo un paquete Debian con mercurial</title><link href="https://ecrespo.github.io/manteniendo-un-paquete-debian-con-mercurial.html" rel="alternate"></link><published>2009-04-11T08:00:00-05:30</published><updated>2009-04-11T08:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-04-11:/manteniendo-un-paquete-debian-con-mercurial.html</id><summary type="html">&lt;p&gt;Para mantener un paquete Debian con mercurial es necesario tener un repositorio
mercurial, este se crea con el comando hg init.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg init repositorio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego es necesario crear 2 directorios, uno es del paquete fuente de debian y el otro
del paquete fuente del upstream.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd repositorio
hg init sshguard …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Para mantener un paquete Debian con mercurial es necesario tener un repositorio
mercurial, este se crea con el comando hg init.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg init repositorio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego es necesario crear 2 directorios, uno es del paquete fuente de debian y el otro
del paquete fuente del upstream.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd repositorio
hg init sshguard
hg init sshguard.upstream&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego se importa las fuentes de Debian:&lt;/p&gt;
&lt;p&gt;```
hg-importdsc /home/ecrespo/paquetes/sshguard/sshguard_1.3-1.dsc
ecrespo@canaima:~/repositorio/repositorio/sshguard$ hg-importdsc /home/ecrespo/paquetes/sshguard/sshguard_1.3-1.dsc
*** Processing upstream file /home/ecrespo/paquetes/sshguard/sshguard_1.3.orig.tar.gz
VCSCMD: hg
LOGTEXT Imported sshguard_1.3.orig.tar.gz
into Mercurial repository&lt;/p&gt;
&lt;p&gt;adding Changes
adding Makefile.am
adding Makefile.in
adding README
adding aclocal.m4
adding config.h.in
adding configure
adding configure.ac
adding depcomp
adding examples/whitelistfile.example
adding install-sh
adding man/Makefile.am
adding man/Makefile.in
adding man/sshguard.8
adding missing
adding mkinstalldirs
adding scripts/sshguard_backendgen.sh
adding src/Makefile.am
adding src/Makefile.in
adding src/attack_parser.c
adding src/attack_parser.h
adding src/attack_parser.y
adding src/attack_scanner.c
adding src/attack_scanner.l
adding src/config.h.in
adding src/fwalls/Makefile.am
adding src/fwalls/Makefile.in
adding src/fwalls/command.c
adding src/fwalls/command_aix.h
adding src/fwalls/command_ipfilter.h
adding src/fwalls/command_iptables.h
adding src/fwalls/command_null.h
adding src/fwalls/command_pf.h
adding src/fwalls/hosts.c
adding src/fwalls/ipfw.c
adding src/parser.h
adding src/simclist.c
adding src/simclist.h
adding src/sshguard.c
adding src/sshguard.h
adding src/sshguard_addresskind.h
adding src/sshguard_fw.h
adding src/sshguard_log.c
adding src/sshguard_log.h
adding src/sshguard_procauth.c
adding src/sshguard_procauth.h
adding src/sshguard_services.h
adding src/sshguard_whitelist.c
adding src/sshguard_whitelist.h
adding stamp-h1
adding ylwrap
No username found, using 'ecrespo@canaima' instead
No username found, using 'ecrespo@canaima' instead
No username found, using 'ecrespo@canaima' instead&lt;/p&gt;
&lt;p&gt;/home/ecrespo/paquetes/sshguard/sshguard_1.3.orig.tar.gz imported into /home/ecrespo/repositorio/repositorio/sshguard.upstream
Remember to run hg fetch /home/ecrespo/repositorio/repositorio/sshguard.upstream
&lt;strong&gt;&lt;em&gt; Done processing upstream file /home/ecrespo/paquetes/sshguard/sshguard_1.3.orig.tar.gz
&lt;/em&gt;&lt;/strong&gt; Processing Debian source tree for /home/ecrespo/paquetes/sshguard/sshguard_1.3-1.dsc
0:b438c8517fe7
1:f61bc4db3564
2:85a24e090d85
pulling from /home/ecrespo/repositorio/repositorio/sshguard.upstream
requesting all changes
adding changesets
adding manifests
adding file changes
added 3 changesets with 53 changes to 52 files
(run 'hg update' to get a working copy)
52 files updated, 0 files merged, 0 files removed, 0 files unresolved
dpkg-source: extracting sshguard in sshguard-1.3
dpkg-source: info: unpacking sshguard_1.3.orig.tar.gz
dpkg-source: info: applying sshguard_1.3-1.diff.gz
VCSCMD: hg
LOGTEXT Imported sshguard-1.3
into Mercurial repository&lt;/p&gt;
&lt;p&gt;adding debian/changelog
adding debian/compat
adding debian/control
adding debian/copyright
adding debian/dirs
adding debian/docs
adding debian/rules
adding src/fwalls/command.h
No username found, using 'ecrespo@canaima' instead
No username found, using 'ecrespo@canaima' instead&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora se tienen los directorios sshguard y sshguard.upstream con archivos y directorios.&lt;/p&gt;
&lt;p&gt;```
ecrespo@canaima:~/repositorio/repositorio/sshguard$ ls
aclocal.m4 config.h.in configure.ac depcomp install-sh Makefile.in missing README src ylwrap
Changes configure debian examples Makefile.am man mkinstalldirs scripts stamp-h1&lt;/p&gt;
&lt;p&gt;ecrespo@canaima:~/repositorio/repositorio/sshguard.upstream$ ls
aclocal.m4 config.h.in configure.ac examples Makefile.am man mkinstalldirs scripts stamp-h1
Changes configure depcomp install-sh Makefile.in missing README src ylwrap
```&lt;/p&gt;
&lt;p&gt;Se nota que el primer directorio es del paquete fuente de Debian por que tiene dentro un directorio debian y sshguard.upstream es el paquete fuente.
Ahora se har&amp;aacute;n cambios en los archivos del directorio debian. Se va a cambiar el archivo
rules en el configure que en vez de sorportar iptables use hosts; y en el archivo control
quitarla dependencia de iptables en build-depends y colocar en las dependencias tcpd ya
que ese es el paquete para usar hosts.allow y hosts.deny.&lt;/p&gt;
&lt;p&gt;Archivo debian/rules:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./configure $(CROSS) --prefix=/usr --mandir=\$${prefix}/share/man --with-firewall=hosts --infodir=\$${prefix}/share/info CFLAGS="$(CFLAGS)" LDFLAGS="-Wl,-z,defs"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Archivo debian/control:&lt;/p&gt;
&lt;p&gt;```
Source: sshguard
Section: net
Priority: optional
Maintainer: Ernesto Nadir Crespo Avila
Build-Depends: debhelper (&amp;gt;= 7), autotools-dev
Standards-Version: 3.8.0
Homepage: http://sshguard.sourceforge.net/&lt;/p&gt;
&lt;p&gt;Package: sshguard
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}, tcpd
Description: Protects from brute force attacks against ssh
Protects networked hosts from the today's widespread
brute force attacks against ssh servers. It detects such attacks
and blocks the author's address with a firewall rule.
```&lt;/p&gt;
&lt;p&gt;Se exportan las variables de ambiente DEBFULLNAME y DEBEMAIL:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export DEBFULLNAME="Ernesto Nadir Crespo Avila"
export DEBEMAIL="ecrespo@debianvenezuela.org"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Cambiar el archivo debian/changelo agregando los cambios que se realizaron:&lt;/p&gt;
&lt;p&gt;```
dch -i&lt;/p&gt;
&lt;p&gt;sshguard (1.3-2) unstable; urgency=low&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove iptables depend in build-depends in debian/control file.&lt;/li&gt;
&lt;li&gt;Add tcpd depend in depends in debian/control file.&lt;/li&gt;
&lt;li&gt;Change configure option in debian/rules to hosts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-- Ernesto Nadir Crespo Avila Tue, 14 Apr 2009 14:06:01 -0430&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Para agregar los cambios al repositorio se ejecuta un commit:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/repositorio/repositorio/sshguard$ hg commit -m"Change control and rules files" -u "Ernesto Nadir Crespo Avila "&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar hg log se muestra los cambios realizados:&lt;/p&gt;
&lt;p&gt;```
changeset: 5:7a64e00a1c05
tag: tip
user: Ernesto Nadir Crespo Avila
date: Tue Apr 14 14:11:19 2009 -0430
summary: Change control and rules files&lt;/p&gt;
&lt;p&gt;changeset: 4:19b2688f71ec
user: ecrespo@canaima
date: Tue Apr 14 13:57:26 2009 -0430
summary: Added tag DEBIAN_sshguard_1.3-1 for changeset a7094766c4e6&lt;/p&gt;
&lt;p&gt;changeset: 3:a7094766c4e6
tag: DEBIAN_sshguard_1.3-1
user: ecrespo@canaima
date: Tue Apr 14 13:57:25 2009 -0430
summary: Import Debian sshguard 1.3-1&lt;/p&gt;
&lt;p&gt;changeset: 2:85a24e090d85
user: ecrespo@canaima
date: Tue Apr 14 13:57:24 2009 -0430
summary: Added tag UPSTREAM_sshguard_1.3_TAG for changeset f61bc4db3564&lt;/p&gt;
&lt;p&gt;changeset: 1:f61bc4db3564
tag: UPSTREAM_sshguard_1.3_TAG
user: ecrespo@canaima
date: Tue Apr 14 13:57:24 2009 -0430
summary: Added tag UPSTREAM_sshguard_1.3 for changeset b438c8517fe7&lt;/p&gt;
&lt;p&gt;changeset: 0:b438c8517fe7
tag: UPSTREAM_sshguard_1.3
user: ecrespo@canaima
date: Tue Apr 14 13:57:24 2009 -0430
summary: Import upstream sshguard version 1.3
```&lt;/p&gt;
&lt;p&gt;Se suben los cambios al repositorio:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/repositorio/repositorio$ hg pull sshguard
pulling from sshguard
requesting all changes
adding changesets
adding manifests
adding file changes
added 7 changesets with 66 changes to 60 files
(run 'hg update' to get a working copy)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se actualiza el repositorio:&lt;/p&gt;
&lt;p&gt;```
ecrespo@canaima:~/repositorio/repositorio$ hg update
60 files updated, 0 files merged, 0 files removed, 0 files unresolved&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Ahora se crea el paquete:&lt;/p&gt;
&lt;p&gt;```
ecrespo@canaima:~/repositorio/repositorio$ hg-buildpackage -rfakeroot -k
Building ../sshguard_1.3.orig.tar.gz from Mercurial history
dpkg-buildpackage -rfakeroot -D -us -uc -i.hg -I.hg
dpkg-buildpackage: set CFLAGS to default value: -g -O2
dpkg-buildpackage: set CPPFLAGS to default value:
dpkg-buildpackage: set LDFLAGS to default value:
dpkg-buildpackage: set FFLAGS to default value: -g -O2
dpkg-buildpackage: set CXXFLAGS to default value: -g -O2
dpkg-buildpackage: source package sshguard
dpkg-buildpackage: source version 1.3-2
dpkg-buildpackage: source changed by Ernesto Nadir Crespo Avila
dpkg-buildpackage: host architecture i386
fakeroot debian/rules clean
dh_testdir
dh_testroot
rm -f build-stamp&lt;/p&gt;
&lt;h1 id="add here commands to clean up after the build process."&gt;Add here commands to clean up after the build process.&lt;/h1&gt;
&lt;p&gt;[ ! -f Makefile ] || /usr/bin/make distclean
rm -f config.sub config.guess config.status config.status.lineno config.log
dh_clean
dpkg-source -i.hg -I.hg -b repositorio
dpkg-source: warning: source directory 'repositorio' is not - 'sshguard-1.3'
dpkg-source: warning: .orig directory name repositorio.orig is not - (wanted sshguard-1.3.orig)
dpkg-source: info: using source format `1.0'
dpkg-source: info: building sshguard using existing sshguard_1.3.orig.tar.gz
dpkg-source: info: building sshguard in sshguard_1.3-2.diff.gz
dpkg-source: info: building sshguard in sshguard_1.3-2.dsc
debian/rules build
dh_testdir&lt;/p&gt;
&lt;h1 id="add here commands to configure the package."&gt;Add here commands to configure the package.&lt;/h1&gt;
&lt;p&gt;cp -f /usr/share/misc/config.sub config.sub
cp -f /usr/share/misc/config.guess config.guess
./configure --build i486-linux-gnu --prefix=/usr --mandir=\${prefix}/share/man --with-firewall=hosts --infodir=\${prefix}/share/info CFLAGS="-g -O2" LDFLAGS="-Wl,-z,defs"
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of gcc... gcc3
checking for ranlib... ranlib
checking for bison... bison -y
checking for flex... flex
checking lex output file root... lex.yy
checking lex library... -lfl
checking whether yytext is a pointer... yes
checking for pthread_create in -lpthread... yes
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/wait.h that is POSIX.1 compatible... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking arpa/inet.h usability... yes
checking arpa/inet.h presence... yes
checking for arpa/inet.h... yes
checking malloc.h usability... yes
checking malloc.h presence... yes
checking for malloc.h... yes
checking netdb.h usability... yes
checking netdb.h presence... yes
checking for netdb.h... yes
checking netinet/in.h usability... yes
checking netinet/in.h presence... yes
checking for netinet/in.h... yes
checking for stdlib.h... (cached) yes
checking for string.h... (cached) yes
checking sys/socket.h usability... yes
checking sys/socket.h presence... yes
checking for sys/socket.h... yes
checking syslog.h usability... yes
checking syslog.h presence... yes
checking for syslog.h... yes
checking for unistd.h... (cached) yes
checking for an ANSI C-conforming const... yes
checking for inline... inline
checking for off_t... yes
checking for pid_t... yes
checking for size_t... yes
checking vfork.h usability... no
checking vfork.h presence... no
checking for vfork.h... no
checking for fork... yes
checking for vfork... yes
checking for working fork... yes
checking for working vfork... (cached) yes
checking for stdlib.h... (cached) yes
checking for GNU libc compatible malloc... yes
checking return type of signal handlers... void
checking for gethostbyname... yes
checking for inet_ntoa... yes
checking for strerror... yes
checking for strstr... yes
checking for strtol... yes
configure: Using /etc/hosts.allow as hosts.allow file
configure: creating ./config.status
config.status: creating Makefile
config.status: creating man/Makefile
config.status: creating src/Makefile
config.status: creating src/fwalls/Makefile
config.status: creating src/config.h
config.status: executing depfiles commands
dh_testdir&lt;/p&gt;
&lt;h1 id="add here commands to compile the package."&gt;Add here commands to compile the package.&lt;/h1&gt;
&lt;p&gt;/usr/bin/make
make[1]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio'
cd . &amp;amp;&amp;amp; /bin/sh /home/ecrespo/repositorio/repositorio/missing --run aclocal-1.10
cd . &amp;amp;&amp;amp; /bin/sh /home/ecrespo/repositorio/repositorio/missing --run automake-1.10 --foreign
cd . &amp;amp;&amp;amp; /bin/sh /home/ecrespo/repositorio/repositorio/missing --run autoconf
/bin/sh ./config.status --recheck
running CONFIG_SHELL=/bin/sh /bin/sh ./configure --build i486-linux-gnu --prefix=/usr --mandir=${prefix}/share/man --with-firewall=hosts --infodir=${prefix}/share/info CFLAGS=-g -O2 LDFLAGS=-Wl,-z,defs build_alias=i486-linux-gnu CPPFLAGS= --no-create --no-recursion
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of gcc... gcc3
checking for ranlib... ranlib
checking for bison... bison -y
checking for flex... flex
checking lex output file root... lex.yy
checking lex library... -lfl
checking whether yytext is a pointer... yes
checking for pthread_create in -lpthread... yes
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/wait.h that is POSIX.1 compatible... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking arpa/inet.h usability... yes
checking arpa/inet.h presence... yes
checking for arpa/inet.h... yes
checking malloc.h usability... yes
checking malloc.h presence... yes
checking for malloc.h... yes
checking netdb.h usability... yes
checking netdb.h presence... yes
checking for netdb.h... yes
checking netinet/in.h usability... yes
checking netinet/in.h presence... yes
checking for netinet/in.h... yes
checking for stdlib.h... (cached) yes
checking for string.h... (cached) yes
checking sys/socket.h usability... yes
checking sys/socket.h presence... yes
checking for sys/socket.h... yes
checking syslog.h usability... yes
checking syslog.h presence... yes
checking for syslog.h... yes
checking for unistd.h... (cached) yes
checking for an ANSI C-conforming const... yes
checking for inline... inline
checking for off_t... yes
checking for pid_t... yes
checking for size_t... yes
checking vfork.h usability... no
checking vfork.h presence... no
checking for vfork.h... no
checking for fork... yes
checking for vfork... yes
checking for working fork... yes
checking for working vfork... (cached) yes
checking for stdlib.h... (cached) yes
checking for GNU libc compatible malloc... yes
checking return type of signal handlers... void
checking for gethostbyname... yes
checking for inet_ntoa... yes
checking for strerror... yes
checking for strstr... yes
checking for strtol... yes
configure: Using /etc/hosts.allow as hosts.allow file
configure: creating ./config.status
/bin/sh ./config.status
config.status: creating Makefile
config.status: creating man/Makefile
config.status: creating src/Makefile
config.status: creating src/fwalls/Makefile
config.status: creating src/config.h
config.status: src/config.h is unchanged
config.status: executing depfiles commands
make[1]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio'
make[1]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio'
Making all in src
make[2]: se ingresa al directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src'
cd .. &amp;amp;&amp;amp; /bin/sh /home/ecrespo/repositorio/repositorio/missing --run autoheader
rm -f stamp-h1
touch config.h.in
cd .. &amp;amp;&amp;amp; /bin/sh ./config.status src/config.h
config.status: creating src/config.h
config.status: src/config.h is unchanged
/usr/bin/make all-recursive
make[3]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src'
Making all in fwalls
make[4]: se ingresa al directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src/fwalls'
gcc -DHAVE_CONFIG_H -I. -I../../src -I. -I.. -O2 -g -O2 -MT hosts.o -MD -MP -MF .deps/hosts.Tpo -c -o hosts.o hosts.c
mv -f .deps/hosts.Tpo .deps/hosts.Po
rm -f libfwall.a
ar cru libfwall.a hosts.o
ranlib libfwall.a
make[4]: se sale del directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src/fwalls'
make[4]: se ingresa al directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src'
gcc -DHAVE_CONFIG_H -I. -I. -O2 -g -O2 -MT attack_parser.o -MD -MP -MF .deps/attack_parser.Tpo -c -o attack_parser.o attack_parser.c
mv -f .deps/attack_parser.Tpo .deps/attack_parser.Po
gcc -DHAVE_CONFIG_H -I. -I. -O2 -g -O2 -MT attack_scanner.o -MD -MP -MF .deps/attack_scanner.Tpo -c -o attack_scanner.o attack_scanner.c
mv -f .deps/attack_scanner.Tpo .deps/attack_scanner.Po
gcc -DHAVE_CONFIG_H -I. -I. -O2 -g -O2 -MT sshguard.o -MD -MP -MF .deps/sshguard.Tpo -c -o sshguard.o sshguard.c
mv -f .deps/sshguard.Tpo .deps/sshguard.Po
gcc -DHAVE_CONFIG_H -I. -I. -O2 -g -O2 -MT sshguard_whitelist.o -MD -MP -MF .deps/sshguard_whitelist.Tpo -c -o sshguard_whitelist.o sshguard_whitelist.c
mv -f .deps/sshguard_whitelist.Tpo .deps/sshguard_whitelist.Po
gcc -DHAVE_CONFIG_H -I. -I. -O2 -g -O2 -MT sshguard_log.o -MD -MP -MF .deps/sshguard_log.Tpo -c -o sshguard_log.o sshguard_log.c
mv -f .deps/sshguard_log.Tpo .deps/sshguard_log.Po
gcc -DHAVE_CONFIG_H -I. -I. -O2 -g -O2 -MT sshguard_procauth.o -MD -MP -MF .deps/sshguard_procauth.Tpo -c -o sshguard_procauth.o sshguard_procauth.c
mv -f .deps/sshguard_procauth.Tpo .deps/sshguard_procauth.Po
gcc -DHAVE_CONFIG_H -I. -I. -O2 -g -O2 -MT simclist.o -MD -MP -MF .deps/simclist.Tpo -c -o simclist.o simclist.c
mv -f .deps/simclist.Tpo .deps/simclist.Po
gcc -I. -O2 -g -O2 -Wl,-z,defs -o sshguard attack_parser.o attack_scanner.o sshguard.o sshguard_whitelist.o sshguard_log.o sshguard_procauth.o simclist.o fwalls/libfwall.a -lpthread
make[4]: se sale del directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src'
make[3]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src'
make[2]: se sale del directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src'
Making all in man
make[2]: se ingresa al directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/man'
make[2]: No se hace nada para &lt;code&gt;all'.
make[2]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/man'
make[2]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio'
make[2]: No se hace nada para&lt;/code&gt;all-am'.
make[2]: se sale del directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio'
make[1]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio'&lt;/p&gt;
&lt;h1 id="docbook-to-man debian/sshguard.sgml &amp;gt; sshguard.1"&gt;docbook-to-man debian/sshguard.sgml &amp;gt; sshguard.1&lt;/h1&gt;
&lt;p&gt;touch build-stamp
fakeroot debian/rules binary
dh_testdir
dh_testroot
dh_prep
dh_installdirs&lt;/p&gt;
&lt;h1 id="add here commands to install the package into debian/sshguard."&gt;Add here commands to install the package into debian/sshguard.&lt;/h1&gt;
&lt;p&gt;/usr/bin/make DESTDIR=/home/ecrespo/repositorio/repositorio/debian/sshguard install
make[1]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio'
Making install in src
make[2]: se ingresa al directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src'
/usr/bin/make install-recursive
make[3]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src'
Making install in fwalls
make[4]: se ingresa al directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src/fwalls'
make[5]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src/fwalls'
make[5]: No se hace nada para&lt;/code&gt;install-exec-am'.
make[5]: No se hace nada para &lt;code&gt;install-data-am'.
make[5]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src/fwalls'
make[4]: se sale del directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src/fwalls'
make[4]: se ingresa al directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src'
make[5]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src'
test -z "/usr/sbin" || /bin/mkdir -p "/home/ecrespo/repositorio/repositorio/debian/sshguard/usr/sbin"
/usr/bin/install -c 'sshguard' '/home/ecrespo/repositorio/repositorio/debian/sshguard/usr/sbin/sshguard'
make[5]: No se hace nada para&lt;/code&gt;install-data-am'.
make[5]: se sale del directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src'
make[4]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src'
make[3]: se sale del directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/src'
make[2]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/src'
Making install in man
make[2]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/man'
make[3]: se ingresa al directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/man'
make[3]: No se hace nada para &lt;code&gt;install-exec-am'.
test -z "/usr/share/man/man8" || /bin/mkdir -p "/home/ecrespo/repositorio/repositorio/debian/sshguard/usr/share/man/man8"
/usr/bin/install -c -m 644 './sshguard.8' '/home/ecrespo/repositorio/repositorio/debian/sshguard/usr/share/man/man8/sshguard.8'
make[3]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio/man'
make[2]: se sale del directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio/man'
make[2]: se ingresa al directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio'
make[3]: se ingresa al directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio'
make[3]: No se hace nada para&lt;/code&gt;install-exec-am'.
make[3]: No se hace nada para &lt;code&gt;install-data-am'.
make[3]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio'
make[2]: se sale del directorio &lt;code&gt;/home/ecrespo/repositorio/repositorio'
make[1]: se sale del directorio&lt;/code&gt;/home/ecrespo/repositorio/repositorio'
dh_testdir
dh_testroot
dh_installchangelogs Changes
dh_installdocs
dh_installexamples
dh_installman
dh_link
dh_strip
dh_compress
dh_fixperms
dh_installdeb
dh_shlibdeps
dh_gencontrol
dpkg-gencontrol: warning: unknown substitution variable ${misc:Depends}
dh_md5sums
dh_builddeb
dpkg-deb: construyendo el paquete &lt;code&gt;sshguard' en&lt;/code&gt;../sshguard_1.3-2_i386.deb'.
dpkg-genchanges &amp;gt;../sshguard_1.3-2_i386.changes
dpkg-genchanges: not including original source code in upload
dpkg-buildpackage: binary and diff upload (original source NOT included)
Now running lintian...
Finished running lintian.
Now signing changes and any dsc files...
signfile sshguard_1.3-2.dsc C97E7015&lt;/p&gt;
&lt;p&gt;Necesita una frase contrase&amp;ntilde;a para desbloquear la clave secreta
del usuario: "Ernesto Nadir Crespo Avila (seraph1) "
clave DSA de 1024 bits, ID C97E7015, creada el 2005-08-15&lt;/p&gt;
&lt;p&gt;signfile sshguard_1.3-2_i386.changes C97E7015&lt;/p&gt;
&lt;p&gt;Necesita una frase contrase&amp;ntilde;a para desbloquear la clave secreta
del usuario: "Ernesto Nadir Crespo Avila (seraph1) "
clave DSA de 1024 bits, ID C97E7015, creada el 2005-08-15&lt;/p&gt;
&lt;p&gt;Successfully signed dsc and changes files
```&lt;/p&gt;
&lt;p&gt;En este momento se tiene el paquete .deb y los archivos creados en el momento del empaquetado:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/repositorio$ ls
sshguard_1.3-2.diff.gz sshguard_1
.3-2_i386.build sshguard_1.3-2_i386.deb
repositorio sshguard_1.3-2.dsc sshguard_1.3-2_i386.changes sshguard_1.3.orig.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Empaquetado"></category><category term="Mercurial"></category></entry><entry><title>Subir un paquete Debian (pyching) al repositorio</title><link href="https://ecrespo.github.io/subir-un-paquete-debian-pyching-al-repositorio.html" rel="alternate"></link><published>2009-04-09T10:00:00-05:30</published><updated>2009-04-09T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-04-09:/subir-un-paquete-debian-pyching-al-repositorio.html</id><summary type="html">&lt;p&gt;Como la intenci&amp;oacute;n es utilizar el comando hg-buildpackage para construir un paquete
Debian, pero como en Debian muy pocos usan mercurial como repositorio. Tuve que crear
un repositorio en bitbucket.org para mis paquetes.&lt;/p&gt;
&lt;p&gt;Para ello es necesario crear el repositorio en bitbucket.org.&lt;/p&gt;
&lt;p&gt;Luego su equipo crear el directorio …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Como la intenci&amp;oacute;n es utilizar el comando hg-buildpackage para construir un paquete
Debian, pero como en Debian muy pocos usan mercurial como repositorio. Tuve que crear
un repositorio en bitbucket.org para mis paquetes.&lt;/p&gt;
&lt;p&gt;Para ello es necesario crear el repositorio en bitbucket.org.&lt;/p&gt;
&lt;p&gt;Luego su equipo crear el directorio del paquete:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir pyching
cd pyching&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Bajarse las fuentes de pyching:
```
apt-get source pyching
Leyendo lista de paquetes... Hecho
Creando &amp;aacute;rbol de dependencias
Leyendo la informaci&amp;oacute;n de estado... Hecho
Necesito descargar 139kB de archivos fuente.
Des:1 http://debian.velug.org.ve sid/main pyching 1.2.2-5 (dsc) [1092B]
Des:2 http://debian.velug.org.ve sid/main pyching 1.2.2-5 (tar) [134kB]
Des:3 http://debian.velug.org.ve sid/main pyching 1.2.2-5 (diff) [3931B]
Descargados 139kB en 5s (27,8kB/s)
dpkg-source: extracting pyching in pyching-1.2.2
dpkg-source: info: unpacking pyching_1.2.2.orig.tar.gz
dpkg-source: info: applying pyching_1.2.2-5.diff.gz&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Cambiarse al directorio pyching-1.2.2:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd pyching-1.2.2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Crear el repositorio:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/paquetes/pyching/pyching-1.2.2$ hg init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Agregar las fuentes al repositorio:&lt;/p&gt;
&lt;p&gt;```
ecrespo@canaima:~/paquetes/pyching/pyching-1.2.2$ hg add
adding #smgHtmlView.py#
adding BUGS
adding CHANGES
adding COPYING
adding COPYRIGHT
adding CREDITS
adding INSTALL
adding NEWS
adding README
adding debian/changelog
adding debian/compat
adding debian/control
adding debian/copyright
adding debian/dirs
adding debian/docs
adding debian/menu
adding debian/pyching-small.xpm
adding debian/pycompat
adding debian/rules
adding debian/watch
adding icon.xbm
adding pyching.1
adding pyching.png
adding pyching.py
adding pyching.pyw
adding pyching.sh
adding pyching_cimages.py
adding pyching_engine.py
adding pyching_hlhtx_data.py
adding pyching_idimage_data.py
adding pyching_int_data.py
adding pyching_interface_tkinter.py
adding smgAbout.py
adding smgAnimate.py
adding smgDialog.py
adding smgHtmlView.py&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Se hace el commit:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/paquetes/pyching/pyching-1.2.2$ hg commit -m"Subir el paquete pyching al repositorio"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Subir al repositorio:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/paquetes/pyching/pyching-1.2.2$ hg push http://bitbucket.org/ecrespo/pyching/
pushing to http://bitbucket.org/ecrespo/pyching/
searching for changes
http authorization required
realm: Bitbucket.org HTTP
user: ecrespo
password:
bb/acl: ecrespo is allowed. accepted payload.
quota: 340.8 KB in use, 150.0 MB available (0.22% used)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ya en este punto el paquete se encuentra en el servidor de repositorios mercurial.&lt;/p&gt;
&lt;p&gt;&lt;img alt="pyching" src="./imagenes/pyching.png"/&gt;&lt;/p&gt;
&lt;p&gt;Ahora se crea un directorio temporal para trabajar con los fuentes para empaquetarlo:&lt;/p&gt;
&lt;p&gt;```
ecrespo@canaima:~/paquetes/pyching/temporal$ hg clone http://bitbucket.org/ecrespo/pyching/
destination directory: pyching
requesting all changes
adding changesets
adding manifests
adding file changes
added 1 changesets with 36 changes to 36 files
updating working directory
36 files updated, 0 files merged, 0 files removed, 0 files unresolved&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Para finalizar se ejecuta el comando para empaquetar:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;``
ecrespo@canaima:~/paquetes/pyching/temporal/pyching-1.2.2$ hg-buildpackage -us -uc -rfakeroot
Upstream file/directory already exists; not building
dpkg-buildpackage -rfakeroot -D -us -uc -i.hg -I.hg
dpkg-buildpackage: set CFLAGS to default value: -g -O2
dpkg-buildpackage: set CPPFLAGS to default value:
dpkg-buildpackage: set LDFLAGS to default value:
dpkg-buildpackage: set FFLAGS to default value: -g -O2
dpkg-buildpackage: set CXXFLAGS to default value: -g -O2
dpkg-buildpackage: source package pyching
dpkg-buildpackage: source version 1.2.2-5
dpkg-buildpackage: source changed by Ernesto Nadir Crespo Avila
dpkg-buildpackage: host architecture i386
fakeroot debian/rules clean
dh_testdir
dh_testroot
dh_clean
dpkg-source -i.hg -I.hg -b pyching-1.2.2
dpkg-source: info: using source format&lt;/code&gt;1.0'
dpkg-source: info: building pyching using existing pyching_1.2.2.orig.tar.gz
dpkg-source: info: building pyching in pyching_1.2.2-5.diff.gz
dpkg-source: warning: ignoring deletion of file #smgHtmlView.py#
dpkg-source: info: building pyching in pyching_1.2.2-5.dsc
debian/rules build
make: No se hace nada para &lt;code&gt;build'.
fakeroot debian/rules binary
dh_testdir
dh_testroot
dh_prep
dh_installdirs
install -m 644 pyching_cimages.py pyching_engine.py \
pyching_hlhtx_data.py pyching_idimage_data.py \
pyching_int_data.py pyching_interface_tkinter.py \
smgAbout.py smgAnimate.py smgDialog.py smgHtmlView.py \
debian/pyching/usr/share/pyching/
install -m 755 pyching.py debian/pyching/usr/share/pyching/
install -m 644 pyching.png debian/pyching-small.xpm debian/pyching/usr/share/pixmaps/
install pyching.sh debian/pyching/usr/games/pyching
ln -s ../doc/pyching/CREDITS debian/pyching/usr/share/pyching/CREDITS
dh_testdir
dh_testroot
dh_installchangelogs CHANGES
dh_installdocs
dh_installmenu
dh_installman pyching.1
dh_link
dh_compress
dh_fixperms
dh_pycentral
dh_python /usr/share/pyching
dh_python: Doing nothing since dh_pycompat exists; dh_pysupport or dh_pycentral should do the work. You can remove dh_python from your rules file.
dh_installdeb
dh_gencontrol
dh_md5sums
dh_builddeb
atenci&amp;oacute;n,&lt;/code&gt;debian/pyching/DEBIAN/control' contiene un campo &lt;code&gt;Python-Version' definido por el usuario
dpkg-deb: no se tendr&amp;aacute;n en cuenta 1 avisos sobre los ficheros de control
dpkg-deb: construyendo el paquete&lt;/code&gt;pyching' en `../pyching_1.2.2-5_all.deb'.
dpkg-genchanges &amp;gt;../pyching_1.2.2-5_i386.changes
dpkg-genchanges: not including original source code in upload
dpkg-buildpackage: binary and diff upload (original source NOT included)
Now running lintian...
Finished running lintian.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Luego se revisa el directorio donde se creo el paquete:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/paquetes/pyching/temporal/pyching-1.2.2$ cd ..
ecrespo@canaima:~/paquetes/pyching/temporal$ ls
pyching-1.2.2 pyching_1.2.2-5.diff.gz pyching_1.2.2-5_i386.build pyching_1.2.2.orig.tar.gz
pyching_1.2.2-5_all.deb pyching_1.2.2-5.dsc pyching_1.2.2-5_i386.changes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Paquetes"></category></entry><entry><title>Control de Versiones con mercurial</title><link href="https://ecrespo.github.io/control-de-versiones-con-mercurial.html" rel="alternate"></link><published>2009-04-08T08:00:00-05:30</published><updated>2009-04-08T08:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-04-08:/control-de-versiones-con-mercurial.html</id><summary type="html">&lt;p&gt;Mercurial es un sistema de control de versiones distribuido similar a git o
bazaar. Es una mezcla de la facilidad de subversion con la potencia de git.&lt;/p&gt;
&lt;p&gt;Para instalar mercurial en Debian se ejecuta un aptitude:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install mercurial mercurial-common&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para ver las opciones que tiene el comando hg se …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mercurial es un sistema de control de versiones distribuido similar a git o
bazaar. Es una mezcla de la facilidad de subversion con la potencia de git.&lt;/p&gt;
&lt;p&gt;Para instalar mercurial en Debian se ejecuta un aptitude:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install mercurial mercurial-common&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para ver las opciones que tiene el comando hg se ejecuta hg s&amp;oacute;lo y muestra
lo siguiente:&lt;/p&gt;
&lt;p&gt;```
ecrespo@canaima:~/repositorio$ hg
Mercurial Distributed SCM&lt;/p&gt;
&lt;p&gt;basic commands:&lt;/p&gt;
&lt;p&gt;add add the specified files on the next commit
annotate show changeset information per file line
clone make a copy of an existing repository
commit commit the specified files or all outstanding changes
diff diff repository (or selected files)
export dump the header and diffs for one or more changesets
imerge interactive merge
init create a new repository in the given directory
inserve start an inotify server for this repository
log show revision history of entire repository or files
merge merge working directory with another revision
parents show the parents of the working dir or revision
pull pull changes from the specified source
push push changes to the specified destination
qdiff diff of the current patch and subsequent modifications
qimport import a patch
qinit init a new queue repository
qpop pop the current patch off the stack
qpush push the next patch onto the stack
qrefresh update the current patch
remove remove the specified files on the next commit
serve export the repository via HTTP
status show changed files in the working directory
strip strip a revision and all later revs on the same branch
update update working directory
view start interactive history viewer&lt;/p&gt;
&lt;p&gt;use "hg help" for the full list of commands or "hg -v" for details
```&lt;/p&gt;
&lt;p&gt;Para clonar un repositorio por ejemplo el de bitbucket.org de pyloro se jecuta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg clone http://bitbucket.org/ecrespo/pyloro/
destination directory: pyloro
requesting all changes
adding changesets
adding manifests
adding file changes
added 3 changesets with 26 changes to 20 files
updating working directory
20 files updated, 0 files merged, 0 files removed, 0 files unresolved&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Este comando hace una copia completa de otro repositorio.&lt;/p&gt;
&lt;p&gt;Al ejecutar ls se muestra lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/repositorio$ ls -la
python-loro&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Dentro del directorio python-loro se tiene lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ConfigurepyLoro.py Festival.py MANIFEST pyloro.desktop pyloro.py setup.py Convert.py .hg PKG-INFO pyloro.glade README TODO audio COPYING images pyloro.conf pyloro.png Reproducir.py verifyconfig.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Note que existe un directorio .hg, dentro de el se encuentra lo siguiente:
00changelog.i branch branch.cache dirstate hgrc requires store undo.branch undo.dirstate&lt;/p&gt;
&lt;p&gt;Editar el archivo hgrc y agregar la informaci&amp;oacute;n del usuario, nombre y correo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[paths]
default = http://bitbucket.org/ecrespo/pyloro/
[ui]
username = Ernesto Nadir Crespo Avila&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El primero es la ruta de donde se bajo el repositorio, el segundo es la definici&amp;oacute;n del usuario.&lt;/p&gt;
&lt;p&gt;Para ver el log del control de versiones se ejecuta hg log dentro del directorio:&lt;/p&gt;
&lt;p&gt;```
ecrespo@canaima:~/repositorio/python-loro$ hg log
changeset: 0:8f241da3b2f9
tag: tip
user: ernesto@moonlighting
date: Wed Nov 05 23:32:58 2008 -0430
summary: Agregado pyloro a mercurial&lt;/p&gt;
&lt;p&gt;Para una descripci&amp;oacute;n m&amp;aacute;s detallada de log se ejecuta hg -v log
ecrespo@canaima:~/repositorio/pyloro$ hg -v log
changeset: 2:6d1d0bf8236c
tag: tip
user: ecrespo@canaima
date: Wed Apr 08 19:28:08 2009 -0430
files: ConfigurepyLoro.py Convert.py Festival.py Reproducir.py verifyconfig.py
description:
Change developer information in all files dot py&lt;/p&gt;
&lt;p&gt;changeset: 1:33662d0db317
user: ecrespo@canaima
date: Wed Apr 08 18:15:04 2009 -0430
files: pyloro.py
description:
Change developer team in pyloro.py&lt;/p&gt;
&lt;p&gt;changeset: 0:8f241da3b2f9
user: ernesto@moonlighting
date: Wed Nov 05 23:32:58 2008 -0430
files: COPYING ConfigurepyLoro.py Convert.py Festival.py MANIFEST PKG-INFO README Reproducir.py TODO audio/iniciando.ogg audio/terminando.ogg images/loro.png images/loro_icono.png pyloro.conf pyloro.desktop pyloro.glade pyloro.png pyloro.py setup.py verifyconfig.py
description:
Agregado pyloro a mercurial&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Cada changeset es un conjunto de cambios agrupados como una unidad l&amp;oacute;gica, un tag
es una marca o nombre arbitrario para un changeset, un tip es el &amp;uacute;ltimo cambio que se
realiz&amp;oacute; al repositorio, reflejado en los logs.&lt;/p&gt;
&lt;p&gt;Para hacer modificaciones el repositorio se har&amp;aacute; una copia del repositorio para modificarlo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg clone pyloro pyloro-prueba
updating working directory
20 files updated, 0 files merged, 0 files removed, 0 files unresolved&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se edita el archivo readme y se hace el commit:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg commit
Change TODO file
HG: Enter commit message. Lines beginning with 'HG:' are removed.
HG: --
HG: user: ecrespo@gmail.com
HG: branch 'default'
HG: changed TODO&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar hg status se nota que s&amp;oacute;lo ha cambiado el archivo README:&lt;/p&gt;
&lt;p&gt;```
changeset: 5:0ede87ad831c
tag: tip
user: ecrespo@canaima
date: Thu Apr 09 15:17:50 2009 -0430
summary: Change TODO file&lt;/p&gt;
&lt;p&gt;changeset: 4:02e20db62aa8
user: ecrespo@canaima
date: Thu Apr 09 15:14:13 2009 -0430
summary: Change team developer in README file&lt;/p&gt;
&lt;p&gt;changeset: 3:85f771c9708c
user: ecrespo@canaima
date: Thu Apr 09 15:12:06 2009 -0430
summary: Agregar al README como bajar pyloro del repositorio mercurial&lt;/p&gt;
&lt;p&gt;changeset: 2:6d1d0bf8236c
user: ecrespo@canaima
date: Wed Apr 08 19:28:08 2009 -0430
summary: Change developer information in all files dot py&lt;/p&gt;
&lt;p&gt;changeset: 1:33662d0db317
user: ecrespo@canaima
date: Wed Apr 08 18:15:04 2009 -0430
summary: Change developer team in pyloro.py&lt;/p&gt;
&lt;p&gt;changeset: 0:8f241da3b2f9
user: ernesto@moonlighting
date: Wed Nov 05 23:32:58 2008 -0430
summary: Agregado pyloro a mercurial
```&lt;/p&gt;
&lt;p&gt;Ya aparece el cambio que se hizo a los archivos en el historial.&lt;/p&gt;
&lt;p&gt;Para ver los tip de cada repositorio se ejecuta hg tip en cada repo:&lt;/p&gt;
&lt;p&gt;```
ecrespo@canaima:~/repositorio/pyloro-prueba$ hg tip
changeset: 5:0ede87ad831c
tag: tip
user: ecrespo@canaima
date: Thu Apr 09 15:17:50 2009 -0430
summary: Change TODO file&lt;/p&gt;
&lt;p&gt;ecrespo@canaima:~/repositorio/pyloro$ hg tip
changeset: 2:6d1d0bf8236c
tag: tip
user: ecrespo@canaima
date: Wed Apr 08 19:28:08 2009 -0430
summary: Change developer information in all files dot py
```&lt;/p&gt;
&lt;p&gt;Como se puede ver, los tips son diferentes por que se han hecho cambios en pyloro-prueba,
ahora  lo que viene es propagar los cambios a pyloro:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/repositorio/pyloro$ hg pull ../pyloro-prueba
pulling from ../pyloro-prueba
searching for changes
adding changesets
adding manifests
adding file changes
added 3 changesets with 3 changes to 2 files
(run 'hg update' to get a working copy)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/repositorio/pyloro$ hg update
2 files updated, 0 files merged, 0 files removed, 0 files unresolved&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se puede exportar un cambio para enviarlo por correo de la siguiente forma:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg export tip &amp;gt; /tmp/my-patch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al revisar el archivo se muestra los cambios que se hicieron:&lt;/p&gt;
&lt;p&gt;```
ecrespo@canaima:~/repositorio/pyloro$ cat /tmp/my-patch&lt;/p&gt;
&lt;h1 id="hg changeset patch"&gt;HG changeset patch&lt;/h1&gt;
&lt;h1 id="user ecrespo@canaima"&gt;User ecrespo@canaima&lt;/h1&gt;
&lt;h1 id="date 1239306470 16200"&gt;Date 1239306470 16200&lt;/h1&gt;
&lt;h1 id="node id 0ede87ad831c232f5272f755cf4b49fa8b1e3c0d"&gt;Node ID 0ede87ad831c232f5272f755cf4b49fa8b1e3c0d&lt;/h1&gt;
&lt;h1 id="parent 02e20db62aa83c6253b4abf7c89719a873146b7f"&gt;Parent 02e20db62aa83c6253b4abf7c89719a873146b7f&lt;/h1&gt;
&lt;p&gt;Change TODO file&lt;/p&gt;
&lt;p&gt;diff -r 02e20db62aa8 -r 0ede87ad831c TODO
--- a/TODO Thu Apr 09 15:14:13 2009 -0430
+++ b/TODO Thu Apr 09 15:17:50 2009 -0430
@@ -1,4 +1,4 @@
-Lisot:
+Listo:&lt;/p&gt;
&lt;p&gt;(listo) - Seleccionar ubicaci&amp;oacute;n de archivo PDF y Salida de Texto
(listo) - pasar PDF a texto ( eje. pstotext /home/julioh/Desktop/LaCazaDeHackers.pdf &amp;gt; /home/julioh/Desktop/prueba.txt )
```&lt;/p&gt;
&lt;p&gt;Este archivo es un patch file en formato diff unificado.
Al enviar el archivo por correo a otro usuario, este deber&amp;aacute; importarlo para que se aplique los cambios.
Para fusionar los cambios por medio del archivo patch se crear&amp;aacute; una copia del repositorio para importar el parche:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg clone pyloro pyloro-desc
updating working directory
20 files updated, 0 files merged, 0 files removed, 0 files unresolved&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se va a agregar la fecha del copyright en los archivos *.py y se hace el commit:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hg commit -m "A&amp;ntilde;adido la fecha en el copyright de los archivos .py"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se aplica los cambios realizados a pyloro:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/repositorio/pyloro$ hg pull ../pyloro-desc
pulling from ../pyloro-desc
searching for changes
adding changesets
adding manifests
adding file changes
added 1 changesets with 5 changes to 5 files
(run 'hg update' to get a working copy)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego hg update.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecrespo@canaima:~/repositorio/pyloro$ hg update
5 files updated, 0 files merged, 0 files removed, 0 files unresolved&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para subir la informaci&amp;oacute;n al servidor de repositorio mercurial se hace el commit
luego se hace push.&lt;/p&gt;
&lt;p&gt;```
hg commit&lt;/p&gt;
&lt;p&gt;hg push http://bitbucket.org/ecrespo/pyloro/
pushing to http://bitbucket.org/ecrespo/pyloro/
searching for changes
http authorization required
realm: Bitbucket.org HTTP
user: ecrespo
password:
bb/acl: ecrespo is allowed. accepted payload.
quota: 185.8 KB in use, 150.0 MB available (0.12% used)
```&lt;/p&gt;
&lt;p&gt;Al visitar la p&amp;aacute;gina del repositorio mercurial de pyloro tendr&amp;aacute;n lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="mercurial" src="./images/mercurial.png"/&gt;&lt;/p&gt;
&lt;p&gt;Por &amp;uacute;ltimo si se necesita soporte de trabajo en equipo en una red local, la soluci&amp;oacute;n
es usar el servidor web que viene incorporado con mercurial:&lt;/p&gt;
&lt;p&gt;Simplemente se ejecuta hg serve y se abre el navegador en la direcci&amp;oacute;n IP del equipo al puerto 8000.&lt;/p&gt;
&lt;p&gt;La siguiente imagen muestra el servidor de mercurial en su funcionamiento con la informaci&amp;oacute;n corta del log.&lt;/p&gt;
&lt;p&gt;&lt;img alt="mercurial web" src="./images/mercurial-web1.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Control de versiones"></category><category term="Mercurial"></category></entry><entry><title>Creación de un repositorio personal de Debian</title><link href="https://ecrespo.github.io/creacion-de-un-repositorio-personal-de-debian.html" rel="alternate"></link><published>2009-04-04T08:00:00-05:30</published><updated>2009-04-04T08:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-04-04:/creacion-de-un-repositorio-personal-de-debian.html</id><summary type="html">&lt;p&gt;Luego de una semana donde termine lesionado del codo y hombro izquierdo, voy a
explicar como crear un repositorio personal de paquetes para Debian.&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; publicaci&amp;oacute;n se basa en el tutorial de Debian Administration y en el tutorial
del Blog de Mario Debian .&lt;/p&gt;
&lt;p&gt;En Debian existe un programa que permite …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Luego de una semana donde termine lesionado del codo y hombro izquierdo, voy a
explicar como crear un repositorio personal de paquetes para Debian.&lt;/p&gt;
&lt;p&gt;Est&amp;aacute; publicaci&amp;oacute;n se basa en el tutorial de Debian Administration y en el tutorial
del Blog de Mario Debian .&lt;/p&gt;
&lt;p&gt;En Debian existe un programa que permite crear un repositorio personal reprepro:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install reprepro&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Es necesario instalar un servidor web como:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apache2&lt;/li&gt;
&lt;li&gt;lighttpd&lt;/li&gt;
&lt;li&gt;cherokee&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La estructura que utiliza reprepro es la siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;|-- conf
|-- dists
`-- pool&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En el directorio dist se tiene un directorio por cada
versi&amp;oacute;n de la distribuci&amp;oacute;n (etc, lenny, squeeze, sid, etc).
En el directorio pool se encuentran los paquetes clasificados por
secci&amp;oacute;n (main, contrib, non-free) y en directorios por orden
alfab&amp;eacute;tico.&lt;/p&gt;
&lt;p&gt;Es necesario crear el directorio conf dentro del directorio ra&amp;iacute;z del
servidor web. Y en el se crear&amp;aacute; el archivo distributions con la siguiente
configuraci&amp;oacute;n:&lt;/p&gt;
&lt;p&gt;```
Origin: Paquetes Ernesto
Label: Paquetes Ernesto
Suite: unstable
Codename: sid
Architectures: i386 source
Components: main
Description: Paquetes elaborados por Ernesto Crespo&lt;/p&gt;
&lt;p&gt;Origin: Paquetes Ernesto
Label: Paquetes Ernesto
Suite: testing
Codename: lenny
Architectures: i386 source
Components: main
Description: Paquetes elaborados por Ernesto Crespo&lt;/p&gt;
&lt;p&gt;Origin: Paquetes Ernesto
Label: Paquetes Ernesto
Suite: stable
Codename: etch
Architectures: i386 source
Components: main
Description: Paquetes elaborados por Ernesto Crespo
```
En este ejemplo se va a manejar los repositorios para lenny, etch y sid con los
binarios para i386 y las fuentes en la secci&amp;oacute;n main del repositorio.&lt;/p&gt;
&lt;p&gt;Para empezar a usar reprepro:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Para subir el paquete binario   al repositorio se ejecuta:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;reprepro -b . -V -C main includedeb sid  accesibilidad_1.0_all.deb&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Para subir las fuentes de un paquete se ejecuta:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;reprepro -b . -V -C main includedsc sid sshguard_1.4rc3-1.dsc&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Y su binario:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;reprepro -b . -V -C main includedeb sid sshguard_1.4rc3-1_i386.deb&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Para eliminar un paquete del repositorio se ejecuta:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;reprepro -b . -V -C main remove sid sshguard_1.4rc3-1_i386.deb&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Para utilizar el repositorio se agregar&amp;aacute; el url siguiente en /etc/apt/sources.list:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;deb http://midominio/repo/ sid main&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;La estructura de directorios del repositorio queda de la siguiente forma:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Repositorio" src="./images/reprepo.png"/&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Empaquetado"></category></entry><entry><title>Como crear un metapaquete</title><link href="https://ecrespo.github.io/como-crear-un-metapaquete.html" rel="alternate"></link><published>2009-03-29T11:00:00-05:30</published><updated>2009-03-29T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-03-29:/como-crear-un-metapaquete.html</id><summary type="html">&lt;p&gt;Los metapaquetes nos facilitan el trabajo en la selecci&amp;oacute;n de programas, por
ejemplo, en Debian existe una lista de programas educativos y para instalarlos
todos seleccionando un s&amp;oacute;lo programa se usa el paquete debianedu que es un
metapaquete que tiene como dependencias todos los paquetes educativos.&lt;/p&gt;
&lt;p&gt;Esa es la forma …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Los metapaquetes nos facilitan el trabajo en la selecci&amp;oacute;n de programas, por
ejemplo, en Debian existe una lista de programas educativos y para instalarlos
todos seleccionando un s&amp;oacute;lo programa se usa el paquete debianedu que es un
metapaquete que tiene como dependencias todos los paquetes educativos.&lt;/p&gt;
&lt;p&gt;Esa es la forma como trabaja ubuntu con kubuntu, xubuntu y sus otros sabores,
simplemente un metapaquete que maneja cada versi&amp;oacute;n de ubuntu.&lt;/p&gt;
&lt;p&gt;El programa en Debian para la creaci&amp;oacute;n de metapaquetes se llama equivs.&lt;/p&gt;
&lt;p&gt;Para instalarlo se ejecuta aptitude install equivs.&lt;/p&gt;
&lt;p&gt;Este paquete maneja dos programas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;equivs-control: Crea un archivo como el archivo control de los paquetes de debian
donde se maneja la informaci&amp;oacute;n del mantenedor, versi&amp;oacute;n del paquete, dependencias entre
otras cosas.&lt;/li&gt;
&lt;li&gt;equivs-build: Crea el metapaquete del archivo que crea equivs-control.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para crear la plantilla se ejecuta el comando con el nombre del paquete: equivs-control accesibilidad.
Esto crea la siguiente plantilla:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h3 id="commented entries have reasonable defaults."&gt;Commented entries have reasonable defaults.&lt;/h3&gt;
&lt;h3 id="uncomment to edit them."&gt;Uncomment to edit them.&lt;/h3&gt;
&lt;p&gt;Section: misc
Priority: optional
Standards-Version: 3.6.2&lt;/p&gt;
&lt;p&gt;Package:&lt;/p&gt;
&lt;h1 id="version:_1"&gt;Version:&lt;/h1&gt;
&lt;h1 id="maintainer: your name"&gt;Maintainer: Your Name&lt;/h1&gt;
&lt;h1 id="pre-depends:"&gt;Pre-Depends:&lt;/h1&gt;
&lt;h1 id="depends:"&gt;Depends:&lt;/h1&gt;
&lt;h1 id="recommends:"&gt;Recommends:&lt;/h1&gt;
&lt;h1 id="suggests:"&gt;Suggests:&lt;/h1&gt;
&lt;h1 id="provides:"&gt;Provides:&lt;/h1&gt;
&lt;h1 id="replaces:"&gt;Replaces:&lt;/h1&gt;
&lt;h1 id="architecture: all"&gt;Architecture: all&lt;/h1&gt;
&lt;h1 id="copyright:"&gt;Copyright:&lt;/h1&gt;
&lt;h1 id="changelog:"&gt;Changelog:&lt;/h1&gt;
&lt;h1 id="readme:"&gt;Readme:&lt;/h1&gt;
&lt;h1 id="extra-files:"&gt;Extra-Files:&lt;/h1&gt;
&lt;p&gt;Description:
long description and info
.
second paragraph
```&lt;/p&gt;
&lt;p&gt;Este archivo maneja la secci&amp;oacute;n del paquete, la prioridad, la versi&amp;oacute;n del Debian policy
(actualmente 3.8.0), el nombre del paquete, la versi&amp;oacute;n, el nombre del mantenedor,las
dependencias (pre, dependencias, recomendaciones,provee y reemplaza), derechos, changelog,
readme, archivos adicionales y por &amp;uacute;ltimo la descripci&amp;oacute;n del paquete separado en 2 partes,
una descripci&amp;oacute;n corta y una larga.&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n mostrar&amp;eacute; el archivo para accesibilidad, este manejar&amp;aacute; las dependencias
de los siguientes paquetes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;brltty: Braille&lt;/li&gt;
&lt;li&gt;brltty-x11: Braille&lt;/li&gt;
&lt;li&gt;libcolorblind-dev: Daltonismo&lt;/li&gt;
&lt;li&gt;libcolorblind0: Daltonismo&lt;/li&gt;
&lt;li&gt;gnome-orca: Lector de pantalla orca&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```
Section: misc
Priority: optional
Standards-Version: 3.8.0&lt;/p&gt;
&lt;p&gt;Package: accesibilidad
Version: 1.0
Maintainer: Ernesto Nadir Crespo Avila
Depends: brltty, brltty-x11, libcolorblind-dev, libcolorblind0, gnome-orca
Architecture: all
Description: Metapaquete para la instalacion de aplicaciones de accesibilidad
Metapaquete para la instalacion de aplicaciones de accesibilidad para personas invidentes
```&lt;/p&gt;
&lt;p&gt;Para crear el paquete se ejecuta el comando equivs-build accesibilidad:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;``
ecrespo@canaima:~/canaima2/accesibilidad$ equivs-build accesibilidad
dh_testdir
dh_testroot
dh_clean -k
dh_testdir
dh_testroot
dh_install
dh_installdocs
dh_installchangelogs
dh_compress
dh_fixperms
dh_installdeb
dh_gencontrol
dh_md5sums
dh_builddeb
dpkg-deb: construyendo el paquete&lt;/code&gt;accesibilidad' en `../accesibilidad_1.0_all.deb'.&lt;/p&gt;
&lt;p&gt;The package has been created.
Attention, the package has been created in the current directory,
not in ".." as indicated by the message above!
```&lt;/p&gt;
&lt;p&gt;Luego al ejecutar un ls se tiene el paquete accesibilidad_1.0_all.deb.&lt;/p&gt;
&lt;p&gt;Este paquete no se puede instalar con dpkg ya que dar&amp;aacute; error por que dpkg no
maneja las dependencias, para ello es m&amp;aacute;s &amp;uacute;til usar apt-get o aptitude, pero
para lograrlo es necesario subir el paquete a un repositorio local para que se
pueda instalar por apt-get o aptitude (como crear un repositorio local en
el pr&amp;oacute;ximo post).&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="paquetes"></category></entry><entry><title>Como hacer un live-usb o live-cd</title><link href="https://ecrespo.github.io/como-hacer-un-live-usb-o-live-cd.html" rel="alternate"></link><published>2009-03-29T10:00:00-05:30</published><updated>2009-03-29T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-03-29:/como-hacer-un-live-usb-o-live-cd.html</id><summary type="html">&lt;p&gt;Basandome en las gu&amp;iacute;as de los siguientes enlaces  &lt;a href="http://www.debian-administration.org/articles/630"&gt;live-usb&lt;/a&gt; y el tutorial en espa&amp;ntilde;ol de &lt;a href="http://el-directorio.org/DebianLive#head-9df2b36e5793bbfb9353ffbf472fb3e38608935e"&gt;Debian Live&lt;/a&gt;, es un tutorial de la antigua versi&amp;oacute;n de live-helper llamada live-package
o este otro &lt;a href="http://wiki.freenetproject.org/deDebianLiveCD"&gt;tutorial&lt;/a&gt; que explica como remasterizar el live-cd.&lt;/p&gt;
&lt;p&gt;Live-helper es un framework que permite la creaci&amp;oacute;n de un live-cd o …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Basandome en las gu&amp;iacute;as de los siguientes enlaces  &lt;a href="http://www.debian-administration.org/articles/630"&gt;live-usb&lt;/a&gt; y el tutorial en espa&amp;ntilde;ol de &lt;a href="http://el-directorio.org/DebianLive#head-9df2b36e5793bbfb9353ffbf472fb3e38608935e"&gt;Debian Live&lt;/a&gt;, es un tutorial de la antigua versi&amp;oacute;n de live-helper llamada live-package
o este otro &lt;a href="http://wiki.freenetproject.org/deDebianLiveCD"&gt;tutorial&lt;/a&gt; que explica como remasterizar el live-cd.&lt;/p&gt;
&lt;p&gt;Live-helper es un framework que permite la creaci&amp;oacute;n de un live-cd o live-usb basandose
en un sistema Debian.&lt;/p&gt;
&lt;p&gt;Se necesita un equipo con suficiente espacio en disco para poder construir el sistema
live con 3GB de espacio es suficiente.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instalar live-helper:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;aptitude install live-helper&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Crear un directorio para trabajar en el ambiente:  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;mkdir live-usb&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cambiarse al directorio de trabajo.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;cd live-usb&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Crear la configuraci&amp;oacute;n para la creaci&amp;oacute;n del live-usb.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;lh_config -b usb-hdd -d lenny --mirror-bootstrap http://debian.velug.org.ve/debian/ --mirror-chroot http://debian.velug.org.ve/debian/ --mirror-binary http://debian.velug.org.ve/debian --username Usuario --iso-publisher "Ernesto Crespo" -l es --security disabled --hostname live-usb --bootappend-live "locale=es_VE.UTF-8 keyb=es" --packages-lists "gnome gdm iceweasell-i10n-es-es iceweasel pidgin openoffice openoffice.org-writer openoffice.org-l10n-es myspell-es evince less mc module-assistant wireless-tools printconf hpijs foomatic-db-gutenprint cupsys-bsd foomatic-filters-ppds hplip foomatic-db-hpijs cupsys cupsys-client cupsys-driver-gutenprint foomatic-db-engine vim-full "&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Crear la imagen.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;lh_build&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Copiar la imagen binary.img al pendrive. Si el dispositivo se identifica como /dev/sda se ejecuta el siguiente comando.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;dd if=./binary.img of=/dev/sda bs=1M&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;7.1. Probar el iso. Si es un live-cd se ejecuta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;qemu -cdrom binary.img -boot d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;7.2. Si es un live-usb se ejecuta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;qemu -hda binary.img -boot c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En este proceso se crear&amp;aacute; una imagen llamada binary.img para dispositivos USB, se defini&amp;oacute;
el repositorio a utilizar, el nombre de usuario del live, una descripci&amp;oacute;n de la persona
quien est&amp;aacute; publicando el live, se defini&amp;oacute; los locales a utilizar y el mapa del teclado al
momento del arranque del live; por &amp;uacute;ltimo se define la lista de paquetes a utilizar en el live-usb.&lt;/p&gt;
&lt;p&gt;Si se desea crear un live-cd se tiene que considerar que el espacio m&amp;aacute;ximo que puede tener el live-cd
es de 700MB, para ello la configuraci&amp;oacute;n del ambiente es la siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lh_config -b iso -d lenny --mirror-bootstrap http://debian.velug.org.ve/debian/ --mirror-chroot http://debian.velug.org.ve/debian/ --mirror-binary http://debian.velug.org.ve/debian --username usuario --iso-publisher "Ernesto Crespo" -l es --security disabled --hostname live-cd --bootappend-live "locale=es_VE.UTF-8 keyb=es" --bootstrap-flavour minimal --apt apt --linux-flavours 486 --binary-indices disabled --memtest disabled --apt-recommends disabled --packages-lists "gnome gdm iceweasell-i10n-es-es iceweasel pidgin openoffice openoffice.org-writer openoffice.org-l10n-es myspell-es evince less mc module-assistant wireless-tools printconf hpijs foomatic-db-gutenprint cupsys-bsd foomatic-filters-ppds hplip foomatic-db-hpijs cupsys cupsys-client cupsys-driver-gutenprint foomatic-db-engine"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Las opciones en color distinto permitir&amp;aacute;n reducir el tama&amp;ntilde;o del live-cd ya que se har&amp;aacute; una imagen m&amp;iacute;nima,
se usar&amp;aacute; apt-get en vez de aptitude, se usar&amp;aacute; el kernel para arquitectura 486, se deshabilita los
indices de los binarios, la instalaci&amp;oacute;n de mentest y las recomendaciones de apt.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Live-CD"></category><category term="Debian"></category><category term="Instalación"></category></entry><entry><title>Instalar Debian en la Asus EEE PC 901</title><link href="https://ecrespo.github.io/instalar-debian-en-la-asus-eee-pc-901.html" rel="alternate"></link><published>2009-03-15T11:00:00-05:30</published><updated>2009-03-15T11:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-03-15:/instalar-debian-en-la-asus-eee-pc-901.html</id><summary type="html">&lt;p&gt;Luego de instalar Xandros instalar&amp;eacute; Debian Lenny, los pasos son los siguientes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bajar Imagen del instalador de aqu&amp;iacute; junto con el archivo md5.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verificar que la imagen bajara correctamente con el comando md5sum debian-eeepc.img.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copiar la imagen en el pendrive (preferiblemente de 1GB m&amp;iacute;nimo o m&amp;aacute;ximo 2 GB ya …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Luego de instalar Xandros instalar&amp;eacute; Debian Lenny, los pasos son los siguientes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bajar Imagen del instalador de aqu&amp;iacute; junto con el archivo md5.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verificar que la imagen bajara correctamente con el comando md5sum debian-eeepc.img.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copiar la imagen en el pendrive (preferiblemente de 1GB m&amp;iacute;nimo o m&amp;aacute;ximo 2 GB ya que algunos
  pendrive de mayor capacidad no funcionan en la Asus). Con el Comando data dump y el nombre del
  dispositivo se tiene para ejecutar el comando dd if=./debian-eeepc.img of=/dev/sdb, donde sdb
  es el caso de mi dispositivo en el computador que estoy utilizando.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Se reinicia el equipo se selecciona F2 para configurar el arranque por pendrive USB y se inicia el proceso de arranque del instalador.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;El proceso de instalaci&amp;oacute;n es el mismo del instalador de Lenny, la diferencia es que esta
versi&amp;oacute;n soporta en el arranque la tarjeta inal&amp;aacute;mbrica atheros.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;El siguiente post se explicar&amp;aacute; todo el proceso de configuraci&amp;oacute;n de Debian en la Asus para luego probar instalar Android.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Debian"></category><category term="Asus"></category></entry><entry><title>Copiar Xandros en pendrive para iniciar el proceso de instalación en la Asus EEEPC</title><link href="https://ecrespo.github.io/copiar-xandros-en-pendrive-para-iniciar-el-proceso-de-instalacion-en-la-asus-eeepc.html" rel="alternate"></link><published>2009-03-15T09:00:00-05:30</published><updated>2009-03-15T09:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2009-03-15:/copiar-xandros-en-pendrive-para-iniciar-el-proceso-de-instalacion-en-la-asus-eeepc.html</id><summary type="html">&lt;p&gt;Una de las cosas simpaticas del Xandros que trae la Asus EEEPC 901 es el paradigma de escritorio que se aleja del escritorio tradicional y se acerca a la interfaz de los dispositivos moviles como celulares.
He durado un tiempo usando la EEEPC 901 con Debian y quer&amp;iacute;a probar el …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Una de las cosas simpaticas del Xandros que trae la Asus EEEPC 901 es el paradigma de escritorio que se aleja del escritorio tradicional y se acerca a la interfaz de los dispositivos moviles como celulares.
He durado un tiempo usando la EEEPC 901 con Debian y quer&amp;iacute;a probar el proceso de instalaci&amp;oacute;n de Xandros para reinstalar Debian la versi&amp;oacute;n estable Lenny.&lt;/p&gt;
&lt;p&gt;Se necesita un Pendrive de 2GB aproximadamente ya que a veces el equipo no lee pendrive mayores a 2GB y los de 1GB no son suficientes para crear el sistema de arranque.&lt;/p&gt;
&lt;p&gt;Lo primero que hay que hacer es buscar el DVD del Asus llamado Recuperaci&amp;oacute;n de Linux Rev 1.0. Se copian los archivos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P701L.gz&lt;/li&gt;
&lt;li&gt;usb.img&lt;/li&gt;
&lt;li&gt;user_start.dat&lt;/li&gt;
&lt;li&gt;2008.04.03_20.30.bld&lt;/li&gt;
&lt;li&gt;blockcount.dat&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lo primero que se necesita hacer es conectar el pendrive y ejecutar el comando data dump:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dd if=./usb.img of=/dev/sdb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En mi caso el pendrive es el dispositivo sdb.&lt;/p&gt;
&lt;p&gt;Luego es necesario montar el pendrive y copiar los archivos P701L.gz, user_start.dat, 2008.04.03_20.30.bld y blockcount.dat&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mount /dev/sdb1 /mnt/temporal
cp -v P701L.gz 2008.04.03_20.30.bld blockcount.dat user_start.dat /media/EEEPC/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Con este procedimiento ya se tiene creado el pendrive de arranque y s&amp;oacute;lo queda conectar el pendrive en el Asus para iniciar el proceso de instalaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Debian"></category><category term="Asus"></category></entry><entry><title>Instalación de Debian en un mac Book. Tercera parte (configuración)</title><link href="https://ecrespo.github.io/instalacion-de-debian-en-un-mac-book-tercera-parte-configuracion.html" rel="alternate"></link><published>2008-06-08T10:30:00-05:30</published><updated>2008-06-08T10:30:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-06-08:/instalacion-de-debian-en-un-mac-book-tercera-parte-configuracion.html</id><summary type="html">&lt;p&gt;Continuaci&amp;oacute;n de la configuraci&amp;oacute;n de la Mac Book.&lt;/p&gt;
&lt;p&gt;Configuraci&amp;oacute;n de Blacklight+volumen+y eject del CDROM:
Blacklight (teclas de Fn+F1 y Fn+F2)trabaja fino usando el programa &lt;a href="http://packages.debian.org/pommed"&gt;pommed&lt;/a&gt;, 
pommed tambi&amp;eacute;n habilita el boton de eject del cdrom. &lt;a href="http://packages.debian.org/gpomme"&gt;gpomme&lt;/a&gt; 
es una aplicaci&amp;oacute;n gr&amp;aacute;fica para la configuraci&amp;oacute;n v&amp;iacute;a gr&amp;aacute;fica pommed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuaci&amp;oacute;n de la configuraci&amp;oacute;n de la Mac Book.&lt;/p&gt;
&lt;p&gt;Configuraci&amp;oacute;n de Blacklight+volumen+y eject del CDROM:
Blacklight (teclas de Fn+F1 y Fn+F2)trabaja fino usando el programa &lt;a href="http://packages.debian.org/pommed"&gt;pommed&lt;/a&gt;, 
pommed tambi&amp;eacute;n habilita el boton de eject del cdrom. &lt;a href="http://packages.debian.org/gpomme"&gt;gpomme&lt;/a&gt; 
es una aplicaci&amp;oacute;n gr&amp;aacute;fica para la configuraci&amp;oacute;n v&amp;iacute;a gr&amp;aacute;fica pommed.&lt;/p&gt;
&lt;p&gt;Por defecto en Debian las teclas F1,F2,F3, ..F12 est&amp;aacute;n deshabilitadas y actu&amp;aacute;n 
igual a las teclas Fn+F1 y Fn+F2, .... Fn+F12. &lt;/p&gt;
&lt;p&gt;Para habilitar el uso el uso de las teclas se debe modificar el archivo /etc/pommed.conf, 
cambiar init=-1 a init=80,cambiar volume="PCM" a volume="Front" y reiniciar 
pommed (/etc/init.d/pommed restart).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Alta resoluci&amp;oacute;n de la reproducci&amp;oacute;n de video:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Modificar /etc/X11/xorg.conf en la secci&amp;oacute;n Device agregar:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Option "LinearAlloc" "6144"
Option "CacheLines" "1080"&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configuraci&amp;oacute;n del teclado:
2.1.Configuraci&amp;oacute;n de X11:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Agregar est&amp;aacute; opci&amp;oacute;n en la parte del teclado:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Option          "XkbOptions"    "lv3:rwin_switch,apple:badmap"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tambi&amp;egrave;n se puede configurar en el escritorio de gnome desde:
Sistema-&amp;gt; 'Preferencias' -&amp;gt; 'Teclado'.&lt;/p&gt;
&lt;p&gt;Y seleccionar el teclado macbook/macbook pro (int)&lt;/p&gt;
&lt;p&gt;Para el caso de la consola se agrega la siguiente l&amp;iacute;nea en /etc/console-tools/remap:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;s/keycode 126 =/keycode 126 = AltGr/;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para la emulaci&amp;oacute;n del mouse en el teclado se puede hacer la siguiente asignaci&amp;oacute;n de teclas:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xmodmap -e "keycode 115 = Alt_L"           # left-apple
xmodmap -e "keycode 116 = Zenkaku_Hankaku" # right-apple
xmodmap -e "keycode 108 = Pointer_Button3" # KP-ENTER
xmodmap -e "keycode 204 = Pointer_Button2" # eject
xkbset m&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Configuraci&amp;oacute;n del Touchpad:&lt;/p&gt;
&lt;p&gt;Instalar gsynaptics:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install gsynaptics&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Modificar /etc/X11/xorg.conf agregando lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Section "InputDevice"
      Identifier      "Synaptics Touchpad"
      Driver          "synaptics"
      Option          "SendCoreEvents"        "true"
      Option          "Device"                "/dev/psaux"
      Option          "Protocol"              "auto-dev"
      Option          "HorizScrollDelta"      "0"
EndSection&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Agregar las siguientes l&amp;iacute;neas en /etc/modprobe.d/:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;install usbhid /sbin/modprobe appletouch; /sbin/modprobe --ignore-install usbhid $CMDLINE_OPTS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego agregar appletouch a /etc/initramfs-tools/modules, ejecutar update-initramfs.&lt;/p&gt;
&lt;p&gt;Una posible configuraci&amp;oacute;n en el xorg.conf es la siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Section "InputDevice"
       Identifier      "Configured Mouse"
       Driver          "synaptics"
       Option          "SendCoreEvents"        "true"
       Option          "Device"                "/dev/input/mice"
       Option          "Protocol"              "auto-dev"
       Option          "LeftEdge"              "0"
       Option          "RightEdge"             "850"
       Option          "TopEdge"               "0"
       Option          "BottomEdge"            "645"
       Option          "MinSpeed"              "0.4"
       Option          "MaxSpeed"              "1"
       Option          "AccelFactor"           "0.02"
       Option          "FingerLow"             "55"
       Option          "FingerHigh"            "60"
       Option          "MaxTapMove"            "20"
       Option          "MaxTapTime"            "100"
       Option          "HorizScrollDelta"      "0"
       Option          "VertScrollDelta"       "30"
       Option          "SHMConfig"             "on"
   EndSection&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Configuraciones respeto al Procesador.
Escalando la frencuencia del CPU.
Ejecutar lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo acpi_cpufreq &amp;gt;&amp;gt; /etc/modules&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Escalando la frencuencia en el espacio de usuario:&lt;/p&gt;
&lt;p&gt;Instalar powertop, este permite reducir el consumo de la bateria en el momento de trabajar con ella.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install powertop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Instalar powernowd&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install powernowd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC) 
usando la billetera digital de tu preferencia a la siguiente 
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content></entry><entry><title>Instalación de Debian en un mac Book. Segunda parte</title><link href="https://ecrespo.github.io/instalacion-de-debian-en-un-mac-book-segunda-parte.html" rel="alternate"></link><published>2008-06-08T10:10:00-05:30</published><updated>2008-06-08T10:10:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-06-08:/instalacion-de-debian-en-un-mac-book-segunda-parte.html</id><summary type="html">&lt;p&gt;Continuando con el proceso de instalaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Al reiniciar el equipo se selecciona arranque desde Linux en el 
refit. Al iniciar sesi&amp;oacute;n se entra con la cuenta creada y se procede 
a abrir una consola o a ejecutar synaptic para la selecci&amp;oacute;n de los repositorios.&lt;/p&gt;
&lt;p&gt;En mi caso prefiero usar los …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con el proceso de instalaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Al reiniciar el equipo se selecciona arranque desde Linux en el 
refit. Al iniciar sesi&amp;oacute;n se entra con la cuenta creada y se procede 
a abrir una consola o a ejecutar synaptic para la selecci&amp;oacute;n de los repositorios.&lt;/p&gt;
&lt;p&gt;En mi caso prefiero usar los de velug:
&lt;code&gt;deb http://debian.velug.org.ve/debian lenny main contrib non-free
deb http://debian.velug.org.ve/debian-multimedia lenny main&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Se ejecuta aptitude update.&lt;/p&gt;
&lt;p&gt;Lo primero que se va a configurar es la tarjeta de red inal&amp;aacute;mbrica la cual 
su shipset es madwifi.&lt;/p&gt;
&lt;p&gt;El kernel que trae lenny en sus repositorios es el 2.6.24-1y actualmente el equipo 
tiene el 2.6.22-3, se procede a instalar un kernel m&amp;aacute;s actualizado. Adicionalmente 
se instalar&amp;aacute; subversion para poder instalar madwifi desde el repositorio de su p&amp;aacute;gina oficial.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aptitude install linux-image-2.6.24-1-amd64 linux-headers-2.6.24-1-amd64 svn subversion&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al terminar de instalar se ejectura lilo para actualizar el gestor de arranque y se 
reinicia el equipo.&lt;/p&gt;
&lt;p&gt;Ya se tiene el kernel m&amp;aacute;s reciente para verificar se ejecuta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debian:~# uname -a
Linux debian 2.6.24-1-amd64 #1 SMP Sat May 10 09:28:10 UTC 2008 x86_64 GNU/Linux&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A continuaci&amp;oacute;n se procede a configurar la tarjeta de red inal&amp;aacute;mbrica:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Se descarga del trink de svn de madwifi:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="svn co http://svn.madwifi.org/madwifi/trunk madwifi"&gt;svn co http://svn.madwifi.org/madwifi/trunk madwifi&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Se descarga hal de people.freebsd.org:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="wget http://people.freebsd.org/~sam/ath_hal-20080528.tgz"&gt;wget http://people.freebsd.org/~sam/ath_hal-20080528.tgz&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cambiarse al directorio de madwifi y renombrar el directorio hal:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="cd madwifi"&gt;cd madwifi&lt;/h1&gt;
&lt;h1 id="mv hal hal.old"&gt;mv hal hal.old&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Extraer el contenido de hal de freebsd y se renombra:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="tar -xvzf ../ath_hal-20080528.tgz"&gt;tar -xvzf ../ath_hal-20080528.tgz&lt;/h1&gt;
&lt;h1 id="mv ath_hal-20080528 hal"&gt;mv ath_hal-20080528 hal&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Se compila e instala madwifi en los directorios respectivos:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="make install bindir=/usr/bin mandir=/usr/share/man"&gt;make install BINDIR=/usr/bin MANDIR=/usr/share/man&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Se recrea la lista de dependencias de los m&amp;oacute;dulos:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="depmod -ae"&gt;depmod -ae&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Levantar el m&amp;oacute;dulo madwifi:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="modprobe ath_pci"&gt;modprobe ath_pci&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Verificar que se levanta el m&amp;oacute;dulo con la salida del comando dmesg:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;ath_hal: module license 'Proprietary' taints kernel.
ath_hal: 0.10.5.6 (AR5210, AR5211, AR5212, AR5416, RF5111, RF5112, RF2413, RF5413, RF2133, RF2425, RF2417)
wlan: svn r3711
ath_pci: svn r3711
ACPI: PCI Interrupt 0000:02:00.0[A] -&amp;gt; GSI 17 (level, low) -&amp;gt; IRQ 17
PCI: Setting latency timer of device 0000:02:00.0 to 64
MadWifi: ath_attach: HAL managed transmit power control (TPC) disabled.
MadWifi: ath_attach: Interference mitigation is supported. Currently disabled.
MadWifi: ath_attach: Switching rfkill capability off.
ath_rate_sample: 1.2 (svn r3711)
wifi0: 11a rates: 6Mbps 9Mbps 12Mbps 18Mbps 24Mbps 36Mbps 48Mbps 54Mbps
wifi0: 11b rates: 1Mbps 2Mbps 5.5Mbps 11Mbps
wifi0: 11g rates: 1Mbps 2Mbps 5.5Mbps 11Mbps 6Mbps 9Mbps 12Mbps 18Mbps 24Mbps 36Mbps 48Mbps 54Mbps
wifi0: turboA rates: 6Mbps 9Mbps 12Mbps 18Mbps 24Mbps 36Mbps 48Mbps 54Mbps
wifi0: turboG rates: 6Mbps 9Mbps 12Mbps 18Mbps 24Mbps 36Mbps 48Mbps 54Mbps
wifi0: H/W encryption support: WEP AES AES_CCM TKIP
wifi0: Atheros AR5418 chip found (MAC 12.10, PHY SChip 8.1, Radio 12.0)
wifi0: Use hw queue 1 for WME_AC_BE traffic
wifi0: Use hw queue 0 for WME_AC_BK traffic
wifi0: Use hw queue 2 for WME_AC_VI traffic
wifi0: Use hw queue 3 for WME_AC_VO traffic
wifi0: Use hw queue 4 for XR traffic
wifi0: Use hw queue 7 for UAPSD traffic
wifi0: Use hw queue 8 for CAB traffic
wifi0: Use hw queue 9 for beacons
ath_pci: wifi0: Atheros 5418: mem=0x50100000, irq=17&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;S&amp;oacute;lo queda seleccionar la red inalambrica&lt;/li&gt;
&lt;li&gt;A continuaci&amp;oacute;n se muestra la interfaz configurada:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;debian:~# iwconfig ath0
ath0 IEEE 802.11g ESSID:"ROOMSERVER" Nickname:""
Mode:Managed Frequency:2.432 GHz Access Point: 00:14:78:C5:87:0E 
Bit Rate:54 Mb/s Tx-Power:14 dBm Sensitivity=1/1 
Retry:off RTS thr:off Fragment thr:off
Encryption key:off
Power Management:off
Link Quality=73/70 Signal level=-23 dBm Noise level=-96 dBm
Rx invalid nwid:835 Rx invalid crypt:0 Rx invalid frag:0
Tx excessive retries:0 Invalid misc:0 Missed beacon:0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ya se puede liberar del cable de red y utilizar la laptop con su conexi&amp;oacute;n inal&amp;aacute;mbrica.&lt;/p&gt;
&lt;p&gt;En el siguiente post se continuar&amp;aacute; con la configuraci&amp;oacute;n del laptop.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC) 
usando la billetera digital de tu preferencia a la siguiente 
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content></entry><entry><title>Instalación de Debian en un mac Book. Primera parte</title><link href="https://ecrespo.github.io/instalacion-de-debian-en-un-mac-book-primera-parte.html" rel="alternate"></link><published>2008-06-08T10:00:00-05:30</published><updated>2008-06-08T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-06-08:/instalacion-de-debian-en-un-mac-book-primera-parte.html</id><summary type="html">&lt;h3 id="preparativos"&gt;Preparativos&lt;/h3&gt;
&lt;p&gt;Lo primero que hay que hacer es bajar la aplicaci&amp;oacute;n &lt;a href="http://refit.sourceforge.net/"&gt;rEFIT&lt;/a&gt; e instalar 
en el MacOSX. Reparticionar el disco duro via el MacOSX y reiniciar el equipo.&lt;/p&gt;
&lt;p&gt;En este momento aparece el menu de arranque de refit; en este menu aparece un icono de una 
consola que dice refit …&lt;/p&gt;</summary><content type="html">&lt;h3 id="preparativos"&gt;Preparativos&lt;/h3&gt;
&lt;p&gt;Lo primero que hay que hacer es bajar la aplicaci&amp;oacute;n &lt;a href="http://refit.sourceforge.net/"&gt;rEFIT&lt;/a&gt; e instalar 
en el MacOSX. Reparticionar el disco duro via el MacOSX y reiniciar el equipo.&lt;/p&gt;
&lt;p&gt;En este momento aparece el menu de arranque de refit; en este menu aparece un icono de una 
consola que dice refit, hay que seleccionar esta y al terminar de arrancar refit es necesario 
ejecutar gptsync para sincronizar las particiones del disco duro con la aplicaci&amp;oacute;n refit, se 
le dice Y (si) y luego se reinicia el equipo para arrancar con el CD de instalaci&amp;oacute;n de Debian.&lt;/p&gt;
&lt;h3 id="?cual version utilizar ?"&gt;&amp;iquest;Cu&amp;aacute;l version utilizar ?&lt;/h3&gt;
&lt;p&gt;Depende del procesador que se tiene en el equipo, en mi caso en la mac book que tengo no puedo 
instalar con el cd de amd4, solo se instala con el cd de i386. Pero si el equipo tiene un procesador 
core duo de &amp;uacute;ltima generaci&amp;oacute;n se usar&amp;aacute; el de AMD64.&lt;/p&gt;
&lt;p&gt;Yo prefiero instalar un laptop con lenny en vez de etch en este momento, en especial que lenny ya se 
encuentra en proceso de estabilizaci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Si se va a utilizar lenny se recomienda instalar en modo experto para la instalaci&amp;oacute;n ya que esta versi&amp;oacute;n 
tiene un problema al momento de configurar el video ya que se pierde el entorno de instalaci&amp;oacute;n y se hace 
necesario realizar una instalaci&amp;oacute;n remota via ssh.&lt;/p&gt;
&lt;h3 id="proceso de instalacion"&gt;Proceso de instalaci&amp;oacute;n&lt;/h3&gt;
&lt;p&gt;Se reinicia el equipo colocando el CD de Debian Lenny, seleccionando en refit el arranque por cdrom y 
luego colocar expert.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Selecci&amp;oacute;n de Idioma : Espa&amp;ntilde;ol&lt;/li&gt;
&lt;li&gt;Selecci&amp;oacute;n del pa&amp;iacute;s: Venezuela&lt;/li&gt;
&lt;li&gt;Selecci&amp;oacute;n del teclado: Latinoamericano (por los momentos)&lt;/li&gt;
&lt;li&gt;Seleccione UTF-8 venezuela.&lt;/li&gt;
&lt;li&gt;Verificaci&amp;oacute;n del cd y selecci&amp;oacute;n de componentes del cdrom: se selecciona las opciones de ssh.&lt;/li&gt;
&lt;li&gt;Configuraci&amp;oacute;n de la tarjeta de red (claro por los momentos hacer instalaci&amp;oacute;n por cable de red).&lt;/li&gt;
&lt;li&gt;Confiruaci&amp;oacute;n de la red via DHCP.&lt;/li&gt;
&lt;li&gt;Configuraci&amp;oacute;n de instalaci&amp;oacute;n remota via ssh: se crea una clave para el usuario installer y luego nos da la ip a utilizar.&lt;/li&gt;
&lt;li&gt;Desde un 2do equipo conectarse por ssh a la ip del equipo, ejm: ssh installer@x.x.x.x&lt;/li&gt;
&lt;li&gt;Se selecciona instalar debian (primera opci&amp;oacute;n).&lt;/li&gt;
&lt;li&gt;En este momento se repiten los pasos 1,2,3 y 4.&lt;/li&gt;
&lt;li&gt;Detecci&amp;oacute;n del disco duro y particionado del mismo (existen muchas posibilidades), cree s&amp;oacute;lo 3 particiones: /, /home y swap y depende del tama&amp;ntilde;o del disco duro el tama&amp;ntilde;o que se le va a asignar a las particiones.&lt;/li&gt;
&lt;li&gt;Formateo del disco duro y se instala un sistema base&lt;/li&gt;
&lt;li&gt;Crear la clave de administrador del equipo.&lt;/li&gt;
&lt;li&gt;Crear una cuenta de usuario.&lt;/li&gt;
&lt;li&gt;Seleccionar un repositorio&lt;/li&gt;
&lt;li&gt;Selecci&amp;oacute;n de la aplicaci&amp;oacute;n de popularidad de programas instalados, puede decir si o no.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Selecci&amp;oacute;n de los paquetes a instalar (Sistema base, Escritorio y Laptop). Con esta opci&amp;oacute;n se tendr&amp;aacute; un laptop base con todo lo necesario para que trabaje un usuario.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Se inicia el proceso de instalaci&amp;oacute;n de paquetes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Cofiguraci&amp;oacute;n de resoluci&amp;oacute;n de la pantalla (depende del laptop): Seleccione 1280x800.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuraci&amp;oacute;n del arranque (si prueban con grub va a dar un error), en este caso hay que instalar lilo como administrador de arranque en la partici&amp;oacute;n ra&amp;iacute;z.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Luego de instalar el gestor de arranque es bueno volver a sincronizar el disco duro:
Abra una segunda consola (control+alt+F2) desde el cd de instalaci&amp;oacute;n y ejecute
&lt;code&gt;chroot /target aptitude install refit
 /target/sbin/gptsync /dev/sda&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En este momento ya se tendr&amp;aacute; Debian instalado y solo queda retirar el cd de instalaci&amp;oacute;n y reniciar el equipo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En la segunda parte del post se tratar&amp;aacute; la configuraci&amp;oacute;n y puesta a punto del equipo.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC) 
usando la billetera digital de tu preferencia a la siguiente 
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content></entry><entry><title>Crear extensiones SIP</title><link href="https://ecrespo.github.io/crear-extensiones-sip.html" rel="alternate"></link><published>2008-04-14T10:00:00-05:30</published><updated>2008-04-14T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-04-14:/crear-extensiones-sip.html</id><summary type="html">&lt;p&gt;Para crear las extensiones sip es necesario modificar el 
archivo /etc/asterisk/sip.conf. Se crearan 10 extensiones. &lt;/p&gt;
&lt;p&gt;Estas extensiones comienzan desde 1000 hasta 1010.&lt;/p&gt;
&lt;p&gt;Antes de empezar a crear las extensiones se explicar&amp;aacute; la estructura 
del archivo sip.conf.&lt;/p&gt;
&lt;h3 id="archivo sip.conf"&gt;Archivo sip.conf&lt;/h3&gt;
&lt;p&gt;El archivo sip.conf se lee de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Para crear las extensiones sip es necesario modificar el 
archivo /etc/asterisk/sip.conf. Se crearan 10 extensiones. &lt;/p&gt;
&lt;p&gt;Estas extensiones comienzan desde 1000 hasta 1010.&lt;/p&gt;
&lt;p&gt;Antes de empezar a crear las extensiones se explicar&amp;aacute; la estructura 
del archivo sip.conf.&lt;/p&gt;
&lt;h3 id="archivo sip.conf"&gt;Archivo sip.conf&lt;/h3&gt;
&lt;p&gt;El archivo sip.conf se lee de arriba hac&amp;iacute;a abajo.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;La secci&amp;oacute;n [general] contiene las opciones globales, estas opciones son :&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;allow: Habilita que un determinado codec sea usado. Puede usarse la opci&amp;oacute;n all.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;bindaddr: Direcci&amp;oacute;n IP donde el asterisj usar&amp;aacute; para escuchar.&lt;/li&gt;
&lt;li&gt;disallow: Proh&amp;iacute;be un determinado codec. Puede usarse la opci&amp;oacute;n all.&lt;/li&gt;
&lt;li&gt;bindport: Puerto donde asterisk espera por las conexiones.&lt;/li&gt;
&lt;li&gt;maxexpirey: Tiempo m&amp;aacute;ximo para registros en segundos.&lt;/li&gt;
&lt;li&gt;defaultexpirey: Tiempo por defecto para registrarse en segundos.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;register: Registra Asterisk con otro host. El formato es una direcci&amp;oacute;n SIP opcionalmente seguido por una barra / y una extensi&amp;oacute;n.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;language: Define el idioma a usar.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra un ejemplo:
&lt;code&gt;[general]
bindport = 5060
bindaddr = 10.1.30.45
context = default
disallow = all
allow = ulaw
maxexpirey = 120
defaultexpirey = 80&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Opciones de cada tel&amp;eacute;fono.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Las opciones para cada tel&amp;eacute;fono son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[name]: Es la parte del nombre del usuario de SIP.&lt;/li&gt;
&lt;li&gt;peer: Entidad para la cual asterisk envia llamadas.&lt;/li&gt;
&lt;li&gt;user: Entidad que realiza llamadas a trav&amp;eacute;s de asterisk.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;type: Configurar la clase de conexi&amp;oacute;n; las opciones son peer(recibe llamadas del asterisk), user(hace llamadas para el asterisk) y friend(recibe y hace llamadas).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;host: Direcci&amp;oacute;n IP o el nombre del host del equipo a conectarse a asterisk. Se puede usar tambi&amp;eacute;n la opci&amp;oacute;n dinamic donde se espera que el tel&amp;eacute;fono se registre.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;secret: Es una clave compartida entre el tel&amp;eacute;fono y el servidor asterisk para autenticar los peers y los users al hacer una llamada.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra un ejemplo:
&lt;code&gt;[polycom]
type=friend
secret=1234
host=10.58.254.15
context=trusted
[ekiga]
type=friend
secret=1234
host=dynamic&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Plan de discado.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;El plan de discado permite definir como asterisk gestionar&amp;aacute; las 
llamadas. El plan de discado se configura en el archivo 
/etc/asterisk/extensions.conf, est&amp;aacute; estructurado en 4 partes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Aplicaciones. Las aplicaciones son parte importante de asterisk. 
Estas tratan al canal de voz, tocando sonidos, aceptando d&amp;iacute;gitos o 
cortando una llamada.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contextos: Permiten organizar y mejorar la seguridad del plan de discado. Los contextos est&amp;aacute;n ligados con los canales.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Extensiones: Es un string que dispara un evento.tiene 3 tipos: literal, est&amp;aacute;ndar o especial.&lt;/li&gt;
&lt;li&gt;Prioridad: Son pasos numerados de ejecuci&amp;oacute;n de cada extensi&amp;oacute;n. Cada prioridad llama a una aplicaci&amp;oacute;n en espec&amp;iacute;fico. Comienzan en 1 y aumenta de 1 en 1.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A continuaci&amp;oacute;n se muestra un ejemplo:
&lt;code&gt;exten=&amp;gt;8580,1,Dial(SIP/8580,20)
exten=&amp;gt;8580,2,voicemail(u8580)
exten=&amp;gt;8580,101,voicemail(b8580)
exten=&amp;gt; n&amp;uacute;mero (nombre), prioridad, aplicaci&amp;oacute;n&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="archivos de configuracion"&gt;Archivos de configuraci&amp;oacute;n&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Archivo /etc/asterisk/sip.conf&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```
[1000] 
type=friend
username=1000
secret=1234
host=dynamic
context=sip
mailbox=100&lt;/p&gt;
&lt;p&gt;[1001] 
type=friend
username=1001
secret=1234
host=dynamic
context=sip
mailbox=101&lt;/p&gt;
&lt;p&gt;[1002] 
type=friend
username=1002
secret=1234
host=dynamic
context=sip
mailbox=102&lt;/p&gt;
&lt;p&gt;[1003] 
type=friend
username=1003
secret=1234
host=dynamic
context=sip
mailbox=103&lt;/p&gt;
&lt;p&gt;[1004] 
type=friend
username=1004
secret=1234
host=dynamic
context=sip
mailbox=104&lt;/p&gt;
&lt;p&gt;[1005] 
type=friend
username=1005
secret=1234
host=dynamic
context=sip
mailbox=105&lt;/p&gt;
&lt;p&gt;[1006] 
type=friend
username=1006
secret=1234
host=dynamic
context=sip
mailbox=106&lt;/p&gt;
&lt;p&gt;[1007] 
type=friend
username=1007
secret=1234
host=dynamic
context=sip
mailbox=107&lt;/p&gt;
&lt;p&gt;[1008] 
type=friend
username=1008
secret=1234
host=dynamic
context=sip
mailbox=108&lt;/p&gt;
&lt;p&gt;[1009] 
type=friend
username=1009
secret=1234
host=dynamic
context=sip
mailbox=109&lt;/p&gt;
&lt;p&gt;[1010] 
type=friend
username=1010
secret=1234
host=dynamic
context=sip
mailbox=110
```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Archivo extensions.conf&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```
[sip] #; aqui defino la seccion sip
exten =&amp;gt; 1000,1,Dial(SIP/1000,20); Si el n&amp;uacute;mero a llamar es 1000, se llama al usuario 1000, mediante canal sip, dejar que suene por 20 segundos, si no hay respuesta se procede a la prioridad 2.
exten =&amp;gt; 1000,2,Voicemail(u1000); La prioridad 2 llama al buzon de voz. y se da el mensaje que el usuario 1000 no est&amp;aacute; disponible. La &amp;uacute;nica forma de salir de ac&amp;aacute; es colgando la llamada.
exten =&amp;gt; 1000,102,Voicemail(b1000); Si el n&amp;uacute;mero de marcado en la prioridad 1 devuelve un estado "busy" entonces el dial saltar&amp;aacute; a la prioridad 101+ prioridad actual, resultando 102.
exten =&amp;gt; 1000,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1001,1,Dial(SIP/1001,20)
exten =&amp;gt; 1001,2,Voicemail(u1001)
exten =&amp;gt; 1001,102,Voicemail(b1001)
exten =&amp;gt; 1001,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1002,1,Dial(SIP/1002,20)
exten =&amp;gt; 1002,2,Voicemail(u1002)
exten =&amp;gt; 1002,102,Voicemail(b1002)
exten =&amp;gt; 1002,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1003,1,Dial(SIP/1003,20)
exten =&amp;gt; 1003,2,Voicemail(u1003)
exten =&amp;gt; 1003,102,Voicemail(b1003)
exten =&amp;gt; 1003,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1004,1,Dial(SIP/1004,20)
exten =&amp;gt; 1004,2,Voicemail(u1004)
exten =&amp;gt; 1004,102,Voicemail(b1004)
exten =&amp;gt; 1004,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1005,1,Dial(SIP/1005,20)
exten =&amp;gt; 1005,2,Voicemail(u1005)
exten =&amp;gt; 1005,102,Voicemail(b1005)
exten =&amp;gt; 1005,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1006,1,Dial(SIP/1006,20)
exten =&amp;gt; 1006,2,Voicemail(u1006)
exten =&amp;gt; 1006,102,Voicemail(b1006)
exten =&amp;gt; 1006,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1007,1,Dial(SIP/1007,20)
exten =&amp;gt; 1007,2,Voicemail(u1007)
exten =&amp;gt; 1007,102,Voicemail(b1007)
exten =&amp;gt; 1007,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1008,1,Dial(SIP/1008,20)
exten =&amp;gt; 1008,2,Voicemail(u1008)
exten =&amp;gt; 1008,102,Voicemail(b1008)
exten =&amp;gt; 1008,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1009,1,Dial(SIP/1009,20)
exten =&amp;gt; 1009,2,Voicemail(u1009)
exten =&amp;gt; 1009,102,Voicemail(b1009)
exten =&amp;gt; 1009,103,Hangup&lt;/p&gt;
&lt;p&gt;exten =&amp;gt; 1010,1,Dial(SIP/1010,20)
exten =&amp;gt; 1010,2,Voicemail(u1010)
exten =&amp;gt; 1010,102,Voicemail(b1010)
exten =&amp;gt; 1010,103,Hangup
```&lt;/p&gt;
&lt;p&gt;Imaginense tener que crear 100 extensiones!!!!!&lt;/p&gt;
&lt;p&gt;Para solucionar esto se puede definir un conjunto de extensiones usando est&amp;aacute;ndares.&lt;/p&gt;
&lt;p&gt;Un nombre de extensi&amp;oacute;n es un est&amp;aacute;ndar, si este se inicia con un car&amp;aacute;cter 
subrayado "_".&lt;/p&gt;
&lt;p&gt;Los siguientes car&amp;aacute;cteres tienen un significado especial:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;X: Corresponde a cualquier d&amp;iacute;gito de 0-9.&lt;/li&gt;
&lt;li&gt;Z: Corresponde a cualquier d&amp;iacute;gito de 1-9.&lt;/li&gt;
&lt;li&gt;N: Corresponde a cualquier d&amp;iacute;gito de 2-9.&lt;/li&gt;
&lt;li&gt;1237-9]: Corresponde a cualquier d&amp;iacute;gito entre el rango.&lt;/li&gt;
&lt;li&gt;. : Corresponde a uno o m&amp;aacute;s caracteres.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Asterisk tambi&amp;eacute;n usa algunos nombres de extensi&amp;oacute;n para prop&amp;oacute;sitos especiales:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;iexcl; : Invalido.&lt;/li&gt;
&lt;li&gt;s: Inicio.&lt;/li&gt;
&lt;li&gt;h: Colg&amp;oacute;.&lt;/li&gt;
&lt;li&gt;t: Tiempo de espera.&lt;/li&gt;
&lt;li&gt;T: Tiempo de espera absoluto.&lt;/li&gt;
&lt;li&gt;o: Operador.&lt;/li&gt;
&lt;li&gt;a: Llamado cuando el usuario presiona "*" durante un mensaje inicial del buz&amp;oacute;n de voz.&lt;/li&gt;
&lt;li&gt;fax: Usado para la detecci&amp;oacute;n de fax en los canales zap.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Adicionalmente se usar&amp;aacute; variables para simplificar las extensiones.&lt;/p&gt;
&lt;p&gt;Este ejemplo es para las extensiones 1000 hasta 1019. Se est&amp;aacute; usando la variable 
EXTEND el cual guarda el n&amp;uacute;mero de extensi&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exten =&amp;gt; _10[0-1]X,1,Dial(SIP/${EXTEND},20)
exten =&amp;gt; _10[0-1]X,2,Voicemail(u${EXTEN})
exten =&amp;gt; _10[0-1]X,102,Voicemail(b${EXTEN})
exten =&amp;gt; _10[0-1]X,103,Hangup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC) 
usando la billetera digital de tu preferencia a la siguiente 
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content></entry><entry><title>La consola de asterisk</title><link href="https://ecrespo.github.io/la-consola-de-asterisk.html" rel="alternate"></link><published>2008-04-13T10:20:00-05:30</published><updated>2008-04-13T10:20:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-04-13:/la-consola-de-asterisk.html</id><summary type="html">&lt;p&gt;Ya se tiene el asterisk funcionando, solo queda probar entrar a la consola.&lt;/p&gt;
&lt;h3 id="consola de asterisk"&gt;Consola de asterisk&lt;/h3&gt;
&lt;p&gt;Desde root ejecutar asterisk -r.
```
jewel:~# asterisk -r
Asterisk 1.6.0-beta7.1, Copyright (C) 1999 - 2008 Digium, Inc. and others.
Created by Mark Spencer 
Asterisk comes with ABSOLUTELY NO WARRANTY; type 'core show …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ya se tiene el asterisk funcionando, solo queda probar entrar a la consola.&lt;/p&gt;
&lt;h3 id="consola de asterisk"&gt;Consola de asterisk&lt;/h3&gt;
&lt;p&gt;Desde root ejecutar asterisk -r.
```
jewel:~# asterisk -r
Asterisk 1.6.0-beta7.1, Copyright (C) 1999 - 2008 Digium, Inc. and others.
Created by Mark Spencer 
Asterisk comes with ABSOLUTELY NO WARRANTY; type 'core show warranty' for details.
This is free software, with components licensed under the GNU General Public
License version 2 and other licenses; you are welcome to redistribute it under
certain conditions. Type 'core show license' for details.
=========================================================================
Connected to Asterisk 1.6.0-beta7.1 currently running on jewel (pid = 3138)
jewel*CLI&amp;gt;&lt;/p&gt;
&lt;p&gt;Se muestra la versi&amp;oacute;n de asterisk que se est&amp;aacute; usando (en el ejemplo la versi&amp;oacute;n beta7.1 de la 1.6.0). Luego el creador de asterisk y la licencia que usa; al final muestra el nombre del equipo y cli.&lt;/p&gt;
&lt;p&gt;Para ver la lista de comandos se ejecuta help:
jewel&lt;em&gt;CLI&amp;gt; help
ael reload Reload AEL configuration
ael set debug {read|tokens|mac Enable AEL debugging flags
agent logoff Sets an agent offline
agent show Show status of agents
agent show online Show all online agents
agi dump html Dumps a list of AGI commands in HTML format
agi exec Add AGI command to a channel in Async AGI
agi set debug [on|off] Enable/Disable AGI debugging
agi show List AGI commands or specific help
cdr show status Display the CDR status
console active Sets/displays active console
console answer Answer an incoming console call
console autoanswer [on|off] Sets/displays autoanswer
console boost Sets/displays mic boost in dB
console dial Dial an extension on the console
console flash Flash a call on the console
console hangup Hangup a call on the console
console {mute|unmute} Disable/Enable mic input
console send text Send text to the remote device
console transfer Transfer a call to a different extension
console {device} Generic console command
core abort shutdown Cancel a running shutdown
core clear profile Clear profiling info
core restart gracefully Restart Asterisk gracefully
core restart now Restart Asterisk immediately
core restart when convenient Restart Asterisk at empty call volume
core set chanvar Set a channel variable
core set debug channel Enable/disable debugging on a channel
core set {debug|verbose} [off| Set level of debug/verbose chattiness
core set global Set global dialplan variable
core show applications [like|d Shows registered dialplan applications
core show application Describe a specific dialplan application
core show calls [uptime] Display information on calls
core show channels [concise|ve Display information on channels
core show channel Display information on a specific channel
core show channeltypes List available channel types
core show channeltype Give more details on that channel type
core show codecs [audio|video| Displays a list of codecs
core show codec Shows a specific codec
core show config mappings Display config mappings (file names to config engines)
core show file formats Displays file formats
core show file version [like] List versions of files used to build Asterisk
core show functions [like] Shows registered dialplan functions
core show function Describe a specific dialplan function
core show globals Show global dialplan variables
core show hints Show dialplan hints
core show hint Show dialplan hint
core show image formats Displays image formats
core show license Show the license(s) for this copy of Asterisk
core show profile Display profiling info
core show settings Show some core settings
core show switches Show alternative switches
core show sysinfo Show System Information
core show threads Show running threads
core show translation [recalc] Display translation matrix
core show uptime [seconds] Show uptime information
core show version Display version info
core show warranty Show the warranty (if any) for this copy of Asterisk
core stop gracefully Gracefully shut down Asterisk
core stop now Shut down Asterisk immediately
core stop when convenient Shut down Asterisk at empty call volume
database del Removes database key/value
database deltree Removes database keytree/values
database get Gets database value
database put Adds/updates database value
database show Shows database contents
database showkey Shows database contents
devstate change Change a custom device state
devstate list List currently known custom device states
dialplan add extension Add new extension into context
dialplan add ignorepat Add new ignore pattern
dialplan add include Include context in other context
dialplan reload Reload extensions and &lt;/em&gt;only* extensions
dialplan remove extension Remove a specified extension
dialplan remove ignorepat Remove ignore pattern from context
dialplan remove include Remove a specified include from context
dialplan save Save dialplan
dialplan set extenpatternmatch Use the Old extension pattern matching algorithm.
dialplan set extenpatternmatch Use the New extension pattern matching algorithm.
dialplan show Show dialplan
dnsmgr refresh Performs an immediate refresh
dnsmgr reload Reloads the DNS manager configuration
dnsmgr status Display the DNS manager status
dundi flush [stats] Flush DUNDi cache
dundi lookup Lookup a number in DUNDi
dundi precache Precache a number in DUNDi
dundi query Query a DUNDi EID
dundi set debug {on|off} Enable/Disable DUNDi debugging
dundi show entityid Display Global Entity ID
dundi show mappings Show DUNDi mappings
dundi show peers [registered|i Show defined DUNDi peers
dundi show peer Show info on a specific DUNDi peer
dundi show precache Show DUNDi precache
dundi show requests Show DUNDi requests
dundi show trans Show active DUNDi transactions
dundi store history {on|off} Enable/Disable DUNDi historic records
feature show channels List status of feature channels
features reload Reloads configured features
features show Lists configured features
file convert Convert audio file
group show channels Display active channels with group(s)
help Display help list, or specific help on a command
http show status Display HTTP server status
iax2 provision Provision an IAX device
iax2 prune realtime Prune a cached realtime lookup
iax2 reload Reload IAX configuration
iax2 set debug {on|off} Enable/Disable IAX debugging
iax2 set debug jb {on|off} Enable/Disable IAX jitterbuffer debugging
iax2 set debug trunk {on|off} Enable/Disable IAX trunk debugging
iax2 set mtu Set the IAX systemwide trunking MTU
iax2 show cache Display IAX cached dialplan
iax2 show channels List active IAX channels
iax2 show firmware List available IAX firmware
iax2 show netstats List active IAX channel netstats
iax2 show peer Show details on specific IAX peer
iax2 show peers List defined IAX peers
iax2 show provisioning Display iax provisioning
iax2 show registry Display IAX registration status
iax2 show stats Display IAX statistics
iax2 show threads Display IAX helper thread info
iax2 show users [like] List defined IAX users
iax2 test losspct Set IAX2 incoming frame loss percentage
iax2 unregister Unregister (force expiration) an IAX2 peer from the registry
indication add Add the given indication to the country
indication remove Remove the given indication from the country
indication show Display a list of all countries/indications
jabber reload Reload Jabber configuration
jabber set debug {on|off} Enable/Disable Jabber debug
jabber show buddies Show buddy lists of our clients
jabber show connected Show state of clients and components
jabber test Shows roster, but is generally used for mog's debugging.
keys init Initialize RSA key passcodes
keys show Displays RSA key information
local show channels List status of local channels
logger mute Toggle logging output to a console
logger reload Reopens the log files
logger rotate Rotates and reopens the log files
logger show channels List configured log channels
manager debug [on|off] Show, enable, disable debugging of the manager code
manager reload Reload manager configurations
manager show command Show a manager interface command
manager show commands List manager interface commands
manager show connected List connected manager interface users
manager show eventq List manager interface queued events
manager show users List configured manager users
manager show user Display information on a specific manager user
meetme Execute a command on a conference or conferee
mgcp audit endpoint Audit specified MGCP endpoint
mgcp reload Reload MGCP configuration
mgcp set debug {on|off} Enable/Disable MGCP debugging
mgcp show endpoints List defined MGCP endpoints
minivm list accounts List defined mini-voicemail boxes
minivm list templates List message templates
minivm list zones List zone message formats
minivm reload Reload Mini-voicemail configuration
minivm show settings Show mini-voicemail general settings
minivm show stats Show some mini-voicemail statistics
mixmonitor [start|stop] Execute a MixMonitor command
mobile rfcomm Send commands to the rfcomm port for debugging
mobile search Search for Bluetooth Cell / Mobile devices
mobile show devices Show Bluetooth Cell / Mobile devices
module load Load a module by name
module reload Reload configuration
module show [like] List modules and info
module unload Unload a module by name
moh reload Reload MusicOnHold
moh show classes List MusicOnHold classes
moh show files List MusicOnHold file-based classes
no debug channel Disable debugging on channel(s)
ooh323 set debug [off] Enable/Disable OOH323 debugging
ooh323 show config Show details on global configuration of H.323 channel driver
ooh323 show peer Show details on specific OOH323 peer
ooh323 show peers Show defined OOH323 peers
ooh323 show user Show details on specific OOH323 user
ooh323 show users Show defined OOH323 users
originate Originate a call
parkedcalls show List currently parked calls
phoneprov show routes Show registered phoneprov http routes
pri debug span Enables PRI debugging on a span
pri intensive debug span Enables REALLY INTENSE PRI debugging
pri no debug span Disables PRI debugging on a span
pri set debug file Sends PRI debug output to the specified file
pri show debug Displays current PRI debug settings
pri show spans Displays PRI Information
pri show span Displays PRI Information
pri unset debug file Ends PRI debug output to file
queue add member Add a channel to a specified queue
queue remove member Removes a channel from a specified queue
queue rules reload Reload the rules defined in queuerules.conf
queue rules show Show the rules defined in queuerules.conf
queue set penalty Set penalty for a channel of a specified queue
queue show Show status of a specified queue
queue {pause|unpause} member Pause or unpause a queue member
realtime load Used to print out RealTime variables.
realtime mysql status Shows connection information for the MySQL RealTime driver
realtime update Used to update RealTime variables.
rpt debug level Enable app_rpt debuggin
rpt dump Dump app_rpt structs for debugging
rpt lstats Dump link statistics
rpt reload Reload app_rpt config
rpt restart Restart app_rpt
rpt stats Dump node statistics
rtcp set debug {on|off|ip} Enable/Disable RTCP debugging
rtcp set stats {on|off} Enable/Disable RTCP stats
rtp set debug {on|off|ip} Enable/Disable RTP debugging
say load [new|old] Set or show the say mode
sip notify Send a notify packet to a SIP peer
sip prune realtime [peer|user| Prune cached Realtime users/peers
sip reload Reload SIP configuration
sip set debug {on|off|ip|peer} Enable/Disable SIP debugging
sip set history {on|off} Enable/Disable SIP history
sip show {channels|subscriptio List active SIP channels/subscriptions
sip show channel Show detailed SIP channel info
sip show domains List our local SIP domains.
sip show history Show SIP dialog history
sip show inuse List all inuse/limits
sip show objects List all SIP object allocations
sip show peers List defined SIP peers
sip show peer Show details on specific SIP peer
sip show registry List SIP registration status
sip show settings Show SIP global settings
sip show tcp List TCP Connections
sip show users List defined SIP users
sip show user Show details on specific SIP user
sip unregister Unregister (force expiration) a SIP peer from the registery&lt;/p&gt;
&lt;p&gt;skinny reset Reset Skinny device(s)
skinny set debug {on|off} Enable/Disable Skinny debugging
skinny show devices List defined Skinny devices
skinny show device List Skinny device information
skinny show lines List defined Skinny lines per device
skinny show line List Skinny line information
skinny show settings List global Skinny settings
sla show stations Show SLA Stations
sla show trunks Show SLA Trunks
soft hangup Request a hangup on a given channel
stun set debug {on|off} Enable/Disable STUN debugging
transcoder show Display Zaptel transcoder utilization.
udptl set debug {on|off|ip} Enable/Disable UDPTL debugging
ulimit Set or show process resource limits
unistim info Show UNISTIM info
unistim reload Reload UNISTIM configuration
unistim set debug {on|off} Toggle UNITSTIM debugging
unistim sp Send packet (for reverse engineering)
voicemail reload Reload voicemail configuration
voicemail show users List defined voicemail boxes
voicemail show zones List zone message formats
zap destroy channel Destroy a channel
zap restart Fully restart Zaptel channels
zap set dnd Set software gain on a channel
zap set hwgain Set hardware gain on a channel
zap set swgain Set software gain on a channel
zap show cadences List cadences
zap show channels [trunkgroup| Show active zapata channels
zap show channel Show information on a channel
zap show status Show all Zaptel cards status
zap show version Show the Zaptel version in use
```&lt;/p&gt;
&lt;p&gt;Para ver los m&amp;oacute;dulos instalados de asterisk se ejecuta module show:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jewel*CLI&amp;gt; module show
Module Description Use Count 
res_speech Generic Speech Recognition API 0 
res_smdi Simplified Message Desk Interface (SMDI) 0 
res_realtime Realtime Data Lookup/Rewrite 0 
res_phoneprov HTTP Phone Provisioning 0 
res_musiconhold Music On Hold Resource 0 
res_monitor Call Monitoring Resource 0 
res_limit Resource limits 0 
res_jabber AJI - Asterisk Jabber Interface 0 
res_indications Region-specific tones 0 
res_crypto Cryptographic Digital Signatures 0 
res_convert File format conversion CLI command 0 
res_config_sqlite Realtime SQLite configuration 0 
res_config_ldap LDAP realtime interface 0 
res_clioriginate Call origination from the CLI 0 
res_agi Asterisk Gateway Interface (AGI) 0 
res_ael_share share-able code for AEL 0 
res_adsi ADSI Resource 0 
pbx_spool Outgoing Spool Support 0 
pbx_realtime Realtime Switch 0 
pbx_lua Lua PBX Switch 0 
pbx_loopback Loopback Switch 0 
pbx_dundi Distributed Universal Number Discovery ( 0 
pbx_config Text Extension Configuration 0 
pbx_ael Asterisk Extension Language Compiler 0 
func_volume Technology independent volume control 0 
func_vmcount Indicator for whether a voice mailbox ha 0 
func_version Get Asterisk Version/Build Info 0 
func_uri URI encode/decode dialplan functions 0 
func_timeout Channel timeout dialplan functions 0 
func_sysinfo System information related functions 0 
func_strings String handling dialplan functions 0 
func_shell Returns the output of a shell command 0 
func_sha1 SHA-1 computation dialplan function 0 
func_realtime Read/Write/Store/Destroy values from a R 0 
func_rand Random number dialplan function 0 
func_module Checks if Asterisk module is loaded in m 0 
func_md5 MD5 digest dialplan functions 0 
func_math Mathematical dialplan function 0 
func_logic Logical dialplan functions 0 
func_lock Dialplan mutexes 0 
func_iconv Charset conversions 0 
func_groupcount Channel group dialplan functions 0 
func_global Variable dialplan functions 0 
func_extstate Gets an extension's state in the dialpla 0 
func_env Environment/filesystem dialplan function 0 
func_enum ENUM related dialplan functions 0 
func_dialplan Dialplan Context/Extension/Priority Chec 0 
func_dialgroup Dialgroup dialplan function 0 
func_devstate Gets or sets a device state in the dialp 0 
func_db Database (astdb) related dialplan functi 0 
func_cut Cut out information from a string 0 
func_channel Channel information dialplan function 0 
func_cdr Call Detail Record (CDR) dialplan functi 0 
func_callerid Caller ID related dialplan functions 0 
func_blacklist Look up Caller*ID name/number from black 0 
func_base64 base64 encode/decode dialplan functions 0 
format_wav_gsm Microsoft WAV format (Proprietary GSM) 0 
format_wav Microsoft WAV format (8000Hz Signed Line 0 
format_vox Dialogic VOX (ADPCM) File Format 0 
format_sln Raw Signed Linear Audio support (SLN) 0 
format_sln16 Raw Signed Linear 16KHz Audio support (S 0 
format_pcm Raw/Sun uLaw/ALaw 8KHz (PCM,PCMA,AU), G. 0 
format_ogg_vorbis OGG/Vorbis audio 0 
format_jpeg JPEG (Joint Picture Experts Group) Image 0 
format_ilbc Raw iLBC data 0 
format_h264 Raw H.264 data 0 
format_h263 Raw H.263 data 0 
format_gsm Raw GSM data 0 
format_g729 Raw G729 data 0 
format_g726 Raw G.726 (16/24/32/40kbps) data 0 
format_g723 G.723.1 Simple Timestamp File Format 0 
codec_zap Generic Zaptel Transcoder Codec Translat 0 
codec_ulaw mu-Law Coder/Decoder 0 
codec_speex Speex Coder/Decoder 0 
codec_resample SLIN Resampling Codec 0 
codec_lpc10 LPC10 2.4kbps Coder/Decoder 0 
codec_gsm GSM Coder/Decoder 0 
codec_g726 ITU G.726-32kbps G726 Transcoder 0 
codec_g722 ITU G.722-64kbps G722 Transcoder 0 
codec_a_mu A-law and Mulaw direct Coder/Decoder 0 
codec_alaw A-law Coder/Decoder 0 
codec_adpcm Adaptive Differential PCM Coder/Decoder 0 
chan_zap Zapata Telephony 0 
chan_unistim UNISTIM Protocol (USTM) 0 
chan_skinny Skinny Client Control Protocol (Skinny) 0 
chan_sip Session Initiation Protocol (SIP) 0 
chan_phone Linux Telephony API Support 0 
chan_oss OSS Console Channel Driver 0 
chan_mgcp Media Gateway Control Protocol (MGCP) 0 
chan_local Local Proxy Channel (Note: used internal 0 
chan_jingle Jingle Channel Driver 0 
chan_iax2 Inter Asterisk eXchange (Ver 2) 0 
chan_gtalk Gtalk Channel Driver 0 
chan_features Feature Proxy Channel 0 
chan_console Console Channel Driver 0 
chan_alsa ALSA Console Channel Driver 0 
chan_agent Agent Proxy Channel 0 
cdr_sqlite SQLite CDR Backend 0 
cdr_sqlite3_custom SQLite3 Custom CDR Module 0 
cdr_manager Asterisk Manager Interface CDR Backend 0 
cdr_custom Customizable Comma Separated Values CDR 0 
cdr_csv Comma Separated Values CDR Backend 0 
app_zapscan Scan Zap channels application 0 
app_zapras Zaptel ISDN Remote Access Server 0 
app_zapbarge Barge in on Zap channel application 0 
app_zapateller Block Telemarketers with Special Informa 0 
app_while While Loops and Conditional Execution 0 
app_waituntil Wait until specified time 0 
app_waitforsilence Wait For Silence 0 
app_waitforring Waits until first ring after time 0 
app_voicemail Comedian Mail (Voicemail System) 0 
app_verbose Send verbose output 0 
app_userevent Custom User Event Application 0 
app_url Send URL Applications 0 
app_transfer Transfers a caller to another extension 0 
app_test Interface Test Application 0 
app_talkdetect Playback with Talk Detection 0 
app_system Generic System() application 0 
app_stack Dialplan subroutines (Gosub, Return, etc 0 
app_speech_utils Dialplan Speech Applications 0 
app_softhangup Hangs up the requested channel 0 
app_sms SMS/PSTN handler 0 
app_skel Skeleton (sample) Application 0 
app_setcallerid Set CallerID Presentation Application 0 
app_sendtext Send Text Applications 0 
app_senddtmf Send DTMF digits Application 0 
app_sayunixtime Say time 0 
app_rpt Radio Repeater / Remote Base 0 
app_record Trivial Record Application 0 
app_readfile Stores output of file into a variable 0 
app_readexten Read and evaluate extension validity 0 
app_read Read Variable Application 0 
app_queue True Call Queueing 0 
app_privacy Require phone number to be entered, if n 0 
app_playback Sound File Playback Application 0 
app_pickupchan Channel Pickup Application 0 
app_parkandannounce Call Parking and Announce Application 0 
app_page Page Multiple Phones 0 
app_nbscat Silly NBS Stream Application 0 
app_mp3 Silly MP3 Application 0 
app_morsecode Morse code 0 
app_mixmonitor Mixed Audio Monitoring Application 0 
app_minivm Mini VoiceMail (A minimal Voicemail e-ma 0 
app_milliwatt Digital Milliwatt (mu-law) Test Applicat 0 
app_meetme MeetMe conference bridge 0 
app_macro Extension Macros 0 
app_jack JACK Interface 0 
app_ivrdemo IVR Demo Application 0 
app_image Image Transmission Application 0 
app_ices Encode and Stream via icecast and ices 0 
app_getcpeid Get ADSI CPE ID 0 
app_forkcdr Fork The CDR into 2 separate entities 0 
app_followme Find-Me/Follow-Me Application 0 
app_flash Flash channel application 0 
app_festival Simple Festival Interface 0 
app_externalivr External IVR Interface Application 0 
app_exec Executes dialplan applications 0 
app_echo Simple Echo Application 0 
app_dumpchan Dump Info About The Calling Channel 0 
app_disa DISA (Direct Inward System Access) Appli 0 
app_directory Extension Directory 0 
app_directed_pickup Directed Call Pickup Application 0 
app_dictate Virtual Dictation Machine 0 
app_dial Dialing Application 0 
app_db Database Access Functions 0 
app_controlplayback Control Playback Application 0 
app_chanspy Listen to the audio of an active channel 0 
app_channelredirect Redirects a given channel to a dialplan 0 
app_chanisavail Check channel availability 0 
app_cdr Tell Asterisk to not maintain a CDR for 0 
app_authenticate Authentication Application 0 
app_amd Answering Machine Detection Application 0 
app_alarmreceiver Alarm Receiver for Asterisk 0 
app_adsiprog Asterisk ADSI Programming Application 0 
res_config_mysql.so MySQL RealTime Configuration Driver 0 
chan_mobile.so Bluetooth Mobile Device Channel Driver 0 
format_mp3.so MP3 format [Any rate but 8000hz mono is 0 
test_skel.so Skeleton (sample) Test 0 
app_addon_sql_mysql.so Simple Mysql Interface 0 
chan_ooh323.so Objective Systems H323 Channel 0 
cdr_addon_mysql.so MySQL CDR Backend 0 
app_saycountpl.so Say polish counting words 0 
182 modules loaded
jewel*CLI&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Al final se muestra la cantidad de m&amp;oacute;dulos cargados.&lt;/p&gt;
&lt;p&gt;Para ver los canales que se est&amp;aacute;n usando se ejecuta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jewel*CLI&amp;gt; sip show channels
Peer User/ANR Call ID Format Hold Last Message 
0 active SIP dialogs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Actualmente como no se tiene configurado completamente el asterisk no se muestra canal alguno.&lt;/p&gt;
&lt;p&gt;Para listar los usuarios sip definidos se tiene el comando sip show users:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jewel*CLI&amp;gt; sip show users
Username Secret Accountcode Def.Context ACL NAT 
jewel*CLI&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Devuelve el nombre de usuario la clave, el cual contexto se encuentra, la lista de acceso y si usa NAT&lt;/p&gt;
&lt;p&gt;Muestra el estatus de la interfaz zapata&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jewel*CLI&amp;gt; zap show status
Description Alarms IRQ bpviol CRC4 Fra Codi Options LBO
ZTDUMMY/1 (source: HRtimer) 1 UNCONFI 0 0 0 CAS Unk YEL 0 db (CSU)/0-133 feet (DSX-1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para ver los buzones de voz:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jewel*CLI&amp;gt; voicemail show users
Context Mbox User Zone NewMsg
default general New User 0
default 1234 Example Mailbox 0
other 1234 Company2 User 0
3 voicemail users configured.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para buscar dispositivos moviles se ejecuta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jewel*CLI&amp;gt; mobile search
Address Name Usable Type Port
00:19:2C:2C:29:33 Motorola A1200 No Headset 0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Hay muchos comandos para la consola de asterisk y en futuros post se mostrar&amp;aacute;n&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC) 
usando la billetera digital de tu preferencia a la siguiente 
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content></entry><entry><title>Configuración de una tarjeta Motorola X100P</title><link href="https://ecrespo.github.io/configuracion-de-una-tarjeta-motorola-x100p.html" rel="alternate"></link><published>2008-04-13T10:10:00-05:30</published><updated>2008-04-13T10:10:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-04-13:/configuracion-de-una-tarjeta-motorola-x100p.html</id><summary type="html">&lt;p&gt;Ya se tiene asterisk instalado y ahora viene la configuraci&amp;oacute;n 
de la tarjeta Motorola X100P.&lt;/p&gt;
&lt;h3 id="procedimiento de configuracion:"&gt;Procedimiento de configuraci&amp;oacute;n:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Editar el archivo /etc/default/zaptel para que solo maneje 
el m&amp;oacute;dulo que se debe utilizar ( wcfxo). Esto se logra comentando 
todos los m&amp;oacute;dulos que no se van a utilizar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Visualizar el …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Ya se tiene asterisk instalado y ahora viene la configuraci&amp;oacute;n 
de la tarjeta Motorola X100P.&lt;/p&gt;
&lt;h3 id="procedimiento de configuracion:"&gt;Procedimiento de configuraci&amp;oacute;n:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Editar el archivo /etc/default/zaptel para que solo maneje 
el m&amp;oacute;dulo que se debe utilizar ( wcfxo). Esto se logra comentando 
todos los m&amp;oacute;dulos que no se van a utilizar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Visualizar el dispositivo&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;zaptel_hardware -v
pci:0000:01:00.0 wcfxo- 1057:5608 Wildcard X100P&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Verificar funcionamiento de la tarjeta&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```
ztcfg -vvvvvvvvvvvvvv
Zaptel Version: 1.4.9.2
Echo Canceller: MG2
Configuration
======================&lt;/p&gt;
&lt;p&gt;Channel map:&lt;/p&gt;
&lt;p&gt;Channel 01: FXS Kewlstart (Default) (Slaves: 01)&lt;/p&gt;
&lt;p&gt;1 channels to configure.
```&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Editar el archivo /etc/asterisk/zapata.conf. Colocar las siguientes l&amp;iacute;neas:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;[channels]
language=es
context=entrantes
signalling=fxs_ks
usecallerid=yes
hidecallerid=no
callwaiting=yes
callwaitingcallerid=yes
threewaycalling=yes
transfer=yes
cancallforward=yes
callreturn=yes
echocancel=yes
echocancelwhenbridged=yes
rxgain=0.0
txgain=0.0
group=1
pickupgroup=1
immediate=yes
musiconhold=default channel =&amp;gt; 1&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Recargar m&amp;oacute;dulos&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;asterisk -rx "module reload"&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A&amp;ntilde;adir extensi&amp;oacute;n que permita a llamar por la tarjeta. Editar /etc/asterisk/extension.conf&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;[entrantes]
exten =&amp;gt; s,1,Dial(SIP/1000,60,tr)
exten =&amp;gt; s,2,Voicemail,u1000
exten =&amp;gt; s,102,Voicemail,b1000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Esta lineas le dice al Asterisk que todas las llamadas que recibe la tarjeta 
las dirija al telefono "1000", y despues de 60 segundos salta el buzon de voz.&lt;/p&gt;
&lt;p&gt;Para realizar llamadas a&amp;ntilde;adiremos las siguientes lineas:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[salientes]
exten =&amp;gt; _[9]XXXXXXXX,1,Dial,Zap/1/${EXTEN}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Todas las numeros que comienzan con 9 se hacen usando la tarjeta.&lt;/p&gt;
&lt;p&gt;Ahora falta configurar las extenxiones, llamada en espera, llamada en conferencia 
entre otras cosas.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC) 
usando la billetera digital de tu preferencia a la siguiente 
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content></entry><entry><title>Instalando asterisk</title><link href="https://ecrespo.github.io/instalando-asterisk.html" rel="alternate"></link><published>2008-04-13T10:00:00-05:30</published><updated>2008-04-13T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-04-13:/instalando-asterisk.html</id><summary type="html">&lt;p&gt;Desde hace un a&amp;ntilde;o me ha tocado trabajar con asterisk y es ahora que 
he logrado comprar una tarjeta Motorola X100P, podre crear un 
gateway a la telefon&amp;iacute;a P&amp;uacute;blica.&lt;/p&gt;
&lt;h3 id="instalacion de asterisk."&gt;Instalaci&amp;oacute;n de asterisk.&lt;/h3&gt;
&lt;p&gt;Para realizar la instalaci&amp;oacute;n de asterisk desde las fuentes es necesario 
instalar algunos paquetes:
&lt;code&gt;aptitude install libnewt0.52 …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Desde hace un a&amp;ntilde;o me ha tocado trabajar con asterisk y es ahora que 
he logrado comprar una tarjeta Motorola X100P, podre crear un 
gateway a la telefon&amp;iacute;a P&amp;uacute;blica.&lt;/p&gt;
&lt;h3 id="instalacion de asterisk."&gt;Instalaci&amp;oacute;n de asterisk.&lt;/h3&gt;
&lt;p&gt;Para realizar la instalaci&amp;oacute;n de asterisk desde las fuentes es necesario 
instalar algunos paquetes:
&lt;code&gt;aptitude install libnewt0.52 libnewt-pic libnewt-dev zlib1g zlib1g-dev dcmtk libdcmtk1 libdcmtk1-dev libssl-dev libssl0.9.8 libssl0.9.8-dbg initramfs-tools libnewt0.52 libnewt-pic libnewt-dev&lt;/code&gt;
Procedimiento:
1. Instalaci&amp;oacute;n de zaptel: Al ejecutar lspci se ve que se tiene instalado 
la tarjeta motorola:
&lt;code&gt;01:00.0 Communication controller: Motorola Wildcard X100P&lt;/code&gt;
1.1. Desempaquetar zaptel
&lt;code&gt;tar &amp;shy;-zxvf zaptel&amp;shy;1.4.9.2.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.2. Cambiarse al directorio de zaptel
&lt;code&gt;cd zaptel-1.4.9.2/&lt;/code&gt;
1.3. Configurar zaptel
&lt;code&gt;./configure&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.4.Ejecutar make menuselect
1.5. Ejecutar make
1.6. Ejecutar make install
1.7. Ejecutar make config
1.8. Crear el archivo udev para zaptel
&lt;code&gt;make install-udev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Esto crear&amp;aacute; un demonio para levantar autom&amp;aacute;ticamente la tarjeta X100P.&lt;/p&gt;
&lt;p&gt;1.9. Revisar que zaptel detecta la tarjeta.
&lt;code&gt;zaptel_hardware
pci:0000:01:00.0 wcfxo- 1057:5608 Wildcard X100P&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.10. Editar /etc/zaptel.conf y agregar fxsks=1
1.11. Cargar el m&amp;oacute;dulo /etc/init.d/zaptel restart&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instalaci&amp;oacute;n de libpri.
2.1. Desempaquetar libpri
&lt;code&gt;tar -xvzf libpri-1.4.3.tar.gz&lt;/code&gt;
2.2. Cambiar al directorio
&lt;code&gt;cd libpri-1.4.3/&lt;/code&gt;
2.3. Ejecutar make
2.4. Ejecutar make install&lt;/li&gt;
&lt;li&gt;Instalar asterisk
3.1. Desempaquetar asterisk
&lt;code&gt;tar -xvzf asterisk-1.4.19.tar.gz&lt;/code&gt;
3.2. Cambiar al directorio
&lt;code&gt;cd asterisk-1.4.19/&lt;/code&gt;
3.3. Configurar
&lt;code&gt;./configure&lt;/code&gt;
3.4. Seleccionar m&amp;oacute;dulos
&lt;code&gt;make menuselect&lt;/code&gt;
3.5. Compilar
&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3.6. Instalar
&lt;code&gt;make install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3.7. Instalar ejemplos
&lt;code&gt;make samples&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3.8. Instalar documentaci&amp;oacute;n
&lt;code&gt;make progdocs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3.9. Instalar script para arranque automatico de asterisk
&lt;code&gt;make config&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instalar asterisk-addons&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4.1 Desempaquetar asterisk-addons
&lt;code&gt;tar -xvzf asterisk-addons-1.4.6.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4.2. Cambiar de directorio
&lt;code&gt;cd asterisk-addons-1.4.6/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4.3. Configurar
&lt;code&gt;./configure&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4.4. Seleccionar m&amp;oacute;dulos
&lt;code&gt;make menuselect&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4.5. Compilar
&lt;code&gt;make&lt;/code&gt;
4.6. Instalar
&lt;code&gt;make install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4.7. Instalar ejemplos
&lt;code&gt;make samples&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instalaci&amp;oacute;n de voces en espa&amp;ntilde;ol adicionales de la p&amp;aacute;gina de VoIPnovatos.
5.1. Cambiar al directorio donde se encuentran los sonidos
&lt;code&gt;cd /var/lib/asterisk/sounds/&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;5.2 Instalar el core de gsm
&lt;code&gt;tar -xvzf /usr/local/src/voipnovatos-core-sounds-es-gsm-1.4.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5.3. Instalar el core de g729
&lt;code&gt;tar -xvzf /usr/local/src/voipnovatos-core-sounds-es-g729-1.4.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5.4. Instalar las extras de gsm
&lt;code&gt;tar -xvzf /usr/local/src/voipnovatos-extra-sounds-es-gsm-1.4.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5.5. Instalar las extras de g729
&lt;code&gt;tar -xvzf /usr/local/src/voipnovatos-extra-sounds-es-g729-1.4.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5.6. Instalar Music on Hold en espa&amp;ntilde;ol
&lt;code&gt;tar -xvzf /usr/local/src/asterisk-voces-es-v1_2-moh-voipnovatos.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego de esto se tiene el asterisk totalmente instalado.
En pr&amp;oacute;ximo post publicare la configuraci&amp;oacute;n de la tarjeta X100P y configuraci&amp;oacute;n 
base de asterisk.&lt;/p&gt;</content></entry><entry><title>Ejemplo XML-RPC en python</title><link href="https://ecrespo.github.io/ejemplo-xml-rpc-en-python.html" rel="alternate"></link><published>2008-03-23T10:50:00-05:30</published><updated>2008-03-23T10:50:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-03-23:/ejemplo-xml-rpc-en-python.html</id><summary type="html">&lt;p&gt;XML-RPC permite crear un webservice que recibe unos par&amp;aacute;metros 
y devuelve un resultado. Es como una funci&amp;oacute;n pero los datos 
viajan a trav&amp;eacute;s de la red.&lt;/p&gt;
&lt;p&gt;El ejemplo es un webservice que recibe un valor y devuelve el doble 
de ese valor. Algo sencillo.&lt;/p&gt;
&lt;p&gt;El servidor:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="se importa el modulo xmlrpc"&gt;Se importa el m&amp;oacute;dulo …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;XML-RPC permite crear un webservice que recibe unos par&amp;aacute;metros 
y devuelve un resultado. Es como una funci&amp;oacute;n pero los datos 
viajan a trav&amp;eacute;s de la red.&lt;/p&gt;
&lt;p&gt;El ejemplo es un webservice que recibe un valor y devuelve el doble 
de ese valor. Algo sencillo.&lt;/p&gt;
&lt;p&gt;El servidor:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="se importa el modulo xmlrpc"&gt;Se importa el m&amp;oacute;dulo XMLRPC&lt;/h1&gt;
&lt;p&gt;from SimpleXMLRPCServer import SimpleXMLRPCServer&lt;/p&gt;
&lt;h1 id="se asocia a un puerto en este caso 4242"&gt;Se asocia a un puerto en este caso 4242&lt;/h1&gt;
&lt;p&gt;s = SimpleXMLRPCServer(("", 4242))&lt;/p&gt;
&lt;h1 id="la funcion que toma x y devuelve el doble de x."&gt;La funci&amp;oacute;n que toma x y devuelve el doble de x.&lt;/h1&gt;
&lt;p&gt;def twice(x):
return x*2&lt;/p&gt;
&lt;h1 id="se registra la funcion"&gt;se registra la funci&amp;oacute;n&lt;/h1&gt;
&lt;p&gt;s.register_function(twice)&lt;/p&gt;
&lt;h1 id="se inicia el servidor"&gt;se inicia el servidor&lt;/h1&gt;
&lt;p&gt;s.serve_forever()
```&lt;/p&gt;
&lt;p&gt;El cliente:
```&lt;/p&gt;
&lt;h1 id="se importa el modulo serverproxy de xmlrpclib."&gt;Se importa el m&amp;oacute;dulo ServerProxy de xmlrpclib.&lt;/h1&gt;
&lt;p&gt;from xmlrpclib import ServerProxy&lt;/p&gt;
&lt;h1 id="se conecta al equipo por el puerto 4242"&gt;Se conecta al equipo por el puerto 4242&lt;/h1&gt;
&lt;p&gt;s = ServerProxy('http://localhost:4242')&lt;/p&gt;
&lt;h1 id="se llama a la funcion pasandole x y devuelve el doble de x"&gt;Se llama a la funci&amp;oacute;n pasandole x y devuelve el doble de x&lt;/h1&gt;
&lt;p&gt;s.twice(2)
4
s.twice(3)
6
s.twice(15)
30
```&lt;/p&gt;
&lt;p&gt;En el servidor se muestra los siguientes mensajes:
&lt;code&gt;localhost - - [24/Mar/2008 00:13:38] "POST /RPC2 HTTP/1.0" 200 -
localhost - - [24/Mar/2008 00:14:23] "POST /RPC2 HTTP/1.0" 200 -
localhost - - [24/Mar/2008 00:14:36] "POST /RPC2 HTTP/1.0" 200 -&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Son las respuestas a la conexiones del cliente.
Este programa se puede mejorar evaluando el tipo de datos que envia el 
cliente para as&amp;iacute; evitar errores al mandar un string en vez de un n&amp;uacute;mero.&lt;/p&gt;</content></entry><entry><title>Hola mundo 2da versión con hildon y python</title><link href="https://ecrespo.github.io/hola-mundo-2da-version-con-hildon-y-python.html" rel="alternate"></link><published>2008-03-23T10:40:00-05:30</published><updated>2008-03-23T10:40:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-03-23:/hola-mundo-2da-version-con-hildon-y-python.html</id><summary type="html">&lt;p&gt;La segunda versi&amp;oacute;n del hola mundo se basar&amp;aacute; en el framework 
hildon el cual permite manejar el look,temas del entorno de 
maemo, acceso a barra de herramientas y menus.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python2.5"&gt;!/usr/bin/env python2.5&lt;/h1&gt;
&lt;p&gt;import gtk
import hildon&lt;/p&gt;
&lt;p&gt;window = hildon.Window()
window.connect("destroy", gtk.main_quit)
label = gtk.Label …&lt;/p&gt;</summary><content type="html">&lt;p&gt;La segunda versi&amp;oacute;n del hola mundo se basar&amp;aacute; en el framework 
hildon el cual permite manejar el look,temas del entorno de 
maemo, acceso a barra de herramientas y menus.&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python2.5"&gt;!/usr/bin/env python2.5&lt;/h1&gt;
&lt;p&gt;import gtk
import hildon&lt;/p&gt;
&lt;p&gt;window = hildon.Window()
window.connect("destroy", gtk.main_quit)
label = gtk.Label("Hola mundo!")
window.add(label)&lt;/p&gt;
&lt;p&gt;label.show()
window.show()&lt;/p&gt;
&lt;p&gt;gtk.main()
```&lt;/p&gt;
&lt;p&gt;Captura de pantalla de la ejecuci&amp;oacute;n del script:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hola Mundo desde Maemo" src="./images/fhildon.png"/&gt;&lt;/p&gt;</content></entry><entry><title>Creando el primer programa para Maemo-sdk</title><link href="https://ecrespo.github.io/creando-el-primer-programa-para-maemo-sdk.html" rel="alternate"></link><published>2008-03-23T10:30:00-05:30</published><updated>2008-03-23T10:30:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-03-23:/creando-el-primer-programa-para-maemo-sdk.html</id><summary type="html">&lt;p&gt;Continuando con los post sobre el Nokia N810, ahora a explicar 
el proceso de instalaci&amp;oacute;n del kit de desarrollo en Debian.
Me bas&amp;eacute; en una &lt;a href="http://linuxuk.blogspot.com/2008/01/installing-os2008-development.html"&gt;gu&amp;iacute;a&lt;/a&gt; donde explican la instalaci&amp;oacute;n del ambiente 
de desarrollo para el OS2008 en Ubuntu.&lt;/p&gt;
&lt;p&gt;Ahora que ya se tiene el ambiente de desarrollo de maemo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando con los post sobre el Nokia N810, ahora a explicar 
el proceso de instalaci&amp;oacute;n del kit de desarrollo en Debian.
Me bas&amp;eacute; en una &lt;a href="http://linuxuk.blogspot.com/2008/01/installing-os2008-development.html"&gt;gu&amp;iacute;a&lt;/a&gt; donde explican la instalaci&amp;oacute;n del ambiente 
de desarrollo para el OS2008 en Ubuntu.&lt;/p&gt;
&lt;p&gt;Ahora que ya se tiene el ambiente de desarrollo de maemo instalado 
probare un script b&amp;aacute;sico hola mundo con gtk.&lt;/p&gt;
&lt;p&gt;Es necesario agregar un repositorio al ambiente de maemo:
&lt;code&gt;/scratchbost/login
nano /etc/apt/sources.list
deb http://repository.maemo.org/extras chinook free non-free&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Luego ejecutar apt-get update e instalar todos los paquetes de python2.5 
en especial a python2.5-runtime.&lt;/p&gt;
&lt;p&gt;Con esto ya se tiene todo lo necesario para el primer programa en python sobre maemo.&lt;/p&gt;
&lt;p&gt;El script lo llamaremos holamundo1.py con el siguiente contenido:&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;h1 id="!/usr/bin/env python2.5"&gt;!/usr/bin/env python2.5&lt;/h1&gt;
&lt;p&gt;import gtk&lt;/p&gt;
&lt;p&gt;window = gtk.Window(gtk.WINDOW_TOPLEVEL)&lt;/p&gt;
&lt;p&gt;label = gtk.Label("Hello World!")
window.add(label)&lt;/p&gt;
&lt;p&gt;label.show()
window.show()&lt;/p&gt;
&lt;p&gt;gtk.main()
```&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hola Mundo desde Maemo" src="./images/holamundo-maemosdk.png"/&gt;&lt;/p&gt;</content></entry><entry><title>Instalando Maemo-SDK shinook en Debian</title><link href="https://ecrespo.github.io/instalando-maemo-sdk-shinook-en-debian.html" rel="alternate"></link><published>2008-03-23T10:21:00-05:30</published><updated>2008-03-23T10:21:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-03-23:/instalando-maemo-sdk-shinook-en-debian.html</id><summary type="html">&lt;p&gt;Continuando con los post sobre el Nokia N810, ahora a explicar el proceso de instalaci&amp;oacute;n del kit de desarrollo en Debian.&lt;/p&gt;
&lt;p&gt;Me bas&amp;eacute; en una &lt;a href="http://linuxuk.blogspot.com/2008/01/installing-os2008-development.html"&gt;gu&amp;iacute;a&lt;/a&gt; donde explican la instalaci&amp;oacute;n del ambiente 
de desarrollo para el OS2008 en Ubuntu.&lt;/p&gt;
&lt;h3 id="instalacion de scratchbox"&gt;Instalaci&amp;oacute;n de scratchbox&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bajar Maemo-scratchbox
&lt;code&gt;wget http://repository.maemo.org/stable …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Continuando con los post sobre el Nokia N810, ahora a explicar el proceso de instalaci&amp;oacute;n del kit de desarrollo en Debian.&lt;/p&gt;
&lt;p&gt;Me bas&amp;eacute; en una &lt;a href="http://linuxuk.blogspot.com/2008/01/installing-os2008-development.html"&gt;gu&amp;iacute;a&lt;/a&gt; donde explican la instalaci&amp;oacute;n del ambiente 
de desarrollo para el OS2008 en Ubuntu.&lt;/p&gt;
&lt;h3 id="instalacion de scratchbox"&gt;Instalaci&amp;oacute;n de scratchbox&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bajar Maemo-scratchbox
&lt;code&gt;wget http://repository.maemo.org/stable/4.0.1/maemo-scratchbox-install_4.0.1.sh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Colocarle permisos de ejecuci&amp;oacute;n
&lt;code&gt;chmod +x maemo-scratchbox-install_4.0.1.sh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ejecutar el script
&lt;code&gt;./maemo-scratchbox-install_4.0.1.sh -d&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se instalar&amp;aacute; scratchbox adaptado para usarlo con maemo.&lt;/p&gt;
&lt;p&gt;Se crear&amp;aacute; un directorio en la ra&amp;iacute;z del FS con el nombre de scratchbox. En el 
estar&amp;aacute; toda la estructura necesaria para trabajar con la arquitectura que 
usa el Nokia N810.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Crear el usuario que trabajar&amp;aacute; con scratchbox
&lt;code&gt;/scratchbox/sbin/sbox_adduser USERNAME yes&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;El USERNAME es el usuario que trabajar&amp;aacute; con el kit de desarrollo, preferiblemente 
un usuario con cuenta en el equipo.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Actualizar la lista de usuarios relacionada al archivo /etc/groups
&lt;code&gt;newgrp sbox&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Iniciar sesi&amp;oacute;n en scratchbox&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Desde el usuario que se le creo la cuenta en scratchbox ejecutar:
&lt;code&gt;/scratchbox/login&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Si no di&amp;oacute; mensajes de error la instalaci&amp;oacute;n fue perfecta.&lt;/p&gt;
&lt;p&gt;Se sale con el comando exit.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Editar nsswitch.conf&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ejecutar como root&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nano /scratchbox/etc/nsswitch.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tiene que aparecer la siguiente l&amp;iacute;nea&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hosts: files dns&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Agregar los servidores de nombres en el resolv.conf de scratchbox
&lt;code&gt;/scratchbox/login
nano /etc/resolv.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En mi caso:
&lt;code&gt;nameserver 200.47.79.2
nameserver 200.47.79.3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ya con esta se tiene todo listo para instalar maemo.&lt;/p&gt;
&lt;h3 id="instalacion de maemo-sdk."&gt;Instalaci&amp;oacute;n de maemo-sdk.&lt;/h3&gt;
&lt;p&gt;Todo esto se hace desde el usuario que tiene la cuenta en scratchbox.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bajar el script maemo-sdk-install
&lt;code&gt;wget http://repository.maemo.org/stable/4.0.1/maemo-sdk-install_4.0.1.sh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Colocar el script ejecutable
&lt;code&gt;chmod +x maemo-sdk-install_4.0.1.sh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ejecutar el script
&lt;code&gt;./maemo-sdk-install_4.0.1.sh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En este punto se va a crear el ambiente para la instalaci&amp;oacute;n. Se acepta la 
licencia de los binarios de nokia y se recomienda hacer una instalaci&amp;oacute;n de 
maemo con el ambiente de desarrollo sin los paquetes de depuraci&amp;oacute;n.&lt;/p&gt;
&lt;p&gt;Se tardar&amp;aacute; un tiempo en la instalaci&amp;oacute;n de paquetes, al terminar ya se 
tiene un ambiente de desarrollo.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Instalar xserver-xephyr en el equipo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Actualizar maemo.
&lt;code&gt;/scratchbox/login
apt-get update
apt-get dist-update&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Iniciar el servidor X xephyr.
&lt;code&gt;Xephyr :2 -host-cursor -screen 800x480x16 -dpi 96 -ac&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Con este comando se arranca un servidor X xephyr para maemo.
Aparecer&amp;aacute; un servidor X con la resoluci&amp;oacute;n de 800x480 como en la captura de pantalla.
&lt;img alt="Servidor X xephyr" src="" title="images/xephyr.png"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Visualizar maemo en el servidor X xephyr.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ejecutar en la sesi&amp;oacute;n de scratchbox lo siguiente:
&lt;code&gt;export DISPLAY=:2
af-sb-init.sh start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En la siguiente captura de pantalla se muestra el entorno de maemo.
&lt;img alt="Servidor X xephyr" src="" title="images/maemo.png"/&gt;&lt;/p&gt;
&lt;p&gt;Ya con este entorno en los siguientes post explicar&amp;eacute; como crear un programa para maemo usando python.&lt;/p&gt;</content></entry><entry><title>Actualizando el firmware al Nokia N810</title><link href="https://ecrespo.github.io/actualizando-el-firmware-al-nokia-n810.html" rel="alternate"></link><published>2008-03-23T10:20:00-05:30</published><updated>2008-03-23T10:20:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-03-23:/actualizando-el-firmware-al-nokia-n810.html</id><summary type="html">&lt;p&gt;En esta Semana Santa me dedique a actualizar mis dispositivos que manejan Linux (nslu2 y nokia n810). S&amp;oacute;lo me falta comprar una memoria al PSP para instalar Linux tambi&amp;eacute;n.
Este post es dedicado al Nokia N810 y la actualizaci&amp;oacute;n del firmware.&lt;/p&gt;
&lt;p&gt;El firmware que viene con el equipo tiene unos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En esta Semana Santa me dedique a actualizar mis dispositivos que manejan Linux (nslu2 y nokia n810). S&amp;oacute;lo me falta comprar una memoria al PSP para instalar Linux tambi&amp;eacute;n.
Este post es dedicado al Nokia N810 y la actualizaci&amp;oacute;n del firmware.&lt;/p&gt;
&lt;p&gt;El firmware que viene con el equipo tiene unos problemas con algunos paquetes y sus dependencias como por ejemplo skype y xchat. As&amp;iacute; que lo primero que hay que hacer es actualizarlo antes de ponerse a instalar programas adicionales.&lt;/p&gt;
&lt;p&gt;Los pasos son los siguientes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Bajar el programa &lt;a href="http://tablets-dev.nokia.com/d3.php"&gt;flasher-3.0&lt;/a&gt; .&lt;/li&gt;
&lt;li&gt;Bajar el firmware para el Nokia N810. Puede bajarse la &amp;uacute;ltima versi&amp;oacute;n del firmware aqu&amp;iacute;.&lt;/li&gt;
&lt;li&gt;Asegurarse que la bateria del Nokia tiene full carga.&lt;/li&gt;
&lt;li&gt;Desconectar el Nokia de la alimentaci&amp;oacute;n de corriente y apagarlo.&lt;/li&gt;
&lt;li&gt;Conectar el Nokia al puerto USB del computador sin encenderlo.&lt;/li&gt;
&lt;li&gt;Ejecute como root el siguiente comando:
&lt;code&gt;./flasher-3.0 -F  RX-44_2008SE_2.2007.51-3_PR_COMBINED_MR0_ARM.bin -f -R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;En el computador aparecer&amp;aacute; el siguiente mensaje en la consola :"Suitable USB device not found, waiting"&lt;/li&gt;
&lt;li&gt;Encienda el Nokia y se iniciar&amp;aacute; el proceso de actualizaci&amp;oacute;n del firmware, en el tablet aparecer&amp;aacute; el s&amp;iacute;mbolo de conectado por USB.&lt;/li&gt;
&lt;li&gt;Al terminar se muestra en la consola el mensaje: you're done now!&lt;/li&gt;
&lt;li&gt;Ya el equipo est&amp;aacute; actualizado, ahora si la actualizaci&amp;oacute;n no se hace cuando el equipo est&amp;aacute; recien comprado es necesario realizar un respaldo del mismo con las herramienta de recuperaci&amp;oacute;n y respaldo.&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>Probando ping.fm</title><link href="https://ecrespo.github.io/probando-pingfm.html" rel="alternate"></link><published>2008-02-26T10:00:00-05:30</published><updated>2008-02-26T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-02-26:/probando-pingfm.html</id><summary type="html">&lt;h3 id="probando ping.fm"&gt;Probando ping.fm&lt;/h3&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</summary><content type="html">&lt;h3 id="probando ping.fm"&gt;Probando ping.fm&lt;/h3&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Aplicación"></category></entry><entry><title>Prueba desde el Nokia N810</title><link href="https://ecrespo.github.io/prueba-desde-el-nokia-n810.html" rel="alternate"></link><published>2008-02-26T10:00:00-05:30</published><updated>2008-02-26T10:00:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-02-26:/prueba-desde-el-nokia-n810.html</id><summary type="html">&lt;p&gt;Escribiendo el post desde el Nokia N810 con MaemoWordPy.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Escribiendo el post desde el Nokia N810 con MaemoWordPy.&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;&amp;iexcl;Haz tu donativo!
Si te gust&amp;oacute; el art&amp;iacute;culo puedes realizar un donativo con Bitcoin (BTC)
usando la billetera digital de tu preferencia a la siguiente
direcci&amp;oacute;n: 17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV&lt;/p&gt;
&lt;p&gt;O Escaneando el c&amp;oacute;digo QR desde billetera:&lt;/p&gt;
&lt;p&gt;&lt;img alt="17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV" src="./images/17MtNybhdkA9GV3UNS6BTwPcuhjXoPrSzV.png"/&gt;&lt;/p&gt;</content><category term="Nokia"></category><category term="N810"></category></entry><entry><title>Iniciando el blog</title><link href="https://ecrespo.github.io/iniciando-el-blog.html" rel="alternate"></link><published>2008-02-26T07:20:00-05:30</published><updated>2008-02-26T07:20:00-05:30</updated><author><name>Ernesto Crespo</name></author><id>tag:ecrespo.github.io,2008-02-26:/iniciando-el-blog.html</id><summary type="html">&lt;p&gt;Saludos a todos. El d&amp;iacute;a de hoy inicio el blog desde blogger.com mientras resuelva el problema del servidor que maneja mi dominio.&lt;/p&gt;
&lt;p&gt;Tengo mucha informaci&amp;oacute;n que subir sobre todo lo que he trabajo ultimamente, solo espero tener el tiempo para ir subiendo al blog la informaci&amp;oacute;n.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Saludos a todos. El d&amp;iacute;a de hoy inicio el blog desde blogger.com mientras resuelva el problema del servidor que maneja mi dominio.&lt;/p&gt;
&lt;p&gt;Tengo mucha informaci&amp;oacute;n que subir sobre todo lo que he trabajo ultimamente, solo espero tener el tiempo para ir subiendo al blog la informaci&amp;oacute;n.&lt;/p&gt;</content></entry></feed>